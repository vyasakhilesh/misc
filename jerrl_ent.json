[{"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Finger>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}", "question": "Which comic characters are painted by Bill Finger?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Finger", "seq": "38,48", "label": "Bill Finger"}], "predicate mapping": [], "id": "f0a9f1ca14764095ae089b152e0e7f12"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Selwyn_Lloyd> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Winston_Churchill> }", "question": "Was winston churchill the prime minister of Selwyn Lloyd?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Selwyn_Lloyd", "seq": "44,55", "label": "Selwyn Lloyd"}, {"uri": "http://dbpedia.org/resource/Winston_Churchill", "seq": "4,20", "label": "winston churchill"}], "predicate mapping": [], "id": "30b709079ea5421cb33c227c3feb9019"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gestapo> <http://dbpedia.org/ontology/parentOrganisation> ?x . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "question": "Name some leaders of the parent organisation of the Gestapo?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gestapo", "seq": "52,58", "label": "Gestapo"}], "predicate mapping": [], "id": "dad51bf9d0294cac99d176aba17c0241"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "Which party has come in power in Mumbai North?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)", "seq": "33,44", "label": "Mumbai North"}], "predicate mapping": [], "id": "00a3465694634edc903510572f23b487"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ", "question": "Name the municipality of Roberto Clemente Bridge?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge", "seq": "25,47", "label": "Roberto Clemente Bridge"}], "predicate mapping": [], "id": "8216e5b6033a407191548689994aa32e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "seq": "80,90", "label": "Cleopatra V"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator", "seq": "29,57", "label": "ptolemy XIII Theos Philopator"}], "predicate mapping": [], "id": "e963127fc9c048e089c071e56b80f214"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Li_Si> . ?x <http://dbpedia.org/ontology/monarch> ?uri  . }", "question": "In which monarch did Li Si succeed someone?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Li_Si", "seq": "21,25", "label": "Li Si"}], "predicate mapping": [], "id": "4447f7daa7cf45eaadac04711dce299a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pavel_Moroz> <http://dbpedia.org/property/hometown> ?uri. <http://dbpedia.org/resource/Yakov_Estrin> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "Which home town of PAvel Moroz is the death location of the Yakov Estrin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pavel_Moroz", "seq": "19,29", "label": "PAvel Moroz"}, {"uri": "http://dbpedia.org/resource/Yakov_Estrin", "seq": "60,71", "label": "Yakov Estrin"}], "predicate mapping": [], "id": "a899e312823543e7b728a2517d29392d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Broadmeadows,_Victoria> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which company which assembles its cars in Broadmeadows, Victoria?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broadmeadows,_Victoria", "seq": "42,63", "label": "Broadmeadows, Victoria"}], "predicate mapping": [], "id": "338733202ebc4df1b6b92c618ebe3fc7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/ASC_Creative_Services> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which person designed the cars which has been designed by ASC Creative Services?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/ASC_Creative_Services", "seq": "58,78", "label": "ASC Creative Services"}], "predicate mapping": [], "id": "efa779115ad94d16aa180258a272a399"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist whose supervisor was Ernest Rutherford and had a doctoral students named Charles Drummond Ellis?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "seq": "40,56", "label": "Ernest Rutherford"}, {"uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis", "seq": "92,113", "label": "Charles Drummond Ellis"}], "predicate mapping": [], "id": "7136d470a4c340bb8a9e1b60d5e68fdf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/REP_Parasol> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "Where was the designer of REP Parasol born?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/REP_Parasol", "seq": "26,36", "label": "REP Parasol"}], "predicate mapping": [], "id": "250dc8957716408cbea2c7c1918791f8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Duncan_U._Fletcher> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "What is the common affiliation of the Monroe Carell Jr. Children's Hospital at Vanderbilt and alma mater of the Duncan U. Fletcher?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt", "seq": "38,88", "label": "Monroe Carell Jr. Children's Hospital at Vanderbilt"}, {"uri": "http://dbpedia.org/resource/Duncan_U._Fletcher", "seq": "112,129", "label": "Duncan U. Fletcher"}], "predicate mapping": [], "id": "35fd0b13f9824451b518e8b26ba64bde"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_Johansson> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Nader_Guirat> <http://dbpedia.org/ontology/hometown> ?uri . }", "question": "What is the hometown of Nader Guirat, where Josef Johansson was born too?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josef_Johansson", "seq": "44,58", "label": "Josef Johansson"}, {"uri": "http://dbpedia.org/resource/Nader_Guirat", "seq": "24,35", "label": "Nader Guirat"}], "predicate mapping": [], "id": "243f95d2144c4b2fadb5a18aa339bd98"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential> . }", "question": "What tv series can be said to be related to the sarah jane adventure and dr who confidential?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "44,67", "label": "the sarah jane adventure"}, {"uri": "http://dbpedia.org/resource/Doctor_Who_Confidential", "seq": "73,91", "label": "dr who confidential"}], "predicate mapping": [], "id": "6ff03a568e2e4105b491ab1c1411c1ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows does HBO have?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "20,22", "label": "HBO"}], "predicate mapping": [], "id": "1b604c16430a441ebbae9e095b36661e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)> }", "question": "Is Nikolai Morozov the former coach of Stanislav Morozov?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanislav_Morozov", "seq": "39,55", "label": "Stanislav Morozov"}, {"uri": "http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)", "seq": "3,17", "label": "Nikolai Morozov"}], "predicate mapping": [], "id": "80d88d56a6634b49b41ded0bdc54ae5c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri} ", "question": "What is the common genere of Abhijit Kunte and Kasparov ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abhijit_Kunte", "seq": "29,41", "label": "Abhijit Kunte"}, {"uri": "http://dbpedia.org/resource/Virtual_Kasparov", "seq": "47,54", "label": "Kasparov"}], "predicate mapping": [], "id": "8b08c0d0fc3d45e1936149c78c6637df"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri. <http://dbpedia.org/resource/Outlook_on_the_web> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which share holder of outlook is also the content license of the MSX Basics ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/MSX_BASIC", "seq": "65,74", "label": "MSX Basics"}, {"uri": "http://dbpedia.org/resource/Outlook_on_the_web", "seq": "22,40", "label": "outlook is also the"}], "predicate mapping": [], "id": "239fef57d6664f4280caf0dafa7e1eb8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Ronaldo> . ?x <http://dbpedia.org/ontology/ground> ?uri  . }", "question": "On how many different grounds were seasons chaired by Ronaldo held?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronaldo", "seq": "54,60", "label": "Ronaldo"}], "predicate mapping": [], "id": "3f943b9b68fe43c7a7363ff39f9f3074"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which source country of SamurAbsheron channel is the birth place of Anar Salmanov ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samur\u2013Absheron_channel", "seq": "24,44", "label": "SamurAbsheron channel"}, {"uri": "http://dbpedia.org/resource/Anar_Salmanov", "seq": "68,80", "label": "Anar Salmanov"}], "predicate mapping": [], "id": "62fc3395a7ce4c27ba5bfb82e020dab6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Where was the battle fought where 2nd Foreign Infantry Regiment participated  ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment", "seq": "34,62", "label": "2nd Foreign Infantry Regiment"}], "predicate mapping": [], "id": "380224a93b1e441994c4b9785881aa6c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/SR_class_3Sub> <http://dbpedia.org/ontology/operator> ?uri } ", "question": "What is the operator of SR class 3Sub ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/SR_class_3Sub", "seq": "24,36", "label": "SR class 3Sub"}], "predicate mapping": [], "id": "df8a83a06ca941c3b6f30667a64bc305"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "Which band's  former member are Kevin Jonas and Joe Jonas?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kevin_Jonas", "seq": "32,42", "label": "Kevin Jonas"}, {"uri": "http://dbpedia.org/resource/Joe_Jonas", "seq": "48,56", "label": "Joe Jonas"}], "predicate mapping": [], "id": "8f8139c45fc142a1af369ddcaed646f3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }", "question": "Did Timm Gunn guest in Sunrise (HIMYM)?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)", "seq": "23,29", "label": "Sunrise"}, {"uri": "http://dbpedia.org/resource/Tim_Gunn", "seq": "4,12", "label": "Timm Gunn"}], "predicate mapping": [], "id": "502ef78b55df4f73beb3f5df73483a51"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri } ", "question": "Name the tenants of O.co Coliseum ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/O.co_Coliseum", "seq": "20,32", "label": "O.co Coliseum"}], "predicate mapping": [], "id": "a649a19bfcbc4f2e962d2199f8e9598d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri } ", "question": "which politician is currently ruling over Rishkiesh?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rishikesh", "seq": "42,50", "label": "Rishkiesh"}], "predicate mapping": [], "id": "30e697b1548c4671bb748f26a165543c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }", "question": "Is north america one of the destinations of airtours airways?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Airtours_International_Airways", "seq": "44,59", "label": "airtours airways"}, {"uri": "http://dbpedia.org/resource/North_America", "seq": "3,15", "label": "north america"}], "predicate mapping": [], "id": "7c56af394fc64b84a9f5e244bb068831"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . }", "question": "Who have done their PhDs under a National Medal of Science winner?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Medal_of_Science", "seq": "33,57", "label": "National Medal of Science"}], "predicate mapping": [], "id": "d3695db03a5e45ae8906a2527508e7c5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri} ", "question": "Who is the common manager of Aston Villa 2000-02 season and aldo the manager of Middlesbrough F.C. season 2009-10", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season", "seq": "29,54", "label": "Aston Villa 2000-02 season"}, {"uri": "http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season", "seq": "80,104", "label": "Middlesbrough F.C. season"}], "predicate mapping": [], "id": "e1b83f5a76aa411aa260424b3255ce89"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)> <http://dbpedia.org/ontology/militaryBranch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "Name the mascot of the military branch of William Harper.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)", "seq": "42,55", "label": "William Harper"}], "predicate mapping": [], "id": "8b3daf3912ea4686a1b8ee5d2d9918df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }", "question": "How many tenats have been there, of the constructions of PCL constructures?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/PCL_Construction", "seq": "57,73", "label": "PCL constructures"}], "predicate mapping": [], "id": "ce216d620d154f13814dd2f6b967c292"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> }", "question": "Was Kevin Jonas a part of Jonas brothers?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonas_Brothers", "seq": "26,39", "label": "Jonas brothers"}, {"uri": "http://dbpedia.org/resource/Kevin_Jonas", "seq": "4,14", "label": "Kevin Jonas"}], "predicate mapping": [], "id": "f97937b4cc484a1f82a31b1d65d0041c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What was the book that lead to Sagan's Cosmos, about?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)", "seq": "39,44", "label": "Cosmos"}], "predicate mapping": [], "id": "d8d0571b353e4b028d618c08d2643923"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Rosemont,_Illinois> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Convention>}", "question": "Which kind of conventions are held in Rosemont, Illinois?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rosemont,_Illinois", "seq": "38,55", "label": "Rosemont, Illinois"}], "predicate mapping": [], "id": "3d5d25adde2b46dda7d5bc780106d764"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenup_County_High_School> <http://dbpedia.org/property/type> ?uri } ", "question": "What are the type of Greenup County High School?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greenup_County_High_School", "seq": "21,46", "label": "Greenup County High School"}], "predicate mapping": [], "id": "42d9e558edd840a0a310036f7f9bb9b2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri } ", "question": "List the teams for which Bobby Hoppe played ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bobby_Hoppe", "seq": "25,35", "label": "Bobby Hoppe"}], "predicate mapping": [], "id": "082ecdc0056f4f3192e3b13e46d0ee0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }", "question": "What are some famous works of the writer of The Second Coming?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)", "seq": "44,60", "label": "The Second Coming"}], "predicate mapping": [], "id": "d93543518a8d4a69b6f540f4be499a28"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "How many books have been penned by Miguel de Cervantes?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miguel_de_Cervantes", "seq": "35,53", "label": "Miguel de Cervantes"}], "predicate mapping": [], "id": "e7c8927b5bec41c6a09ea2319c24e65f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Which labels signs up progressive rock bands?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Progressive_rock", "seq": "22,37", "label": "progressive rock"}], "predicate mapping": [], "id": "be29caba2b2b43a385df47982c5421d3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> } ", "question": "What are the schools whose city is Reading, Berkshire?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "35,52", "label": "Reading, Berkshire"}], "predicate mapping": [], "id": "9a7523469c8c45b58ec65ed56af6e306"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Crystal_Harris> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Which magazine's editor is married to Crystal Harris?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Crystal_Harris", "seq": "38,51", "label": "Crystal Harris"}], "predicate mapping": [], "id": "efe2cdcf9bb3460e9f13067772d9e62f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Thurrock> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }", "question": "Does the west thurrock come under Essex county?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Thurrock", "seq": "9,21", "label": "west thurrock"}, {"uri": "http://dbpedia.org/resource/Essex", "seq": "34,38", "label": "Essex"}], "predicate mapping": [], "id": "d4f1cee8ab32498faaf9d3d2190380c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstra\u00dfe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "question": "How many people have headed organizations headquartered at Niederkirchnerstrae?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Niederkirchnerstra\u00dfe", "seq": "59,77", "label": "Niederkirchnerstrae"}], "predicate mapping": [], "id": "70448495be244ebea4746e370eb19f5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "In which television shows have Steven Moffat served as an executive producer?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Moffat", "seq": "31,43", "label": "Steven Moffat"}], "predicate mapping": [], "id": "93ca4dc34b5e4bf7ba90d0ae55f7d50c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which shareholder of Dagenham wind turbines is also the parent company of the Ford Falcon Cobra?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra", "seq": "78,94", "label": "Ford Falcon Cobra"}, {"uri": "http://dbpedia.org/resource/Dagenham_wind_turbines", "seq": "21,42", "label": "Dagenham wind turbines"}], "predicate mapping": [], "id": "d8150b46a8714ed9b7ede5b606aa2638"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/San_Francisco_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What are the airlines whose hub is San Francisco International Airport?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_International_Airport", "seq": "35,69", "label": "San Francisco International Airport"}], "predicate mapping": [], "id": "09b0e80486e44ea2b1cbca4f69c89923"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Maritime_Museum_of_San_Diego> . ?x <http://dbpedia.org/property/location> ?uri  . }", "question": "Where can I find things run by the maritime museum of San Diego?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maritime_Museum_of_San_Diego", "seq": "35,62", "label": "maritime museum of San Diego"}], "predicate mapping": [], "id": "8c9f73ffe06247fa8fefae66915c41bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Walker_(badminton)> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "What is the local authority of the Trinity School, Brentwood and place of birth of the Sarah Walker (badminton) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood", "seq": "35,59", "label": "Trinity School, Brentwood"}, {"uri": "http://dbpedia.org/resource/Sarah_Walker_(badminton)", "seq": "87,98", "label": "Sarah Walker"}], "predicate mapping": [], "id": "d4b1587fce7046aabe7c9717457c7894"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri  . }", "question": "How many services does 21Vianet provide?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/21Vianet", "seq": "23,30", "label": "21Vianet"}], "predicate mapping": [], "id": "fb1bfcc7943943b892d6d22690b2ef48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> . ?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}", "question": "Which planet was discovered by Johann Gottfired and Urbain Le Verrier ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle", "seq": "31,50", "label": "Johann Gottfired and"}, {"uri": "http://dbpedia.org/resource/Urbain_Le_Verrier", "seq": "52,68", "label": "Urbain Le Verrier"}], "predicate mapping": [], "id": "3f7a7a7d95104fcb8c6ebe00786a990b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Elmer_Burkett> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "where did the office holder died  who is successor to Elmer Burkett ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elmer_Burkett", "seq": "54,66", "label": "Elmer Burkett"}], "predicate mapping": [], "id": "ee04ea91a583412db4d05a9929dcc4dc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Hensley_Meulens> <http://dbpedia.org/ontology/team> ?uri} ", "question": "Name the team for which Hensley Meulens played, whihc was also the debut team od Steve Ontiveros ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)", "seq": "81,95", "label": "Steve Ontiveros"}, {"uri": "http://dbpedia.org/resource/Hensley_Meulens", "seq": "24,38", "label": "Hensley Meulens"}], "predicate mapping": [], "id": "5c171d57abb14180b3f6dc48e55c4bbf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married> <http://dbpedia.org/property/starring> ?uri } ", "question": "List the actors of  Lucy Sullivan Is Getting Married?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married", "seq": "20,51", "label": "Lucy Sullivan Is Getting Married"}], "predicate mapping": [], "id": "f3110585cbc94fc69f9f61aeb1c3555f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Faaa> . ?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "question": "Name the island with archipelago as Society Islands and has the largest city named Faaa ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Faaa", "seq": "83,86", "label": "Faaa"}, {"uri": "http://dbpedia.org/resource/Society_Islands", "seq": "36,50", "label": "Society Islands"}], "predicate mapping": [], "id": "54e823bdc8d44ed7a0a40c77e29c361d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri . }", "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix", "seq": "41,64", "label": "1997 canadian grand prix"}, {"uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix", "seq": "41,64", "label": "1997 canadian grand prix"}], "predicate mapping": [], "id": "3f53ed3c088c4ede9a3582e26303ee83"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Richard_Winn> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }", "question": "Who appointed the governor under whom Richard Winn served?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Winn", "seq": "38,49", "label": "Richard Winn"}], "predicate mapping": [], "id": "32ab0f92ca6444c5a2877e23fc76303c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_D._Levinson> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Sherlock_(software)> <http://dbpedia.org/ontology/developer> ?uri} ", "question": "What company involved in the development of Sherlock did Arthur Levinson work for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_D._Levinson", "seq": "57,71", "label": "Arthur Levinson"}, {"uri": "http://dbpedia.org/resource/Sherlock_(software)", "seq": "44,51", "label": "Sherlock"}], "predicate mapping": [], "id": "83248eda73fd4609ac3a9359b62a9a2c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Sam_Carrick> <http://dbpedia.org/property/draftTeam> ?uri} ", "question": "Which tenants of the Master Card center is also th draft team of Sam Carrrick ", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/MasterCard_Centre", "seq": "21,38", "label": "Master Card center"}, {"uri": "http://dbpedia.org/resource/Sam_Carrick", "seq": "65,76", "label": "Sam Carrrick"}], "predicate mapping": [], "id": "94d9288c52b54642bdac4aba4fedcc04"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Who produced the TV shows for Fremantle Media?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/FremantleMedia", "seq": "30,44", "label": "Fremantle Media"}], "predicate mapping": [], "id": "5e4463b5e91147819fab19c1eb738a8b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Loop_Printing_House_District> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ", "question": "What is the style of architecture of South Loop Printing House District ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Loop_Printing_House_District", "seq": "37,70", "label": "South Loop Printing House District"}], "predicate mapping": [], "id": "2a11aeb11ce248cfaf63be2b6701fe9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . }", "question": "Whose provides the service of  Outlook and also products  such as Visual Studio?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Outlook.com", "seq": "31,41", "label": "Outlook and"}, {"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "seq": "63,78", "label": "as Visual Studio"}], "predicate mapping": [], "id": "d101acb6da7a464cbdec88d18d5b855e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ombla> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Croatia> }", "question": "Is Ombla originate in Croatia?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ombla", "seq": "3,7", "label": "Ombla"}, {"uri": "http://dbpedia.org/resource/Croatia", "seq": "22,28", "label": "Croatia"}], "predicate mapping": [], "id": "a2f446250f114e05ad19763cc9c8a1a6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri } ", "question": "What is the nationality of Newin Chidchob ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newin_Chidchob", "seq": "27,40", "label": "Newin Chidchob"}], "predicate mapping": [], "id": "873c3fe1ec484dcfbb114320042f298d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Bing> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Ron_Reed> <http://dbpedia.org/property/draftTeam> ?uri . }", "question": "In which team did Dave Bing and Ron Reed started their basketball career?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dave_Bing", "seq": "18,26", "label": "Dave Bing"}, {"uri": "http://dbpedia.org/resource/Ron_Reed", "seq": "32,39", "label": "Ron Reed"}], "predicate mapping": [], "id": "d509a97d616741b69ea3d084e0a7b737"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ganymede_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }", "question": "Was Ganymede discovered by Galileo Galilei?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganymede_(moon)", "seq": "4,11", "label": "Ganymede"}, {"uri": "http://dbpedia.org/resource/Galileo_Galilei", "seq": "27,41", "label": "Galileo Galilei"}], "predicate mapping": [], "id": "418b062f88884aff8095211e8c44cbed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "List some musicians associated with famous guitar players?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guitar", "seq": "43,48", "label": "guitar"}], "predicate mapping": [], "id": "cbddb4a494514d32ae94fd66fdde0269"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards won by the producer of Elizabeth: The Golden Age?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)", "seq": "43,67", "label": "Elizabeth: The Golden Age"}], "predicate mapping": [], "id": "339f9ccfb682456ab0f1e7f580a2d27e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "With what company is the service OneDrive associated?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "seq": "33,40", "label": "OneDrive"}], "predicate mapping": [], "id": "1be4e465a7ac4a6c893e6b1fc1aef01a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Washington,_D.C.> . ?uri <http://dbpedia.org/property/affiliations> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university whose affiliations's foundation place is Washington, D.C.?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Washington,_D.C.", "seq": "61,75", "label": "Washington, D.C"}], "predicate mapping": [], "id": "a969284fc29d4b659e9088088a2c49f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Queen_Noor_of_Jordan> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Name presidents of the schools which have queen noor of Jordan as one of them ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan", "seq": "42,61", "label": "queen noor of Jordan"}], "predicate mapping": [], "id": "7aff0ab2a7b741839c3df90771be6add"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Robert_Witherspoon> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }", "question": "Who appointed the governor under which Robert Witherspoon worked?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Witherspoon", "seq": "39,56", "label": "Robert Witherspoon"}], "predicate mapping": [], "id": "312435fad0194831a80fe3346c9a683b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/He's_a_Liar> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}", "question": "Who is the producer of the song which is the previous work of He's a Liar ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/He's_a_Liar", "seq": "62,72", "label": "He's a Liar"}], "predicate mapping": [], "id": "f76953f003c2433d837966593c777c75"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Oj,_svijetla_majska_zoro> . ?x <http://dbpedia.org/property/currency> ?uri  . }", "question": "List the base currency of the country whose anthem is Oj, svijetla majska zoro.", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oj,_svijetla_majska_zoro", "seq": "54,77", "label": "Oj, svijetla majska zoro"}], "predicate mapping": [], "id": "6ac000fc0bb7458f8556f603ed42e4b3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri } ", "question": "Who gave the voice for Allen Walker ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Allen_Walker", "seq": "23,34", "label": "Allen Walker"}], "predicate mapping": [], "id": "48584c830439478e9272821ca6fac246"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . }", "question": "Who is associated to Publius Servilius Vatia Isauricus  and Marcus Calpurnius Bibulus?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)", "seq": "21,53", "label": "Publius Servilius Vatia Isauricus"}, {"uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus", "seq": "60,84", "label": "Marcus Calpurnius Bibulus"}], "predicate mapping": [], "id": "78435963a0b241ecbd9b7ab9e4916acc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Edmund_John> <http://dbpedia.org/ontology/citizenship> ?uri . }", "question": "Which country has given citizenship to both saima chowdhury and edmund john?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saima_Chowdhury", "seq": "44,58", "label": "saima chowdhury"}, {"uri": "http://dbpedia.org/resource/Edmund_John", "seq": "64,74", "label": "edmund john"}], "predicate mapping": [], "id": "81218ea48e2f44a1bef8c118ae5b965a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri. <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri . }", "question": "Who is the person that first ascented the Cathedral Peak and Mount Hoffmann?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)", "seq": "42,55", "label": "Cathedral Peak"}, {"uri": "http://dbpedia.org/resource/Mount_Hoffmann", "seq": "61,74", "label": "Mount Hoffmann"}], "predicate mapping": [], "id": "5df6285e711048a5aa9d59ee7bbc7886"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What university campuses are situated in Indiana?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana", "seq": "41,47", "label": "Indiana"}], "predicate mapping": [], "id": "ae5afe36b84a4b65b6e52062c8c1d079"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swedish_Covenant_Hospital> <http://dbpedia.org/ontology/location> ?uri } ", "question": "Where is the swedish covenant hospital?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_Covenant_Hospital", "seq": "13,37", "label": "swedish covenant hospital"}], "predicate mapping": [], "id": "ef9db1b8f7de4e319db223cee9531bb4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ", "question": "Which composer of Girl from the North Country is the subsequent work of the Moondog Matinee?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Girl_from_the_North_Country", "seq": "18,44", "label": "Girl from the North Country"}, {"uri": "http://dbpedia.org/resource/Moondog_Matinee", "seq": "76,90", "label": "Moondog Matinee"}], "predicate mapping": [], "id": "a6ff1c4c6e0f4b519d1f50c706af5469"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose vocals are performed by  April Stewart and Mona Marshall?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/April_Stewart", "seq": "59,71", "label": "April Stewart"}, {"uri": "http://dbpedia.org/resource/Mona_Marshall", "seq": "77,89", "label": "Mona Marshall"}], "predicate mapping": [], "id": "b38170945c5d442e80799fe9d203be22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }", "question": "Name the members of  boards of Freedom of the City and Trinity House?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Freedom_of_the_City", "seq": "31,49", "label": "Freedom of the City"}, {"uri": "http://dbpedia.org/resource/Trinity_House", "seq": "55,67", "label": "Trinity House"}], "predicate mapping": [], "id": "401fed151be7413abf38efaa54396fce"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Reza_Amrollahi> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Iran> }", "question": "Was Reza Amrollahi born in Iran?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reza_Amrollahi", "seq": "4,17", "label": "Reza Amrollahi"}, {"uri": "http://dbpedia.org/resource/Iran", "seq": "27,30", "label": "Iran"}], "predicate mapping": [], "id": "55fad74c2c62469581f58e7bbe60da52"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zaman_Shah_Durrani> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Salahuddin_Rabbani> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "Which title of Zaman Shah Durrani is also the nationality of Salahuddin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zaman_Shah_Durrani", "seq": "15,32", "label": "Zaman Shah Durrani"}, {"uri": "http://dbpedia.org/resource/Salahuddin_Rabbani", "seq": "61,70", "label": "Salahuddin"}], "predicate mapping": [], "id": "34d6402839924ecbbffe213ce8966124"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Lee_Leffingwell> <http://dbpedia.org/ontology/battle> ?uri . }", "question": "In which war did Roh Tae Woo and Lee Leffingwell fight?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roh_Tae-woo", "seq": "17,27", "label": "Roh Tae Woo"}, {"uri": "http://dbpedia.org/resource/Lee_Leffingwell", "seq": "33,47", "label": "Lee Leffingwell"}], "predicate mapping": [], "id": "94a86fc843af4093900744147451118e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Rosemarie_DeWitt> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "list  the producer of the movies in which Rosemarie DeWitt in the star cast?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rosemarie_DeWitt", "seq": "42,57", "label": "Rosemarie DeWitt"}], "predicate mapping": [], "id": "fa13e164104b419f82179aeed15b6117"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . }", "question": "What can be cooked out of things belonging to the order Sapindales?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sapindales", "seq": "56,65", "label": "Sapindales"}], "predicate mapping": [], "id": "8bdd1143f4044694980167f57d2f1ebd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Lewis_Hamilton> . ?uri <http://dbpedia.org/property/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many  TV shows were made by someone who was associated with Lewis Hamilton?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lewis_Hamilton", "seq": "64,77", "label": "Lewis Hamilton"}], "predicate mapping": [], "id": "938bb65e3ede442c84c63fc27fb7b4ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "question": "What is the city whose mayor is Giorgos Kaminis?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Giorgos_Kaminis", "seq": "32,46", "label": "Giorgos Kaminis"}], "predicate mapping": [], "id": "fb471cb9a15f4e8a84b6741cf2b2850c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Hahn> <http://dbpedia.org/ontology/almaMater> ?uri } ", "question": "Name the alma mater of Michael hahn ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Hahn", "seq": "23,34", "label": "Michael hahn"}], "predicate mapping": [], "id": "d87c7466bde24cb3a5fcc03dc0c210fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "How many party leaders are there whose parties are headquartered in Berlin?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Berlin", "seq": "68,73", "label": "Berlin"}], "predicate mapping": [], "id": "7c654505500d49bd835cc07799940fb1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "How many total religions are followed by people whose hometown is somewhere in India?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/India", "seq": "79,83", "label": "India"}], "predicate mapping": [], "id": "556d585ed3d04cff978e0f6c86b73d8d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Simpsons_Ride> <http://dbpedia.org/property/starring> ?uri } ", "question": "Who are the cast members of The Simpsons Ride?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Simpsons_Ride", "seq": "28,44", "label": "The Simpsons Ride"}], "predicate mapping": [], "id": "1df652b299e84ef4a467b353d91a9eff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "Which american football team  has stadium as O.co Coliseum?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/O.co_Coliseum", "seq": "45,57", "label": "O.co Coliseum"}], "predicate mapping": [], "id": "ebbd40c6a3ad4a8697e03dc804ff0b4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Mams_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }", "question": "What woman acted in the mating habits of earthbound humans and is often associated with Mams taylor?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human", "seq": "20,57", "label": "the mating habits of earthbound humans"}, {"uri": "http://dbpedia.org/resource/Mams_Taylor", "seq": "88,98", "label": "Mams taylor"}], "predicate mapping": [], "id": "6d1d440ec5414694a662782baff67759"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri } ", "question": "List the products of Playboy Enterprises?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playboy_Enterprises", "seq": "21,39", "label": "Playboy Enterprises"}], "predicate mapping": [], "id": "5e3b1b3d67c14e79a69346483e72f30e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gwo_ka> <http://dbpedia.org/property/stylisticOrigins> <http://dbpedia.org/resource/West_Africa> }", "question": "Did Gwo Ka originate in Western Africa?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gwo_ka", "seq": "4,9", "label": "Gwo Ka"}, {"uri": "http://dbpedia.org/resource/West_Africa", "seq": "24,37", "label": "Western Africa"}], "predicate mapping": [], "id": "0e1747e68f354dd482d80063d88e8466"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Send_It_On_(Disney's_Friends_for_Change_song)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are some artists on the show whose opening theme is Send It On?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Send_It_On_(Disney's_Friends_for_Change_song)", "seq": "57,66", "label": "Send It On"}], "predicate mapping": [], "id": "7a11e9f4385d422fb3bd4fd737dbb307"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company has a product named Visual Studio and One Drive as service ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "seq": "52,60", "label": "One Drive"}, {"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "seq": "28,46", "label": "named Visual Studio"}], "predicate mapping": [], "id": "487fb2a215ba44abb1cd73b0c0c37fda"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri }", "question": "Give me the total number of commander of the military conflicts whose commander is Roundhead (Wyandot).", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)", "seq": "83,91", "label": "Roundhead"}], "predicate mapping": [], "id": "449ad6621b0e4991bd93d146a64becab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Michigan_Stadium> . ?uri <http://dbpedia.org/property/currentteam> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Who is the player who plays for the team that has the Michigan Stadium?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Stadium", "seq": "54,69", "label": "Michigan Stadium"}], "predicate mapping": [], "id": "cff039a6ae4f4238b311e705c5b4614b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/David_Johnston>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which country's leader is David Johnston?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Johnston", "seq": "26,39", "label": "David Johnston"}], "predicate mapping": [], "id": "8bb7bae6734a4a6492c283e11e8db101"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fran\u00e7ois-Marie_Le_Marchand_de_Lignery> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "How many factions have fought in wars where Francois Marie Le Marchand de Lignery was involved?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fran\u00e7ois-Marie_Le_Marchand_de_Lignery", "seq": "44,80", "label": "Francois Marie Le Marchand de Lignery"}], "predicate mapping": [], "id": "22220c46c35d4bf18d79a51b59159884"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Myntdu_River> <http://dbpedia.org/ontology/origin> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}", "question": "Who is the leader of the town where the Myntdu river originates?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Myntdu_River", "seq": "40,51", "label": "Myntdu river"}], "predicate mapping": [], "id": "fb9fef1a345e41a8a89924438d199ab6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/London> . ?uri <http://dbpedia.org/ontology/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movies whose editors are born in London.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "seq": "42,47", "label": "London"}], "predicate mapping": [], "id": "f6f6f72678964b8d94d2af776d9f76bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri} ", "question": "What is the incumbent of the Al Gore presidential campaign, 2000 and also the president of the Ann Lewis ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000", "seq": "29,63", "label": "Al Gore presidential campaign, 2000"}, {"uri": "http://dbpedia.org/resource/Ann_Lewis", "seq": "95,103", "label": "Ann Lewis"}], "predicate mapping": [], "id": "413efd91c7ba4afcbd998432bd8c5531"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Darius_I> . ?uri <http://dbpedia.org/property/spouse> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Which royal person married the successor of Darius I?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darius_I", "seq": "44,51", "label": "Darius I"}], "predicate mapping": [], "id": "f20340cfdedd4821a148e2baf7bbc531"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/property/destinations> ?uri} ", "question": "What is the region of the Kim Sawchuk which is also served by the Airtours International Airways ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kim_Sawchuk", "seq": "26,36", "label": "Kim Sawchuk"}, {"uri": "http://dbpedia.org/resource/Airtours_International_Airways", "seq": "66,95", "label": "Airtours International Airways"}], "predicate mapping": [], "id": "553a9cedaec54b4f8160ba21fec81957"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antonio_Giannini> <http://dbpedia.org/ontology/birthPlace> ?uri } ", "question": "Where was Antonio Giannini born?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Antonio_Giannini", "seq": "10,25", "label": "Antonio Giannini"}], "predicate mapping": [], "id": "30e7fe4d37d4480d8bcd9e85057504ab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/ontology/training> ?uri } ", "question": "Where was David Scherman trained ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Scherman", "seq": "10,23", "label": "David Scherman"}], "predicate mapping": [], "id": "b1eb16707621406e83de3269573e6703"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company offer service of Outlook.com and OneDrive?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Outlook.com", "seq": "31,41", "label": "Outlook.com"}, {"uri": "http://dbpedia.org/resource/OneDrive", "seq": "47,54", "label": "OneDrive"}], "predicate mapping": [], "id": "53e6885f679049b3912f392f6b6d80c3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rouen_Business_School> <http://dbpedia.org/property/province> ?uri } ", "question": "What is the province of Rouen Business School ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rouen_Business_School", "seq": "24,44", "label": "Rouen Business School"}], "predicate mapping": [], "id": "b7ac1b81508e4f6081ad0dc4b5b009f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Minjoo_Party_of_Korea> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "What religions do politicians in the Korean Minjoo Party follow?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Minjoo_Party_of_Korea", "seq": "44,62", "label": "Minjoo Party follow"}], "predicate mapping": [], "id": "3b974c045b2e4beb9b59e0a8b37717cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/McDonnell_Aircraft> . ?x <http://dbpedia.org/ontology/employer> ?uri }", "question": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/McDonnell_Aircraft", "seq": "83,100", "label": "McDonnell Aircraft"}], "predicate mapping": [], "id": "6c1e8f0fd26d46a99e74e077585e78c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Gales_Ferry,_Connecticut> . ?x <http://dbpedia.org/ontology/battle> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "What were the major actions taken by the politicians living in Gales Ferry, Connecticut?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gales_Ferry,_Connecticut", "seq": "63,86", "label": "Gales Ferry, Connecticut"}], "predicate mapping": [], "id": "120b4c5d72884ab7bed686704a78e112"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri } ", "question": "Where was Live in Detroit, MI recorded ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI", "seq": "10,28", "label": "Live in Detroit, MI"}], "predicate mapping": [], "id": "e9800af29b274e64b6e1d8fe78b11a40"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> } ", "question": "who all have been a manager of english under twenty one football team?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "seq": "39,68", "label": "under twenty one football team"}], "predicate mapping": [], "id": "5c2a0fdd797b4369b317ef7541f9dc35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Helsinki> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Name the sea with Helsinki as one of the shore city and is also an outflow for Danish straits?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Helsinki", "seq": "18,25", "label": "Helsinki"}, {"uri": "http://dbpedia.org/resource/Danish_straits", "seq": "79,92", "label": "Danish straits"}], "predicate mapping": [], "id": "e3f84d4ea2bf4837a4250a5cce509c30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Timmy_Time> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards have been won by the executive producer of Timmy Time ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timmy_Time", "seq": "55,64", "label": "Timmy Time"}], "predicate mapping": [], "id": "357edf2393e94d8c9218db99a838a080"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri } ", "question": "What is the district of Fort Heath radar station ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Heath_radar_station", "seq": "24,47", "label": "Fort Heath radar station"}], "predicate mapping": [], "id": "37a0e0437d3549d1ab607f3bcc29d49b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harding_Academy_(Memphis)> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri . }", "question": "What is the common nickname given both to Harding academy and Lyons township high school?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harding_Academy_(Memphis)", "seq": "42,56", "label": "Harding academy"}, {"uri": "http://dbpedia.org/resource/Lyons_Township_High_School", "seq": "62,87", "label": "Lyons township high school"}], "predicate mapping": [], "id": "d704a94fd1fb40aa80e96962ef8ad7f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Rosario,_Santa_Fe> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Count all those who've played for the youth club which owns the Rosario, Santa Fe stadium.", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rosario,_Santa_Fe", "seq": "64,80", "label": "Rosario, Santa Fe"}], "predicate mapping": [], "id": "3ca24dd2487c4192af7eabf87b4a30f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "What are some families of mammals in the animal kingdom?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Animal", "seq": "41,46", "label": "animal"}], "predicate mapping": [], "id": "4ee83040646043bab75bab4d3b19e105"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Myers_(New_Jersey)> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ", "question": "What is the profession of the Chris Myers (New Jersey) which is the governing body of Oahu Railway and Land Company ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris_Myers_(New_Jersey)", "seq": "30,40", "label": "Chris Myers"}, {"uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company", "seq": "86,114", "label": "Oahu Railway and Land Company"}], "predicate mapping": [], "id": "1dd15e0e5e684a168e1ded727d0942ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }", "question": "Count all the different purposes followed by the different NGOs.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Non-governmental_organization", "seq": "49,62", "label": "different NGOs"}], "predicate mapping": [], "id": "9633e3f24eb54f34b01ee6d1c08f943b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show's developer is Brian Graden and voices to the character is by Isaac Hayes?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "seq": "37,48", "label": "Brian Graden"}, {"uri": "http://dbpedia.org/resource/Isaac_Hayes", "seq": "84,94", "label": "Isaac Hayes"}], "predicate mapping": [], "id": "0e1f9caa3e1941c08f8685a375af037d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "How many things are crossed over by bridges which can carry cars?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "seq": "44,48", "label": "which"}], "predicate mapping": [], "id": "62a255d7774446fca4a570b227bc463e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Steve_Sampson> <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Santa_Clara_University> }", "question": "Did Steve Sampson manage a club of Santa Clara university", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Sampson", "seq": "4,16", "label": "Steve Sampson"}, {"uri": "http://dbpedia.org/resource/Santa_Clara_University", "seq": "35,56", "label": "Santa Clara university"}], "predicate mapping": [], "id": "6e5ca1c3866c4d40803a16e1119672a6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "What newspapers's owners is Schibsted", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Schibsted", "seq": "28,36", "label": "Schibsted"}], "predicate mapping": [], "id": "60a97365c85d48f790174e2e468ec6e0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "Which arena of WPC Dynamo Moscow is death location of Tigran Petrosian >", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow", "seq": "15,31", "label": "WPC Dynamo Moscow"}, {"uri": "http://dbpedia.org/resource/Tigran_Petrosian", "seq": "54,69", "label": "Tigran Petrosian"}], "predicate mapping": [], "id": "eef1fbca5e44495eb158ddc399496b52"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Joan_Laporta> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "List the name of the soccer clubs whose chairman is Joan Laporta.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joan_Laporta", "seq": "52,63", "label": "Joan Laporta"}], "predicate mapping": [], "id": "b7d34b18a1a7492986c025ca171504e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/layout> <http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "List all the layouts of the automobile whose one of the layout is four-wheel-drive layout ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout", "seq": "56,88", "label": "layout is four-wheel-drive layout"}], "predicate mapping": [], "id": "8a436b4d6a9c4452a7cdb52c1a8fb54e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pong_Pha> <http://dbpedia.org/ontology/timeZone> ?uri } ", "question": "In which time zone is Pong Pha?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pong_Pha", "seq": "22,29", "label": "Pong Pha"}], "predicate mapping": [], "id": "d1e59f4659f1447daf1f03518db7111e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Angela_Trusty> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Charles_Ayres> <http://dbpedia.org/ontology/almaMater> ?uri . }", "question": "What is the alma mater of the Angela Trusty and Charles Ayres?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Angela_Trusty", "seq": "30,42", "label": "Angela Trusty"}, {"uri": "http://dbpedia.org/resource/Charles_Ayres", "seq": "48,60", "label": "Charles Ayres"}], "predicate mapping": [], "id": "36826b2b0cc1469b91526bbfeeaa3d35"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri} ", "question": "Which band had the members of The Conglomerate, and has made 'Before I let you go'?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)", "seq": "30,45", "label": "The Conglomerate"}, {"uri": "http://dbpedia.org/resource/Before_I_Let_You_Go", "seq": "62,80", "label": "Before I let you go"}], "predicate mapping": [], "id": "c6f59ba390834c9cb144952a1bedf699"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lagnacha_Dhumdhadaka> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "question": "What is the birth place of the cast of Lagnacha Dhumdhadaka?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lagnacha_Dhumdhadaka", "seq": "39,58", "label": "Lagnacha Dhumdhadaka"}], "predicate mapping": [], "id": "74d88ff455d1442eb2c7cf52c8f6bed4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "How many rivers start in an English speaking country?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/English_language", "seq": "28,43", "label": "English speaking"}], "predicate mapping": [], "id": "6f88aee8549b4f49983ccc544c1cac61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/El_Sobrante,_California> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose theme music composer's home town is El Sobrante, California?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/El_Sobrante,_California", "seq": "70,92", "label": "El Sobrante, California"}], "predicate mapping": [], "id": "175315957baa44d4803c095b646ee477"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_O'Regan> <http://dbpedia.org/property/nickname> ?uri } ", "question": "What  is the Nickname of Daniel O'Regan ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_O'Regan", "seq": "25,38", "label": "Daniel O'Regan"}], "predicate mapping": [], "id": "a12c261c27154991801e5701a39bdc5b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . }", "question": "Where are Aureus and Solidus used as currency?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aureus", "seq": "10,15", "label": "Aureus"}, {"uri": "http://dbpedia.org/resource/Solidus_(coin)", "seq": "21,27", "label": "Solidus"}], "predicate mapping": [], "id": "83982663a6f04e249b296b7d3bee0c46"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Cardiovascular_disease> . ?uri <http://dbpedia.org/property/music> ?x  . }", "question": "Music for what was made by someone who died of a cardiovascular disease?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cardiovascular_disease", "seq": "49,70", "label": "cardiovascular disease"}], "predicate mapping": [], "id": "ec38c30a73c44774b95944ad398e3e8b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chestnut_white-bellied_rat> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Mammal> }", "question": "Is the chestnut white bellied rat a mammal?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chestnut_white-bellied_rat", "seq": "7,32", "label": "chestnut white bellied rat"}, {"uri": "http://dbpedia.org/resource/Mammal", "seq": "36,41", "label": "mammal"}], "predicate mapping": [], "id": "dc3644ed1dfc4da882751c8ba8661e2a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Broken_Code> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }", "question": "Was Tim Gunn a guest on The Broken Code?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Broken_Code", "seq": "24,38", "label": "The Broken Code"}, {"uri": "http://dbpedia.org/resource/Tim_Gunn", "seq": "4,11", "label": "Tim Gunn"}], "predicate mapping": [], "id": "ba52d02c389e44feaf5d0a833e155c0e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In how many nations can I find dishes made of Shallot?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shallot", "seq": "46,52", "label": "Shallot"}], "predicate mapping": [], "id": "0d1b4492ca3a491c916bd0ceefdde54d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Who are some american football players whose high school is Oktoc, Mississippi?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oktoc,_Mississippi", "seq": "60,77", "label": "Oktoc, Mississippi"}], "predicate mapping": [], "id": "6d6a489b56814dafafe173f865cf480d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nord_(video_game)> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/The_Beauty_Inside> <http://dbpedia.org/ontology/distributor> ?uri . }", "question": "What system is both a platform where Nord runs and also distributed The beauty inside?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nord_(video_game)", "seq": "37,40", "label": "Nord"}, {"uri": "http://dbpedia.org/resource/The_Beauty_Inside", "seq": "68,84", "label": "The beauty inside"}], "predicate mapping": [], "id": "8b5986c0fa344ce8b5e1d878d471fe1c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albania> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/Tirana> }", "question": "Is Tirana the largest city of Albania?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Albania", "seq": "30,36", "label": "Albania"}, {"uri": "http://dbpedia.org/resource/Tirana", "seq": "3,8", "label": "Tirana"}], "predicate mapping": [], "id": "622f827a327f450d9f7674c67abce591"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri . }", "question": "what are some common games played at both Fr Agnel Multipurpose School and Vishwajyot High School?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "seq": "42,89", "label": "Fr Agnel Multipurpose School and Vishwajyot High"}, {"uri": "http://dbpedia.org/resource/Vishwajyot_High_School", "seq": "75,96", "label": "Vishwajyot High School"}], "predicate mapping": [], "id": "cc5a0469264f4b9db2f762d99fac320f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Bob_Hawke> } ", "question": "Who were all the people in office when bob hawke was the PM?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_Hawke", "seq": "39,47", "label": "bob hawke"}], "predicate mapping": [], "id": "98df0f1a194d4bb1861607e4d2a1477a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/CBS_Corporation> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name some shows whose company is owned by the CBS Corporation?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/CBS_Corporation", "seq": "46,60", "label": "CBS Corporation"}], "predicate mapping": [], "id": "129e928aa6144eaba586e4379ae9f973"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Taguig> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "Which sports are played at institues in Taguig?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taguig", "seq": "40,45", "label": "Taguig"}], "predicate mapping": [], "id": "38c688a1da544a7fb79c1a239732903f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "Joe Hahn is the member of what band?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Hahn", "seq": "0,7", "label": "Joe Hahn"}], "predicate mapping": [], "id": "47e1ecb9aed24329aa182ac22dd61027"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose distributor is Comedy central and  the character voice is given by Isaac hayes ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "46,59", "label": "Comedy central"}, {"uri": "http://dbpedia.org/resource/Isaac_Hayes", "seq": "98,108", "label": "Isaac hayes"}], "predicate mapping": [], "id": "7bbd4a94e58e4bd2b5c13beb56280925"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Raymond_Johansen>  . }", "question": "Raymond Johansen is the mayor of what city?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Johansen", "seq": "0,15", "label": "Raymond Johansen"}], "predicate mapping": [], "id": "be6db808f6ae400989a772e77e8e9ff1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ikaros_Smederna> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayLeague>}", "question": "What is the nation of the speedway league where Ikaros Smederna played?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ikaros_Smederna", "seq": "48,62", "label": "Ikaros Smederna"}], "predicate mapping": [], "id": "f919a579f278404ea6751583426857cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Microsoft_Windows> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What are the kind of games one can play on windows?", "sparql_id": 605, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "40,49", "label": "on windows"}], "predicate mapping": [], "id": "714196c75ed547948e2bd73be5cd2cc2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Hockey> . ?x <http://dbpedia.org/ontology/sport> ?uri }", "question": "Count the number of sports played by schools which play hockey ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hockey", "seq": "56,61", "label": "hockey"}], "predicate mapping": [], "id": "87fb8fce27b84f93b8bce8c5f37fd3f3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "Who holds stock in the railway lines ending in Washington DC?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)", "seq": "47,56", "label": "Washington"}], "predicate mapping": [], "id": "25a932470707489bb49238d7d424b9a9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri } ", "question": "Where is Temenos Group founded ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Temenos_Group", "seq": "9,21", "label": "Temenos Group"}], "predicate mapping": [], "id": "bbcc0bde9178475b83167718e3f7f63c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/language> ?uri  . }", "question": "What was the language of the single which came before To Know Him Is to Love Him?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him", "seq": "54,79", "label": "To Know Him Is to Love Him"}], "predicate mapping": [], "id": "d08d5583e3724547baa6711c074b4e4c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Spain..._on_the_Road_Again> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "Where was the narrator of Spain on the Road Again born?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spain..._on_the_Road_Again", "seq": "26,48", "label": "Spain on the Road Again"}], "predicate mapping": [], "id": "b144d19ed17845e3be65c933a80b56a5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Marve> <http://dbpedia.org/ontology/school> ?uri. <http://dbpedia.org/resource/Neria_Douglass> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "What is the common school of Chris Marve and Neria Douglass?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris_Marve", "seq": "29,39", "label": "Chris Marve"}, {"uri": "http://dbpedia.org/resource/Neria_Douglass", "seq": "45,58", "label": "Neria Douglass"}], "predicate mapping": [], "id": "99e4d849107646e78dc70715e92b6f25"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Monticello,_Maine> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "In which areas are the radio stations of Monticello, Maine available too?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monticello,_Maine", "seq": "41,57", "label": "Monticello, Maine"}], "predicate mapping": [], "id": "31da90b739024aa79457f4f8a2e5e432"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Josiah_Idowu-Fearon> <http://dbpedia.org/ontology/religion> ?uri} ", "question": "What relegious affiliation of Josiah Idowu-Fearon was canonized by john of Damasucs ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_of_Damascus", "seq": "67,82", "label": "john of Damasucs"}, {"uri": "http://dbpedia.org/resource/Josiah_Idowu-Fearon", "seq": "30,48", "label": "Josiah Idowu-Fearon"}], "predicate mapping": [], "id": "30d274c7ebc944d6ac4e29e01c552fbb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show whose composer is Judy Hart Angelo and company as Paramount Television ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judy_Hart_Angelo", "seq": "35,50", "label": "Judy Hart Angelo"}, {"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "67,86", "label": "Paramount Television"}], "predicate mapping": [], "id": "584cc0fdb95040f19cc8ee83fa1c62bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Caspian_Sea> . ?x <http://dbpedia.org/ontology/sourceCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Rivers from which countries flow into the Caspian?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Caspian_Sea", "seq": "42,48", "label": "Caspian"}], "predicate mapping": [], "id": "8bcd288b39ee436f92f8e71b129048af"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Name the military unit whose garrison is Arlington County, Virginia and command structure is United States Department of Defense?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_County,_Virginia", "seq": "41,66", "label": "Arlington County, Virginia"}, {"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "seq": "93,127", "label": "United States Department of Defense"}], "predicate mapping": [], "id": "ebdbaf92c7bf4d16bf1e0624908a684f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thongsuk_Samdaengpan> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "question": "Where does the successor of Thongsuk Samdaengpan reside?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thongsuk_Samdaengpan", "seq": "28,47", "label": "Thongsuk Samdaengpan"}], "predicate mapping": [], "id": "6cda75748c1440b1a5c1a4d4f6d2810d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "what are some devices made by asus?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Asus", "seq": "30,33", "label": "asus"}], "predicate mapping": [], "id": "d30b2d9672204e8ba6c45d14bee2bdb1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Count the number of people who graduated from universities affiliated with the NCAA.", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "59,82", "label": "affiliated with the NCAA"}], "predicate mapping": [], "id": "3da7b4f9f9174d63901356cf058dd0a6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Queen_Latifah> }", "question": "Is Queen Latifah associated with Afrika Baby Bam?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Afrika_Baby_Bam", "seq": "33,47", "label": "Afrika Baby Bam"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "seq": "3,15", "label": "Queen Latifah"}], "predicate mapping": [], "id": "452897c147984666bc0750d8e1981a80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "Count all that was built by a company whose leader is Kazuo Hirai?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kazuo_Hirai", "seq": "54,64", "label": "Kazuo Hirai"}], "predicate mapping": [], "id": "058b1ad027e8461f8bdc3cbe71af5877"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri } ", "question": "Name the sports played by PATTS College of Aeronautics?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "seq": "26,53", "label": "PATTS College of Aeronautics"}], "predicate mapping": [], "id": "fee7a4bf34654f22a3e70e7544af3f20"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/EverBank_Field> <http://dbpedia.org/ontology/tenant> ?uri} ", "question": "Name the tenant of Ever bank field which has also has player named Dan Shamash ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dan_Shamash", "seq": "67,77", "label": "Dan Shamash"}, {"uri": "http://dbpedia.org/resource/EverBank_Field", "seq": "19,33", "label": "Ever bank field"}], "predicate mapping": [], "id": "af9721be263d4f1183dd36c6263b988a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thanong_Bidaya> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }", "question": "Which country did the prime minister belong to who was served by Thanong Bidaya ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thanong_Bidaya", "seq": "65,78", "label": "Thanong Bidaya"}], "predicate mapping": [], "id": "9fa439841abd475690547f59b821490f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the largest city in the country where the San Marcos River originates?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Marcos_River", "seq": "50,65", "label": "San Marcos River"}], "predicate mapping": [], "id": "40d8dc6cc6a44008b90476173e0fcbe3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Give a list of all the labels that have jazz fusion artists signed up with them?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jazz_fusion", "seq": "40,50", "label": "jazz fusion"}], "predicate mapping": [], "id": "0d89f5d0f59b44e8a5353d50205fefa4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogumilus> <http://dbpedia.org/ontology/majorShrine> ?uri } ", "question": "Name the major shrine of Bogumilus?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogumilus", "seq": "25,33", "label": "Bogumilus"}], "predicate mapping": [], "id": "49e05cb4c7b944b687a0c3d8d1766fc5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose predecessor is  Henry E. Catto, Jr. and won Screen Actors Guild Life Achievement Award?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.", "seq": "45,62", "label": "Henry E. Catto, Jr"}, {"uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award", "seq": "73,114", "label": "Screen Actors Guild Life Achievement Award"}], "predicate mapping": [], "id": "a0d691169c504035af1d90fd31a2014a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri } ", "question": "Which holy places did consider Pope Gregory I as a saint?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Gregory_I", "seq": "31,44", "label": "Pope Gregory I"}], "predicate mapping": [], "id": "c57100a716d5441bb8cc6a588c54982b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the religion of people in the Cambodian human rights party?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)", "seq": "45,62", "label": "human rights party"}], "predicate mapping": [], "id": "148cdeb62654466ba6820ef343817fdb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Czech_Extraliga> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }", "question": "In which teams have league members of the Czech Extraliga played previously?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Czech_Extraliga", "seq": "42,56", "label": "Czech Extraliga"}], "predicate mapping": [], "id": "37f49d990d204f4c83aa133bab321be3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Count the wars in which people awarded with the Croix de guerre fought.", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)", "seq": "48,69", "label": "Croix de guerre fought"}], "predicate mapping": [], "id": "f1e12faf9fbc416a9f4c648088eb0ce4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Azam_F.C.> <http://dbpedia.org/property/name> ?x . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "question": "For which clubs do the players of Azam F.C. play for?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Azam_F.C.", "seq": "34,41", "label": "Azam F.C"}], "predicate mapping": [], "id": "fdfee7b9d0c14c7eb2865ce63f009f2d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri. <http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi> <http://dbpedia.org/ontology/denomination> ?uri} ", "question": "Which location of  INKAS is also the location of  T.I. Ahmadiyya Senior High School, Kumasi ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/INKAS", "seq": "19,23", "label": "INKAS"}, {"uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi", "seq": "50,90", "label": "T.I. Ahmadiyya Senior High School, Kumasi"}], "predicate mapping": [], "id": "e24e471cc44e4ea99d44a35f6932aa9b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> . }", "question": "Who are buried in  Rome and Mausoleum of Augustus?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rome", "seq": "19,22", "label": "Rome"}, {"uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus", "seq": "28,48", "label": "Mausoleum of Augustus"}], "predicate mapping": [], "id": "fc62fafe2c5c436cb7695e5a91beb9ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/1st_Free_French_Division> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/property/battles> ?uri  . }", "question": "How many battles have involved commanders of 1st Free French Division?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/1st_Free_French_Division", "seq": "45,68", "label": "1st Free French Division"}], "predicate mapping": [], "id": "4243b354b7954e75ad5981538c61dfa1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . }", "question": "Count the number of cities on the Mediterranean Sea?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "34,50", "label": "Mediterranean Sea"}], "predicate mapping": [], "id": "172bb4fd523c408cb8cfc0bd46db1031"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name a  river with source country as Zambia and source location as Ikelenge  District?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "seq": "37,42", "label": "Zambia"}, {"uri": "http://dbpedia.org/resource/Ikelenge_District", "seq": "67,84", "label": "Ikelenge  District"}], "predicate mapping": [], "id": "0e83db3bc85c4c33bbc49dafc2825eb4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which researchers received fellowship from Royal Society?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "43,55", "label": "Royal Society"}], "predicate mapping": [], "id": "7f65c4ab542e475aa78b39ba487c66d2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Acer_nigrum> } ", "question": "acer nigrum is used in making what?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Acer_nigrum", "seq": "0,10", "label": "acer nigrum"}], "predicate mapping": [], "id": "e166d5d43fdf4091b8a0c9a5482c75c5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos> } ", "question": "what are some famous people out of the Filipinos?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Filipinos", "seq": "39,47", "label": "Filipinos"}], "predicate mapping": [], "id": "89b2ce4827404f8bbd451c6143340f72"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Who is the office holder with deputies as Neil Brown and Andrew Peacock?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)", "seq": "42,51", "label": "Neil Brown"}, {"uri": "http://dbpedia.org/resource/Andrew_Peacock", "seq": "57,70", "label": "Andrew Peacock"}], "predicate mapping": [], "id": "da9c6ff456104d10945b6af22f54ca27"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Into_the_Dalek> <http://dbpedia.org/property/executiveProducer> ?uri. <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri} ", "question": "Which executive producer of Into the Dalek also produced Wizards vs Aliens ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Into_the_Dalek", "seq": "28,41", "label": "Into the Dalek"}, {"uri": "http://dbpedia.org/resource/Wizards_vs_Aliens", "seq": "57,73", "label": "Wizards vs Aliens"}], "predicate mapping": [], "id": "629c24823cdd4a4793f7696489607700"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Charles_Pinckney_(governor)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }", "question": "Who appointed the successor of Charles Pinckney ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Pinckney_(governor)", "seq": "31,46", "label": "Charles Pinckney"}], "predicate mapping": [], "id": "c5bb228043054a8ea67035887fd84db8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/United_States_men's_national_soccer_team> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }", "question": "Where did they debut their careers , those who have played for US men's national soccer team?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_men's_national_soccer_team", "seq": "52,91", "label": "played for US men's national soccer team"}], "predicate mapping": [], "id": "dff1afb3640745f382d04cc81eeff9e1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tessa_Dahl> <http://dbpedia.org/ontology/parent> ?uri } ", "question": "To whom was Tessa Dahl born to?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tessa_Dahl", "seq": "12,21", "label": "Tessa Dahl"}], "predicate mapping": [], "id": "139da48f4c4e4d1e91d23b6890ef6f4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/distributor> ?x  . }", "question": "EU Broadcasting Union is the owner of the distributor of what?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Broadcasting_Union", "seq": "0,20", "label": "EU Broadcasting Union"}], "predicate mapping": [], "id": "ea289b0161b2405ca5ec1de91100eab1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }", "question": "Was Jack Ryan a nominee of US Senate?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "seq": "4,12", "label": "Jack Ryan"}, {"uri": "http://dbpedia.org/resource/United_States_Senate", "seq": "16,35", "label": "nominee of US Senate"}], "predicate mapping": [], "id": "38646a24ca5a41c2b44a07158a6d5483"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ananda_College> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Count the number of religions followed by the alumini of Ananda College.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ananda_College", "seq": "57,70", "label": "Ananda College"}], "predicate mapping": [], "id": "a0423af0bfd24f718c7e57062d36a615"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri} ", "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season", "seq": "63,85", "label": "Panionios G.S.S. season"}, {"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "22,38", "label": "Mediterranean Sea"}], "predicate mapping": [], "id": "ebe64596063a43719e1b6479a9d09d94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Cowombat_Flat> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Murray_Mouth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river whose source is Cowombat  Flat and has it's mouth located in Murray Mouth?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cowombat_Flat", "seq": "34,47", "label": "Cowombat  Flat"}, {"uri": "http://dbpedia.org/resource/Murray_Mouth", "seq": "79,90", "label": "Murray Mouth"}], "predicate mapping": [], "id": "7b9c6c00806d42ef9ece1689ddac88c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBCQ_(SW)> <http://dbpedia.org/property/area> ?uri } ", "question": "What is the broadcast area of WBCQ (SW) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WBCQ_(SW)", "seq": "30,33", "label": "WBCQ"}], "predicate mapping": [], "id": "c4acb6859ef2400a8989bd05cdf3f766"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2015_Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Who were in the youth clubs that were in season of 2015 Argentine Primera Division?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Argentine_Primera_Divisi\u00f3n", "seq": "51,81", "label": "2015 Argentine Primera Division"}], "predicate mapping": [], "id": "43659f479aa14b2aa8703e06d7a71405"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Florida> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater>}", "question": "List the cities which share the same water body as that of Florida ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Florida", "seq": "59,65", "label": "Florida"}], "predicate mapping": [], "id": "df05400e047e44529cb00216e3ca4203"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Defend_New_Zealand> } ", "question": "God Defend New Zealand is the national anthem of which country?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/God_Defend_New_Zealand", "seq": "0,21", "label": "God Defend New Zealand"}], "predicate mapping": [], "id": "dc045b68c18349d693ff758050108ee5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What is the name of the movie whose director of photography was Jordan Cronenweth and music composer was Vangelis?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "64,80", "label": "Jordan Cronenweth"}, {"uri": "http://dbpedia.org/resource/Vangelis", "seq": "105,112", "label": "Vangelis"}], "predicate mapping": [], "id": "ce7341ebdfa44c9b8066a65553c210b4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "From how many coutries do companies come, which are headquartered in the Klang Valley?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Klang_Valley", "seq": "73,84", "label": "Klang Valley"}], "predicate mapping": [], "id": "515d73dc046545aa893eb5a29754ae6d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/Discovery_Communications> . ?x <http://dbpedia.org/property/founder> ?uri  . }", "question": "Who founded the sister stations of Discovery Communications?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Discovery_Communications", "seq": "35,58", "label": "Discovery Communications"}], "predicate mapping": [], "id": "4d0d78713fc845a3ac7f51b309934ca1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are the notable works of the person who produced Queer as Folk?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)", "seq": "54,66", "label": "Queer as Folk"}], "predicate mapping": [], "id": "05c054d50e42453aaea8ea3da8ce6afa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/High_Desert_(Oregon)> <http://dbpedia.org/ontology/border> ?uri } ", "question": "What are the border of High Desert (Oregon)?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/High_Desert_(Oregon)", "seq": "23,33", "label": "High Desert"}], "predicate mapping": [], "id": "f90fbf38ccac4a54915b9f68886b7257"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Paramount_Domestic_Television> . ?uri <http://dbpedia.org/property/company> ?x  . }", "question": "What all is owned by a company one of whose division is Paramount Domestic Television?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Domestic_Television", "seq": "56,84", "label": "Paramount Domestic Television"}], "predicate mapping": [], "id": "0305f6c0414b4f0cba825e2346e0b8a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/City_of_New_Orleans_(song)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/musicalBand> ?uri  . }", "question": " Which musical band produced the subsequent work of City of New Orleans ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_New_Orleans_(song)", "seq": "52,70", "label": "City of New Orleans"}], "predicate mapping": [], "id": "5714a0b607134b3494e96af29ff7888b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/The_Galleria> <http://dbpedia.org/ontology/owner> ?uri} ", "question": "Which parent organization of Get TV also owns the Galleria ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/GetTV", "seq": "29,34", "label": "Get TV"}, {"uri": "http://dbpedia.org/resource/The_Galleria", "seq": "46,57", "label": "the Galleria"}], "predicate mapping": [], "id": "37e79131355440699c0b9efeb17ecc4a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Madagascar:_Operation_Penguin> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/He's_a_Pirate> <http://dbpedia.org/property/writer> ?uri} ", "question": "Which artist of Madagascar: Operation Penguin is also the writer of He's a Pirate ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin", "seq": "16,44", "label": "Madagascar: Operation Penguin"}, {"uri": "http://dbpedia.org/resource/He's_a_Pirate", "seq": "68,80", "label": "He's a Pirate"}], "predicate mapping": [], "id": "d527decfd5df49a9852e46439a6e38ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goran_\u010cengi\u0107> <http://dbpedia.org/property/deathPlace> ?uri } ", "question": "Where did Goran Cengic die?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Goran_\u010cengi\u0107", "seq": "10,21", "label": "Goran Cengic"}], "predicate mapping": [], "id": "789d45349934476b8ebaf084f1161fc0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Zhorstoke_nebo> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . }", "question": "The authors of Zhorstoke nebo was influenced by whom ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zhorstoke_nebo", "seq": "15,28", "label": "Zhorstoke nebo"}], "predicate mapping": [], "id": "39173d997c5d410fab182a0ea5ca6a78"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Louis_Dunbar> . ?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Jeff_Munn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "question": "Name the basketball team which is coached by Louis Dunbar and has president as Jeff Munn ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_Dunbar", "seq": "45,56", "label": "Louis Dunbar"}, {"uri": "http://dbpedia.org/resource/Jeff_Munn", "seq": "79,87", "label": "Jeff Munn"}], "predicate mapping": [], "id": "1bdfe333c33d4a9b93c68aff83578281"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who all have rented the stadium whose architect is Populous?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Populous_(company)", "seq": "51,58", "label": "Populous"}], "predicate mapping": [], "id": "c6237ded5fec4e6e88b97e8bf24b84c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Chumash_people> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "Which body governs over the place made by the chumash people?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chumash_people", "seq": "46,59", "label": "chumash people"}], "predicate mapping": [], "id": "fca07533e88d461686cd3a1827d8d790"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pavel_Moroz> <http://dbpedia.org/property/hometown> ?uri. <http://dbpedia.org/resource/Helena_of_Moscow> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which hometown of pavel Moroz is also the palace of birthplace of Helena of Moscow ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pavel_Moroz", "seq": "18,28", "label": "pavel Moroz"}, {"uri": "http://dbpedia.org/resource/Helena_of_Moscow", "seq": "66,81", "label": "Helena of Moscow"}], "predicate mapping": [], "id": "a79197506cc946a797bee8f7882d90f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show developed by J. Michael Stracznski has artist as Christopher Franke ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "seq": "63,80", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "27,47", "label": "J. Michael Stracznski"}], "predicate mapping": [], "id": "e54d1194593e4fabba95e42efed756c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cy-Fair_High_School> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }", "question": "Name the largest city in the county where there is a Cy-Fair High School.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cy-Fair_High_School", "seq": "53,71", "label": "Cy-Fair High School"}], "predicate mapping": [], "id": "d20a76100844447baaac326f589861ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Senser> <http://dbpedia.org/property/pastMembers> ?x . ?x <http://dbpedia.org/property/mainInterests> ?uri  . }", "question": "What are the academic interests of the past members of Senser?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Senser", "seq": "55,60", "label": "Senser"}], "predicate mapping": [], "id": "dec00419f40040aab1c69746a1a93469"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri . }", "question": "Name the common associate band of Blayse and Teddy Riley ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blayse", "seq": "34,39", "label": "Blayse"}, {"uri": "http://dbpedia.org/resource/Teddy_Riley", "seq": "45,55", "label": "Teddy Riley"}], "predicate mapping": [], "id": "f84aac1f48e348e8964388d29ed6a82b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/To_Where_You_Are> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/ontology/artist> ?uri  . }", "question": "Who is the performer of album which has the song \"To Where You Are\" ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/To_Where_You_Are", "seq": "49,66", "label": "\"To Where You Are\""}], "predicate mapping": [], "id": "60347895278a411187b6aaafce98462e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Merlin_Express> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Cibao_International_Airport> }", "question": "Does the merlin express have a hub at the cibano international airport?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Merlin_Express", "seq": "9,22", "label": "merlin express"}, {"uri": "http://dbpedia.org/resource/Cibao_International_Airport", "seq": "42,69", "label": "cibano international airport"}], "predicate mapping": [], "id": "d97aad57df5d45eb95490446fc978a61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut>  . }", "question": "How many people live in Wilton, Connecticut?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wilton,_Connecticut", "seq": "24,42", "label": "Wilton, Connecticut"}], "predicate mapping": [], "id": "c6aec20e26bf401b81d1b6aa04ae91a5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . }", "question": "For how many different teams have Ontarians been drafted ?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "34,42", "label": "Ontarians"}], "predicate mapping": [], "id": "859ca6438ab1484a8e5317f11e6d7dba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which Fox  show is presented by Ryan Seacrest?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "32,44", "label": "Ryan Seacrest"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "6,27", "label": "Fox  show is presented"}], "predicate mapping": [], "id": "10c87cc916094a9a81664a0eed9decea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "How many rivers are crossed by different Box Girder bridges?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Box_girder_bridge", "seq": "41,58", "label": "Box Girder bridges"}], "predicate mapping": [], "id": "21dcb126b1924db68d44a389f565f443"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_God_Who_Wasn't_There> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "What is the alma mater of the actors of The God Who Wasn't There ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_God_Who_Wasn't_There", "seq": "40,63", "label": "The God Who Wasn't There"}], "predicate mapping": [], "id": "1184156dad9a478ba5e2c3590f20096e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}", "question": "What railway lines go through the stations maintained by Western Australian Public Transport Authority?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)", "seq": "76,101", "label": "Public Transport Authority"}], "predicate mapping": [], "id": "3b7070ada99b44be80d9025524919a86"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Thomas_Meehan_(writer)> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which label released the movie written by Thomas Meehan?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Meehan_(writer)", "seq": "42,54", "label": "Thomas Meehan"}], "predicate mapping": [], "id": "6829110a0f8c4c0297649f7ae290e6b3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/governingBody> <http://dbpedia.org/resource/Municipal_council> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "What is the leader name of the settlements whose governing body is Municipal council?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Municipal_council", "seq": "67,83", "label": "Municipal council"}], "predicate mapping": [], "id": "8b5f83f82fb945f68ec39bf2ee49c270"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacques-D\u00e9sir\u00e9_Laval> <http://dbpedia.org/ontology/majorShrine> ?uri } ", "question": "What is the major shrine of Jacques-Dsir Laval ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jacques-D\u00e9sir\u00e9_Laval", "seq": "28,45", "label": "Jacques-Dsir Laval"}], "predicate mapping": [], "id": "624847b205bc4cfdb3fc6d5a3bb94089"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/federalState> <http://dbpedia.org/resource/Mecklenburg-Vorpommern> . ?uri <http://dbpedia.org/property/cities> ?x  . }", "question": "List places that are associated to cities in the state of Mecklenburg-Vorpommern.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mecklenburg-Vorpommern", "seq": "58,79", "label": "Mecklenburg-Vorpommern"}], "predicate mapping": [], "id": "7cd11e37116b4218a85d96fc128b3c02"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Herzogenaurach> } ", "question": "What sporting goods companies are located in Herzogenaurach?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Herzogenaurach", "seq": "45,58", "label": "Herzogenaurach"}], "predicate mapping": [], "id": "d07c4caf5e9b42379ae12c0f145c97dc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married> <http://dbpedia.org/property/starring> ?uri  . }", "question": "Count the number of actors in Lucy Sullivan Is Getting Married.", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married", "seq": "30,61", "label": "Lucy Sullivan Is Getting Married"}], "predicate mapping": [], "id": "973af98c92e24d1793c45d8c0ed3e83b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What genre of games are made by Blizzard Entertainment studios?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blizzard_Entertainment", "seq": "32,53", "label": "Blizzard Entertainment"}], "predicate mapping": [], "id": "c98f57f9e1cc479eb0dcea4abd33d23a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }", "question": "Which predecessor of Alexander Downer was deputy to Neil Brown ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Downer", "seq": "21,36", "label": "Alexander Downer"}, {"uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)", "seq": "52,61", "label": "Neil Brown"}], "predicate mapping": [], "id": "27ac3a28ee1145f3b6b5a1b7fd89b595"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Costa_Rica_national_football_team> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who built the stadium which was rented by Costa Rica national football team?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Costa_Rica_national_football_team", "seq": "42,74", "label": "Costa Rica national football team"}], "predicate mapping": [], "id": "0975db6bce494a3ca9713353d0589ad3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amitava_Datta> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Which sports are played in the alma mater of Amitava Datta?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amitava_Datta", "seq": "45,57", "label": "Amitava Datta"}], "predicate mapping": [], "id": "802bb417e72d4d8a9cb37d8136a0ae07"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Londo_Mollari> <http://dbpedia.org/ontology/series> ?uri } ", "question": "To which series does the character of Londo Mollari belong?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Londo_Mollari", "seq": "38,50", "label": "Londo Mollari"}], "predicate mapping": [], "id": "8c42485e42e641b297c1b7b9bc431f71"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . }", "question": "Count all the scientologists.", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scientology", "seq": "14,27", "label": "scientologists"}], "predicate mapping": [], "id": "eeeeba8f2afb457886b8942434d292ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . }", "question": "Rashid Behbudov State Song Theatre and Baku Puppet Theatre can be found in which country?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre", "seq": "0,33", "label": "Rashid Behbudov State Song Theatre"}, {"uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre", "seq": "39,57", "label": "Baku Puppet Theatre"}], "predicate mapping": [], "id": "484f28f611e648b4b388f6cf98d964bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liudmila_Privivkova> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Qadir_Huseynov> <http://dbpedia.org/ontology/birthPlace> ?uri . }", "question": "What is the birthplace of Liudmila Privivkova and Qadir Huseynov ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liudmila_Privivkova", "seq": "26,44", "label": "Liudmila Privivkova"}, {"uri": "http://dbpedia.org/resource/Qadir_Huseynov", "seq": "50,63", "label": "Qadir Huseynov"}], "predicate mapping": [], "id": "b5dca27ca03b43638ef8c6dddbd21693"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What is the predecessor of the automobile which is the related of Cadillac Fleetwood?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cadillac_Fleetwood", "seq": "66,83", "label": "Cadillac Fleetwood"}], "predicate mapping": [], "id": "8bd9695f7e1442e2a222a9db2e5934f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_CDTV> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "question": "How many genres of games can I find on the commodore CDTV?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Commodore_CDTV", "seq": "43,56", "label": "commodore CDTV"}], "predicate mapping": [], "id": "573991970f0e4f4c84b043e20bedf9ef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Mark_Johnson_(producer)> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the cast member of the movies whose producer is Mark Johnson.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Johnson_(producer)", "seq": "53,64", "label": "Mark Johnson"}], "predicate mapping": [], "id": "8e4a97eb98a546acb53208b55d2b191a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Canary_Islands> } ", "question": "Under which archipelago does Canary Islands fall?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canary_Islands", "seq": "29,42", "label": "Canary Islands"}], "predicate mapping": [], "id": "588353d070ef46ebab76b15f479bafda"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fusil_Gras_mle_1874> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "In how many  territories were the wars fought where Fusil Gras Mile 1874 were used?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fusil_Gras_mle_1874", "seq": "52,71", "label": "Fusil Gras Mile 1874"}], "predicate mapping": [], "id": "229566aad8594cd09f94da93dbe723fb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ", "question": "What is the craft of the Ralph Flanders which is also the profession of  Claiborne Pell ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ralph_Flanders", "seq": "25,38", "label": "Ralph Flanders"}, {"uri": "http://dbpedia.org/resource/Claiborne_Pell", "seq": "73,86", "label": "Claiborne Pell"}], "predicate mapping": [], "id": "c2b204dc4fa14f0fa3e64b8a5e79c362"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "Who are the politicians whose death place is Ontario?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "45,51", "label": "Ontario"}], "predicate mapping": [], "id": "c69b4dff5f2c416d9a4d119548801193"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/U.S._Route_281> <http://dbpedia.org/property/junction> <http://dbpedia.org/resource/San_Antonio> }", "question": "Does the US route 281 have a junction at San Antonio?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/U.S._Route_281", "seq": "9,20", "label": "US route 281"}, {"uri": "http://dbpedia.org/resource/San_Antonio", "seq": "41,51", "label": "San Antonio"}], "predicate mapping": [], "id": "60c286ef4d054f78a11a86763d47290b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "Where do the CNN employees typically graduate from?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/CNN", "seq": "13,15", "label": "CNN"}], "predicate mapping": [], "id": "7b8f4f86aea64af6bca2e94f317956c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "Who has stock in the railway lines managed by Norfolk Southern Railway?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway", "seq": "46,69", "label": "Norfolk Southern Railway"}], "predicate mapping": [], "id": "3de0478033a3450e981f4086b2f53e3e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company whose one of the product is Pixar Image Computer and has one of the key person as Edwin Catmull?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pixar_Image_Computer", "seq": "45,64", "label": "Pixar Image Computer"}, {"uri": "http://dbpedia.org/resource/Edwin_Catmull", "seq": "99,111", "label": "Edwin Catmull"}], "predicate mapping": [], "id": "5cf13a5c4a1849c6afb4b1a429c18893"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey> . }", "question": "Who has official residences at Beverly Hills and Colts Neck Township ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "seq": "31,47", "label": "Beverly Hills and"}, {"uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey", "seq": "49,67", "label": "Colts Neck Township"}], "predicate mapping": [], "id": "9f7022f5c92b4603a66efc8ad9c62d35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Give me a count of royalties buried in Rome ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rome", "seq": "39,42", "label": "Rome"}], "predicate mapping": [], "id": "a33350d8ce8d449a9ce52f0ca2451234"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhode_Island_Route_15> <http://dbpedia.org/ontology/routeJunction> ?uri } ", "question": "What is the route junction of Rhode Island Route 15 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rhode_Island_Route_15", "seq": "30,50", "label": "Rhode Island Route 15"}], "predicate mapping": [], "id": "eb58dda4372c4a6596673f32df5a1ef4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Merger> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Trump_Productions> <http://dbpedia.org/ontology/keyPerson> ?uri . }", "question": "Which executive producer of the ultimate merger is also an important person at Trump Productions?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Ultimate_Merger", "seq": "28,46", "label": "the ultimate merger"}, {"uri": "http://dbpedia.org/resource/Trump_Productions", "seq": "79,95", "label": "Trump Productions"}], "predicate mapping": [], "id": "7231e19892bf4ed6bc48ad9493d50db8"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/KOMC-FM> }", "question": "Is KOMC-FM the sister station of KOMC (AM)?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/KOMC_(AM)", "seq": "33,36", "label": "KOMC"}, {"uri": "http://dbpedia.org/resource/KOMC-FM", "seq": "3,9", "label": "KOMC-FM"}], "predicate mapping": [], "id": "bc0e9473e03d40289b81d23a7aad7340"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Jeju_International_Airport> }", "question": "Do the asiana airlines fly  to Jeju airport?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Asiana_Airlines", "seq": "7,21", "label": "asiana airlines"}, {"uri": "http://dbpedia.org/resource/Jeju_International_Airport", "seq": "31,42", "label": "Jeju airport"}], "predicate mapping": [], "id": "89044eb32d9442b1b3b0e8dab3d7a99d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Swedish_Academy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "Which awards are presented by Swedish Academy?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_Academy", "seq": "30,44", "label": "Swedish Academy"}], "predicate mapping": [], "id": "001fa9f758104896b853528c748e25f6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Tennessee_State_Museum> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}", "question": "List the awards won by the fashion designer which have been recognized by Tennessee State Museum ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennessee_State_Museum", "seq": "74,95", "label": "Tennessee State Museum"}], "predicate mapping": [], "id": "569c03444cd642899588bdbe6cf9351c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Ishir\u014d_Honda>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which motion picture stories were edited by Ishir Honda?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ishir\u014d_Honda", "seq": "44,54", "label": "Ishir Honda"}], "predicate mapping": [], "id": "c937de2356174723a6ec3e5563b02fa8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_\u2013_Men's_slalom> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Skier>}", "question": "What is the location of death of the skier who was the bronze medalist of Alpine skiing at the 1964 Winter Olympics  Men's slalom ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_\u2013_Men's_slalom", "seq": "74,128", "label": "Alpine skiing at the 1964 Winter Olympics  Men's slalom"}], "predicate mapping": [], "id": "938480f17cdc4fbfaa215a3e4217843d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Virgin_Radio> . ?x <http://dbpedia.org/property/location> ?uri  . }", "question": "Where all does the sister station of virgin radio play?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Virgin_Radio", "seq": "37,48", "label": "virgin radio"}], "predicate mapping": [], "id": "745acda3a54043fab3bafce782bae4f9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u014ctani_University> <http://dbpedia.org/property/affiliation> ?uri } ", "question": "What is the affiliation of tani University ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u014ctani_University", "seq": "27,41", "label": "tani University"}], "predicate mapping": [], "id": "549f424393e345c0b173231ac5954fd1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> } ", "question": "Which rivers originate from Dowra?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dowra", "seq": "28,32", "label": "Dowra"}], "predicate mapping": [], "id": "2069abd16c734d1f8e9758bea35da77d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Pittsburgh_Pirates> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who was the architect of the stadium currently run by the Pittsburgh Pirates?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburgh_Pirates", "seq": "58,75", "label": "Pittsburgh Pirates"}], "predicate mapping": [], "id": "4d1bbe0ed05744749e253c143259609c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many TV shows have been created by Simon Fuller ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "39,50", "label": "Simon Fuller"}], "predicate mapping": [], "id": "876df0eecd7c4e78a79daa9a1e7b3343"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ", "question": "What is the record label of the Next Thing and also the  label of the The Producers (2005 film)?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Next_Thing", "seq": "32,41", "label": "Next Thing"}, {"uri": "http://dbpedia.org/resource/The_Producers_(2005_film)", "seq": "70,82", "label": "The Producers"}], "predicate mapping": [], "id": "0d2597c2a2f94822a3951967fe2e3a7e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_C> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }", "question": "Did Henry Ford design the Model C?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Model_C", "seq": "26,32", "label": "Model C"}, {"uri": "http://dbpedia.org/resource/Henry_Ford", "seq": "4,13", "label": "Henry Ford"}], "predicate mapping": [], "id": "4d489bcad0334bd58b83cdeedbd1c5ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)>  . }", "question": "How many people are known for Dragons' Den?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)", "seq": "30,41", "label": "Dragons' Den"}], "predicate mapping": [], "id": "49df02ead3be433689a0ab015de139c9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri. <http://dbpedia.org/resource/Joseph_Case_High_School> <http://dbpedia.org/ontology/region> ?uri} ", "question": "WHich region of the Providence Chapel, Charlwood is also the region of the Joseph Case High School", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood", "seq": "20,47", "label": "Providence Chapel, Charlwood"}, {"uri": "http://dbpedia.org/resource/Joseph_Case_High_School", "seq": "75,97", "label": "Joseph Case High School"}], "predicate mapping": [], "id": "09b0466736b646098262ca3fce5092aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist whose supervisor was John Robert Woodyard and has won Norbert Wiener Award for Social and Professional Responsibility?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Robert_Woodyard", "seq": "40,59", "label": "John Robert Woodyard"}, {"uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility", "seq": "73,135", "label": "Norbert Wiener Award for Social and Professional Responsibility"}], "predicate mapping": [], "id": "2cc0b2ad617642aaace9eab113615942"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_G._Siebels,_Jr.> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/LeRoy_Collins> <http://dbpedia.org/property/branch> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Which branch of american military have both George Siebels jr and Leroy Collins served?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_G._Siebels,_Jr.", "seq": "44,60", "label": "George Siebels jr"}, {"uri": "http://dbpedia.org/resource/LeRoy_Collins", "seq": "66,78", "label": "Leroy Collins"}], "predicate mapping": [], "id": "5091ad9fb7954f7b90ab7da686543728"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "What are some relatives of armymen who died in Germany?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Germany", "seq": "47,53", "label": "Germany"}], "predicate mapping": [], "id": "c4d7c24ab2a34c4ea2ff5945ba35ef69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Downtown_Athletic_Club> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Yale_Club_of_New_York_City> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "What is the award presented by Downtown Athletic Club and Yale Club NYCity?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Downtown_Athletic_Club", "seq": "31,52", "label": "Downtown Athletic Club"}, {"uri": "http://dbpedia.org/resource/Yale_Club_of_New_York_City", "seq": "58,73", "label": "Yale Club NYCity"}], "predicate mapping": [], "id": "c33e201bd83f4ba38d3aabb00cec0f07"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow> <http://dbpedia.org/property/primeminister> ?uri } ", "question": "List the  primeministers of Victor Hope, 2nd Marquess of Linlithgow ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow", "seq": "28,66", "label": "Victor Hope, 2nd Marquess of Linlithgow"}], "predicate mapping": [], "id": "9d8981bec314421cbc7ab5fa19b35a8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ashton_Historic_District> . ?x <http://dbpedia.org/property/college> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "What is the college of the basketball player who lives in Ashton Historic district?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ashton_Historic_District", "seq": "58,81", "label": "Ashton Historic district"}], "predicate mapping": [], "id": "6bd921a06e6e42a39a5c041bfb20eb9e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Greater_Napanee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Greater Napanee is the home town of what people?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_Napanee", "seq": "0,14", "label": "Greater Napanee"}], "predicate mapping": [], "id": "489c3ac08b304bbaae50df383689eebe"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Channel_District> <http://dbpedia.org/ontology/state> ?uri } ", "question": "In which state is the Channel district?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Channel_District", "seq": "22,37", "label": "Channel district"}], "predicate mapping": [], "id": "df2e76ce3304460b96e4bc1004ba31ff"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vagif_Aliyev> <http://dbpedia.org/ontology/religion> ?uri } ", "question": "Name the religious affiliation of Vagif Aliyev ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vagif_Aliyev", "seq": "34,45", "label": "Vagif Aliyev"}], "predicate mapping": [], "id": "72e904a0c1464fa49e6a57b90d012b10"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company founded in US and provides OneDrive as service ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "seq": "44,51", "label": "OneDrive"}, {"uri": "http://dbpedia.org/resource/United_States", "seq": "17,29", "label": "founded in US"}], "predicate mapping": [], "id": "2a6c65a45e7249bebfda9d7ab36715ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_L._McConaughy> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/branch> ?uri  . }", "question": "In which branch of the government does James L. McConaughy belong?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_L._McConaughy", "seq": "39,57", "label": "James L. McConaughy"}], "predicate mapping": [], "id": "0994c57e0c4a42daaa38f1d36dbb7e24"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Catwoman> . ?x <http://dbpedia.org/property/characters> ?uri }", "question": "Count the number of characters of the play whose one of the character is Catwoman ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Catwoman", "seq": "73,80", "label": "Catwoman"}], "predicate mapping": [], "id": "e4ff3218dca54f6e816707115b42aea9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri } ", "question": "what cities are located on the sides of mediterranean sea?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "40,56", "label": "mediterranean sea"}], "predicate mapping": [], "id": "a216ea53e375474aa3d2a23273a88807"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bacillus> <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> }", "question": "Is Bacillus belong to the domain Bacteria?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillus", "seq": "3,10", "label": "Bacillus"}, {"uri": "http://dbpedia.org/resource/Bacteria", "seq": "33,40", "label": "Bacteria"}], "predicate mapping": [], "id": "6abd056cf07347d29aaf81047e0d6975"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Currency>}", "question": "How many currencies are in used in places where people speak French?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_language", "seq": "61,66", "label": "French"}], "predicate mapping": [], "id": "2ffbfa007109419280e603e3a3512ac9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Jowai> <http://dbpedia.org/ontology/leaderName> ?uri . }", "question": "What political party has governed both in Baraily,MP and Jowai?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baraily", "seq": "42,48", "label": "Baraily"}, {"uri": "http://dbpedia.org/resource/Jowai", "seq": "57,61", "label": "Jowai"}], "predicate mapping": [], "id": "6701db8180aa493ba901a225bd9a6ff2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which officers fought in the war of Siege of Fort Recovery?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "seq": "36,57", "label": "Siege of Fort Recovery"}], "predicate mapping": [], "id": "5ff2409a01034c5ba98c340602657d3b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Germanic_languages> . ?uri <http://dbpedia.org/property/language> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "How many writers speak a language belonging to the Germanic kind of languages?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Germanic_languages", "seq": "17,32", "label": "speak a language"}], "predicate mapping": [], "id": "92bd8bf1ae994d77a70ff9745c6690be"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul> }", "question": "Was Duanne Allman known to play the Les Paul?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duane_Allman", "seq": "4,16", "label": "Duanne Allman"}, {"uri": "http://dbpedia.org/resource/Gibson_Les_Paul", "seq": "36,43", "label": "Les Paul"}], "predicate mapping": [], "id": "4eba9f2aaa744ba699fd23239145e64b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Tanzania_national_football_team> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "question": "For which other teams do members of tanzanian national football team play?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tanzania_national_football_team", "seq": "36,67", "label": "tanzanian national football team"}], "predicate mapping": [], "id": "aaab23649cce43d6957cdd09c3a4ea47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bloomberg_Markets> <http://dbpedia.org/property/company> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "Who are the major stockholders of the bank which is the company of Bloomberg Markets ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bloomberg_Markets", "seq": "67,83", "label": "Bloomberg Markets"}], "predicate mapping": [], "id": "d501cb9ebb8445839dc4079bffe5f377"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . }", "question": "How many maintainers are there of the bridges that can carry motor vehicles over them?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "seq": "61,74", "label": "motor vehicles"}], "predicate mapping": [], "id": "640f3316ba4b47ec9f5efa399249afdb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "question": "What race of Linda Hogan is the state of origin of the Holmes Colbert ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Hogan", "seq": "13,23", "label": "Linda Hogan"}, {"uri": "http://dbpedia.org/resource/Holmes_Colbert", "seq": "55,68", "label": "Holmes Colbert"}], "predicate mapping": [], "id": "3e8fa86f90ba41089a2aea279c13c9f3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri } ", "question": "What is Jon Speelman famous for?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "8,19", "label": "Jon Speelman"}], "predicate mapping": [], "id": "b83ff0ecbd954891879ab98e725eb333"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ella_Loves_Cole> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }", "question": "What is the name of the artist which worked on the subsequent work of Ella Loves Cole ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ella_Loves_Cole", "seq": "70,84", "label": "Ella Loves Cole"}], "predicate mapping": [], "id": "7bb0d99556694daa97224e6cdb0d61f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose network is Prime Time Entertainment Network?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "seq": "47,78", "label": "Prime Time Entertainment Network"}], "predicate mapping": [], "id": "1d3e8d528a354735aa5fdffc086c9530"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Auto_Shankar_(film)> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "What is the place of birth of the stars of Auto Shankar ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Auto_Shankar_(film)", "seq": "43,54", "label": "Auto Shankar"}], "predicate mapping": [], "id": "659915fe8d864b808a9a514f5b3ff35d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "In which state can I find Burr Truss styled bridges?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burr_Truss", "seq": "26,35", "label": "Burr Truss"}], "predicate mapping": [], "id": "5b90785deb8a4411aaa78d29aa3731e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Tonl\u00e9_Sap> } ", "question": "tonle sap flows into which river?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonl\u00e9_Sap", "seq": "0,8", "label": "tonle sap"}], "predicate mapping": [], "id": "c1149b9f20bf470fad0154de4f2e72b7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheryl_Tiegs> <http://dbpedia.org/ontology/residence> ?uri } ", "question": "What city is the residence of Cheryl Teigs?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cheryl_Tiegs", "seq": "30,41", "label": "Cheryl Teigs"}], "predicate mapping": [], "id": "6229161c4acd41e5ba294a148a25abfb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Ndonga_Mianga> . ?x <http://dbpedia.org/property/name> ?uri  . }", "question": "List some teammates of Ndonga Mianga?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ndonga_Mianga", "seq": "23,35", "label": "Ndonga Mianga"}], "predicate mapping": [], "id": "f0f45ed050d342e9bfdffc12670f1bfc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }", "question": "Give me a count of everything under the archipelago, where Papeete is the biggest town.", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Papeete", "seq": "59,65", "label": "Papeete"}], "predicate mapping": [], "id": "3922223c92bd4c62a2b341fe8c73879c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri } ", "question": "Name the nearest city to  Lake Victoria?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Victoria", "seq": "26,38", "label": "Lake Victoria"}], "predicate mapping": [], "id": "a622cb449bde410c8c3e8c5c11a18ebb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Domenico_Modugno> <http://dbpedia.org/property/constituency> ?uri } ", "question": "Name the constituency of Domenico Modugno ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Domenico_Modugno", "seq": "25,40", "label": "Domenico Modugno"}], "predicate mapping": [], "id": "416fe4e82425427cb42f2d36b6e64527"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards did the founder of Grameen Bank win?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grameen_Bank", "seq": "31,42", "label": "Grameen Bank"}], "predicate mapping": [], "id": "c77dbf978c4e46a490287a6c82caa7f3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benjamin_Franklin_Terry> <http://dbpedia.org/property/placeofburial> ?uri. <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri} ", "question": "Where is Benjamin Franklin Terry buried, and US Route 59 has a junction?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benjamin_Franklin_Terry", "seq": "9,31", "label": "Benjamin Franklin Terry"}, {"uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas", "seq": "45,59", "label": "US Route 59 has"}], "predicate mapping": [], "id": "f86ad7519a244286acaa2a1bf42446cf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_S._Langer> <http://dbpedia.org/ontology/doctoralStudent> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "question": "Where were the doctoral students of James Langer born?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_S._Langer", "seq": "36,47", "label": "James Langer"}], "predicate mapping": [], "id": "d50f2ea2f8f0440c87444bcf085f6899"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/John_Trumbull> }", "question": "Was A foreign policy on freedom covered by John Trumbull?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom", "seq": "4,30", "label": "A foreign policy on freedom"}, {"uri": "http://dbpedia.org/resource/John_Trumbull", "seq": "43,55", "label": "John Trumbull"}], "predicate mapping": [], "id": "e6f3d395b66f485cb8901bfbcb1c4c0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter-John_Vettese> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Who is the writer of the singles whose producer is Peter-John Vettese?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter-John_Vettese", "seq": "51,68", "label": "Peter-John Vettese"}], "predicate mapping": [], "id": "2cb981d2ba4a480c9a1e0f51b6478f22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What company's leader is Edwin Catmull?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Catmull", "seq": "25,37", "label": "Edwin Catmull"}], "predicate mapping": [], "id": "9650115540914f179ceb06bf8beef981"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . }", "question": "Eric roth wrote how many screenplays?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Roth", "seq": "0,8", "label": "Eric roth"}], "predicate mapping": [], "id": "47255156e21340db90b083e6f65946bd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri. <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri} ", "question": "What is the common race of the Martin Molony and race of the Coneygree ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Molony", "seq": "31,43", "label": "Martin Molony"}, {"uri": "http://dbpedia.org/resource/Coneygree", "seq": "61,69", "label": "Coneygree"}], "predicate mapping": [], "id": "df00f7dce8864849b265e3d1128d8dd8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are some companies which are founded in Dallas Jurisdiction?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas", "seq": "45,50", "label": "Dallas"}], "predicate mapping": [], "id": "4b257aeff6b340ebb07ca27538749ed4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Society>  . }", "question": "How many have been awarded by the Royal Society?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "34,46", "label": "Royal Society"}], "predicate mapping": [], "id": "538b8fc2d6e54c939c970590874a350e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law> . ?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "Which philosophy journal has compiler as Stephen Law ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_Law", "seq": "41,51", "label": "Stephen Law"}, {"uri": "http://dbpedia.org/resource/Philosophy", "seq": "6,15", "label": "philosophy"}], "predicate mapping": [], "id": "01710e1b53c94aaf85bd50e8344efefa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gervase_Helwys> <http://dbpedia.org/ontology/opponent> ?uri } ", "question": "Who are the opponents of Gervase Helwys?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gervase_Helwys", "seq": "25,38", "label": "Gervase Helwys"}], "predicate mapping": [], "id": "a9e1cae212ba4c2699ddcc5aa1686c2e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Raamlaxman> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Who is the starring of the movies such that music is by Raamlaxman?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raamlaxman", "seq": "56,65", "label": "Raamlaxman"}], "predicate mapping": [], "id": "2d7035345c0c4b94aa94c1b42ec57b41"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez> . ?x <http://dbpedia.org/property/international> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "In which country is there a political party whose leader is Jose Cha Cha Jimenez?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez", "seq": "60,79", "label": "Jose Cha Cha Jimenez"}], "predicate mapping": [], "id": "023818b03dce457481b4859b9adf89c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/RKO_Pictures", "seq": "31,42", "label": "RKO Pictures"}, {"uri": "http://dbpedia.org/resource/Bernard_Herrmann", "seq": "70,85", "label": "Bernard Herrmann"}], "predicate mapping": [], "id": "bb9861a2275446428e974e73dd1e1b1b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Red_Ahead> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}", "question": "What is the headquarters of the public transit system which is the section of Red Ahead ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_Ahead", "seq": "78,86", "label": "Red Ahead"}], "predicate mapping": [], "id": "7f75c46b604847b88c64d3d6fffa098b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri} ", "question": "Which mascot of Celal Bayer university is also the nickname of kore Presbyterian Theological Seminar ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary", "seq": "63,99", "label": "kore Presbyterian Theological Seminar"}, {"uri": "http://dbpedia.org/resource/Celal_Bayar_University", "seq": "16,37", "label": "Celal Bayer university"}], "predicate mapping": [], "id": "aa123035cddf49b293de9bdddbd4fcf9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }", "question": "Where is the head quarters of the owner of Hamline Avenue?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)", "seq": "43,56", "label": "Hamline Avenue"}], "predicate mapping": [], "id": "6a5afff8b79e41ab814b7600af7ca45a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Yasmin_Paige> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Give me some series related to the one which had Yasmin Paige in them.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yasmin_Paige", "seq": "49,60", "label": "Yasmin Paige"}], "predicate mapping": [], "id": "f2e2e1b4a67049c092236c11cfbef795"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Kokott> <http://dbpedia.org/ontology/relation> ?uri } ", "question": "With whom is Heinz Kokott a relative to who also served Nazi Army?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heinz_Kokott", "seq": "13,24", "label": "Heinz Kokott"}], "predicate mapping": [], "id": "32db83b5ad5b4e198ff2e7e7eee6f790"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Jann_Wenner> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Which magazine's publisher is Jann Wenner and founded by Ralph J. Gleason?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jann_Wenner", "seq": "30,40", "label": "Jann Wenner"}, {"uri": "http://dbpedia.org/resource/Ralph_J._Gleason", "seq": "57,72", "label": "Ralph J. Gleason"}], "predicate mapping": [], "id": "5dcd0eb818614883b22111575756bd54"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "Name the mountain whose range is Sierra Nevada (U.S.) and parent mountain peak is Nevado de Toluca?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "seq": "33,45", "label": "Sierra Nevada"}, {"uri": "http://dbpedia.org/resource/Nevado_de_Toluca", "seq": "82,97", "label": "Nevado de Toluca"}], "predicate mapping": [], "id": "838eaa04147b4081beae5daad514fb0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show's network  is BBC HD and is related to Doctor Who Confidential?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "36,41", "label": "BBC HD"}, {"uri": "http://dbpedia.org/resource/Doctor_Who_Confidential", "seq": "61,83", "label": "Doctor Who Confidential"}], "predicate mapping": [], "id": "f3ad79c40d524db4b41288872c95ba91"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sings_Kristofferson> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Milk_Cow_Blues> <http://dbpedia.org/ontology/artist> ?uri . }", "question": "Who is the artist of Sings Kristofferson and also performed Milk Cow Blues atleast once?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sings_Kristofferson", "seq": "21,39", "label": "Sings Kristofferson"}, {"uri": "http://dbpedia.org/resource/Milk_Cow_Blues", "seq": "60,73", "label": "Milk Cow Blues"}], "predicate mapping": [], "id": "0d1d38a04dff419b9fb358a190d55004"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}", "question": "What are the towns who have Thesaban system?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thesaban", "seq": "28,35", "label": "Thesaban"}], "predicate mapping": [], "id": "07133019a5a74f7f83b418752c785bbf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Micronesia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "What is the life stance of the ethnic groups related to Micronesia ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Micronesia", "seq": "56,65", "label": "Micronesia"}], "predicate mapping": [], "id": "6658f7d6a2f84f6db5f3da64b9953c8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose producer is Stephen E. Ambrose?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "46,63", "label": "Stephen E. Ambrose"}], "predicate mapping": [], "id": "73bbae8c251d41238b7dcf1aa0e155e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Summer_Time> . ?uri <http://dbpedia.org/property/headquarters> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "List the newspapers whose headquarters's time zone is Central European Summer Time.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Central_European_Summer_Time", "seq": "54,81", "label": "Central European Summer Time"}], "predicate mapping": [], "id": "d3ea98fc91814fd2b7993a9312f41010"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)> . ?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's  opening theme is The Best of Both Worlds (song) and executive producer is Steven Peterman?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)", "seq": "34,56", "label": "The Best of Both Worlds"}, {"uri": "http://dbpedia.org/resource/Steven_Peterman", "seq": "91,105", "label": "Steven Peterman"}], "predicate mapping": [], "id": "53a9beca92384cdda4e74205f5800cb0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "What is the magazine which have been  founded by Ralph J. Gleason?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ralph_J._Gleason", "seq": "49,64", "label": "Ralph J. Gleason"}], "predicate mapping": [], "id": "b8eaafc1020c44c7b96f49241aafe8a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . }", "question": "Paul Morphy compiled journals of which field?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Morphy", "seq": "0,10", "label": "Paul Morphy"}], "predicate mapping": [], "id": "337774a6b5bc4fb4bdf86ecb5abf0a33"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river ends at  Thames Estuary and North Sea?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thames_Estuary", "seq": "21,34", "label": "Thames Estuary"}, {"uri": "http://dbpedia.org/resource/North_Sea", "seq": "40,48", "label": "North Sea"}], "predicate mapping": [], "id": "bc35238acbbf4e1fa317ccc66299f892"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GANEFO> <http://dbpedia.org/property/hostCity> ?uri } ", "question": "Where was Ganefo hosted?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/GANEFO", "seq": "10,15", "label": "Ganefo"}], "predicate mapping": [], "id": "3f84c71fa3754d4c8efa129eb69a81a7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)> . ?x <http://dbpedia.org/property/name> ?uri }", "question": "Count the number of sports team members  which have player named Matt Williams ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)", "seq": "65,77", "label": "Matt Williams"}], "predicate mapping": [], "id": "3480c793f4804929a97fe292acfa30a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall> . ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder with predecessor as Samuel W. McCall and office in Massachusetts House of Representatives?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_W._McCall", "seq": "43,58", "label": "Samuel W. McCall"}, {"uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives", "seq": "74,111", "label": "Massachusetts House of Representatives"}], "predicate mapping": [], "id": "ba1402357518422281e2d6df50cfbe2e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "How many other awards have been given to people who have won the Golden Globe?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Golden_Globe_Award", "seq": "65,76", "label": "Golden Globe"}], "predicate mapping": [], "id": "da55afc0da0e4b36af66810a1bec956d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mr._Jim's_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }", "question": "Does Mr. Jim's Pizza operate in the pizza industry?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mr._Jim's_Pizza", "seq": "5,19", "label": "Mr. Jim's Pizza"}, {"uri": "http://dbpedia.org/resource/Pizza", "seq": "36,40", "label": "pizza"}], "predicate mapping": [], "id": "87ef3828c73b4021ab723efbb0b64525"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Even-toed_ungulate> . ?uri <http://dbpedia.org/property/mascot> ?x  . }", "question": "List down the schools whose mascot's order is Even-toed ungulate?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Even-toed_ungulate", "seq": "46,63", "label": "Even-toed ungulate"}], "predicate mapping": [], "id": "dba313f8b26847beb6c2826754d55507"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mathematics> . ?x <http://dbpedia.org/ontology/field> ?uri }", "question": "How many other field are there of the scientists whose one of the field is Mathematics ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mathematics", "seq": "75,85", "label": "Mathematics"}], "predicate mapping": [], "id": "5f7d68b6d7c24bd29b84f2fd7fa2d1c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> . }", "question": "Who had  Joe Purcell and Winston Bryant as lieutenants ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Purcell", "seq": "9,19", "label": "Joe Purcell"}, {"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "25,38", "label": "Winston Bryant"}], "predicate mapping": [], "id": "1b7152be06d645fd89cc99c2c1436c63"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ", "question": "What company's founder is Jim Harris?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "seq": "26,35", "label": "Jim Harris"}], "predicate mapping": [], "id": "3cdc8e8ea823409f959acead754885e6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri } ", "question": "In which city is Corringham railway station located?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Corringham_railway_station", "seq": "17,42", "label": "Corringham railway station"}], "predicate mapping": [], "id": "00a22ab72d9d4286a7d3d61c4d67c0b4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Stan_Lee> }", "question": "Did stan lee narrate the incredible hulk tv show?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "seq": "21,39", "label": "the incredible hulk"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "seq": "4,11", "label": "stan lee"}], "predicate mapping": [], "id": "4d935fb5d0694c4fbfba00b5d22705a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}", "question": "How many sports are played in organizations presided by Emanuel de Guzman?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emanuel_de_Guzman", "seq": "56,72", "label": "Emanuel de Guzman"}], "predicate mapping": [], "id": "596f2ecca2be42aea17eb2f3e2bbffd9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Khaleejiya_100.9> . ?x <http://dbpedia.org/property/location> ?uri  . }", "question": "Where do the sister stations of Al Khaleejiya 100.9 play?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Khaleejiya_100.9", "seq": "32,50", "label": "Al Khaleejiya 100.9"}], "predicate mapping": [], "id": "fd3f2656075c476493d51a420c168054"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Harvest_Christian_Center> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Which sports are played in schools affiliated with the Harvest Christian Center?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvest_Christian_Center", "seq": "55,78", "label": "Harvest Christian Center"}], "predicate mapping": [], "id": "74a2300b33df4ad6a44b4184c0c8642d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Master's_Sun> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the religion of the person who is in the cast of Master's Sun> ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Master's_Sun", "seq": "57,69", "label": "Master's Sun>"}], "predicate mapping": [], "id": "654b89b5de0945439a24d12e98348582"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri. <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "What is common between sports played at Fr Agnel School and Jr college, and the genre of Virtual Kasparov?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Kasparov", "seq": "89,104", "label": "Virtual Kasparov"}, {"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "seq": "40,69", "label": "Fr Agnel School and Jr college"}], "predicate mapping": [], "id": "4cb08818578d4dfaa26b1d3490c0610a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California> . }", "question": "Who has official residences at Colts Neck Township and Beverly Hills?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey", "seq": "31,61", "label": "Colts Neck Township and Beverly"}, {"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "seq": "55,67", "label": "Beverly Hills"}], "predicate mapping": [], "id": "efca0e0f9fd34c37abe132b6dec6b3eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "question": "How many different genres of games are produced by Blizzard?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blizzard_Entertainment", "seq": "51,58", "label": "Blizzard"}], "predicate mapping": [], "id": "9f609480ea4647028bd3694a224482f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Shannon_Pot> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river with source as Shannon Pot and its mouth is located in Limerick?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shannon_Pot", "seq": "30,40", "label": "Shannon Pot"}, {"uri": "http://dbpedia.org/resource/Limerick", "seq": "70,77", "label": "Limerick"}], "predicate mapping": [], "id": "a08bb500ab2240118a0e3c00ed317f0b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river flowing through Reading and source place as Gloucestershire ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "31,48", "label": "Reading and source"}, {"uri": "http://dbpedia.org/resource/Gloucestershire", "seq": "59,73", "label": "Gloucestershire"}], "predicate mapping": [], "id": "304ccd0b380a4d59a9dfc01c77cf3ec1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gelnhausen> . ?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Pepperdine_University>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gelnhausen", "seq": "33,42", "label": "Gelnhausen"}, {"uri": "http://dbpedia.org/resource/Pepperdine_University", "seq": "63,83", "label": "Pepperdine University"}], "predicate mapping": [], "id": "ad3dd519fa5749e789a15373b17b25db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/NUbuntu> <http://dbpedia.org/ontology/license> ?uri . }", "question": "What is the common licence of the Frontaccounting and nUbuntu?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frontaccounting", "seq": "34,48", "label": "Frontaccounting"}, {"uri": "http://dbpedia.org/resource/NUbuntu", "seq": "54,60", "label": "nUbuntu"}], "predicate mapping": [], "id": "1a77969a5597407fae22ede47cc281fc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV shows distributor is Broadcast syndication and developed by Brian Graden ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "seq": "69,80", "label": "Brian Graden"}, {"uri": "http://dbpedia.org/resource/Broadcast_syndication", "seq": "30,50", "label": "Broadcast syndication"}], "predicate mapping": [], "id": "cb0fc7a9c56e4298acc19aa91d3d4c8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . }", "question": "Who was in conflicts of Fort Barrancas and Gadsden?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Barrancas", "seq": "24,37", "label": "Fort Barrancas"}, {"uri": "http://dbpedia.org/resource/Fort_Gadsden", "seq": "43,49", "label": "Gadsden"}], "predicate mapping": [], "id": "56d56e554afa47df8316e2975165949d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_H._Immerman> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri . }", "question": "Which university was attended by both Richard H Immerman and Franklin W Olin?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_H._Immerman", "seq": "38,55", "label": "Richard H Immerman"}, {"uri": "http://dbpedia.org/resource/Franklin_W._Olin", "seq": "61,75", "label": "Franklin W Olin"}], "predicate mapping": [], "id": "ba2570473e36467c8a631f60944cd2bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }", "question": "Name someone known for a project involved in the Occupation of Japan?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Occupation_of_Japan", "seq": "49,67", "label": "Occupation of Japan"}], "predicate mapping": [], "id": "2a27443085d84446813f5a30b2152d6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri . }", "question": "What are Monrow Carell Jr Children Hospital and Vanderbilt University Medical Center both affiliated with?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt", "seq": "9,57", "label": "Monrow Carell Jr Children Hospital and Vanderbilt"}, {"uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center", "seq": "48,83", "label": "Vanderbilt University Medical Center"}], "predicate mapping": [], "id": "38c50543e2ca4c8ba2f11406ebb1f0c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/GM_B_platform> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What are some cars which came before the ones on a GM B base?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/GM_B_platform", "seq": "51,59", "label": "GM B base"}], "predicate mapping": [], "id": "5dd1957c2b5c46c4bcb3c8d94b4df437"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name few companies founded in Texas?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "seq": "30,34", "label": "Texas"}], "predicate mapping": [], "id": "74e0b2e3b6864179acc9fd874d6897eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Counterpoint_(horse)> <http://dbpedia.org/property/grandsire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "What is the awards given to the horse whose grandson is the famous Counterpoint?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Counterpoint_(horse)", "seq": "67,78", "label": "Counterpoint"}], "predicate mapping": [], "id": "400f95dfb86547a18c1426b3fc417bb7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/PC-9800_Series> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "what kind of games can I find for PC 9800?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/PC-9800_Series", "seq": "34,40", "label": "PC 9800"}], "predicate mapping": [], "id": "7da5440ab8834b4ca92805e80dd7b5a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Anglo-Frisian_languages> . ?uri <http://dbpedia.org/property/languages> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anglo-Frisian_languages", "seq": "65,86", "label": "Anglo-Frisian language"}], "predicate mapping": [], "id": "786455b1e7fa4fed9f46d49db488e88d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }", "question": "Name all those whose spouses have performed with Tony Bennett?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Bennett", "seq": "49,60", "label": "Tony Bennett"}], "predicate mapping": [], "id": "bd739b63ea0e48d19bbd74153447ff73"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's governor is Charles Willing Byrd and has final resting place in North Bend, Ohio?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "seq": "34,53", "label": "Charles Willing Byrd"}, {"uri": "http://dbpedia.org/resource/North_Bend,_Ohio", "seq": "86,101", "label": "North Bend, Ohio"}], "predicate mapping": [], "id": "ed4dd38195244983a340f07ca5d05529"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What are the books written by the the person who made the Novelas ejemplares?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Novelas_ejemplares", "seq": "58,75", "label": "Novelas ejemplares"}], "predicate mapping": [], "id": "7881083538c54de4a888d1e28df7238c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Anne_Spielberg>  . }", "question": "Whos a famous relative of anne spielberg?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anne_Spielberg", "seq": "26,39", "label": "anne spielberg"}], "predicate mapping": [], "id": "815d064630b3451baa5acb5bedd5e7ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show whose network is NBC and is the subsequent work of Fraiser ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "seq": "34,36", "label": "NBC"}, {"uri": "http://dbpedia.org/resource/Frasier", "seq": "68,74", "label": "Fraiser"}], "predicate mapping": [], "id": "ace6e364c8cc4f1fb0813dc404b6fae6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }", "question": "Does chicago own the washington station on the CTA Blue Line?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)", "seq": "21,38", "label": "washington station"}, {"uri": "http://dbpedia.org/resource/Chicago", "seq": "5,11", "label": "chicago"}], "predicate mapping": [], "id": "9177e0691e8c4848a5237a226aed23d4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Janata_Party> . ?x <http://dbpedia.org/ontology/otherParty> ?uri }", "question": "Give the distinct number of other party of the people which have one of the party as Janata Party ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Janata_Party", "seq": "85,96", "label": "Janata Party"}], "predicate mapping": [], "id": "0ffd6b150c7046af82a01f9b29dbddd6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri } ", "question": "What is the company of Ford Theatre ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Theatre", "seq": "23,34", "label": "Ford Theatre"}], "predicate mapping": [], "id": "966ba5310c7049799db0464434010003"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)> <http://dbpedia.org/property/director> ?uri } ", "question": "List the director of The Adventures of mimi ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)", "seq": "21,42", "label": "The Adventures of mimi"}], "predicate mapping": [], "id": "f77569069e6d41b692071d0350ab2d1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Count the units garrisoned at Arlington County, Virginia.", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_County,_Virginia", "seq": "30,55", "label": "Arlington County, Virginia"}], "predicate mapping": [], "id": "4212ec5b2f564dd58eaf9a18be59d709"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_III_of_Russia> <http://dbpedia.org/property/placeOfBurial> ?uri } ", "question": "Where is the grave of Ivan III of Russia ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivan_III_of_Russia", "seq": "22,39", "label": "Ivan III of Russia"}], "predicate mapping": [], "id": "3aaf4525a6d24e27be8fe037d5ba28c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company founded by Fusajiro Yamauchi gives service as Nintendo Network?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi", "seq": "25,41", "label": "Fusajiro Yamauchi"}, {"uri": "http://dbpedia.org/resource/Nintendo_Network", "seq": "60,75", "label": "Nintendo Network"}], "predicate mapping": [], "id": "b6d929ad2217419984a923785b1dcac2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Oddamavadi> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who designed the bridge in Oddamavadi?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oddamavadi", "seq": "27,36", "label": "Oddamavadi"}], "predicate mapping": [], "id": "ef594c21024c4ec599be2c7e49e10c09"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/David_Pressman> . ?x <http://dbpedia.org/ontology/foundedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}", "question": "List all the co-founders of the non for profit which have founding member as David pressman ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Pressman", "seq": "77,90", "label": "David pressman"}], "predicate mapping": [], "id": "e65f96b6ccf54d99ac963173043c60f4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Den_norske_Bank> <http://dbpedia.org/property/products> ?uri } ", "question": "Name the products of Den norske Bank ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Den_norske_Bank", "seq": "21,35", "label": "Den norske Bank"}], "predicate mapping": [], "id": "33bedb8ae5c1409fb0ba92d69816a355"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "how many companies are located in a spanish speaking region?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_language", "seq": "36,51", "label": "spanish speaking"}], "predicate mapping": [], "id": "b541f708c7fd48ad8eb1c5c9489444e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "What are some US citizens famous for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "17,31", "label": "citizens famous"}], "predicate mapping": [], "id": "88f9b624d17b45edb9e1ec11cdb1db22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "Which genre of books are published by Random House?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Random_House", "seq": "38,49", "label": "Random House"}], "predicate mapping": [], "id": "246e38b975c94fdbbbe94ec51f1540eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose child is Lori Black and predecessor is Henry E. Catto Jr ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "seq": "38,47", "label": "Lori Black"}, {"uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.", "seq": "68,84", "label": "Henry E. Catto Jr"}], "predicate mapping": [], "id": "c919ac2e708f41ee93b91d3731428939"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}", "question": "How many golf players are there in Arizona State Sun Devils ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils", "seq": "35,58", "label": "Arizona State Sun Devils"}], "predicate mapping": [], "id": "279ba468ad7c402ea5b91c6b11a7dd1c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Wyoming> } ", "question": "Which rivers start in Wyoming?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wyoming", "seq": "22,28", "label": "Wyoming"}], "predicate mapping": [], "id": "5e356a23a8734f9d987c09850314cf36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri . }", "question": "What is the common profession of William Luther Hill and Claiborne Pell?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Luther_Hill", "seq": "33,51", "label": "William Luther Hill"}, {"uri": "http://dbpedia.org/resource/Claiborne_Pell", "seq": "57,70", "label": "Claiborne Pell"}], "predicate mapping": [], "id": "95c977845c1d40f387b0a56de11b73b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie whose director is Ridley Scott and it's music composer is Vangelis?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ridley_Scott", "seq": "33,44", "label": "Ridley Scott"}, {"uri": "http://dbpedia.org/resource/Vangelis", "seq": "73,80", "label": "Vangelis"}], "predicate mapping": [], "id": "9c030631b627435492811c991fff3fe5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeffrey_Werleman> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/ontology/country> ?uri . }", "question": "What country is Jeffrey Werleman from, which also has the American Mediterranean Sea?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeffrey_Werleman", "seq": "16,31", "label": "Jeffrey Werleman"}, {"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "seq": "58,83", "label": "American Mediterranean Sea"}], "predicate mapping": [], "id": "c5ddb0c77d054690b00ec818448e108c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Khmer_Issarak> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>}", "question": "The Prime minister who worked in the Khmer Issarak follows which religion?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Khmer_Issarak", "seq": "37,49", "label": "Khmer Issarak"}], "predicate mapping": [], "id": "a785e76da4ec49cea487642d65c77144"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ", "question": "Who coached the marquet golden eagels during 2013", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "seq": "16,48", "label": "marquet golden eagels during 2013"}], "predicate mapping": [], "id": "0cec5868cc27426382d0ebfcbf2272bf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Who is the musical artist worked for labels Celluloid Records and Victor Entertainment?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Celluloid_Records", "seq": "44,60", "label": "Celluloid Records"}, {"uri": "http://dbpedia.org/resource/Victor_Entertainment", "seq": "66,85", "label": "Victor Entertainment"}], "predicate mapping": [], "id": "25b560314df748389e244a17213dbb52"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lahpet> <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Tea> }", "question": "Is Tea the main ingredient of Lahpet?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lahpet", "seq": "30,35", "label": "Lahpet"}, {"uri": "http://dbpedia.org/resource/Tea", "seq": "3,5", "label": "Tea"}], "predicate mapping": [], "id": "abbf6d791be14816875ef172d71668dd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri. <http://dbpedia.org/resource/Gary_Holder-Winfield> <http://dbpedia.org/ontology/militaryBranch> ?uri} ", "question": "Which tenant of New Sanno Hotel is the military branch of the Gary Holder-Winfield ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Sanno_Hotel", "seq": "16,30", "label": "New Sanno Hotel"}, {"uri": "http://dbpedia.org/resource/Gary_Holder-Winfield", "seq": "62,81", "label": "Gary Holder-Winfield"}], "predicate mapping": [], "id": "f659b3e1ce264120a3d7649054b18001"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Europe> . ?x <http://dbpedia.org/property/destinations> ?uri }", "question": "How many destinations are covered by the airlines which also serves Europe ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Europe", "seq": "68,73", "label": "Europe"}], "predicate mapping": [], "id": "2110869943d4431c80ed60a4598d5f4a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Long_Island>  . }", "question": "How many famous people are born in Long Island?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Long_Island", "seq": "35,45", "label": "Long Island"}], "predicate mapping": [], "id": "7025f720c0ff41419cef7e20b14a8d8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Jason_Hayne> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OrganisationMember>}", "question": "List the other members of the team where Jason Hayne currently plays?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Hayne", "seq": "41,51", "label": "Jason Hayne"}], "predicate mapping": [], "id": "25b1049cd35247ecb0c2f42335ca48a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/St_George's_Hospital> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . }", "question": "Whose academic advisor works at the St George's Hospital?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/St_George's_Hospital", "seq": "36,55", "label": "St George's Hospital"}], "predicate mapping": [], "id": "466de8f3348242efa607641fbb8cfd7f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2011\u201312_Russian_Premier_League> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }", "question": "List the home stadiums of the teams in the Russian Premier League?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/2011\u201312_Russian_Premier_League", "seq": "43,64", "label": "Russian Premier League"}], "predicate mapping": [], "id": "cc49d89995894cb9af4efa08186ac9b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What are the countries for which History of Trier principal to?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/History_of_Trier", "seq": "33,48", "label": "History of Trier"}], "predicate mapping": [], "id": "6979c92554e94d2f9801bdd2da60d29e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/river> <http://dbpedia.org/resource/Awash_River> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}", "question": "In which country is there a dam on the Awash river?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Awash_River", "seq": "39,49", "label": "Awash river"}], "predicate mapping": [], "id": "28fb6009d3174bf0a9761f1dc0d93da9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/1211_Avenue_of_the_Americas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/1211_Avenue_of_the_Americas", "seq": "50,76", "label": "1211 Avenue of the Americas"}], "predicate mapping": [], "id": "f068beeb6bd0423cb18dd641ec14bc2f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose cinematographer is Gregg Toland?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregg_Toland", "seq": "45,56", "label": "Gregg Toland"}], "predicate mapping": [], "id": "c782fe8362e4411692072d564ba4fedb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who is the person who are on the board of Freedom of the City?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Freedom_of_the_City", "seq": "42,60", "label": "Freedom of the City"}], "predicate mapping": [], "id": "6bb6210d9cac47ddaa5e12e8869fdcd5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Chris-Craft_Industries> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the sitcoms whose network's owning company is Chris-Craft Industries?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris-Craft_Industries", "seq": "51,72", "label": "Chris-Craft Industries"}], "predicate mapping": [], "id": "e9433939da964198814e9dcd3e3cdc47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "question": "Which astronauts went on the Gemini 8 mission?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gemini_8", "seq": "29,36", "label": "Gemini 8"}], "predicate mapping": [], "id": "dbc798f969d840c7b737048f657342d2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lightning_McQueen> <http://dbpedia.org/ontology/voice> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "How many developers have games where I can hear Lightning McQueen?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lightning_McQueen", "seq": "48,64", "label": "Lightning McQueen"}], "predicate mapping": [], "id": "00da309171bc4424aad2bbb3071aee17"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Strontium_90_(band)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the television shows whose Composers are associated with Strontium 90 ?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Strontium_90_(band)", "seq": "62,73", "label": "Strontium 90"}], "predicate mapping": [], "id": "b57a708ebd054204b4816ab7fb3e1c94"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri } ", "question": "List the ingredient of Blodpalt ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blodpalt", "seq": "23,30", "label": "Blodpalt"}], "predicate mapping": [], "id": "8bba670b59bb421ca58a524a0c474e00"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Buddhism> }", "question": "Does Caroline Augusta Foley Rhys Davids study Buddhism?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids", "seq": "5,38", "label": "Caroline Augusta Foley Rhys Davids"}, {"uri": "http://dbpedia.org/resource/Buddhism", "seq": "46,53", "label": "Buddhism"}], "predicate mapping": [], "id": "115415a95f22482aa6e5441ccf0b6f31"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bengali_in_Platforms> <http://dbpedia.org/ontology/artist> ?uri } ", "question": "Who is the performer of Bengali in Platforms ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bengali_in_Platforms", "seq": "24,43", "label": "Bengali in Platforms"}], "predicate mapping": [], "id": "89689724b652439cbc83fd0be32e637c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }", "question": "In how many other states do people live, whose languages are spoken in Nebraska?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nebraska", "seq": "71,78", "label": "Nebraska"}], "predicate mapping": [], "id": "4d672dceaf7f4e9382ae34c3623f7b85"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }", "question": "Who founded the city where First Church of Christ, Scientist is located?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)", "seq": "27,59", "label": "First Church of Christ, Scientist"}], "predicate mapping": [], "id": "366d5c6e16434f55ad841357ad55f327"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thomas_Secunda> <http://dbpedia.org/ontology/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "Who is the owner of the bank where Thomas Secunda works ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Secunda", "seq": "35,48", "label": "Thomas Secunda"}], "predicate mapping": [], "id": "00b85c55b2d649c397d73d0e4d2895b8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Peanuts_Movie>  . }", "question": "What are some fictional characters whose voice is in the peanuts movie?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Peanuts_Movie", "seq": "53,69", "label": "the peanuts movie"}], "predicate mapping": [], "id": "6b6b25414e6d41a79396ddd1c583fe07"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2001_Speedway_Ekstraliga> <http://dbpedia.org/property/title> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "What country had the title of 2001 Speedway Ekstraliga ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/2001_Speedway_Ekstraliga", "seq": "30,53", "label": "2001 Speedway Ekstraliga"}], "predicate mapping": [], "id": "a5254aca3b244fa1a1736835088e92ea"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ", "question": "Name the team for which Cam Plante played for which were also the tenants of MasterCard center ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cam_Plante", "seq": "24,33", "label": "Cam Plante"}, {"uri": "http://dbpedia.org/resource/MasterCard_Centre", "seq": "77,93", "label": "MasterCard center"}], "predicate mapping": [], "id": "24e7a1c8ce674304a0400059c245e3d3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Raptors_905> . ?x <http://dbpedia.org/ontology/tenant> ?uri }", "question": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raptors_905", "seq": "82,92", "label": "Raptors 905"}], "predicate mapping": [], "id": "9121c4fcd51b4533a93936728a6c01cf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri } ", "question": "Where is Carmel Winery?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carmel_Winery", "seq": "9,21", "label": "Carmel Winery"}], "predicate mapping": [], "id": "89ed257c1a244e339c0b5129de2cbce9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ireland> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "In how many places have Irishmen died?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ireland", "seq": "33,36", "label": "died"}], "predicate mapping": [], "id": "241bdbc0cd074cc2963509e47a0bc547"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Nea_Smyrni_Stadium> . ?x <http://dbpedia.org/property/stadium> ?uri  . }", "question": "List the stadium of the teams which uses Nea Smyrni  as one of the stadium ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nea_Smyrni_Stadium", "seq": "41,58", "label": "Nea Smyrni  as one"}], "predicate mapping": [], "id": "a7070d6a40cf48d4bf91099e23350ddf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ", "question": "What awards have been awarded both to Ingmar bergman and James O'Brien?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ingmar_Bergman", "seq": "38,51", "label": "Ingmar bergman"}, {"uri": "http://dbpedia.org/resource/James_F._O'Brien", "seq": "57,69", "label": "James O'Brien"}], "predicate mapping": [], "id": "4df17f35aff7484b8f81fb0f1fafd50f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }", "question": "List the colonel with branch as Militia ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Militia", "seq": "32,38", "label": "Militia"}, {"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "seq": "9,15", "label": "colonel"}], "predicate mapping": [], "id": "378830c0afdf4906b1f824f35f822318"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies are located in Toronto ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "34,40", "label": "Toronto"}], "predicate mapping": [], "id": "bc0a6b36790b465ea463c2ec3ead0fda"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mike_Salmon> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/chairman> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "Name the chairman of the soccer club for which Mike Salmon currently plays?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mike_Salmon", "seq": "47,57", "label": "Mike Salmon"}], "predicate mapping": [], "id": "0ce4ccee1f484ba7b18881040f845d12"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Julius_Caesar> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Who is a successor of Kingship whose parents were Julius Caesar?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julius_Caesar", "seq": "50,62", "label": "Julius Caesar"}], "predicate mapping": [], "id": "2c3ccc326827477db7ba435118944617"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/basedOn> <http://dbpedia.org/resource/Mary_Poppins> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "Who wrote the musical based on Mary Poppins?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Poppins", "seq": "31,42", "label": "Mary Poppins"}], "predicate mapping": [], "id": "e6871a80517d4e3a993fc667347d30aa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri} ", "question": "Which draft team of bob Macmillan is also the prospect team of Mikhail Pashnin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mikhail_Pashnin", "seq": "63,77", "label": "Mikhail Pashnin"}, {"uri": "http://dbpedia.org/resource/Bob_MacMillan", "seq": "20,32", "label": "bob Macmillan"}], "predicate mapping": [], "id": "444ae098996b47649d2dbec98edd52a6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "Which fields are covered by academic journals in the US?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "6,15", "label": "fields are"}], "predicate mapping": [], "id": "a60454067d7b4592bc6169e7a7d9a6cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean> . ?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What river ends in Indian Ocean and also starts somewhere in Zambia?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Ocean", "seq": "19,30", "label": "Indian Ocean"}, {"uri": "http://dbpedia.org/resource/Zambia", "seq": "61,66", "label": "Zambia"}], "predicate mapping": [], "id": "198cb4233ecc4e64a23d2ce9e2c20cc9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Panathinaikos_F.C.> . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Where do the people, famous for the Panathinaikos FC reside?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Panathinaikos_F.C.", "seq": "36,51", "label": "Panathinaikos FC"}], "predicate mapping": [], "id": "7f2f6e1a38ab4f07be61d11e39732b54"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . }", "question": "How many people have voiced characters sculpted by Clamp?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clamp_(manga_artists)", "seq": "51,55", "label": "Clamp"}], "predicate mapping": [], "id": "6d4c25756b6346589f78aefa48a0d4ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "To which company does Raymond Conner is critical to?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "seq": "22,35", "label": "Raymond Conner"}], "predicate mapping": [], "id": "a78468ab14af48d8a7e5c8649b7b7da6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Dominican_Republic> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "question": "What team has  players  born in Dominican Republic ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dominican_Republic", "seq": "32,49", "label": "Dominican Republic"}], "predicate mapping": [], "id": "04f9cbe07a5d4f17bf09a6c7eca5a2b4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/El\u017cbieta_Czartoryska_(1905\u20131989)> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Charles_Journet> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "What is the death place of the Elbieta Czartoryska which is also place of birth of the Charles Journet", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/El\u017cbieta_Czartoryska_(1905\u20131989)", "seq": "31,49", "label": "Elbieta Czartoryska"}, {"uri": "http://dbpedia.org/resource/Charles_Journet", "seq": "87,101", "label": "Charles Journet"}], "predicate mapping": [], "id": "46ae412ded1647d0af1f52f6db1953d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Olin_Corporation> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "What is the university attended by the baseball player who's known for Olin Corporation?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Olin_Corporation", "seq": "71,86", "label": "Olin Corporation"}], "predicate mapping": [], "id": "c352251c728144d3a1114a020b3abb11"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippe_Tesni\u00e8re> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/placeOfDeath> ?uri . }", "question": "In which country did Philippe tesnire and judson huss die?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philippe_Tesni\u00e8re", "seq": "21,36", "label": "Philippe tesnire"}, {"uri": "http://dbpedia.org/resource/Judson_Huss", "seq": "42,52", "label": "judson huss"}], "predicate mapping": [], "id": "be2d43507d27490580cef0ab4aca9355"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows are voiced be US citizens?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "16,27", "label": "voiced be US"}], "predicate mapping": [], "id": "ce1b21f49b74424fb4c6ab11cc56fedd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jim_Dooley> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmusementParkAttraction>}", "question": "Who has starred in the amusement park attractions where Jim Dooley was performing?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Dooley", "seq": "56,65", "label": "Jim Dooley"}], "predicate mapping": [], "id": "9d8c57c836a840a28c591ca7d8a2de8d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Derg> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ethiopia> }", "question": "Was Derg the anthem of Ethopia?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Derg", "seq": "4,7", "label": "Derg"}, {"uri": "http://dbpedia.org/resource/Ethiopia", "seq": "23,29", "label": "Ethopia"}], "predicate mapping": [], "id": "e56c54175e0941fd9afe385c983ce16a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What cities does the river goes through, whose tributary is the little black river in Arkansas?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)", "seq": "64,81", "label": "little black river"}], "predicate mapping": [], "id": "eaf2ccf4da0d4dd99bf39224e317dcf1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Mario_Oliverio> } ", "question": "what region is governed by Mario Olivero?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mario_Oliverio", "seq": "27,39", "label": "Mario Olivero"}], "predicate mapping": [], "id": "ea7a3cc64bcc4334ad16e18130602c7f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Joker_(comics)> . ?x <http://dbpedia.org/property/characters> ?uri }", "question": "How many other characters are there of the plays which has a  characters name Joker (comics) ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joker_(comics)", "seq": "78,82", "label": "Joker"}], "predicate mapping": [], "id": "7dfa4ea0de86402fadf35b56230094d7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/St._Viator_High_School> <http://dbpedia.org/property/teamName> ?uri } ", "question": "What is the Team Name  of St. Viator High School ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Viator_High_School", "seq": "26,47", "label": "St. Viator High School"}], "predicate mapping": [], "id": "b86a96a710634f0c85c57c051dbd247d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri } ", "question": "List the battles fought by  Ali Habib Mahmud ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud", "seq": "28,43", "label": "Ali Habib Mahmud"}], "predicate mapping": [], "id": "1b0b90cd44a24c30a8e58ca7fe099d30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Outlawz> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "What is the label of the singles whose group is Outlawz ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Outlawz", "seq": "48,54", "label": "Outlawz"}], "predicate mapping": [], "id": "9bee0af78e8640ebb9e0835aab1fbf80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Boston_Bruins> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "For how many other teams have the former players of Boston Bruins played?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston_Bruins", "seq": "52,64", "label": "Boston Bruins"}], "predicate mapping": [], "id": "4a4e462a65d545da8ed589257c9a7b03"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "Count the different origins of members of the Vitis Vinifera species.", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "seq": "46,59", "label": "Vitis Vinifera"}], "predicate mapping": [], "id": "96454da162fa47f48d85f23ed72f4933"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/ontology/author> ?uri } ", "question": "Who is the author of Karakuri Dji Ultimo ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "seq": "21,39", "label": "Karakuri Dji Ultimo"}], "predicate mapping": [], "id": "1aee4c637a91415f9d690c4c5315ded9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "List the destinations of the airlines which also serves Mediterranean  Sea ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "56,73", "label": "Mediterranean  Sea"}], "predicate mapping": [], "id": "f0517726b79e40179b9458dd79aa9218"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2d_Command_and_Control_Squadron> <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Colorado> }", "question": "Was the  2d Command and Control Squadron barracked in Colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/2d_Command_and_Control_Squadron", "seq": "9,39", "label": "2d Command and Control Squadron"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "54,61", "label": "Colorado"}], "predicate mapping": [], "id": "ca07f5bdb8504d5eb9f7042cf60590a6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Manchester_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Where do the airlines garrisoned at Manchester airport fly to?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manchester_Airport", "seq": "36,53", "label": "Manchester airport"}], "predicate mapping": [], "id": "4c039e3d1eab4b4e906e046cc3096bbc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Camp_Nou> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Name the members of youth clubs which have Camp Nou as their homeground.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Camp_Nou", "seq": "43,50", "label": "Camp Nou"}], "predicate mapping": [], "id": "5600cf1071264310a057ac57ba802779"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hohenau,_Paraguay> <http://dbpedia.org/ontology/founder> ?uri } ", "question": "Who is the founder of Hohenau, Paraguay?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hohenau,_Paraguay", "seq": "22,38", "label": "Hohenau, Paraguay"}], "predicate mapping": [], "id": "a813050ed3c340158c9e4c5fbb61fb8f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Doctor_Who_Extra> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the show related to the which was followed by Doctor Who Extra?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_Who_Extra", "seq": "51,66", "label": "Doctor Who Extra"}], "predicate mapping": [], "id": "09ec259ff20c48b09885b7efccb5acd0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/American_Hockey_League> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri }", "question": "Count the number teams which have  former ice hockey players which also included American Hockey League ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Hockey_League", "seq": "81,102", "label": "American Hockey League"}], "predicate mapping": [], "id": "76d7c51e723d48af9852d33633d70572"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1951_Asian_Games> <http://dbpedia.org/property/hostCity> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the largest city of the country which hosted the 1951 Asian Games?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/1951_Asian_Games", "seq": "57,72", "label": "1951 Asian Games"}], "predicate mapping": [], "id": "d0946844e189450aadee011b3a6e2ac5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri } ", "question": "Who gives the license of WXXV-DT2 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WXXV-DT2", "seq": "25,32", "label": "WXXV-DT2"}], "predicate mapping": [], "id": "02bb53dca86a4babb87a656db5452944"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri. <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri} ", "question": "What is the result of the GazaIsrael conflict is also  the  place of the Qaqun?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gaza\u2013Israel_conflict", "seq": "26,44", "label": "GazaIsrael conflict"}, {"uri": "http://dbpedia.org/resource/Qaqun", "seq": "73,77", "label": "Qaqun"}], "predicate mapping": [], "id": "03e2743086c3467287d376e6e7e01dea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . }", "question": "Members of how many political parties have died in Delhi?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Delhi", "seq": "51,55", "label": "Delhi"}], "predicate mapping": [], "id": "7a22387ad6c34f20a9681b0d18d27390"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "To how many places does the airlines fly, whose head office is located at the Gatwick Airport?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gatwick_Airport", "seq": "78,92", "label": "Gatwick Airport"}], "predicate mapping": [], "id": "80727b167d9247f4a7228327aa7d521a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . }", "question": "Which political figures were awarded Screen Actors Guild Life Achievement Award?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award", "seq": "37,78", "label": "Screen Actors Guild Life Achievement Award"}], "predicate mapping": [], "id": "fb1cfb6030934cd2843217941b60cbe7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Faisal_Aman_Khan> . ?x <http://dbpedia.org/property/recorded> ?uri  . }", "question": "Where are the movies directed by Faisal Aman Khan recorded?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Faisal_Aman_Khan", "seq": "33,48", "label": "Faisal Aman Khan"}], "predicate mapping": [], "id": "ff50d4217d0d43c69bb66a163247c4f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/National_Geographic_(magazine)> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Photographer>}", "question": "Where do current famous NatGeo photographers live?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Geographic_(magazine)", "seq": "24,43", "label": "NatGeo photographers"}], "predicate mapping": [], "id": "6665d7d8a4f34fc1953ceda037ad3451"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Italy> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "How many awards have been given to Italians?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Italy", "seq": "35,42", "label": "Italians"}], "predicate mapping": [], "id": "0e7a98d81f2644ccad9cf21e77378c3b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . }", "question": "How many different layouts do cars designed by Oliver Boulay have?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Olivier_Boulay", "seq": "47,59", "label": "Oliver Boulay"}], "predicate mapping": [], "id": "91feed339fa040e486755c343500f7d1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Malaysia> }", "question": "Is Hyundai Lavita assembled in Malaysia?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "seq": "3,16", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Malaysia", "seq": "31,38", "label": "Malaysia"}], "predicate mapping": [], "id": "576ea9f202d7463cb793f77628511e97"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Brian_d'Arcy_James> . ?x <http://dbpedia.org/property/guests> ?uri }", "question": "How many other Guests are there of the television episodes whose Guests is Brian d'Arcy James ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_d'Arcy_James", "seq": "75,92", "label": "Brian d'Arcy James"}], "predicate mapping": [], "id": "f018611c46d2443ca03755ae47d1568b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cries_and_Whispers> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What awards have the narrator of the Cries and Whispers won?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cries_and_Whispers", "seq": "37,54", "label": "Cries and Whispers"}], "predicate mapping": [], "id": "d7b3b5d412234a01aa50b7d8d3365a20"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Name the software which has been developed by John Fanning ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Fanning_(businessman)", "seq": "46,57", "label": "John Fanning"}], "predicate mapping": [], "id": "b3a55c2d774b4ae5b6890b7ae5cf5d5e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }", "question": "What are the cities located on the sea into which the Aegean Sea flows?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aegean_Sea", "seq": "54,63", "label": "Aegean Sea"}], "predicate mapping": [], "id": "2b59ba028c34416390816c7c18f84230"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Pozna\u0144> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "List the shrines of the saint whose one of the shrine is Ponza ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pozna\u0144", "seq": "57,61", "label": "Ponza"}], "predicate mapping": [], "id": "cf7aca2e48a445299efbf5664c867e8e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri. <http://dbpedia.org/resource/Michel_Frutschi> <http://dbpedia.org/property/birthPlace> ?uri} ", "question": "Whichi  burial place of the Henri, Duke of Rohan is also the birth place of Michel Frutschi ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan", "seq": "28,47", "label": "Henri, Duke of Rohan"}, {"uri": "http://dbpedia.org/resource/Michel_Frutschi", "seq": "76,90", "label": "Michel Frutschi"}], "predicate mapping": [], "id": "9056e4b74f654d5ea69fefdc6992e717"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Dalilah_Sappenfield> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }", "question": "Who is the former partner of the pupil of Dalilah Sappenfield?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dalilah_Sappenfield", "seq": "42,60", "label": "Dalilah Sappenfield"}], "predicate mapping": [], "id": "1422749d46f24fb7bf292b5370dcae01"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Morphine>  . }", "question": "Who died due to Morphine ?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Morphine", "seq": "16,23", "label": "Morphine"}], "predicate mapping": [], "id": "44bacf63913b413c97f15d7f4de91547"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "How many mammals are in the Chordate phylum?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chordate", "seq": "28,35", "label": "Chordate"}], "predicate mapping": [], "id": "784fa60a6196464d8a6c45f97733c61f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people were opponents of the ones buried in the tower of London?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tower_of_London", "seq": "57,71", "label": "tower of London"}], "predicate mapping": [], "id": "8f2af1e74b9f40ac84e66b6aea4f3770"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Jim_Wylie> <http://dbpedia.org/ontology/university> ?uri . }", "question": "Name the common university of the Cardinal and Jim Wylie?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanford_Cardinal", "seq": "30,41", "label": "the Cardinal"}, {"uri": "http://dbpedia.org/resource/Jim_Wylie", "seq": "47,55", "label": "Jim Wylie"}], "predicate mapping": [], "id": "dbf6b1fd3ef142aa8fa7dadd70dcd502"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Southwest_African_lion> <http://dbpedia.org/ontology/species> ?uri } ", "question": "Name the species of Southwest African lion ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Southwest_African_lion", "seq": "20,41", "label": "Southwest African lion"}], "predicate mapping": [], "id": "ac98a0220f7340f187466f3e2d99aab4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Ursula_H\u00e4nle> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}", "question": "In which country did the planes designed by Ursula Hanle originate?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ursula_H\u00e4nle", "seq": "44,55", "label": "Ursula Hanle"}], "predicate mapping": [], "id": "abc719a6e7a1435ba3b1472897a5249c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Williams_Grand_Prix_Engineering> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "List the pole drivers in the grand prixes where Williams Grand Prix Engineering was a first team?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Williams_Grand_Prix_Engineering", "seq": "48,78", "label": "Williams Grand Prix Engineering"}], "predicate mapping": [], "id": "b1760c005bc747f78ec34be2a730e01b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "From how many different institutes have the members of Judge Advocate General's Corps graduated?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army", "seq": "55,94", "label": "Judge Advocate General's Corps graduated"}], "predicate mapping": [], "id": "e8328bd8391f448d93a1ea6a456e32dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "Which newspaper owned by Schibsted is published in Swedish ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "seq": "51,57", "label": "Swedish"}, {"uri": "http://dbpedia.org/resource/Schibsted", "seq": "25,33", "label": "Schibsted"}], "predicate mapping": [], "id": "d06c3f86937f45449b1e81e9448f48ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many different places have ehtics philosophers died?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethics", "seq": "34,39", "label": "ehtics"}], "predicate mapping": [], "id": "f2abcff9c290486ab8f1affd60f412f8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Inthakin> <http://dbpedia.org/ontology/type> ?uri} ", "question": "What political ideology of the Palang Dharma Party is relegion of Inthakin?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "seq": "31,49", "label": "Palang Dharma Party"}, {"uri": "http://dbpedia.org/resource/Inthakin", "seq": "66,73", "label": "Inthakin"}], "predicate mapping": [], "id": "c7bac34e1c854968971d32c09b321bf0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ", "question": "Where did Fort Lauderdale Strikers season of 16 take place?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season", "seq": "10,40", "label": "Fort Lauderdale Strikers season"}], "predicate mapping": [], "id": "34130d2812d84c70bdaaf30ade9a2204"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are some relatives of the people who fought in Operation Barbarossa?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Barbarossa", "seq": "52,71", "label": "Operation Barbarossa"}], "predicate mapping": [], "id": "a65384e0c6d64302868aa3c04c47d3e9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Joe_Green_(entrepreneur)> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}", "question": "What are the other key people of the non-profit organisations whose one of the  key person is Joe Green ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Green_(entrepreneur)", "seq": "94,102", "label": "Joe Green"}], "predicate mapping": [], "id": "8b97d14dcaf24e5ebfbcdd6c33b5225b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toronto_Maple_Leafs> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock> }", "question": "Is Mike Babcock the head coach of Toronto Maple Leafs?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Maple_Leafs", "seq": "34,52", "label": "Toronto Maple Leafs"}, {"uri": "http://dbpedia.org/resource/Mike_Babcock", "seq": "3,14", "label": "Mike Babcock"}], "predicate mapping": [], "id": "9c45e57bd6df436a804a484269f51d51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Statelessness>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "What writers have nationality as Statelessness?  ", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Statelessness", "seq": "33,45", "label": "Statelessness"}], "predicate mapping": [], "id": "902aa5708f8b44108380a95c01c45686"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri } ", "question": "Who is the leader of United States House of Representatives elections, 1788 and 1789 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "seq": "21,83", "label": "United States House of Representatives elections, 1788 and 1789"}], "predicate mapping": [], "id": "4fa56e45fedf4969b8ccfc846a78dc9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Iyasu_II> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}", "question": "Where is the king buried whose predecessor was Iyasu II?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iyasu_II", "seq": "47,54", "label": "Iyasu II"}], "predicate mapping": [], "id": "9b7b9393ba92438d807402980092a498"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Audie_Murphy> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> }", "question": "Is Audie Murphy buried in the Arlington national cementery?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Audie_Murphy", "seq": "3,14", "label": "Audie Murphy"}, {"uri": "http://dbpedia.org/resource/Arlington_National_Cemetery", "seq": "30,57", "label": "Arlington national cementery"}], "predicate mapping": [], "id": "0f64ebf1ec944faa999a799ae051e373"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Reigh_Count> <http://dbpedia.org/ontology/honours> ?uri } ", "question": "What honours did Reigh Count receive?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reigh_Count", "seq": "17,27", "label": "Reigh Count"}], "predicate mapping": [], "id": "82880466af6a4a07bb1bcd89ed90af00"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Tokyo_Broadcasting_System> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have written stuff broadcasted on the Tokyo Broadcasting System?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tokyo_Broadcasting_System", "seq": "54,78", "label": "Tokyo Broadcasting System"}], "predicate mapping": [], "id": "9fcaa73b3dca47a9a3bf12a42abe54b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Diane_Disney_Miller> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the awards received of the person whose child is Daine Disney Miller?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Diane_Disney_Miller", "seq": "54,72", "label": "Daine Disney Miller"}], "predicate mapping": [], "id": "ee1bccf6ccb7409e82df8306828de0c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raptors_905> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "How many more teams have rented the stadium used by Raptors 905?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raptors_905", "seq": "52,62", "label": "Raptors 905"}], "predicate mapping": [], "id": "609a310df5854bada8e182bcc9f2fee9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/George_Beauchamp> . ?uri <http://dbpedia.org/ontology/instrument> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Give me a count of musicians who play an instrument developed by George Beauchamp ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Beauchamp", "seq": "65,80", "label": "George Beauchamp"}], "predicate mapping": [], "id": "331ab7e173c740318ed2adfa0f08046b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lauren_Briggs> <http://dbpedia.org/property/placeOfBirth> ?uri } ", "question": "What is the place of birth of Lauren Briggs ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lauren_Briggs", "seq": "30,42", "label": "Lauren Briggs"}], "predicate mapping": [], "id": "5ac4dc8f112e464796c31164eb0f3a64"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saint_Lawrence_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Kingston,_Ontario> }", "question": "Does the St lawrence river start in Kingston, Ontario?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Lawrence_River", "seq": "9,25", "label": "St lawrence river"}, {"uri": "http://dbpedia.org/resource/Kingston,_Ontario", "seq": "36,52", "label": "Kingston, Ontario"}], "predicate mapping": [], "id": "d4ed4754c8194ab69b712750149fdd7a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "Give me an estimate of the number of manufacturers whose products are managed by MTR?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/MTR", "seq": "81,83", "label": "MTR"}], "predicate mapping": [], "id": "3fe7d243d8064aadbe198b10a38cf9b4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Vestigial_Peter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Who is the fictional character whose relative is Vestigial Peter?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vestigial_Peter", "seq": "49,63", "label": "Vestigial Peter"}], "predicate mapping": [], "id": "50815a2e5ca14118b958db770c868c1e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mollusca>}", "question": "What are a few molluscas whose family is Buccinidae?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buccinidae", "seq": "41,50", "label": "Buccinidae"}], "predicate mapping": [], "id": "6283e026a6f54433921efa5494260bc8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)> <http://dbpedia.org/property/agencyName> ?uri. <http://dbpedia.org/resource/Channel_9_MCOT_HD> <http://dbpedia.org/property/city> ?uri} ", "question": "What is the agency name of the Ministry of Information and Communication Technology (Thailand) and distribution region  of the Channel 9 MCOT HD ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)", "seq": "31,82", "label": "Ministry of Information and Communication Technology"}, {"uri": "http://dbpedia.org/resource/Channel_9_MCOT_HD", "seq": "127,143", "label": "Channel 9 MCOT HD"}], "predicate mapping": [], "id": "4082e390c8294b71804e3c6b5b3f249c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/ontology/governmentType> ?uri } ", "question": "What type of government is elected in Kumta?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kumta", "seq": "38,42", "label": "Kumta"}], "predicate mapping": [], "id": "f976333c9df44935b5cb741fdfd342ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mac_OS_9> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Tiny_Tower> <http://dbpedia.org/property/distributor> ?uri . }", "question": "What company developed Mac OS 9 and also brought Tiny Tower to the market?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS_9", "seq": "23,30", "label": "Mac OS 9"}, {"uri": "http://dbpedia.org/resource/Tiny_Tower", "seq": "49,58", "label": "Tiny Tower"}], "predicate mapping": [], "id": "51504ea36f364007a53aea8d7060e17d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/VDE-Gallo_Records> <http://dbpedia.org/ontology/distributingLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Which currency is primarily used by the company which is the distributing label of VDE-Gallo Records?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/VDE-Gallo_Records", "seq": "83,99", "label": "VDE-Gallo Records"}], "predicate mapping": [], "id": "3bdef03debd5421ab0cd7f4a3758b46b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Electric_Lady_Studios> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who all have been in bands which have recorded their work in the Electric Lady Studios?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Electric_Lady_Studios", "seq": "65,85", "label": "Electric Lady Studios"}], "predicate mapping": [], "id": "13fc91a5ba564ac6aaa2be0d37c03aa1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/If_(band)> . ?x <http://dbpedia.org/property/label> ?uri  . }", "question": "What is the label of things produced by the band If?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/If_(band)", "seq": "49,50", "label": "If"}], "predicate mapping": [], "id": "30f39069de5b4672a6f01513ae7e3491"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose subsequent work is Crusade (TV series) and developed by  J. Michael Straczynski?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Crusade_(TV_series)", "seq": "53,59", "label": "Crusade"}, {"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "91,112", "label": "J. Michael Straczynski"}], "predicate mapping": [], "id": "7509db63f63840548107d56cc97f5a0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What people were born in Ridgewood, New Jersey?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey", "seq": "25,45", "label": "Ridgewood, New Jersey"}], "predicate mapping": [], "id": "ff87b9ebc25a4997a01aed4bac145920"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri. <http://dbpedia.org/resource/Laura_K._Ipsen> <http://dbpedia.org/ontology/occupation> ?uri} ", "question": "Which content license of the MSX BASIC is also the profession of the Laura K. Ipsen ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/MSX_BASIC", "seq": "29,37", "label": "MSX BASIC"}, {"uri": "http://dbpedia.org/resource/Laura_K._Ipsen", "seq": "69,82", "label": "Laura K. Ipsen"}], "predicate mapping": [], "id": "40d57e64ea22448ab4a194129f2793ae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the company to which Fusajiro Yamauchi proprietor to ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi", "seq": "29,45", "label": "Fusajiro Yamauchi"}], "predicate mapping": [], "id": "8b84e189a1384ad4bf36163f27e3acac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Willie_Nelson_and_Family> . ?x <http://dbpedia.org/ontology/artist> ?uri  . }", "question": "Who is the performer of the album whose subsequent work is Willie Nelson and Family ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willie_Nelson_and_Family", "seq": "59,82", "label": "Willie Nelson and Family"}], "predicate mapping": [], "id": "41dea095bc384feb9fb2f59597e2457d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri } ", "question": "Name the debut team of Dan Otero ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dan_Otero", "seq": "23,31", "label": "Dan Otero"}], "predicate mapping": [], "id": "509e179ae21a44d68ac494defe1b32e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/P\u014dmare_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "What is the POD of the successor of Pmare I ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/P\u014dmare_I", "seq": "36,42", "label": "Pmare I"}], "predicate mapping": [], "id": "54e96a6a9d9749f6878cac13550c192a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Captain_EO> <http://dbpedia.org/property/producer> ?uri } ", "question": "Who is the producer of Captain EO ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Captain_EO", "seq": "23,32", "label": "Captain EO"}], "predicate mapping": [], "id": "d15ac9a40bb143a0a3da0de817e8d832"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeStadium> <http://dbpedia.org/resource/Nairobi> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "List all the home stadium of the soccer clubs which has one of the home stadium as Nairobi ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nairobi", "seq": "83,89", "label": "Nairobi"}], "predicate mapping": [], "id": "f2e72675e3df4f1abe9deb7b7779f904"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction>  . }", "question": "How many utopian and dystopian fiction books are there?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction", "seq": "9,37", "label": "utopian and dystopian fiction"}], "predicate mapping": [], "id": "d0847ee1f87a43a88507df1216bc342b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri} ", "question": "Which college of Luke List (golfer) is the alma mater of K. Terry Dornbush", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luke_List_(golfer)", "seq": "17,25", "label": "Luke List"}, {"uri": "http://dbpedia.org/resource/K._Terry_Dornbush", "seq": "57,73", "label": "K. Terry Dornbush"}], "predicate mapping": [], "id": "0645d71c51664c7f98ef83d258d24c5d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri } ", "question": "What are the academic interest of Philip Novak?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philip_Novak", "seq": "34,45", "label": "Philip Novak"}], "predicate mapping": [], "id": "593a45b09e04430e9687b99f34b3e709"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westchester_Avenue> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }", "question": "Does the Westchester Avenue fall under the Bronx?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Westchester_Avenue", "seq": "9,26", "label": "Westchester Avenue"}, {"uri": "http://dbpedia.org/resource/The_Bronx", "seq": "39,47", "label": "the Bronx"}], "predicate mapping": [], "id": "74a5cff93ee946babd0e69d98b975931"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ", "question": "Count the total number of software whose programming language is C++ and operating system is Microsoft Windows?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/C++", "seq": "65,67", "label": "C++"}, {"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "93,109", "label": "Microsoft Windows"}], "predicate mapping": [], "id": "526b1249debc4893af724c324a24726e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "How many albums were released under the Victor Entertainment label?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Victor_Entertainment", "seq": "40,59", "label": "Victor Entertainment"}], "predicate mapping": [], "id": "e91c453536f24b228292c56b81ead42b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/NOAAS_Davidson_(S_331)> <http://dbpedia.org/ontology/homeport> <http://dbpedia.org/resource/Seattle> }", "question": "Does NOAAS Davidson (S 331) have a homeport in Seattle?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/NOAAS_Davidson_(S_331)", "seq": "5,18", "label": "NOAAS Davidson"}, {"uri": "http://dbpedia.org/resource/Seattle", "seq": "47,53", "label": "Seattle"}], "predicate mapping": [], "id": "7dc5e7a5b436490481cc92fa93bd288f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/99_(2009_film)> <http://dbpedia.org/property/recorded> ?uri} ", "question": "Which serving railway line of the Daund Junction railway station was also the place where 99 (2009 film) was recorded ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daund_Junction_railway_station", "seq": "34,63", "label": "Daund Junction railway station"}, {"uri": "http://dbpedia.org/resource/99_(2009_film)", "seq": "90,91", "label": "99"}], "predicate mapping": [], "id": "e81ec239e24b4394ad486b4fcfb77f8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "Which parties have their members live in the PM House, Colombo?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)", "seq": "33,52", "label": "live in the PM House"}], "predicate mapping": [], "id": "2c3d0f285c6140879c32fc68bf2d2cfb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's resting place is Alta Mesa Memorial park and has adrian A. Basora as successor ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "71,86", "label": "adrian A. Basora"}, {"uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park", "seq": "39,61", "label": "Alta Mesa Memorial park"}], "predicate mapping": [], "id": "6daa5758ac314e80929ed6583575c5f8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie written by Monty Python and distributed by Cinema International Corporation ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "58,89", "label": "Cinema International Corporation"}, {"uri": "http://dbpedia.org/resource/Monty_Python", "seq": "26,37", "label": "Monty Python"}], "predicate mapping": [], "id": "22420b9ce00545229aecd57813393a38"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd>  . }", "question": "Which governor of Charles Willing byrd fought the battle of Siege of Fort Recovery ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "seq": "60,81", "label": "Siege of Fort Recovery"}, {"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "seq": "18,37", "label": "Charles Willing byrd"}], "predicate mapping": [], "id": "18cc0cb6c446411aba19e87c3d2cef99"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTJC-LP> <http://dbpedia.org/property/format> ?uri } ", "question": "On what subject does WTJC-LP air?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WTJC-LP", "seq": "21,27", "label": "WTJC-LP"}], "predicate mapping": [], "id": "a1a2b9381ed049a882c87648db96c438"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri } ", "question": "Which company owns Evraz ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Evraz", "seq": "19,23", "label": "Evraz"}], "predicate mapping": [], "id": "86346cf018e9417da21aae023485460f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panki_block> <http://dbpedia.org/ontology/leaderName> ?uri } ", "question": "Who is the leader of Panki block ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Panki_block", "seq": "21,31", "label": "Panki block"}], "predicate mapping": [], "id": "3c5ec517b1a14c2bbccc65ce6c1db5c7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edsel> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri} ", "question": "Which parent company of  Edsel was the first team of the 1967 Mexican Grand Prix ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edsel", "seq": "25,29", "label": "Edsel"}, {"uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix", "seq": "57,79", "label": "1967 Mexican Grand Prix"}], "predicate mapping": [], "id": "d0a9f37f03c64ca2a96a688f3ac12798"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight> . ?uri <http://dbpedia.org/property/products> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company whose products's predecessor is Boeing Vertol CH-46 Sea Knight?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight", "seq": "49,78", "label": "Boeing Vertol CH-46 Sea Knight"}], "predicate mapping": [], "id": "2de2ea8f7f994e38898f57b6b90b2088"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri } ", "question": "Name the species of Liger ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liger", "seq": "20,24", "label": "Liger"}], "predicate mapping": [], "id": "c1231c9ac8174bc4bb544853d3faf6ca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character's relative is Clan McDuck and belongs to American Pekin duck ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clan_McDuck", "seq": "40,50", "label": "Clan McDuck"}, {"uri": "http://dbpedia.org/resource/American_Pekin_duck", "seq": "67,85", "label": "American Pekin duck"}], "predicate mapping": [], "id": "7282c5f557974ec99165996f0b27200a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Persian_Boy> <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Michelangelo> }", "question": "Is michelangelo the painter of The Persian Boy?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Persian_Boy", "seq": "31,45", "label": "The Persian Boy"}, {"uri": "http://dbpedia.org/resource/Michelangelo", "seq": "3,14", "label": "michelangelo"}], "predicate mapping": [], "id": "9b04388b468a4460a8e15aacaadf7853"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri. <http://dbpedia.org/resource/Pawan_Hans> <http://dbpedia.org/ontology/hubAirport> ?uri} ", "question": "Name the line of the Vadodara Junction railway station which is also the  hub airport of the Pawan Hans?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "seq": "21,53", "label": "Vadodara Junction railway station"}, {"uri": "http://dbpedia.org/resource/Pawan_Hans", "seq": "93,102", "label": "Pawan Hans"}], "predicate mapping": [], "id": "1fddb6aae1e34017a5ef49ecfbd2f3bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television shows has sound format as 5.1 surround?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/5.1_surround_sound", "seq": "43,54", "label": "5.1 surround"}], "predicate mapping": [], "id": "a043a59e39a94f1b804acd94a58801e2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Sodagreen> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which boarder country of Korean Peninsula was the state of Sodagreen ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Korean_Peninsula", "seq": "25,40", "label": "Korean Peninsula"}, {"uri": "http://dbpedia.org/resource/Sodagreen", "seq": "59,67", "label": "Sodagreen"}], "predicate mapping": [], "id": "62461469fd01444f88e0d4d08359db98"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kelsey_Creek> <http://dbpedia.org/ontology/region> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }", "question": "Where is the capital of Kelsey Creek located?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelsey_Creek", "seq": "24,35", "label": "Kelsey Creek"}], "predicate mapping": [], "id": "7f6ce18d38014a87a073ee8285106c60"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show whose opening theme is Gary Portnoy and the subsequent work is Frasier?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gary_Portnoy", "seq": "40,51", "label": "Gary Portnoy"}, {"uri": "http://dbpedia.org/resource/Frasier", "seq": "80,86", "label": "Frasier"}], "predicate mapping": [], "id": "652f41e8f5324124af1f9e41d9127e5d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler> . ?x <http://dbpedia.org/ontology/president> ?uri  . }", "question": "Which president was served by someone whose lieutenant is Lewis Stuyvesant Chanler?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler", "seq": "58,81", "label": "Lewis Stuyvesant Chanler"}], "predicate mapping": [], "id": "2a427a404ec84210b9342358d5cb81a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Levon_Ashotovich_Grigorian> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "What does the famous relative of Levon Ashotovich Grigorian do for a living?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Levon_Ashotovich_Grigorian", "seq": "33,58", "label": "Levon Ashotovich Grigorian"}], "predicate mapping": [], "id": "b9d3a2fe75124f64855ddc9e0f97e76d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Mediolanum> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . }", "question": "Whose county seats are Mediolanum and History of Trier?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediolanum", "seq": "23,32", "label": "Mediolanum"}, {"uri": "http://dbpedia.org/resource/History_of_Trier", "seq": "38,53", "label": "History of Trier"}], "predicate mapping": [], "id": "14657aede6af4c84b339a412d713119b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies did Joel Schumacher direct?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joel_Schumacher", "seq": "20,34", "label": "Joel Schumacher"}], "predicate mapping": [], "id": "55a0f9a155d248a4b36850165c830f0b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . }", "question": "How many games are played at universities in Metro Manilla?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Manila", "seq": "45,57", "label": "Metro Manilla"}], "predicate mapping": [], "id": "3f0c5c6e16f44478976a62d32ee3a123"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saumarez_(horse)> <http://dbpedia.org/ontology/owner> ?uri } ", "question": "Who is the owner of Saumarez ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saumarez_(horse)", "seq": "20,27", "label": "Saumarez"}], "predicate mapping": [], "id": "a100cb0681104c81aeaeb99a2e615d66"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Compaq> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Software> }", "question": "Is Compaq a software company?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Compaq", "seq": "3,8", "label": "Compaq"}, {"uri": "http://dbpedia.org/resource/Software", "seq": "12,19", "label": "software"}], "predicate mapping": [], "id": "35616e0b45534d1ba5aa8c3514527462"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Bob_C._Riley> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "Name the president served by a lieutenant who succeeded Bob C Riley.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_C._Riley", "seq": "56,66", "label": "Bob C Riley"}], "predicate mapping": [], "id": "039208f28c41401297caeb292230c23f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/BMW_M40>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AutomobileEngine>}", "question": "What automobile engine's successor is BMW M40", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/BMW_M40", "seq": "38,44", "label": "BMW M40"}], "predicate mapping": [], "id": "9ea90a365f7c4673a2ae7ecd250d290b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which shareholder of Naval Air facility Adak is also the operator of New Sanno Hotel ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Sanno_Hotel", "seq": "69,83", "label": "New Sanno Hotel"}, {"uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak", "seq": "21,43", "label": "Naval Air facility Adak"}], "predicate mapping": [], "id": "e30c5fcc3147441587dae1c295b22f19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alabama> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }", "question": "How many owners are there of things located in Alabama?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alabama", "seq": "47,53", "label": "Alabama"}], "predicate mapping": [], "id": "12381d3b6b434094988269dcdc1e8a46"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri } ", "question": "Where is Oskar Blues located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery", "seq": "9,27", "label": "Oskar Blues located"}], "predicate mapping": [], "id": "b6fb2de828a94638a57cdb650825441c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Colorado> }", "question": "Was the FIS Alpine World Ski Championship of 1950 held in Colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950", "seq": "8,48", "label": "FIS Alpine World Ski Championship of 1950"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "58,65", "label": "Colorado"}], "predicate mapping": [], "id": "3cd2c8b70c7849889e3c298974187aed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Congo_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }", "question": "What are the outflow of the lakes which also has one of the outflow as Congo River ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Congo_River", "seq": "71,81", "label": "Congo River"}], "predicate mapping": [], "id": "6b60ad1e840246a7a1e76df64a37be03"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the science fiction shows broadcasted on BBC HD ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Science_fiction", "seq": "9,23", "label": "science fiction"}, {"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "46,51", "label": "BBC HD"}], "predicate mapping": [], "id": "06865b556f72412591e45e2b25e27d31"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri} ", "question": "Which key person of Clinton Foundation is also the president of Jim Sasser ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clinton_Foundation", "seq": "20,37", "label": "Clinton Foundation"}, {"uri": "http://dbpedia.org/resource/Jim_Sasser", "seq": "64,73", "label": "Jim Sasser"}], "predicate mapping": [], "id": "1c39ad9fe6534d5ab15c4cdca5526643"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Runes_of_Magic> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the division of the companies who make Runes of Magic?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Runes_of_Magic", "seq": "47,60", "label": "Runes of Magic"}], "predicate mapping": [], "id": "8f4dcf2dc41047969a71b87fbfef4cc4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "question": "What is the basketball team whose President's college is Brockport Golden Eagles?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles", "seq": "57,79", "label": "Brockport Golden Eagles"}], "predicate mapping": [], "id": "258d0ae4aaa94829ab2720cff3ef031c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri . }", "question": "What common teams do Ramiro Pea and Bruce Bochy share?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a", "seq": "21,30", "label": "Ramiro Pea"}, {"uri": "http://dbpedia.org/resource/Bruce_Bochy", "seq": "36,46", "label": "Bruce Bochy"}], "predicate mapping": [], "id": "bc77c3a5c2aa48beb648fd70de67488e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "In which sitcom did Jeff Conaway acted and had TNT as its network ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "seq": "47,49", "label": "TNT"}, {"uri": "http://dbpedia.org/resource/Jeff_Conaway", "seq": "20,31", "label": "Jeff Conaway"}], "predicate mapping": [], "id": "491b0f3480c14c608b26e8e745514b9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "How many cities are around the sea into which the aegean sea flows?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aegean_Sea", "seq": "50,59", "label": "aegean sea"}], "predicate mapping": [], "id": "891f155dd9e14cdcac38afc45e4a869e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/property/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "How many buildings are located in the jurisdiction of John Tory?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tory", "seq": "54,62", "label": "John Tory"}], "predicate mapping": [], "id": "323011153fec4b5ca0658605fdf7ff6e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/North_Caucasus_Railway> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}", "question": "Which railway line goes through the stations which are a part of the North Caucasus railway?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Caucasus_Railway", "seq": "69,90", "label": "North Caucasus railway"}], "predicate mapping": [], "id": "d988b1b86f7d4f20bb3fc106bb997062"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u00c9tienne_Bi\u00e9ler> } ", "question": "Whose doctoral student is etienne bieler\\xc9tienne_Bi\\xe9ler", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c9tienne_Bi\u00e9ler", "seq": "26,59", "label": "etienne bieler\\xc9tienne_Bi\\xe9ler"}], "predicate mapping": [], "id": "59ee66fc1eb648ff9ca0e751825f1de1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What are some bands originating in London?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "seq": "35,40", "label": "London"}], "predicate mapping": [], "id": "0200198676244b77993641150454251c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri } ", "question": "what awards have been giving to Muhammad Yunus?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Muhammad_Yunus", "seq": "32,45", "label": "Muhammad Yunus"}], "predicate mapping": [], "id": "cf3c2cbbbde94259a9b3d4194d90ac28"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hayden,_Stone_&_Co.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/successor> ?uri  . }", "question": "List the successor of successor of Hayden, Stone & Co.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hayden,_Stone_&_Co.", "seq": "35,52", "label": "Hayden, Stone & Co"}], "predicate mapping": [], "id": "f93b26eb3cf04a5e8664ae62dd6b5dfb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What are some video games whose music is composed by an employ of the company Creatures?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Creatures_(company)", "seq": "78,86", "label": "Creatures"}], "predicate mapping": [], "id": "4d2907c9a4124f3097f04807bcef9d19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/ITV_(TV_network)>  . }", "question": "Who are the people which ITV(TV network) has employed?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/ITV_(TV_network)", "seq": "25,30", "label": "ITV(TV"}], "predicate mapping": [], "id": "900ef117ddb54ad0b9686cde649bc3d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which televion show's theme music was given by Ron Grainer and is broadcasted by BBC HD ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ron_Grainer", "seq": "47,57", "label": "Ron Grainer"}, {"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "81,86", "label": "BBC HD"}], "predicate mapping": [], "id": "c949eeb67a4c448589588ee0e2862b8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._P._Paris\u00e9> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Bert_McCaffrey> <http://dbpedia.org/ontology/formerTeam> ?uri . }", "question": "What team did J P Paris was former team of Bert McCaffrey play for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._P._Paris\u00e9", "seq": "14,22", "label": "J P Paris"}, {"uri": "http://dbpedia.org/resource/Bert_McCaffrey", "seq": "43,56", "label": "Bert McCaffrey"}], "predicate mapping": [], "id": "c251f7bc65ec4dc9a1b5611b34395b65"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Los_Angeles_Kings> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "How many teams have LA kings players in them currently?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Kings", "seq": "20,27", "label": "LA kings"}], "predicate mapping": [], "id": "1303bcf1aff546deb0445accfefd890d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Thomas_Helwys> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the opponents of the relatives of Thomas Helwys?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Helwys", "seq": "39,51", "label": "Thomas Helwys"}], "predicate mapping": [], "id": "7d7c76e45ef64f46920bd1841c5aab92"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri } ", "question": "Who is the coach of England national under-21 football team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "seq": "20,58", "label": "England national under-21 football team"}], "predicate mapping": [], "id": "5bc08a17c2874dc7b7711f0329ab4fb2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport> . ?uri <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/San_Francisco_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Name an airline with hub airports as Los Angeles International Airport and San Francisco International Airport?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport", "seq": "37,69", "label": "Los Angeles International Airport"}, {"uri": "http://dbpedia.org/resource/San_Francisco_International_Airport", "seq": "75,109", "label": "San Francisco International Airport"}], "predicate mapping": [], "id": "bafd650bf447413fa5e2c8f3f6435da8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_Perriello> <http://dbpedia.org/ontology/region> ?uri } ", "question": "What is the region of Tom Perriello ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tom_Perriello", "seq": "22,34", "label": "Tom Perriello"}], "predicate mapping": [], "id": "249843fe379e4bc29f4510be1e62d055"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Waterfall_(album)> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "What is the label of the album whose previous work is Waterfall?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waterfall_(album)", "seq": "54,62", "label": "Waterfall"}], "predicate mapping": [], "id": "b8477c9f0ba248149197ed898ea97d36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are some other great things by the person who produced Queer as Folk?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)", "seq": "60,72", "label": "Queer as Folk"}], "predicate mapping": [], "id": "96c4bef12a134fb8bb1ac835d064c51a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri} ", "question": "Where is the assembly of Plymouth Savoy, and where Special 26 was recorded?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_Savoy", "seq": "25,38", "label": "Plymouth Savoy"}, {"uri": "http://dbpedia.org/resource/Special_26", "seq": "51,60", "label": "Special 26"}], "predicate mapping": [], "id": "56f16d1174db4f37b05d59f669705539"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Newark_station_(Delaware)> <http://dbpedia.org/property/line> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }", "question": "Who owns the railway line which goes through the Newark Station?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newark_station_(Delaware)", "seq": "49,62", "label": "Newark Station"}], "predicate mapping": [], "id": "50ecdb7b02db481399e126e0658583d5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri} ", "question": "Which relative of George Madison was the leader of United States House of Representatives elections, 1788 and 1789 ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Madison", "seq": "18,31", "label": "George Madison"}, {"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "seq": "51,113", "label": "United States House of Representatives elections, 1788 and 1789"}], "predicate mapping": [], "id": "188d75500ece496ca5e4f31ef1d853e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Bill_Clements> . ?x <http://dbpedia.org/property/branch> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "What is the branch of the politicians whose governor is Bill Clements?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Clements", "seq": "56,68", "label": "Bill Clements"}], "predicate mapping": [], "id": "85d67513bd1b4291a9c48017ba2c6f30"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chimera_of_Arezzo> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)> }", "question": "Is National Archaeological Museum (Florence) the museum of Chimera of Arezzo?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chimera_of_Arezzo", "seq": "59,75", "label": "Chimera of Arezzo"}, {"uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)", "seq": "3,32", "label": "National Archaeological Museum"}], "predicate mapping": [], "id": "78629f144207411aaaf8e5d9dd60022e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dalma_Kov\u00e1cs> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri } ", "question": "Who are the associate musical artists of Dalma Kovcs ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dalma_Kov\u00e1cs", "seq": "41,51", "label": "Dalma Kovcs"}], "predicate mapping": [], "id": "390b74bcdbcb43668fa738a6a5ae5bc9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . }", "question": "Whichd officer's final resting place is North Bend, ohio and belongs to Indiana Territory branch ", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Bend,_Ohio", "seq": "40,55", "label": "North Bend, ohio"}, {"uri": "http://dbpedia.org/resource/Indiana_Territory", "seq": "72,88", "label": "Indiana Territory"}], "predicate mapping": [], "id": "e2894724dd3947e481b68dd558dced13"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri} ", "question": "Name the profession of Oamr D Conger for which Jack Ryan was also nominated ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "seq": "47,55", "label": "Jack Ryan"}, {"uri": "http://dbpedia.org/resource/Omar_D._Conger", "seq": "23,35", "label": "Oamr D Conger"}], "predicate mapping": [], "id": "7a064f0bfba14e8da7581b3b362b0a37"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What is the series of the book which is a subsequent work of Blade Runner 2: The Edge of Human ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human", "seq": "61,93", "label": "Blade Runner 2: The Edge of Human"}], "predicate mapping": [], "id": "b2ca768fe1b54426a2d0413c0f7c42f0"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mathura\u2013Vadodara_Section> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Vadodara_Junction_railway_station> }", "question": "Does the Vadodara Railway station lie at the end of the Mathura Vadodara route?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mathura\u2013Vadodara_Section", "seq": "56,77", "label": "Mathura Vadodara route"}, {"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "seq": "9,32", "label": "Vadodara Railway station"}], "predicate mapping": [], "id": "cb70f9c4ab6e46b9bb6781e259febc55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_Ghana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "President of Ghana is the leader title of which country?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/President_of_Ghana", "seq": "0,17", "label": "President of Ghana"}], "predicate mapping": [], "id": "4ec3f228ceb342d1b160cd91a06ac835"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri . }", "question": "Give me all commanders which had an important role in both, the Battle of Fort Stephenson and Battle of the Thames?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson", "seq": "64,88", "label": "Battle of Fort Stephenson"}, {"uri": "http://dbpedia.org/resource/Battle_of_the_Thames", "seq": "94,113", "label": "Battle of the Thames"}], "predicate mapping": [], "id": "462864a5cac04f65bde1144083b52815"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "In which city are buildings by Solon Spencer Beman found?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Solon_Spencer_Beman", "seq": "31,49", "label": "Solon Spencer Beman"}], "predicate mapping": [], "id": "2fd09016a75d42d4b3601fc9712d3ae5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist who was the winner of Royal Society award and had Georg Meissner as his doctoral advisor ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "41,53", "label": "Royal Society"}, {"uri": "http://dbpedia.org/resource/Georg_Meissner", "seq": "69,82", "label": "Georg Meissner"}], "predicate mapping": [], "id": "1df69aaf84db4e6ebf8479f68c52d2fe"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Brownstown> <http://dbpedia.org/ontology/commander> ?uri } ", "question": "What is the commander of Battle of Brownstown ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_Brownstown", "seq": "25,44", "label": "Battle of Brownstown"}], "predicate mapping": [], "id": "28908ee4e3754d90b904645e4f1156b2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "What religion's politicians are in the Malaysian Chinese association?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association", "seq": "39,67", "label": "Malaysian Chinese association"}], "predicate mapping": [], "id": "d5e7fe8c8df14e7884592ea07357f9fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "How many religions are practiced by diplomats?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Diplomacy", "seq": "36,44", "label": "diplomats"}], "predicate mapping": [], "id": "1b089c7e3c454ff898540e7d20d840c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Rob_Pike> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProgrammingLanguage>}", "question": "Who developed the programming languages designed by Rob Pike?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rob_Pike", "seq": "52,59", "label": "Rob Pike"}], "predicate mapping": [], "id": "d7d071a722434a7282752c8442ba5572"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Thorneycroft> <http://dbpedia.org/ontology/primeMinister> ?uri } ", "question": "List down the prime ministers of Peter Thorneycroft ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Thorneycroft", "seq": "33,50", "label": "Peter Thorneycroft"}], "predicate mapping": [], "id": "1894061d4693487abbac158ae035218c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What are the non-fiction topics in the books whose authors is Terry Pratchett?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terry_Pratchett", "seq": "62,76", "label": "Terry Pratchett"}], "predicate mapping": [], "id": "fa79374cc5624b72992b576863b1b839"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/James_B._Belford> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "Where is the senator from whose successor was James belford?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_B._Belford", "seq": "46,58", "label": "James belford"}], "predicate mapping": [], "id": "b7c61495bc5c42969a8ec600aea66096"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "List the newspapers which has headquarters in Stockholm?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stockholm", "seq": "46,54", "label": "Stockholm"}], "predicate mapping": [], "id": "dd4fd682874b4c23bf5f60ebc119a98d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lance_Adams-Schneider> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Daniel_O'Regan> <http://dbpedia.org/property/nickname> ?uri} ", "question": "Which president of Lance Adams-Schneider had nickname Daniel O'Regan ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lance_Adams-Schneider", "seq": "19,39", "label": "Lance Adams-Schneider"}, {"uri": "http://dbpedia.org/resource/Daniel_O'Regan", "seq": "54,67", "label": "Daniel O'Regan"}], "predicate mapping": [], "id": "d4dde19bfcd949abbdde426e8ebfb8d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "List the software using C++ as programming language and licence is Software as a service?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/C++", "seq": "24,26", "label": "C++"}, {"uri": "http://dbpedia.org/resource/Software_as_a_service", "seq": "67,87", "label": "Software as a service"}], "predicate mapping": [], "id": "a1df4f7d07df497f8e7ddbd6643a6ea2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ", "question": "list some companies founded by Jim Harris.", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "seq": "31,40", "label": "Jim Harris"}], "predicate mapping": [], "id": "f9d991647aae449285e9d5867ea64911"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . }", "question": "What has been founded in the state that Denton county, Texas is a part of?\u00a0", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denton_County,_Texas", "seq": "40,59", "label": "Denton county, Texas"}], "predicate mapping": [], "id": "eb46e7dfdd9244a1b5455ccdf1a5abb6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "Which countries militaries fought the SFOR battle?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/SFOR", "seq": "38,41", "label": "SFOR"}], "predicate mapping": [], "id": "a22e77732ec340b89b2da8d21bc2d89a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/From_the_Life_of_the_Marionettes> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What is the awards won by the producer of From the Life of the Marionettes ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/From_the_Life_of_the_Marionettes", "seq": "42,73", "label": "From the Life of the Marionettes"}], "predicate mapping": [], "id": "068c624211d44e12aee8f503946a20b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . }", "question": "How many ", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "seq": "0,7", "label": "How many"}], "predicate mapping": [], "id": "29d041b6917e47cbbcc098c7a848a397"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . }", "question": "How many writers worked on the album Main Course?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Main_Course", "seq": "37,47", "label": "Main Course"}], "predicate mapping": [], "id": "2d5d4a8626d54ff58754ce28b3036910"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>} ", "question": "Count the number of shows whose creators are Jerry Seinfeld and Larry David?", "sparql_id": 107, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Seinfeld", "seq": "45,58", "label": "Jerry Seinfeld"}, {"uri": "http://dbpedia.org/resource/Larry_David", "seq": "64,74", "label": "Larry David"}], "predicate mapping": [], "id": "1bbfeeb6913d4de6a7e96c9a64ec101f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/San_Francisco> . ?uri <http://dbpedia.org/property/hubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Name the airlines which have a hub in airport in SF?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco", "seq": "35,44", "label": "in airport"}], "predicate mapping": [], "id": "60f31d985aed488e9d589db655e932ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose company is Playtone and written by Erik Jendresen?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "seq": "45,52", "label": "Playtone"}, {"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "69,82", "label": "Erik Jendresen"}], "predicate mapping": [], "id": "162e1b03aabf4dec9809ad4bd74fbbde"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder allegiance is Colony of Virginia and was has a wife named Dolley Madison ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "78,91", "label": "Dolley Madison"}, {"uri": "http://dbpedia.org/resource/Colony_of_Virginia", "seq": "34,51", "label": "Colony of Virginia"}], "predicate mapping": [], "id": "c8c8394ec36c4c9eb2ab8e1fb8c14441"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Rodrigues> . ?x <http://dbpedia.org/property/broadcastArea> ?uri }", "question": "How many broadcast area of the television stations exists whose broadcast area is Rodrigues ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rodrigues", "seq": "82,90", "label": "Rodrigues"}], "predicate mapping": [], "id": "50af4130157947afa9979e302f6247f8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "What is the religion of the ethnic group to which the relatives of Waxiang people belong?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waxiang_people", "seq": "67,80", "label": "Waxiang people"}], "predicate mapping": [], "id": "b955cb31b2e74d689d1313c1238b9510"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri} ", "question": "Which wine region of Bogdanua is the mouth country of Upper Neretva ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogdanu\u0161a", "seq": "21,28", "label": "Bogdanua"}, {"uri": "http://dbpedia.org/resource/Upper_Neretva", "seq": "54,66", "label": "Upper Neretva"}], "predicate mapping": [], "id": "6635a5b9155b48f792eef26dfc0df7d4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> } ", "question": "Under whom did Charles Drummond Ellis do his PhD?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis", "seq": "15,36", "label": "Charles Drummond Ellis"}], "predicate mapping": [], "id": "990ab53fdb8b485cbcd019106a15fdf2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Spark> <http://dbpedia.org/property/parentCompany> ?uri } ", "question": "Which company is the parent company of Chevrolet Spark ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chevrolet_Spark", "seq": "39,53", "label": "Chevrolet Spark"}], "predicate mapping": [], "id": "d43e1ffd1be04f37bd53e99b819bcd08"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ", "question": "Which associat of Martin Pugh is also married to Alana Stewert ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Pugh", "seq": "18,28", "label": "Martin Pugh"}, {"uri": "http://dbpedia.org/resource/Alana_Stewart", "seq": "49,61", "label": "Alana Stewert"}], "predicate mapping": [], "id": "985720996060414598cdbaa9aaacff57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Pepsi_Center> . ?uri <http://dbpedia.org/ontology/operator> ?x  . }", "question": "Which stadium's operator works in the Pepsi Center?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pepsi_Center", "seq": "38,49", "label": "Pepsi Center"}], "predicate mapping": [], "id": "6506ce80b6da4014a695dd37684fd858"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the drafted team of the people expected to join toronto marlies?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Marlies", "seq": "56,70", "label": "toronto marlies"}], "predicate mapping": [], "id": "498184a91d854ed990f032d429a05ca2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_H._Smith_(Connecticut)> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Alfred_N._Phillips> <http://dbpedia.org/property/birthPlace> ?uri . }", "question": "What city in the US was Alfred Phillips born in, and is the resting place of William Smith?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_H._Smith_(Connecticut)", "seq": "77,89", "label": "William Smith"}, {"uri": "http://dbpedia.org/resource/Alfred_N._Phillips", "seq": "24,38", "label": "Alfred Phillips"}], "predicate mapping": [], "id": "0a162d878e5549cd8ae6dc4f7072b4f6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri} ", "question": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Jeffery", "seq": "29,43", "label": "Michael Jeffery"}, {"uri": "http://dbpedia.org/resource/William_Deane", "seq": "73,86", "label": "Williuam Deane"}], "predicate mapping": [], "id": "84c03af6b5c245db868cbc950af922c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Richard_Winn> . ?x <http://dbpedia.org/property/appointer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}", "question": "Who appointed the governor under whom Richard Winn works?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Winn", "seq": "38,49", "label": "Richard Winn"}], "predicate mapping": [], "id": "f5a63f5184f9424c9270d397df5f2af4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }", "question": "Whose deputy is Neil Brown?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)", "seq": "16,25", "label": "Neil Brown"}], "predicate mapping": [], "id": "52c67daa68c74c3aba9e745ba14b242c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Not_on_Our_Watch_(organization)> <http://dbpedia.org/ontology/foundedBy> ?uri } ", "question": "Who founded the Not on our Watch NGO?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Not_on_Our_Watch_(organization)", "seq": "16,31", "label": "Not on our Watch"}], "predicate mapping": [], "id": "2ae88829677d41d4aea8ccfc94157dc9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri } ", "question": "Who first ascented a mountain of Mount Hoffmann ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Hoffmann", "seq": "33,46", "label": "Mount Hoffmann"}], "predicate mapping": [], "id": "689d2f8f512742b78ba168d386e52220"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Agal\u00e9ga> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . }", "question": "List the broadcast area of the TV stations which also serves in Agalga ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Agal\u00e9ga", "seq": "64,69", "label": "Agalga"}], "predicate mapping": [], "id": "8d253335f3354509a31f7348a91ae3e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LG_Optimus_Vu> <http://dbpedia.org/ontology/operatingSystem> ?uri. <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri} ", "question": "Which operating system provider of LG Optimus Vu is also the employer of Manu Cornet ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/LG_Optimus_Vu", "seq": "35,47", "label": "LG Optimus Vu"}, {"uri": "http://dbpedia.org/resource/Manu_Cornet", "seq": "73,83", "label": "Manu Cornet"}], "predicate mapping": [], "id": "61660d3107614a2d8f76e7dfac844a7b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Ranger> . ?x <http://dbpedia.org/property/parent> ?uri  . }", "question": "Which company owns the manufacturer of the Edsel Ranger?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edsel_Ranger", "seq": "43,54", "label": "Edsel Ranger"}], "predicate mapping": [], "id": "67ecca468f0c460ab67ebee020cb7268"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Menora_Tunnel> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Which are the major hubs of airline which operates the Menora Tunnel?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Menora_Tunnel", "seq": "55,67", "label": "Menora Tunnel"}], "predicate mapping": [], "id": "db326f887c6646c28e21a7483a238e7b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society> . ?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name a scientist whose official residence is Cape Town and also won a gold medal at the Royal Astronomical Society ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society", "seq": "70,113", "label": "gold medal at the Royal Astronomical Society"}, {"uri": "http://dbpedia.org/resource/Cape_Town", "seq": "45,53", "label": "Cape Town"}], "predicate mapping": [], "id": "ec18ccd4be91486aa5253f7a802da354"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_McEwen", "seq": "51,61", "label": "John McEwen"}, {"uri": "http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng", "seq": "67,75", "label": "Phm Vn ng"}], "predicate mapping": [], "id": "0b3d0e13d8b3401a856b23b0fc75529c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide_by_hanging> . ?x <http://dbpedia.org/property/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "question": "In which countries have models hanged themselves?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Suicide_by_hanging", "seq": "24,36", "label": "models hanged"}], "predicate mapping": [], "id": "1b8c3dffd3644c3bbd459adb51ae437e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Bridges over what can carry vehicles?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "seq": "28,35", "label": "vehicles"}], "predicate mapping": [], "id": "8a41604d7495428fa67cccf0d3789635"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Caspian_Sea> . ?x <http://dbpedia.org/ontology/sourceCountry> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In how many countries do the rivers start which end at the Caspian Sea?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Caspian_Sea", "seq": "59,69", "label": "Caspian Sea"}], "predicate mapping": [], "id": "c5e369b698d4499a92beac8371b73491"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri } ", "question": "What was founded by Congress of Industrial Organizations ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations", "seq": "20,55", "label": "Congress of Industrial Organizations"}], "predicate mapping": [], "id": "b39e52f81f1a4c8db50b35e3a82ebb1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "question": "Who are the former partners of the figure skaters whose performance have been choreographed by Catarina Lindgren in the past?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Catarina_Lindgren", "seq": "95,111", "label": "Catarina Lindgren"}], "predicate mapping": [], "id": "be5e96ca6b8e4b3cbda144341ad8892e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri } ", "question": "Which holy things canonized John of Damascus?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_of_Damascus", "seq": "28,43", "label": "John of Damascus"}], "predicate mapping": [], "id": "e9207f57106645a098206a135438489b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/West_Berkshire_Council> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Count the number of schools which are in a city governed by the West Berkshire Council?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Berkshire_Council", "seq": "64,85", "label": "West Berkshire Council"}], "predicate mapping": [], "id": "aa3079fefe4f4e10a2d8ca21b1b91900"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Hank_Williams_Jr.> }", "question": "Did Hank Williams Jr. make Early in the Morning and Late at Night?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night", "seq": "27,64", "label": "Early in the Morning and Late at Night"}, {"uri": "http://dbpedia.org/resource/Hank_Williams_Jr.", "seq": "4,19", "label": "Hank Williams Jr"}], "predicate mapping": [], "id": "61ea6ede582149b797b26eb6e7d81466"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pixar> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar_Canada> }", "question": "Is Pixar Canada a subsidiary of Pixar?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pixar", "seq": "32,36", "label": "Pixar"}, {"uri": "http://dbpedia.org/resource/Pixar_Canada", "seq": "3,14", "label": "Pixar Canada"}], "predicate mapping": [], "id": "d278080949bc4004b75ff345c547a211"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "List some leaders of regions in the Indian Standard Time Zone?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Standard_Time", "seq": "36,55", "label": "Indian Standard Time"}], "predicate mapping": [], "id": "090a2f17823f4673b945c4a938226989"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC> . ?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . }", "question": "List the spanish football player in the NYC FC ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_FC", "seq": "40,45", "label": "NYC FC"}, {"uri": "http://dbpedia.org/resource/Spain_national_football_team", "seq": "9,31", "label": "spanish football player"}], "predicate mapping": [], "id": "e65c0a467ab640ffaacbfe397559a139"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/child> ?x  . }", "question": "Who is the person whose child performed with Tony Bennett?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Bennett", "seq": "45,56", "label": "Tony Bennett"}], "predicate mapping": [], "id": "390c756eecd94acfb6335abcaa91832a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the rivers originating from an English speaking nation?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/English_language", "seq": "36,51", "label": "English speaking"}], "predicate mapping": [], "id": "4c95fa0cb00b42b29b9f111561804b5b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show is related to The Sarah Jane Adventures and theme music is composed by  Ron Grainer?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "28,52", "label": "The Sarah Jane Adventures"}, {"uri": "http://dbpedia.org/resource/Ron_Grainer", "seq": "86,96", "label": "Ron Grainer"}], "predicate mapping": [], "id": "afaeb0eb33ff41d5be722b4859f82618"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Isaacs_(writer)> <http://dbpedia.org/ontology/notableWork> ?uri } ", "question": "List the notable work of David Isaacs (writer)?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Isaacs_(writer)", "seq": "25,36", "label": "David Isaacs"}], "predicate mapping": [], "id": "47315c1388d2459d9fa1ecc1723ffcf6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Air_interdiction> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }", "question": "Who was in military unit which played the role of Air interdiction?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_interdiction", "seq": "50,65", "label": "Air interdiction"}], "predicate mapping": [], "id": "f6b72115e52e4c26983c7be44e8e1df8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which cities were in the TV Show which came after The Ultimate Fighter: Brazil 2?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2", "seq": "50,79", "label": "The Ultimate Fighter: Brazil 2"}], "predicate mapping": [], "id": "f860781f868d4a7f9f59ad56d60e1021"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Tirana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Tirana is the largest city of which country?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tirana", "seq": "0,5", "label": "Tirana"}], "predicate mapping": [], "id": "2bf7c4d882ac4bdca78ac99d19625b3b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Jon_and_Vangelis> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movies whose music composer is often associated with Jon and Vangelis.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_and_Vangelis", "seq": "62,77", "label": "Jon and Vangelis"}], "predicate mapping": [], "id": "b9e8a704d52448cfa0def79568e79d2a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "How many teams have used the stadium which hosted the WCW mayhem?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/WCW_Mayhem", "seq": "54,63", "label": "WCW mayhem"}], "predicate mapping": [], "id": "85765cfbd20546b2a65b2cfc5e50cf3e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }", "question": "Marika Gombitov makes songs in which languages?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marika_Gombitov\u00e1", "seq": "0,14", "label": "Marika Gombitov"}], "predicate mapping": [], "id": "2f4493990eff40b794e67500a851e312"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/9TV> <http://dbpedia.org/property/affiliation> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "question": "What is the area of the broadcast network which has the affiliation with 9TV?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/9TV", "seq": "73,75", "label": "9TV"}], "predicate mapping": [], "id": "7db0553af6fd43c3b91d8767f3add3f3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)> <http://dbpedia.org/property/battleHonours> <http://dbpedia.org/resource/Iraq> }", "question": "Was the Army Air Corps honored for the battle of Iraq?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)", "seq": "8,21", "label": "Army Air Corps"}, {"uri": "http://dbpedia.org/resource/Iraq", "seq": "49,52", "label": "Iraq"}], "predicate mapping": [], "id": "7aa2e062f4ea473f830cf8f1a72fded6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/North_Fort_Myers_High_School> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "What is the debut team of the american football player who studied in North Fort Myers High School?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Fort_Myers_High_School", "seq": "70,97", "label": "North Fort Myers High School"}], "predicate mapping": [], "id": "5a928e7eda774ef6911803e52d2461d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . }", "question": "How many people have played for a club whose coach is Fred Hoiberg?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fred_Hoiberg", "seq": "54,65", "label": "Fred Hoiberg"}], "predicate mapping": [], "id": "f297c53e8f6b4b54abee32483ecdf9a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballTeam>}", "question": "What is the mascot of the handball teams in the Turkish Handball Super League?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League", "seq": "48,76", "label": "Turkish Handball Super League"}], "predicate mapping": [], "id": "dfd73dbae7ae491793de86126bdb9de2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show distributed by Broadcast Syndication and is broadcasted by comedy central ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broadcast_syndication", "seq": "32,52", "label": "Broadcast Syndication"}, {"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "76,89", "label": "comedy central"}], "predicate mapping": [], "id": "ff2c4d6fe5ce44f99d580e8a58235a3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "question": "How many relatives are there of people fought in the Battle of the Bulge?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_the_Bulge", "seq": "53,71", "label": "Battle of the Bulge"}], "predicate mapping": [], "id": "f7e7d5fe2f2f43e7b214ca25b7e066a8"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Czechoslovakia> <http://dbpedia.org/property/nationalMotto> <http://dbpedia.org/resource/Truth_prevails> }", "question": "Is Truth prevails the national motto of Czechoslovakia?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Czechoslovakia", "seq": "40,53", "label": "Czechoslovakia"}, {"uri": "http://dbpedia.org/resource/Truth_prevails", "seq": "3,16", "label": "Truth prevails"}], "predicate mapping": [], "id": "3a2ddeb21c3746fb92dbf66a6c0bc86e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Trial_(song)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/One_of_These_Days_(instrumental)> <http://dbpedia.org/ontology/musicalArtist> ?uri . }", "question": "What band made The trial and One of these days song?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Trial_(song)", "seq": "15,23", "label": "The trial"}, {"uri": "http://dbpedia.org/resource/One_of_These_Days_(instrumental)", "seq": "29,45", "label": "One of these days"}], "predicate mapping": [], "id": "16115d9103a74efaa5fcb54f18cbde0e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_Adams_(American_football)> <http://dbpedia.org/property/knownFor> ?uri } ", "question": "What is Bob Adams (American football) known for?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_Adams_(American_football)", "seq": "8,16", "label": "Bob Adams"}], "predicate mapping": [], "id": "3a948631dd8441caa4bea0a1acc65d97"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_\u2013_Men's_400_metre_individual_medley> <http://dbpedia.org/ontology/bronzeMedalist> ?uri } ", "question": "Who was the bronze medalist of Swimming at the 2008 Summer Olympics  Men's 400 metre individual medley ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_\u2013_Men's_400_metre_individual_medley", "seq": "31,101", "label": "Swimming at the 2008 Summer Olympics  Men's 400 metre individual medley"}], "predicate mapping": [], "id": "6fc805721dc8491585c10f0f2e2592d1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys> } ", "question": "Which football players have Newell's Old Boys as youthclub?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newell's_Old_Boys", "seq": "28,44", "label": "Newell's Old Boys"}], "predicate mapping": [], "id": "08ebfe3921a342c3affe388dd2aea32c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Birdman_Enterprises> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}", "question": "Which country's people work in the Birdman enterprises?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Birdman_Enterprises", "seq": "35,53", "label": "Birdman enterprises"}], "predicate mapping": [], "id": "a858757ca891436e99cb9089f22a2dca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mariveles,_Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "List the sports associated with Mariveles, Bataan?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mariveles,_Bataan", "seq": "32,48", "label": "Mariveles, Bataan"}], "predicate mapping": [], "id": "c177520ccb0d4c55bc8fbdfc3bbb7506"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Estes> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri} ", "question": "Which team of Dan Shamash is also the debutant team of John Estes ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Estes", "seq": "55,64", "label": "John Estes"}, {"uri": "http://dbpedia.org/resource/Dan_Shamash", "seq": "14,24", "label": "Dan Shamash"}], "predicate mapping": [], "id": "b187393e6ede44b6997e10e532b27a42"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Toronto_Phantoms> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who is the tenant of the home stadium of Toronto Phantoms?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Phantoms", "seq": "41,56", "label": "Toronto Phantoms"}], "predicate mapping": [], "id": "8c5594e6c01f4f09988e31939b1c2799"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Little_Colorado_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Grand_Canyon> }", "question": "Does the little colorado river flow in the Grand Canyon?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Little_Colorado_River", "seq": "9,29", "label": "little colorado river"}, {"uri": "http://dbpedia.org/resource/Grand_Canyon", "seq": "43,54", "label": "Grand Canyon"}], "predicate mapping": [], "id": "6d42f2fa938d4141bd635759b1e81402"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Donn_Barber> <http://dbpedia.org/ontology/education> ?uri . }", "question": "Which educational institution of Jack Mcgregor is also the alma mater of Donn barber ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_McGregor", "seq": "33,45", "label": "Jack Mcgregor"}, {"uri": "http://dbpedia.org/resource/Donn_Barber", "seq": "73,83", "label": "Donn barber"}], "predicate mapping": [], "id": "90db48b330cc476e9694d1e7e62d38bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many religions are followed by the people in the Royal Thai Army?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "seq": "53,67", "label": "Royal Thai Army"}], "predicate mapping": [], "id": "827cb970029b44e580c1a44fcc272eb2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Words_of_Gold> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/Facebook_Messenger> <http://dbpedia.org/property/developer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What company made facebook messenger and is the platform where Words of Gold can be played?", "sparql_id": 316, "entity mapping": [{"uri": "http://dbpedia.org/resource/Words_of_Gold", "seq": "63,75", "label": "Words of Gold"}, {"uri": "http://dbpedia.org/resource/Facebook_Messenger", "seq": "18,35", "label": "facebook messenger"}], "predicate mapping": [], "id": "c2998ab4051f4bef95ec8cda3eae919f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manthena_Venkata_Raju> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri} ", "question": "What is the common party of the Manthena Venkata Raju and  B. Shiva Rao?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju", "seq": "32,52", "label": "Manthena Venkata Raju"}, {"uri": "http://dbpedia.org/resource/B._Shiva_Rao", "seq": "59,70", "label": "B. Shiva Rao"}], "predicate mapping": [], "id": "d3faf37f41144547b64d5521b4e67d1c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Barq's> <http://dbpedia.org/ontology/related> ?x . ?x <http://dbpedia.org/property/locationCity> ?uri  . }", "question": "In which cities can the beverage related to Barq's be found?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barq's", "seq": "44,49", "label": "Barq's"}], "predicate mapping": [], "id": "47d8d22a769c4d82a0f5e592f5fbdb24"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arsenal_Cider_House> <http://dbpedia.org/property/locationCity> ?uri } ", "question": "In which city is  Arsenal Cider House ? located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arsenal_Cider_House", "seq": "18,36", "label": "Arsenal Cider House"}], "predicate mapping": [], "id": "34200ced3ab544579326e2fc505d3bc8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/White_Plum_Asanga> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }", "question": "From which state do the White Plum Asangas come?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/White_Plum_Asanga", "seq": "24,41", "label": "White Plum Asangas"}], "predicate mapping": [], "id": "43702440e850423dbdd82331dfc624be"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri } ", "question": "List the ceremonial county of East Tilbury ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/East_Tilbury", "seq": "30,41", "label": "East Tilbury"}], "predicate mapping": [], "id": "78f031f16717475180bc9868531bd502"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Kennedy_family>  . }", "question": "How many people are there who have relationship with Kennedy family?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kennedy_family", "seq": "53,66", "label": "Kennedy family"}], "predicate mapping": [], "id": "6bb581d8ce694ddea69cd899f9f45e14"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Board_game> . ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport> . }", "question": "Which board game can be said as a mind based game?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Board_game", "seq": "6,15", "label": "board game"}, {"uri": "http://dbpedia.org/resource/Mind_sport", "seq": "34,43", "label": "mind based"}], "predicate mapping": [], "id": "d841f35943ac4a9cad0f6e33ba3a8650"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Albania> }", "question": "Was GM first aired in Albania?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "seq": "4,11", "label": "GM first"}, {"uri": "http://dbpedia.org/resource/Albania", "seq": "22,28", "label": "Albania"}], "predicate mapping": [], "id": "0f40d8629b94485292d2bdb7107b1da7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyLeague>}", "question": "In which ice hockey league, did the team coached by Joel Quenneville win?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joel_Quenneville", "seq": "52,67", "label": "Joel Quenneville"}], "predicate mapping": [], "id": "a851cba6c3fd4f91b75012d43e14ffe8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lula_J._Davis> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/John_McTaggart_(jockey)> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "What is the official residence of the Lula J. Davis which is also the death location of the John McTaggart (jockey) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lula_J._Davis", "seq": "38,50", "label": "Lula J. Davis"}, {"uri": "http://dbpedia.org/resource/John_McTaggart_(jockey)", "seq": "92,105", "label": "John McTaggart"}], "predicate mapping": [], "id": "4aa7041e78b14355a3150e15ab4c8cbb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "How many games have a publisher based in US?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "4,13", "label": "many games"}], "predicate mapping": [], "id": "32ef05a6fd884fddae5d465551cf17e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "How many fictional characters were humans?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Human", "seq": "35,40", "label": "humans"}], "predicate mapping": [], "id": "9af86fea79ba45b599a74bbd5341a401"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_H._Fields> <http://dbpedia.org/property/placeofburial> ?uri } ", "question": "Where was James H. Fields buried ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_H._Fields", "seq": "10,24", "label": "James H. Fields"}], "predicate mapping": [], "id": "72220051ada34ae48a21ec1e045f930f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/property/monarch> <http://dbpedia.org/resource/Elizabeth_II> }", "question": "Is Julia Gillard a part of monarch of elizabeth 2?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julia_Gillard", "seq": "3,15", "label": "Julia Gillard"}, {"uri": "http://dbpedia.org/resource/Elizabeth_II", "seq": "38,48", "label": "elizabeth 2"}], "predicate mapping": [], "id": "b1451c98780e446b815e9f342751cbb0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which cities come in the course of the river, into which Big Creek around Texas flows too?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)", "seq": "57,65", "label": "Big Creek"}], "predicate mapping": [], "id": "749558f932b9486b85df68d4eccfe5c0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri. <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri} ", "question": "Where are INKAS located which is also the state of origin for Jojo Chintoh ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jojo_Chintoh", "seq": "62,73", "label": "Jojo Chintoh"}, {"uri": "http://dbpedia.org/resource/INKAS", "seq": "10,14", "label": "INKAS"}], "predicate mapping": [], "id": "fa242acb93b743fea9e35fc94ee08a4e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Frost_King> <http://dbpedia.org/ontology/author> ?uri } ", "question": "Who wrote the frost king?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Frost_King", "seq": "10,23", "label": "the frost king"}], "predicate mapping": [], "id": "5cc36b5f5baf40ee961a155b20d24163"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri }", "question": "How many other key people are there of the non-profit organisations whose key people is Hillary Clinton ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hillary_Clinton", "seq": "88,102", "label": "Hillary Clinton"}], "predicate mapping": [], "id": "1d01420e4fe94bcb98a919c43f297926"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van't_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . }", "question": "How many races have the horses bred by Jacques Van't Hart participated in?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jacques_Van't_Hart", "seq": "39,56", "label": "Jacques Van't Hart"}], "predicate mapping": [], "id": "4553bf351e414e73a1faa2b005c17496"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }", "question": "Who is the spouse of Daniel Gibson? ", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Gibson", "seq": "21,33", "label": "Daniel Gibson"}], "predicate mapping": [], "id": "1f0f16883a764370b8cb9aae06e6d527"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri } ", "question": "Name the mouth country of Upper Neretva ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Upper_Neretva", "seq": "26,38", "label": "Upper Neretva"}], "predicate mapping": [], "id": "afc1eb64cfc24a95975afaf3b10c8429"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/English_Americans> <http://dbpedia.org/property/region> ?uri  . }", "question": "In how many regions is English American spoken?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/English_Americans", "seq": "23,45", "label": "English American spoken"}], "predicate mapping": [], "id": "3edcbc0ae531477c808768239f89c922"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penny_Lancaster> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri . }", "question": "Who has been married to both Penny Lancaster and Alana Stewart?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Penny_Lancaster", "seq": "29,43", "label": "Penny Lancaster"}, {"uri": "http://dbpedia.org/resource/Alana_Stewart", "seq": "49,61", "label": "Alana Stewart"}], "predicate mapping": [], "id": "3dfd41b5ba22435eb756a1d2034d0ce6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nguendula_Filipe> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/property/country> ?uri  . }", "question": "Which country does league of Nguendula Filipe belongs to?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nguendula_Filipe", "seq": "29,44", "label": "Nguendula Filipe"}], "predicate mapping": [], "id": "e1f667ae1cb6458ba9f14a1021e8c8b4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iqbal_Singh_(politician)> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri . }", "question": "Which party does Iqbal Singh and B Shiva Rao currently belong to?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iqbal_Singh_(politician)", "seq": "17,27", "label": "Iqbal Singh"}, {"uri": "http://dbpedia.org/resource/B._Shiva_Rao", "seq": "33,43", "label": "B Shiva Rao"}], "predicate mapping": [], "id": "5ffde5a7c874424cbd665253d618fcfe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot> <http://dbpedia.org/property/battleHonours> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }", "question": "What is the largest city of the country to whom, the battle honours of 65th Regiment of Foot were given?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot", "seq": "71,74", "label": "65th"}], "predicate mapping": [], "id": "20163596744342f4b6677a18dbc491d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr.?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "seq": "22,36", "label": "Brian Dunkleman"}, {"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "seq": "52,68", "label": "Harry Connick, Jr"}], "predicate mapping": [], "id": "77480fbfae19475b9120f4a4bb9dd835"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mickey_Roker> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Ella_Fitzgerald> }", "question": "Is Ella Fitzgerald associated with Mickey Roker?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mickey_Roker", "seq": "35,46", "label": "Mickey Roker"}, {"uri": "http://dbpedia.org/resource/Ella_Fitzgerald", "seq": "3,17", "label": "Ella Fitzgerald"}], "predicate mapping": [], "id": "007bb942a6da4c3f987fba8dff86e26b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri. <http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors> <http://dbpedia.org/ontology/series> ?uri} ", "question": "Name the notable work by Russell T Davis which is also the series of Doctor Who:Destiny of the Doctors ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "25,39", "label": "Russell T Davis"}, {"uri": "http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors", "seq": "69,101", "label": "Doctor Who:Destiny of the Doctors"}], "predicate mapping": [], "id": "075580e801b242728cc06ad403056096"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Seattle> }", "question": "Does Cascade Airways have a hub in Seattle?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cascade_Airways", "seq": "5,19", "label": "Cascade Airways"}, {"uri": "http://dbpedia.org/resource/Seattle", "seq": "35,41", "label": "Seattle"}], "predicate mapping": [], "id": "461bef912cd34b3cbadf533925a20f87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Fighting_Tiger> . ?uri <http://dbpedia.org/ontology/highschool> ?x  . }", "question": "Who did their highschool from a school whose mascot was a fighting tiger?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fighting_Tiger", "seq": "58,71", "label": "fighting tiger"}], "predicate mapping": [], "id": "d795c9f16e8347cba7a4dd7b2a27de50"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/district> <http://dbpedia.org/resource/Blytheville_School_District> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What are the school mascots in Blytheville school district?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blytheville_School_District", "seq": "31,57", "label": "Blytheville school district"}], "predicate mapping": [], "id": "295460c32de746aa8bcc193aaee595c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "What are some rivers over which there is a box girder bridge?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Box_girder_bridge", "seq": "43,59", "label": "box girder bridge"}], "predicate mapping": [], "id": "e22121aed5034a2ebb9a8b79dda6a98d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/OneDrive> . ?x <http://dbpedia.org/property/services> ?uri  . }", "question": "How many services does the company who made Onedrive provide?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "seq": "44,51", "label": "Onedrive"}], "predicate mapping": [], "id": "f4b98010a03e427385fe8ee2f13cffc8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Geoffrey_Burgon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie written by Monty Python and has music composer as Geoffrey Burgon ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monty_Python", "seq": "26,37", "label": "Monty Python"}, {"uri": "http://dbpedia.org/resource/Geoffrey_Burgon", "seq": "65,79", "label": "Geoffrey Burgon"}], "predicate mapping": [], "id": "b087abc428724248b54e69d4f2519f9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "question": "Where did the Vitis Vinifera grapes originate?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "seq": "14,27", "label": "Vitis Vinifera"}], "predicate mapping": [], "id": "05a75d41426e47feada1cd1a9d0f7dd2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hackweiser> <http://dbpedia.org/property/leaderName> ?uri } ", "question": "Who is the leader of Hackweiser ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hackweiser", "seq": "21,30", "label": "Hackweiser"}], "predicate mapping": [], "id": "8dc28cce9d654bfe8fbf70dc2b8673e9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/National_Capital_Region_Athletic_Association> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What sports are there at the universities affiliated to the National Capital Region Athletic Association?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Capital_Region_Athletic_Association", "seq": "60,103", "label": "National Capital Region Athletic Association"}], "predicate mapping": [], "id": "99eede401e804ca88838398c7452d788"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/Tiffany_Villarreal> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }", "question": "What musician is often associated with Tiffany Villarreal and wrote Same Song?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)", "seq": "68,76", "label": "Same Song"}, {"uri": "http://dbpedia.org/resource/Tiffany_Villarreal", "seq": "39,56", "label": "Tiffany Villarreal"}], "predicate mapping": [], "id": "968a91762e304939ac276e8bffeeb104"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juhu_Aerodrome> <http://dbpedia.org/property/cityServed> ?uri } ", "question": "Name the city served by Juhu Aerodrome ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Juhu_Aerodrome", "seq": "24,37", "label": "Juhu Aerodrome"}], "predicate mapping": [], "id": "bdab35771cbc423897c8ea4079e34696"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Ship>}", "question": "How many ships belong to states which has Unitary as government type ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Unitary_state", "seq": "42,51", "label": "Unitary as"}], "predicate mapping": [], "id": "4e212b324a314ddb90f5c7d4b4f980a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc.?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana", "seq": "31,37", "label": "Indiana"}, {"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "seq": "65,75", "label": "Kaplan, Inc"}], "predicate mapping": [], "id": "8885d643a55646fcb84f0bdfdd1920ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri . }", "question": "What common team are Mikhail Pashnin and Robin Kovacs expected to play for?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mikhail_Pashnin", "seq": "21,35", "label": "Mikhail Pashnin"}, {"uri": "http://dbpedia.org/resource/Robin_Kovacs", "seq": "41,52", "label": "Robin Kovacs"}], "predicate mapping": [], "id": "4e674cf3dbdb4a39a2fc15b0844576f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van't_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Which races has the horse bred by Jacques Van't Hart participated in?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jacques_Van't_Hart", "seq": "34,51", "label": "Jacques Van't Hart"}], "predicate mapping": [], "id": "cc34045be9af41d2a638daad32507b44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Liv_Ullmann> <http://dbpedia.org/ontology/partner> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards won by the spouse of Liv Ullmann ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liv_Ullmann", "seq": "41,51", "label": "Liv Ullmann"}], "predicate mapping": [], "id": "216d2d9373974e00a989034dbc7b8fd4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Which technological products were manufactured by Foxconn?", "sparql_id": 601, "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxconn", "seq": "50,56", "label": "Foxconn"}], "predicate mapping": [], "id": "dbf3f468b028435ead6f22d7094216f5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gibby_Haynes> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Saxophone> }", "question": "Does Gibby Haynes play the saxophone?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibby_Haynes", "seq": "5,16", "label": "Gibby Haynes"}, {"uri": "http://dbpedia.org/resource/Saxophone", "seq": "27,35", "label": "saxophone"}], "predicate mapping": [], "id": "40679e799df0477cb3225b955fbf7290"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movies directed by Stanley Kubrick?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "seq": "28,42", "label": "Stanley Kubrick"}], "predicate mapping": [], "id": "ce2de0ff47ec4745a8c1c17dbfe8758b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . }", "question": "Things going to the mediterranean sea also go where?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "20,36", "label": "mediterranean sea"}], "predicate mapping": [], "id": "24f384f61c0d499a9e5553258d63a154"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }", "question": "How many first drivers have participated when Scuderia Ferrari was a first team?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scuderia_Ferrari", "seq": "46,61", "label": "Scuderia Ferrari"}], "predicate mapping": [], "id": "c6faa5c6368d4328b6ff164344475881"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }", "question": "Was Tommy Tucker's Tooth animated by Walt Disney?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "4,23", "label": "Tommy Tucker's Tooth"}, {"uri": "http://dbpedia.org/resource/Walt_Disney", "seq": "37,47", "label": "Walt Disney"}], "predicate mapping": [], "id": "4afe90c0a2d24c9abb78be2dc41b3fa7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri } ", "question": "What is the religious affiliation of Wickramabahu Central College (National School) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "seq": "37,64", "label": "Wickramabahu Central College"}], "predicate mapping": [], "id": "418dfe53e2ba43708a7884f5047d9093"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Manchester> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What is the destinations of the airline whose headquarters is in Manchester?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manchester", "seq": "65,74", "label": "Manchester"}], "predicate mapping": [], "id": "e20cde96361c4690974f7cd6b67e3241"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/QDT> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }", "question": "Name all the bands which have members of QDT in them.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/QDT", "seq": "41,43", "label": "QDT"}], "predicate mapping": [], "id": "4afbc166875f40419999fc2110b6ec04"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Kwesi_Ocran> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "question": "What is the allegiance of the Albert Kwesi Ocran and state of origin of the Jojo Chintoh ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran", "seq": "30,47", "label": "Albert Kwesi Ocran"}, {"uri": "http://dbpedia.org/resource/Jojo_Chintoh", "seq": "76,87", "label": "Jojo Chintoh"}], "predicate mapping": [], "id": "70e501f13ec0430ab83bbd1ab7d9768e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . }", "question": "What appliance Sony made after the success of PlayStation 2?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "seq": "15,18", "label": "Sony"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "seq": "46,58", "label": "PlayStation 2"}], "predicate mapping": [], "id": "927bed1a09eb4ccebe9ce52f962a6866"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stone_Canoe> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri} ", "question": "Which publisher of Stone Canoe is also the university for which Michael Powell plays for ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stone_Canoe", "seq": "19,29", "label": "Stone Canoe"}, {"uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)", "seq": "64,77", "label": "Michael Powell"}], "predicate mapping": [], "id": "cc91a60484e342e48d63ac373d934455"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows are made by the channel whose predecessor was the Comedy Channel?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)", "seq": "61,78", "label": "the Comedy Channel"}], "predicate mapping": [], "id": "2a8fe39c189643d9bc607d285c32bdbf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies directed by Joel Schumacher?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joel_Schumacher", "seq": "32,46", "label": "Joel Schumacher"}], "predicate mapping": [], "id": "8c563a445be548dcbe86117be621f124"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre>  <http://dbpedia.org/property/owner> ?x .  ?x <http://dbpedia.org/property/owner> ?uri . }", "question": "Who is owner of the soccer club which owns the Cobham Training Centre?", "sparql_id": 9, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cobham_Training_Centre", "seq": "47,68", "label": "Cobham Training Centre"}], "predicate mapping": [], "id": "3fd7c86ca6824a3dbc88fe313eb4e1a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/militaryRank> ?uri  . }", "question": "What is the military rank of the commanders of Regiment of Mounted Grenadiers?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers", "seq": "47,76", "label": "Regiment of Mounted Grenadiers"}], "predicate mapping": [], "id": "ce57cc92bd8645e186f8da0f9cf915de"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "How many wars took place in Israel?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Israel", "seq": "28,33", "label": "Israel"}], "predicate mapping": [], "id": "d31842ed59c74ddba76748ddc86819ad"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Stites> <http://dbpedia.org/ontology/birthPlace> ?uri } ", "question": "Where is Richard Stites located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Stites", "seq": "9,22", "label": "Richard Stites"}], "predicate mapping": [], "id": "b602d2ec54c940bfb3308e310fb48114"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Semani languages are spoken in which countries?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Semnani_languages", "seq": "0,15", "label": "Semani languages"}], "predicate mapping": [], "id": "5a5552c654f843e2af53c66e80782253"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies serve the Australian region?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia", "seq": "29,38", "label": "Australian"}], "predicate mapping": [], "id": "27bc2760a11844569f85ac7e66cd3be3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ", "question": "Who wrote The Times They Are a-Changin?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "seq": "10,37", "label": "The Times They Are a-Changin"}], "predicate mapping": [], "id": "c6d5d4c7a5fb417ba8654ec416c2d263"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baikal_Mountains", "seq": "40,55", "label": "Baikal Mountains"}, {"uri": "http://dbpedia.org/resource/Arctic_Ocean", "seq": "79,90", "label": "Arctic Ocean"}], "predicate mapping": [], "id": "9c981beb9a30463aaf8b11f260183ccc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset> <http://dbpedia.org/ontology/opponent> ?uri } ", "question": "Who was the opponent of Robert Carr, 1st Earl of Somerset ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset", "seq": "24,56", "label": "Robert Carr, 1st Earl of Somerset"}], "predicate mapping": [], "id": "86746719f387413aaf461a7c70f4ef96"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Which organisation has superintendent as Lieutenant general (United States)?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)", "seq": "41,58", "label": "Lieutenant general"}], "predicate mapping": [], "id": "709ea85fe41942d3a0f49a39541f93ee"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri }", "question": "Give me the total number of architect of the buildings whose one of the  architect was Louis D. Astorino?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_D._Astorino", "seq": "87,103", "label": "Louis D. Astorino"}], "predicate mapping": [], "id": "681e53e68393454b864693eaa0ee2eb7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Where can i find companies which were started in Toronto?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "49,55", "label": "Toronto"}], "predicate mapping": [], "id": "72d5cb491ec94f14b8d9683a64782b9c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "question": "List the leaders of the government agencies whose jurisdiction was German-occupied Europe.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/German-occupied_Europe", "seq": "67,88", "label": "German-occupied Europe"}], "predicate mapping": [], "id": "26e27f1518224881bd791e4d2ed313b6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company released the software RenderMan?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/RenderMan_(software)", "seq": "36,44", "label": "RenderMan"}], "predicate mapping": [], "id": "0f04a6c5f26342d9a5b0cf207019d29d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "What is the total number of awards whose presenter's headquarters is Beverly Hills, California?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "seq": "69,93", "label": "Beverly Hills, California"}], "predicate mapping": [], "id": "ca43be7031db43e1bea3ea6da5eb0e12"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ", "question": "Which associate of Thomas bryan Martin is also the president of Carmichael ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin", "seq": "19,37", "label": "Thomas bryan Martin"}, {"uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)", "seq": "64,73", "label": "Carmichael"}], "predicate mapping": [], "id": "99747a8bc83f452f85a46aab60a6b3e2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fountain_Lake_Farm> <http://dbpedia.org/property/nearestCity> ?uri } ", "question": "What cities are nearer to Fuountain Lake Farm?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fountain_Lake_Farm", "seq": "26,44", "label": "Fuountain Lake Farm"}], "predicate mapping": [], "id": "537bdce8e8dd4a238a2dbb9059f5fe9f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/launchSite> ?uri }", "question": "Count the total number of launch site of the rockets which have been launched form Cape Canaveral Air Force Station ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station", "seq": "83,114", "label": "Cape Canaveral Air Force Station"}], "predicate mapping": [], "id": "1d08293ffa5440beaad63cd2ffd708a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows are made by Larry David?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Larry_David", "seq": "27,37", "label": "Larry David"}], "predicate mapping": [], "id": "e6d36153fb7c4298a55e5ee6c0738c1d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri } ", "question": "Name the home town of Cline Buckens ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/C\u00e9line_Buckens", "seq": "22,34", "label": "Cline Buckens"}], "predicate mapping": [], "id": "e45dcefc54af4edbbb07b37331ca8f14"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Cliff_Burton> }", "question": "Was Cliff Burton in Metallica?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metallica", "seq": "20,28", "label": "Metallica"}, {"uri": "http://dbpedia.org/resource/Cliff_Burton", "seq": "4,15", "label": "Cliff Burton"}], "predicate mapping": [], "id": "a4cea3abd1184b649cc7a5057169a76b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose network's sister station is BBC Two?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Two", "seq": "64,70", "label": "BBC Two"}], "predicate mapping": [], "id": "0b60b66059d842f79d0b4d9825973e79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Tell me the name of the Prime Time Entertainment Network's TV show whose Artist is Christopher Franke ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "seq": "83,100", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "seq": "24,55", "label": "Prime Time Entertainment Network"}], "predicate mapping": [], "id": "33f63e6829ad4508bbe0d83cf298e9df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "seq": "32,48", "label": "Harry Connick, Jr"}, {"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "72,84", "label": "Ryan Seacrest"}], "predicate mapping": [], "id": "7e720d99f29d4758adc7c2bcbf7b69d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "question": "How many kinds of games can be played on the Amiga?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amiga", "seq": "45,49", "label": "Amiga"}], "predicate mapping": [], "id": "d2b07c6181a64cf183b36bd37459e852"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Hungarian_Grand_Prix> <http://dbpedia.org/property/firstDriver> <http://dbpedia.org/resource/Michael_Schumacher> }", "question": "Is Michael Schumacher the first driver of the 1994 grand prix?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/1994_Hungarian_Grand_Prix", "seq": "46,60", "label": "1994 grand prix"}, {"uri": "http://dbpedia.org/resource/Michael_Schumacher", "seq": "3,20", "label": "Michael Schumacher"}], "predicate mapping": [], "id": "b8f31b0cece6487a95dd21301ce60003"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri } ", "question": "By which companies is RENFE Class 333 designed?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/RENFE_Class_333", "seq": "22,36", "label": "RENFE Class 333"}], "predicate mapping": [], "id": "5943549088b54cd687dab2cb1cd0bde2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paud> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "Who all have been a president of educational institutes in Paud?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paud", "seq": "59,62", "label": "Paud"}], "predicate mapping": [], "id": "3fb7e88b8f1943958246f70177f3e5dc"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> }", "question": "Does the asiana airlines fly into the Gimhae International Airport?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Asiana_Airlines", "seq": "9,23", "label": "asiana airlines"}, {"uri": "http://dbpedia.org/resource/Gimhae_International_Airport", "seq": "38,65", "label": "Gimhae International Airport"}], "predicate mapping": [], "id": "b242da1bee49478487a9dd713cc010da"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri} ", "question": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "18,31", "label": "Winston Bryant"}, {"uri": "http://dbpedia.org/resource/Joseph_Stiglitz", "seq": "53,67", "label": "Joseph Stiglitz"}], "predicate mapping": [], "id": "432f4fcb54a449ca830d2bb1037a274a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeevan_Mrityu> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "question": "In which city is the distributor of Jeevan Mrityu located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeevan_Mrityu", "seq": "36,48", "label": "Jeevan Mrityu"}], "predicate mapping": [], "id": "d76def8ae04b49f6b1d126ba95c0e2cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Nathaniel_P._Hill> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "What is the state of the senator whose successor is Nathaniel P. Hill ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nathaniel_P._Hill", "seq": "52,68", "label": "Nathaniel P. Hill"}], "predicate mapping": [], "id": "601a17c1d3db4a76b3e597bf95a55f39"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_Still> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Tom_Maniatis> <http://dbpedia.org/property/almaMater> ?uri} ", "question": "What is the alma mater of the James Still which is also the alma mater of Tom Maniatis?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Still", "seq": "30,40", "label": "James Still"}, {"uri": "http://dbpedia.org/resource/Tom_Maniatis", "seq": "74,85", "label": "Tom Maniatis"}], "predicate mapping": [], "id": "b6db05781cdc46cb9c9a8c83a5ad5276"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "Count the awards given to the recepients of the Becket fund for religious liberty.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty", "seq": "48,80", "label": "Becket fund for religious liberty"}], "predicate mapping": [], "id": "acbd41cd7e11412e8af8c45b2f8d29c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "What is the president whose lieutenants are Winston Bryant and Joe Purcell?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "44,57", "label": "Winston Bryant"}, {"uri": "http://dbpedia.org/resource/Joe_Purcell", "seq": "63,73", "label": "Joe Purcell"}], "predicate mapping": [], "id": "f602a0dfb487490098f078746235816a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/property/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "In all the grand prixes where the first team was Scuderia Ferrari, who all were the pole drivers?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scuderia_Ferrari", "seq": "49,64", "label": "Scuderia Ferrari"}], "predicate mapping": [], "id": "ecce3a142aae4853b61f92d76a787bfe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What is the layout of the automobiles designed by Olivier Boulay?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Olivier_Boulay", "seq": "50,63", "label": "Olivier Boulay"}], "predicate mapping": [], "id": "f9931eecbd9646808d8468edd4b7cc74"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mary_Poppins_(musical)> <http://dbpedia.org/ontology/author> ?uri } ", "question": "Who has written the mary poppins musical?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Poppins_(musical)", "seq": "20,31", "label": "mary poppins"}], "predicate mapping": [], "id": "13059b538b8e43ff9915f2e14199673a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "Cable stayed bridges have been used to cross over how many things?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cable-stayed_bridge", "seq": "0,19", "label": "Cable stayed bridges"}], "predicate mapping": [], "id": "3b73318138c443e789981e3e4d613dab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Politics_of_Brunei> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . }", "question": "Who maintains the stuff designed by the Brunei government?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Politics_of_Brunei", "seq": "36,45", "label": "the Brunei"}], "predicate mapping": [], "id": "5c175091321340c3bb110a48d78c7d74"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Avalon_Biddle> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)> <http://dbpedia.org/property/currentTeam> ?uri . }", "question": "Name the common current team of the Avalon biddle and John mcGuinness ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Avalon_Biddle", "seq": "36,48", "label": "Avalon biddle"}, {"uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)", "seq": "54,68", "label": "John mcGuinness"}], "predicate mapping": [], "id": "d39b6d7deb914f70b8ca353696734df4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/usedInWar> <http://dbpedia.org/resource/American_Revolutionary_War> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Weapon>}", "question": "List the origin of the weapons which were used in the American Revolutionary War.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Revolutionary_War", "seq": "54,79", "label": "American Revolutionary War"}], "predicate mapping": [], "id": "1a62e676c8a44df4b06c37ad3e9e5061"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clark_Daniel_Stearns> <http://dbpedia.org/ontology/militaryBranch> ?uri } ", "question": "To which military division does Clark Daniel Stearns belong?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clark_Daniel_Stearns", "seq": "32,51", "label": "Clark Daniel Stearns"}], "predicate mapping": [], "id": "7e03672a7f204b4e97641dcfd07042af"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri . }", "question": "In which race did Coneygree the racehorse and Fergie Sutherland the horse trainer participate?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fergie_Sutherland", "seq": "46,62", "label": "Fergie Sutherland"}, {"uri": "http://dbpedia.org/resource/Coneygree", "seq": "18,26", "label": "Coneygree"}], "predicate mapping": [], "id": "216172af192b4bbda827edcfaac62a26"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Betts_(Connecticut_politician)> <http://dbpedia.org/ontology/associate> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "What are the resting places of the associates of John Betts a, Connecticut politician?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Betts_(Connecticut_politician)", "seq": "49,58", "label": "John Betts"}], "predicate mapping": [], "id": "86f33792c9fe4d8bab748d5b5d0d13e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samuel_Isham> <http://dbpedia.org/property/education> ?uri } ", "question": "To which educational institutes is Samuel Isham associated to?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_Isham", "seq": "35,46", "label": "Samuel Isham"}], "predicate mapping": [], "id": "62d41f3590914838b15d806cdd5e887b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Canidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "Give me a count of mammals whose family is Canidae?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canidae", "seq": "43,49", "label": "Canidae"}], "predicate mapping": [], "id": "4d9cdb81e3394b4fab4a281827ca89fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Kharghar> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What sports can be played in Kharghar's schools", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kharghar", "seq": "29,36", "label": "Kharghar"}], "predicate mapping": [], "id": "b438f7d1e9084d009019042d4cae9c70"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Cluney> <http://dbpedia.org/property/origin> ?uri } ", "question": "Name the origin of Henry Cluney ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Cluney", "seq": "19,30", "label": "Henry Cluney"}], "predicate mapping": [], "id": "0737179a939545608332c4f961a2373c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/A._James_Clark> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "Which football team is in a city where A J Clark was a builder?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/A._James_Clark", "seq": "39,47", "label": "A J Clark"}], "predicate mapping": [], "id": "bfa3a1b13bce417a9befe12eabeda20d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Tamon_Ohta> . ?x <http://dbpedia.org/property/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}", "question": "Who originally wrote the manga which was later illustrated by Tamon Ohta?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tamon_Ohta", "seq": "62,71", "label": "Tamon Ohta"}], "predicate mapping": [], "id": "cffa17640f4e4456a5557b1ab1d65bdd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> } ", "question": "What are the current music bands of Chester Bennington?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chester_Bennington", "seq": "36,53", "label": "Chester Bennington"}], "predicate mapping": [], "id": "1d04a828ba6f427eac7fe74af1769003"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri } ", "question": "For which team does Ramiro Pea play ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a", "seq": "20,29", "label": "Ramiro Pea"}], "predicate mapping": [], "id": "6e7de39eb6f7486286b10b30a81637ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows is Russell Davies known for?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "18,31", "label": "Russell Davies"}], "predicate mapping": [], "id": "1cf9bbe76b1441ba8ad28dac3a1a50e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Erich_Kempka> <http://dbpedia.org/ontology/militaryUnit> ?x . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "question": "What is the leader of the government agency which is the military unit of Erich Kempka ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erich_Kempka", "seq": "74,85", "label": "Erich Kempka"}], "predicate mapping": [], "id": "70ff6c1f39f74fbe9d2b6229a7b825c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which offices were held by the politicians who held their allegiance to the union of american civil war?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_(American_Civil_War)", "seq": "76,80", "label": "union"}], "predicate mapping": [], "id": "6d8299cbdb824323a42be4e46d7c60c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oscar_and_Lucinda_(film)> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "Which awards did the narrator of Oscar and Lucinda win?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oscar_and_Lucinda_(film)", "seq": "33,49", "label": "Oscar and Lucinda"}], "predicate mapping": [], "id": "4034b4110a224b589124d0037cfd52c3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ", "question": "Name the serving line of Daund Junction railway station?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daund_Junction_railway_station", "seq": "25,54", "label": "Daund Junction railway station"}], "predicate mapping": [], "id": "222add5c80274f5b86e1221896e34865"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broca's_Brain> <http://dbpedia.org/property/subject> ?uri } ", "question": "On what subjects was Broca's Brain written?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broca's_Brain", "seq": "21,33", "label": "Broca's Brain"}], "predicate mapping": [], "id": "80f74a9018ae47769a3c567eee3066b9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri} ", "question": "Which purpose of the Maharashtra Chess Association is Abhijit kunte is also know for ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association", "seq": "21,49", "label": "Maharashtra Chess Association"}, {"uri": "http://dbpedia.org/resource/Abhijit_Kunte", "seq": "54,66", "label": "Abhijit kunte"}], "predicate mapping": [], "id": "c9f88e12945544de9fc544118870c95e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Cheers_Beacon_Hill>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which sitcom's company is Paramount Television and is located in Cheers Beacon hill ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "26,45", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Cheers_Beacon_Hill", "seq": "65,82", "label": "Cheers Beacon hill"}], "predicate mapping": [], "id": "c228f0f4e7004f3d84822625c29a1e93"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri} ", "question": "Which leader of united states house representatives election was married to Dolley Madison ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "seq": "16,74", "label": "united states house representatives election was married to"}, {"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "76,89", "label": "Dolley Madison"}], "predicate mapping": [], "id": "553c08c614e943c5afc6b87973a5558b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/CBS> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV shows owned by divisions of CBS?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/CBS", "seq": "40,42", "label": "CBS"}], "predicate mapping": [], "id": "d8a37738293349dca33bdc20e691151e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Shays'_Rebellion> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}", "question": "Who was the president under whom, a governor participated in Shay's rebellion?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shays'_Rebellion", "seq": "61,76", "label": "Shay's rebellion"}], "predicate mapping": [], "id": "d2f75ded680643ad862ef07d47d0df4d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What program is  presented by Brian Dunkleman and has artist as Simon Fuller?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "seq": "30,44", "label": "Brian Dunkleman"}, {"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "64,75", "label": "Simon Fuller"}], "predicate mapping": [], "id": "f109644380a448f0a102f3fd65f6cd48"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charat_District> <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Districts_of_Peru> }", "question": "Is the charat district a district in peru?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charat_District", "seq": "7,21", "label": "charat district"}, {"uri": "http://dbpedia.org/resource/Districts_of_Peru", "seq": "25,40", "label": "district in peru"}], "predicate mapping": [], "id": "c8aee0b9dcfc4996bee3b2aaec26e95e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Evenor_(collection)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/influenced> ?uri  . }", "question": "Who are the people who influenced the writers of Evenor ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Evenor_(collection)", "seq": "49,54", "label": "Evenor"}], "predicate mapping": [], "id": "403c3d0a80c9462f9baf9fbe7edcbff0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British_people> . ?uri <http://dbpedia.org/ontology/writer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are some movies written by British writers?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/British_people", "seq": "32,46", "label": "British writers"}], "predicate mapping": [], "id": "709cd39da1d043b3bd5f9c07c32b7664"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many different people own the Timeform award winners?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timeform", "seq": "34,41", "label": "Timeform"}], "predicate mapping": [], "id": "8052e68b93484281a78f6b9bbf08ce39"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Charles,_Prince_of_Wales> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "List presidents of the school whose one of the president is Charles. Prince of Wales ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles,_Prince_of_Wales", "seq": "60,83", "label": "Charles. Prince of Wales"}], "predicate mapping": [], "id": "af13e3f9870d4324b50ac10156f815b4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_O._Moseley> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "What is the mascot of alma mater of John O Moseley?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_O._Moseley", "seq": "36,49", "label": "John O Moseley"}], "predicate mapping": [], "id": "da229f76f78d4af7bc559dab6f9f3d00"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Henry McDaniel's trained horses have won which awards?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)", "seq": "0,13", "label": "Henry McDaniel"}], "predicate mapping": [], "id": "e00e1461078d4aacba00099390f97ced"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zabbaleen> <http://dbpedia.org/property/languages> ?uri } ", "question": "What are the Languages of Zabbaleen ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zabbaleen", "seq": "26,34", "label": "Zabbaleen"}], "predicate mapping": [], "id": "9985f6fa134e4a0eb0cb51e125757840"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri } ", "question": "List down the important people of The Elders ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Elders_(organization)", "seq": "34,43", "label": "The Elders"}], "predicate mapping": [], "id": "498a45b06c174d1d87a2f97ad4d3cd8c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Mel_Brooks> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Through which label did Mel Brooks produce his movie?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mel_Brooks", "seq": "24,33", "label": "Mel Brooks"}], "predicate mapping": [], "id": "b41762bf722a4fa7a80d93b0759d28c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "How many scientists are known for the Manhatten Project?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manhattan_Project", "seq": "38,54", "label": "Manhatten Project"}], "predicate mapping": [], "id": "58cce734a7f44455a0cf5a7d76f94bf2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation> <http://dbpedia.org/property/broadcastArea> ?uri. <http://dbpedia.org/resource/Michael_Medor> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "Which broadcast area of Mauritius Broadcasting Corporation is also the nationality of Michael Medor ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation", "seq": "24,57", "label": "Mauritius Broadcasting Corporation"}, {"uri": "http://dbpedia.org/resource/Michael_Medor", "seq": "86,98", "label": "Michael Medor"}], "predicate mapping": [], "id": "4230209176f74a3380d70219147cb40e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Datla_Satyanarayana_Raju> <http://dbpedia.org/ontology/party> ?uri} ", "question": "Which political party of Chandra Shekhar is also the political party of Datl Satyanarayana Raju ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chandra_Shekhar", "seq": "25,39", "label": "Chandra Shekhar"}, {"uri": "http://dbpedia.org/resource/Datla_Satyanarayana_Raju", "seq": "72,94", "label": "Datl Satyanarayana Raju"}], "predicate mapping": [], "id": "2b868081fdbe405391ff35702728b9d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have been presenters for NBC shows?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "seq": "41,43", "label": "NBC"}], "predicate mapping": [], "id": "772f236fcf8248868491ba2393667c59"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What river originates in Kingston Ontario?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingston,_Ontario", "seq": "25,40", "label": "Kingston Ontario"}], "predicate mapping": [], "id": "197329c3928340ed8151eeba459d4ce9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "What is the settlement whose neighboring municipalities is Lancy and mayor name is Esther Alder?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lancy", "seq": "59,63", "label": "Lancy"}, {"uri": "http://dbpedia.org/resource/Esther_Alder", "seq": "83,94", "label": "Esther Alder"}], "predicate mapping": [], "id": "8f3f49b511d24b11956f541a0bc155f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose executive producer is Douglas Netter?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Douglas_Netter", "seq": "56,69", "label": "Douglas Netter"}], "predicate mapping": [], "id": "9d8915a4779f49148599be5ab27a571d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/ontology/training> ?uri. <http://dbpedia.org/resource/Angela_Trusty> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Whihc alma mater of angela Trusty is also the training center of David Scherman ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Scherman", "seq": "65,78", "label": "David Scherman"}, {"uri": "http://dbpedia.org/resource/Angela_Trusty", "seq": "20,32", "label": "angela Trusty"}], "predicate mapping": [], "id": "e631c13576674e3a99d3ba6ec5186338"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . }", "question": "How many producers have worked for FremantleMedia productions?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/FremantleMedia", "seq": "35,48", "label": "FremantleMedia"}], "predicate mapping": [], "id": "ead02f462db84844be242c56c4066037"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippine_Ports_Authority> <http://dbpedia.org/ontology/successor> ?uri. <http://dbpedia.org/resource/Ruben_J._Villote> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "question": "Which successor of Philippine Ports Authority is the state of origin of Ruben J. Villote ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philippine_Ports_Authority", "seq": "19,44", "label": "Philippine Ports Authority"}, {"uri": "http://dbpedia.org/resource/Ruben_J._Villote", "seq": "72,87", "label": "Ruben J. Villote"}], "predicate mapping": [], "id": "b9c7b8e256e64e948ef9b537af9aa574"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Menelaus> <http://dbpedia.org/ontology/spouse> ?uri } ", "question": "Who is the spouse of Willian Menalaus?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Menelaus", "seq": "21,36", "label": "Willian Menalaus"}], "predicate mapping": [], "id": "ea6c7a88f9a643beb176f5c9e5c2a632"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Sirius_XM_Holdings>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What television show is aired on channel Sirius XM Holdings?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sirius_XM_Holdings", "seq": "41,58", "label": "Sirius XM Holdings"}], "predicate mapping": [], "id": "dafa96a08d1e4268be2cd01faa56f652"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Joe_Schilling> }", "question": "Is Joe Schilling the trainer of Nick Diaz?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nick_Diaz", "seq": "32,40", "label": "Nick Diaz"}, {"uri": "http://dbpedia.org/resource/Joe_Schilling", "seq": "3,15", "label": "Joe Schilling"}], "predicate mapping": [], "id": "ea9a58014dfc4200ba7ad903db937419"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri } ", "question": "Name the associate acts of  Martin Pugh?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Pugh", "seq": "28,38", "label": "Martin Pugh"}], "predicate mapping": [], "id": "e491eb48c1824d5b8ae4e30f80a67e90"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Willard_Fiske> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "Which domain's journals did Willard Fiske edit?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willard_Fiske", "seq": "28,40", "label": "Willard Fiske"}], "predicate mapping": [], "id": "151691666bec45238d4879d05f239dd4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/James_Hetfield>  . }", "question": "Is James Hetfield a band member of Metallica?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metallica", "seq": "35,43", "label": "Metallica"}, {"uri": "http://dbpedia.org/resource/James_Hetfield", "seq": "3,16", "label": "James Hetfield"}], "predicate mapping": [], "id": "d27aec4554814245aba1890efc687d41"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Bruce_Bochy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "Which baseball team is managed by Bruce Bochy?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Bochy", "seq": "34,44", "label": "Bruce Bochy"}], "predicate mapping": [], "id": "8d0300b08e544d4a98727862063b751f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mick_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}", "question": "Name the F1 racer with relative as Ralf Schumacher and has child named Mick Schumacher?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ralf_Schumacher", "seq": "35,49", "label": "Ralf Schumacher"}, {"uri": "http://dbpedia.org/resource/Mick_Schumacher", "seq": "71,85", "label": "Mick Schumacher"}], "predicate mapping": [], "id": "2a230169f9384e17b2a51ca0553f5fd4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hafth\u00f3r_J\u00fal\u00edus_Bj\u00f6rnsson> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ", "question": "Where is Hafthor Julius Bjornsson from?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hafth\u00f3r_J\u00fal\u00edus_Bj\u00f6rnsson", "seq": "9,32", "label": "Hafthor Julius Bjornsson"}], "predicate mapping": [], "id": "a0cdc0611f2c4b879e0205a8d1f477ba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "question": "How many islands belong to archipelagos located in the pacific?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pacific_Ocean", "seq": "55,61", "label": "pacific"}], "predicate mapping": [], "id": "f9b9f6eac29a4d1190ce28061725f806"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Stuart_Alan_Jones> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "How many other important things have been written by the creator of Stuart Alan Jones?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stuart_Alan_Jones", "seq": "68,84", "label": "Stuart Alan Jones"}], "predicate mapping": [], "id": "430faddac48e4969b0732a137f2dd260"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sleepy-Time_Squirrel> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the person known for who is the movie director of Sleepy-Time Squirrel ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sleepy-Time_Squirrel", "seq": "58,77", "label": "Sleepy-Time Squirrel"}], "predicate mapping": [], "id": "744c835886844eeca2d45ce92e2d5c28"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Andr\u00e9_Bourgeois> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}", "question": "What kind of music is produced at the record label founded by Andre Bourgeois?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andr\u00e9_Bourgeois", "seq": "62,76", "label": "Andre Bourgeois"}], "predicate mapping": [], "id": "41e26ecabe2c4da4a506fd9fee06b197"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ", "question": "Which political party of Arunachal Pradesh Legislative Assembly election, 2014 was the leader of Rishikesh ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014", "seq": "25,77", "label": "Arunachal Pradesh Legislative Assembly election, 2014"}, {"uri": "http://dbpedia.org/resource/Rishikesh", "seq": "97,105", "label": "Rishikesh"}], "predicate mapping": [], "id": "34a0e332264149388873f74ac371829a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What shows used to air on the channel which was earlier known as \"The Comedy Central\"?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)", "seq": "65,84", "label": "\"The Comedy Central\""}], "predicate mapping": [], "id": "482f01e78dbf4a2595e15e5c9ad32ab3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stephen_Urban> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri} ", "question": "What is the common battle fought by Stephen Urban and Ali Habib Mahmud ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_Urban", "seq": "36,48", "label": "Stephen Urban"}, {"uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud", "seq": "54,69", "label": "Ali Habib Mahmud"}], "predicate mapping": [], "id": "96b03adc9d314bfa8a97e5d5d784a62e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Mirabilis_(novel)> <http://dbpedia.org/property/coverArtist> ?uri } ", "question": "Who is the cover artist of Doctor Mirabilis (novel) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_Mirabilis_(novel)", "seq": "27,42", "label": "Doctor Mirabilis"}], "predicate mapping": [], "id": "ecbda26b25fc4319a9c2f2b629abdd69"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Whitey_Wistert> <http://dbpedia.org/property/debutteam> ?uri } ", "question": "Where did Whitney Wistert debut?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Whitey_Wistert", "seq": "10,24", "label": "Whitney Wistert"}], "predicate mapping": [], "id": "5a09891ab68147329f938e2031e236a0"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kirk_Hammett> <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Gibson_Flying_V> }", "question": "Does Kirk Hammett play the Gibson Flying V?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kirk_Hammett", "seq": "5,16", "label": "Kirk Hammett"}, {"uri": "http://dbpedia.org/resource/Gibson_Flying_V", "seq": "27,41", "label": "Gibson Flying V"}], "predicate mapping": [], "id": "d0ef14f4b99740528d80da61bfe95c01"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hampton_Roads_Rhinos> <http://dbpedia.org/property/league> ?uri } ", "question": "Name the sport league of Hampton Roads Rhinos ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hampton_Roads_Rhinos", "seq": "25,44", "label": "Hampton Roads Rhinos"}], "predicate mapping": [], "id": "d6d6f6e87c26462fb54e12d67e50ba61"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction> } ", "question": "What novels are belong to the genre of Utopian and dystopian fiction?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction", "seq": "39,67", "label": "Utopian and dystopian fiction"}], "predicate mapping": [], "id": "55717a4e06d940f9a6e2d0fee2b4709d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Sturm_College_of_Law> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "For all the senators who once studied in Sturm College of Law, give their burial place?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sturm_College_of_Law", "seq": "41,60", "label": "Sturm College of Law"}], "predicate mapping": [], "id": "e9566c930e254ae2893011a6acc92008"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WWTR> <http://dbpedia.org/ontology/programmeFormat> ?uri } ", "question": "What is the programme format of WWTR ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WWTR", "seq": "32,35", "label": "WWTR"}], "predicate mapping": [], "id": "1e42c94409f64658a8d74bc8554ae63d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Caio_Zanardi> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "question": "What is the home ground of the clubs managed by Ciao Zanardi?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Caio_Zanardi", "seq": "48,59", "label": "Ciao Zanardi"}], "predicate mapping": [], "id": "603c322f0c284704ba4d70f749b724b2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which people are known for appearing on the television show Dragon's Den?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)", "seq": "60,71", "label": "Dragon's Den"}], "predicate mapping": [], "id": "f78b3fe9e8724eb4810bdeed1a83e057"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "How many railway lines go through the station maintained by Public transport authority of western australia?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)", "seq": "60,85", "label": "Public transport authority"}], "predicate mapping": [], "id": "8504746ca9ea4d50aeb241b91e816acc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> ?uri } ", "question": "Name the university of Alexandre Tichonov ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexandre_Tichonov", "seq": "23,40", "label": "Alexandre Tichonov"}], "predicate mapping": [], "id": "f0185fa38b024eb1acf082b227049b42"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Dragons_of_Eden> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }", "question": "What subjects does the subsequent work of The Dragons of Eden deals with  ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Dragons_of_Eden", "seq": "42,60", "label": "The Dragons of Eden"}], "predicate mapping": [], "id": "0ac2d94a73f64e1181b207736b31a127"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gods_of_Egypt_(film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What  awards did the cast members of Gods of Egypt win?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gods_of_Egypt_(film)", "seq": "37,49", "label": "Gods of Egypt"}], "predicate mapping": [], "id": "a8d5e073c778486bb2d6db640cf49768"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri } ", "question": "Name the office of Richard Coke ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Coke", "seq": "19,30", "label": "Richard Coke"}], "predicate mapping": [], "id": "793d70e3bef54e1eaf081dc7e518ec08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . }", "question": "Carl Sagan has penned books on how many matters?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Sagan", "seq": "0,9", "label": "Carl Sagan"}], "predicate mapping": [], "id": "a20c86dfc1f64b2fb91429ef3c3c2445"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> } ", "question": "what are some units udner the US department of navy?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy", "seq": "20,50", "label": "udner the US department of navy"}], "predicate mapping": [], "id": "df37b7d93b35429b9671ea6a2a572b06"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Sanath_Weerakoon> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which allegiance of the John Kotelawala is also the  sovereign state of the Sanath Weerakoon ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Kotelawala", "seq": "24,38", "label": "John Kotelawala"}, {"uri": "http://dbpedia.org/resource/Sanath_Weerakoon", "seq": "76,91", "label": "Sanath Weerakoon"}], "predicate mapping": [], "id": "64a7ff80505c4d709cd0b19106d1cf2d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Gary_Kubiak> . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "Which city's teams have been coached by Gary Kubaik?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gary_Kubiak", "seq": "40,50", "label": "Gary Kubaik"}], "predicate mapping": [], "id": "9e5f22b859b14a329ce320977751c4ef"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ", "question": "What sport has made Eric Schiller famous, and has employed Craig Van Tibury?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "seq": "59,74", "label": "Craig Van Tibury"}, {"uri": "http://dbpedia.org/resource/Eric_Schiller", "seq": "20,32", "label": "Eric Schiller"}], "predicate mapping": [], "id": "bfebc6df79f647e8b83b027420295a9d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_P._Bagby> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Thomas_Holliday_Hicks> <http://dbpedia.org/property/order> ?uri . }", "question": "Which part of the US political framework did Arthur Bagby and Thomas H hicks both serve?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_P._Bagby", "seq": "45,56", "label": "Arthur Bagby"}, {"uri": "http://dbpedia.org/resource/Thomas_Holliday_Hicks", "seq": "62,75", "label": "Thomas H hicks"}], "predicate mapping": [], "id": "80c709f991704001a1b7c97b46375fb5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Who gave the voice to the characters sculpted by Clamp?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clamp_(manga_artists)", "seq": "49,53", "label": "Clamp"}], "predicate mapping": [], "id": "e9737da1b4f945b39ad2ed1d09ad062b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Hag\u00e5t\u00f1a,_Guam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the country whose administrative centre is Hagta, Guam?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hag\u00e5t\u00f1a,_Guam", "seq": "51,61", "label": "Hagta, Guam"}], "predicate mapping": [], "id": "2e12375aa47a42acaeab4fdba7d3890c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Bengalis> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "What is the political party of the of Bengalis ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bengalis", "seq": "38,45", "label": "Bengalis"}], "predicate mapping": [], "id": "47eda5b35417485b88697d20e48839d0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri} ", "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh) ", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kumta", "seq": "25,29", "label": "kumta"}, {"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "seq": "52,80", "label": "Indian general election, 2004"}], "predicate mapping": [], "id": "53e6578861dc4630ad27012f1696ddcf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Writings_and_Drawings> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Bob_Dylan> }", "question": "Was Writings and Drawings illustrated by Bob Dylan?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Writings_and_Drawings", "seq": "4,24", "label": "Writings and Drawings"}, {"uri": "http://dbpedia.org/resource/Bob_Dylan", "seq": "41,49", "label": "Bob Dylan"}], "predicate mapping": [], "id": "7d1d3175ed2b434ab6460785837338f2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ", "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare", "seq": "18,37", "label": "Motorpsycho Nitemare"}, {"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "seq": "57,79", "label": "The time are A-Changing"}], "predicate mapping": [], "id": "69b624f3af604a859f19a2adc6ffb845"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_XI> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . }", "question": "How many major shrine are there, of the saints whose beatified by Pope Pius XI ?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Pius_XI", "seq": "66,77", "label": "Pope Pius XI"}], "predicate mapping": [], "id": "3423cef33b1146fe9432cb59652d6c94"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)> <http://dbpedia.org/property/guests> ?uri } ", "question": "List the guest of the show The Other Side (The Outer Limits)?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)", "seq": "27,40", "label": "The Other Side"}], "predicate mapping": [], "id": "9e935a3e2d31428c87992e9f8bca00bd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri } ", "question": "Who are the characters of Batman Live?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Batman_Live", "seq": "26,36", "label": "Batman Live"}], "predicate mapping": [], "id": "9ae7378d981c4a9ca527a177a3042a8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/National_Park_Service> . ?uri <http://dbpedia.org/property/restingplace> ?x  . }", "question": "Who is buried at the place governed by National Park Service?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Park_Service", "seq": "39,59", "label": "National Park Service"}], "predicate mapping": [], "id": "329c2825367b4e55a7788f13852af6e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . }", "question": "Count all the things licensed as Software as a service.", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Software_as_a_service", "seq": "33,53", "label": "Software as a service"}], "predicate mapping": [], "id": "fef09ad090cf49e09d0a7cc2b6befc0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Class_(2016_TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What show  has theme music composer as Ron Grainer and at the same time  related to Class (2016 TV series)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ron_Grainer", "seq": "39,49", "label": "Ron Grainer"}, {"uri": "http://dbpedia.org/resource/Class_(2016_TV_series)", "seq": "84,88", "label": "Class"}], "predicate mapping": [], "id": "be7a77cb153746509db12c6ab5f4b69f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "question": "How many different kinds of games are published by Interplay Entertainment?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Interplay_Entertainment", "seq": "51,73", "label": "Interplay Entertainment"}], "predicate mapping": [], "id": "600d505ebfd1495fb2158a5b52fc4045"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "question": "How many different kinds of softwares have been released under the GPL license?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/GNU_General_Public_License", "seq": "67,77", "label": "GPL license"}], "predicate mapping": [], "id": "0651212fb47546e089477eecc4777e69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Artisan_Entertainment> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Who are the stars of the movies which are distributed by Artisan Entertainment ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Artisan_Entertainment", "seq": "57,77", "label": "Artisan Entertainment"}], "predicate mapping": [], "id": "d505d3763ec449168b961367ed3a424b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "List the schools of the athlete with Balgowan as one of the school ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal", "seq": "37,54", "label": "Balgowan as one of"}], "predicate mapping": [], "id": "726523874a964323aa5d43c5af238c05"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ", "question": "What awards have been once awarded to Ingmar Bergman, and have employed the service of Laemmle Theatres?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ingmar_Bergman", "seq": "38,51", "label": "Ingmar Bergman"}, {"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "seq": "87,102", "label": "Laemmle Theatres"}], "predicate mapping": [], "id": "b60924d7dde34c5d914cafff9edd9023"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri } ", "question": "Who produced wizards vs aliens?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wizards_vs_Aliens", "seq": "13,29", "label": "wizards vs aliens"}], "predicate mapping": [], "id": "53a85329c96443f8b76e32e8ee53d78c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bill_Murphy_(baseball)> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Jean_Segura> <http://dbpedia.org/ontology/team> ?uri . }", "question": "Which team did Bill Murphy and Jean Segura play for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Murphy_(baseball)", "seq": "15,25", "label": "Bill Murphy"}, {"uri": "http://dbpedia.org/resource/Jean_Segura", "seq": "31,41", "label": "Jean Segura"}], "predicate mapping": [], "id": "515670bd31cf40348dbbd059c8876662"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gene_Conley> <http://dbpedia.org/property/draftTeam> ?uri } ", "question": "What is the draft team of Gene Conley ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gene_Conley", "seq": "26,36", "label": "Gene Conley"}], "predicate mapping": [], "id": "fb00be1561c84ae488c92a78ab96340e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri. <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri} ", "question": "Which coach of Marquette Golden Eagles men's basketball team is also the head coach  of Virginia Tech Hokies men's basketball team ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team", "seq": "88,129", "label": "Virginia Tech Hokies men's basketball team"}, {"uri": "http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team", "seq": "15,59", "label": "Marquette Golden Eagles men's basketball team"}], "predicate mapping": [], "id": "cfdba0daa427405b9b5b656f75e5a771"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AH141> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What location country of AH141 is also the nation of malaysia Junior hockey league ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/AH141", "seq": "25,29", "label": "AH141"}, {"uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League", "seq": "53,81", "label": "malaysia Junior hockey league"}], "predicate mapping": [], "id": "2f848ce8ed2a4a2da8c4b8c892a738aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . }", "question": "On how many subjects has Random house publishers published books?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Random_House", "seq": "25,36", "label": "Random house"}], "predicate mapping": [], "id": "61b0b02309714b1ab6e78e1d416a872f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Funny_Face_(comedian)> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "What is the common nationality of Funny Face a comedian and that of Georgina Theodora Wood ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Funny_Face_(comedian)", "seq": "34,43", "label": "Funny Face"}, {"uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood", "seq": "68,89", "label": "Georgina Theodora Wood"}], "predicate mapping": [], "id": "39bdbe59a40c47c7afc10b6b85c1286a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps> . ?x <http://dbpedia.org/property/residence> ?uri  . }", "question": "Where do the judge advocate general corps live?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps", "seq": "13,40", "label": "judge advocate general corps"}], "predicate mapping": [], "id": "89d174ad69534ed48313311864b3fca6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri } ", "question": "What are the things Eric Schiller known for ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Schiller", "seq": "20,32", "label": "Eric Schiller"}], "predicate mapping": [], "id": "4988ef2fd0df4d35b243ffe31755c171"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walt_Disney_Studios_(division)> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar> }", "question": "Does Walt Disney Studio have a subsidiary called PixarCascadia_", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Walt_Disney_Studios_(division)", "seq": "5,22", "label": "Walt Disney Studio"}, {"uri": "http://dbpedia.org/resource/Pixar", "seq": "49,62", "label": "PixarCascadia_"}], "predicate mapping": [], "id": "0961c5610ded49229b123d87522e0ce9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jurgens_Site> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jimmie_Heuga> <http://dbpedia.org/property/deathPlace> ?uri} ", "question": "Which nearest city of Jurgens Site is the death plce of Jimmie Heuga ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jurgens_Site", "seq": "22,33", "label": "Jurgens Site"}, {"uri": "http://dbpedia.org/resource/Jimmie_Heuga", "seq": "56,67", "label": "Jimmie Heuga"}], "predicate mapping": [], "id": "eda67bd4365e424cb594decde543c99e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Zambezi_River_Authority> . ?x <http://dbpedia.org/ontology/river> ?uri  . }", "question": "On which river are there things belonging to zambezi river authority?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambezi_River_Authority", "seq": "45,67", "label": "zambezi river authority"}], "predicate mapping": [], "id": "533717b10afe49fb9b10cc531f19ce41"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}", "question": "What are the nearest city to the historic places whose one of the nearest city is Wisconsin?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wisconsin", "seq": "82,90", "label": "Wisconsin"}], "predicate mapping": [], "id": "f75be1c0090f4e99b6015f9af7d2589d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri. <http://dbpedia.org/resource/Ordnungspolizei> <http://dbpedia.org/ontology/leader> ?uri . }", "question": "Who is the leader of the Kriminalpolizei and Ordnungspolizei?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kriminalpolizei", "seq": "25,39", "label": "Kriminalpolizei"}, {"uri": "http://dbpedia.org/resource/Ordnungspolizei", "seq": "45,59", "label": "Ordnungspolizei"}], "predicate mapping": [], "id": "df34b20d025a49648aa1d1d8d09d8533"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vance_Johnson> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Wide_receiver> }", "question": "Does vance johnson play as a wide receiver?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vance_Johnson", "seq": "5,17", "label": "vance johnson"}, {"uri": "http://dbpedia.org/resource/Wide_receiver", "seq": "29,41", "label": "wide receiver"}], "predicate mapping": [], "id": "ee0133ba177848fdaa63a9a0a5fc217d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virendra_Kataria> <http://dbpedia.org/property/party> ?uri } ", "question": "To which political party does Virendra Kataria belongs ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Virendra_Kataria", "seq": "30,45", "label": "Virendra Kataria"}], "predicate mapping": [], "id": "80973c292e414e8890ed3a1de7f362bf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . }", "question": "How many different products are there of the companies located in the US?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "45,61", "label": "companies located"}], "predicate mapping": [], "id": "65cb7ea9917b44e29c8adbc3e95d1470"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri } ", "question": "Which are the countires where Pioneer Corporation has flourished?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pioneer_Corporation", "seq": "30,48", "label": "Pioneer Corporation"}], "predicate mapping": [], "id": "85d2a3aff592486fbe48e0f6d67cebf3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WMDN> <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri } ", "question": "List all the former broadcast network of WMDN ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WMDN", "seq": "41,44", "label": "WMDN"}], "predicate mapping": [], "id": "76fc4d62d2b74c798a3b6b61c4d1ff6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri . }", "question": "Which ethnicity do Linda Hogan and Riley Reid come from?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Hogan", "seq": "19,29", "label": "Linda Hogan"}, {"uri": "http://dbpedia.org/resource/Riley_Reid", "seq": "35,44", "label": "Riley Reid"}], "predicate mapping": [], "id": "406e904e414b410dadccc945a9ed205b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Costanzo_Preve> <http://dbpedia.org/ontology/influencedBy> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who are the people which were the influencer of the person, who influenced Costanzo Preve ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Costanzo_Preve", "seq": "75,88", "label": "Costanzo Preve"}], "predicate mapping": [], "id": "70fe1d61709e49bd895d4cb06d045664"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Edward_Niesen> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which city do both Arthur Ross and Edward Niesen come from?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_A._Ross", "seq": "19,29", "label": "Arthur Ross"}, {"uri": "http://dbpedia.org/resource/Edward_Niesen", "seq": "35,47", "label": "Edward Niesen"}], "predicate mapping": [], "id": "31afaf9538e24202876296db1b6f2b87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Tony_Romo>  . }", "question": "Who is married to Tony Ramo", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Romo", "seq": "18,26", "label": "Tony Ramo"}], "predicate mapping": [], "id": "75d8ae08f021434f8b64b8c089efb56e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri. <http://dbpedia.org/resource/Ron_Galotti> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which county of Tremont Avenue is also the birht place of Ron Galotti ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tremont_Avenue", "seq": "16,29", "label": "Tremont Avenue"}, {"uri": "http://dbpedia.org/resource/Ron_Galotti", "seq": "58,68", "label": "Ron Galotti"}], "predicate mapping": [], "id": "ce59dab6544f465aa821fd5c205187fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season> <http://dbpedia.org/ontology/coach> ?x . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GridironFootballPlayer>}", "question": "What is the debut team of the gridiron football player who coached the 1931 Staten Island Stapletons season ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season", "seq": "71,106", "label": "1931 Staten Island Stapletons season"}], "predicate mapping": [], "id": "2f6ed9508dab4dc695a219ed4c3c90b6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri } ", "question": "Who wrote Heroman?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heroman", "seq": "10,16", "label": "Heroman"}], "predicate mapping": [], "id": "3e54cd98e79d4fa6b3b2dc7f2674c5d8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }", "question": "What is the region of the successor of Mr. Jerome B. Chaffee ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerome_B._Chaffee", "seq": "43,59", "label": "Jerome B. Chaffee"}], "predicate mapping": [], "id": "d21e712713ec4e57824cf6b277c93553"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri . }", "question": "Who appointed Joseph Clay and William Cushing to their office?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)", "seq": "14,24", "label": "Joseph Clay"}, {"uri": "http://dbpedia.org/resource/William_Cushing", "seq": "30,44", "label": "William Cushing"}], "predicate mapping": [], "id": "c641ab471c154f5f85be724766cc04f4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zambezi> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> }", "question": "Was Zambezi originate in the north western province of zambia?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambezi", "seq": "4,10", "label": "Zambezi"}, {"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "29,60", "label": "north western province of zambia"}], "predicate mapping": [], "id": "8e833704b64d4d40bbff73d5746d98c4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri } ", "question": "Who first ascented a mountain of Cathedral Peak (California) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)", "seq": "33,46", "label": "Cathedral Peak"}], "predicate mapping": [], "id": "e118a1a544bf48ee9836c7b3ce7fc651"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri} ", "question": "Name the licensee of the WRVU who has the affiliation of  Monroe Carell Jr. Children's Hospital at Vanderbilt ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/WRVU", "seq": "25,28", "label": "WRVU"}, {"uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt", "seq": "58,108", "label": "Monroe Carell Jr. Children's Hospital at Vanderbilt"}], "predicate mapping": [], "id": "2cac0aa4df6d4ad6918d462993e33e80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards did the film director of The Haunted House win ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "seq": "37,53", "label": "The Haunted House"}], "predicate mapping": [], "id": "4aa80af1497f49ecbcd3bd93990e9df9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Turin> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }", "question": "In which war did the units garrisoned at Turin fight?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Turin", "seq": "41,45", "label": "Turin"}], "predicate mapping": [], "id": "00f3d768f79c46eeaa5348f45889e34e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Douglas,_Isle_of_Man> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What all is produced by companies in Douglas, Isle of Man?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Douglas,_Isle_of_Man", "seq": "37,56", "label": "Douglas, Isle of Man"}], "predicate mapping": [], "id": "3abffed2b2504a16b1cbaecbe05b2bde"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "What is the number of occupation of the people who died in tampa bay, florida?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tampa,_Florida", "seq": "65,76", "label": "bay, florida"}], "predicate mapping": [], "id": "01e74239bfaf4b1d8de9cb7ed623a268"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Phish> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }", "question": "Whose theme music was composed by a band which collaborated with Phish?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Phish", "seq": "65,69", "label": "Phish"}], "predicate mapping": [], "id": "b4b48ab141a24da6b6df5ede9f5bfbf3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Mus\u00e9e_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}", "question": "Whose work is in the Musee d'orsay?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mus\u00e9e_d'Orsay", "seq": "21,33", "label": "Musee d'orsay"}], "predicate mapping": [], "id": "5d06f0ac2946469f965844d87feb57c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "Which president had lieutenants whose governor was Bill Clinton?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Clinton", "seq": "51,62", "label": "Bill Clinton"}], "predicate mapping": [], "id": "504f89e982944a649b1a6d9e2106f944"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/GNU_TeXmacs> <http://dbpedia.org/ontology/developer> ?uri . }", "question": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/GNOWSYS", "seq": "48,54", "label": "GNOWSYS"}, {"uri": "http://dbpedia.org/resource/GNU_TeXmacs", "seq": "60,70", "label": "GNU TeXmacs"}], "predicate mapping": [], "id": "32bebb59a0fb43aab77ff13a2fba2b4f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liberty_Bell> <http://dbpedia.org/ontology/municipality> ?uri } ", "question": "What is the municipality of Liberty Bell ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liberty_Bell", "seq": "28,39", "label": "Liberty Bell"}], "predicate mapping": [], "id": "b5774df2305a4772bad9f84bc85d5d62"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Guitar_Corporation> } ", "question": "Who all are known to play the Gibson Guitar Corporation?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibson_Guitar_Corporation", "seq": "30,54", "label": "Gibson Guitar Corporation"}], "predicate mapping": [], "id": "2d858381e01142748e34b68e8303754c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri} ", "question": "Which animator of the The Skeleton Dance is also the  cinematographer of the Mickey's Mellerdrammer?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "22,39", "label": "The Skeleton Dance"}, {"uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer", "seq": "77,98", "label": "Mickey's Mellerdrammer"}], "predicate mapping": [], "id": "0ffa12b348584eac8502b778b6e3013a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Copa_Centroamericana> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who built the stadium which was rented for the 2013 Copa Centroamericana ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013_Copa_Centroamericana", "seq": "47,71", "label": "2013 Copa Centroamericana"}], "predicate mapping": [], "id": "0211cc1ff7b94942958a04da756282b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Brian Dunkleman is the presenter of what TV show?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "seq": "0,14", "label": "Brian Dunkleman"}], "predicate mapping": [], "id": "74833a9d360e4944ba62ebb5ff1633fb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Craig_Robinson_(actor)> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "How many fictional characters are there in a series in which Craig Robinson acted?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Robinson_(actor)", "seq": "61,74", "label": "Craig Robinson"}], "predicate mapping": [], "id": "c476c7a2e55b4c00a92923d7d08a1e5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show is the subsequent work of Frasier and the opening theme is Gary Portnoy?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "seq": "48,54", "label": "Frasier"}, {"uri": "http://dbpedia.org/resource/Gary_Portnoy", "seq": "81,92", "label": "Gary Portnoy"}], "predicate mapping": [], "id": "eea1dcd97f494d799d7fcacd6bad1685"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "question": "in which country does the river end which originates in Lebrsnik?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lebr\u0161nik", "seq": "56,63", "label": "Lebrsnik"}], "predicate mapping": [], "id": "8b10de10cf09466f94c4570b9c61aa72"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Lima> } ", "question": "Which country's largest city is Lima?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lima", "seq": "32,35", "label": "Lima"}], "predicate mapping": [], "id": "ac8eb701fbd94707ac65d5bd874c8b7a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gregorios_Bernardakis> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List the awards given to the relatives of Gregorios Bernardakis.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregorios_Bernardakis", "seq": "42,62", "label": "Gregorios Bernardakis"}], "predicate mapping": [], "id": "89b4110b9d064a0fb8feff6aa5aa2ff2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/distributor> ?x  . }", "question": "Count all the games whose distributors are located in America", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "26,41", "label": "distributors are"}], "predicate mapping": [], "id": "18993c411e4b43aa9d11cab3a62f9f88"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri} ", "question": "What is that something which made Breann McGregor famous, and Frank Thorne received as an award?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Thorne", "seq": "62,73", "label": "Frank Thorne"}, {"uri": "http://dbpedia.org/resource/Breann_McGregor", "seq": "34,48", "label": "Breann McGregor"}], "predicate mapping": [], "id": "8f2c9b53aca646c08bfe2eeee0544df4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri. <http://dbpedia.org/resource/Ford_Straight-6_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "question": "Which builder of Ford Straight-6 engine is also the automobile latform provider of Chiva bus ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chiva_bus", "seq": "83,91", "label": "Chiva bus"}, {"uri": "http://dbpedia.org/resource/Ford_Straight-6_engine", "seq": "17,38", "label": "Ford Straight-6 engine"}], "predicate mapping": [], "id": "6099a612c08a4e97be03115bc7433ad2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Mount_Moosilauke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What is the university whose campus is Mount Moosilauke?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Moosilauke", "seq": "39,54", "label": "Mount Moosilauke"}], "predicate mapping": [], "id": "b58bac57950f452cbbce5e9e0faa159d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ", "question": "Which non fiction of the Thud is also the field of the Jon Speelman ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thud!", "seq": "25,28", "label": "Thud"}, {"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "55,66", "label": "Jon Speelman"}], "predicate mapping": [], "id": "c7a0d930b20447e4a742431bbe7d440d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "question": "What is the owning organisation of the Ford Kansas City Assembly Plant and also the builder of the Ford Y-block engine?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "seq": "39,69", "label": "Ford Kansas City Assembly Plant"}, {"uri": "http://dbpedia.org/resource/Ford_Y-block_engine", "seq": "99,117", "label": "Ford Y-block engine"}], "predicate mapping": [], "id": "b88127c669a54c12aa05eef809943bc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Ekstraliga_(speedway)> . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "question": "what are the nicknames of the people who are in Ekstraliga?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ekstraliga_(speedway)", "seq": "48,57", "label": "Ekstraliga"}], "predicate mapping": [], "id": "226f3a3f6f844c5fbfee523f31ed439d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aarnoud_van_Heemstra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who is a famous relative of Aaround Van Heemstra?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aarnoud_van_Heemstra", "seq": "28,47", "label": "Aaround Van Heemstra"}], "predicate mapping": [], "id": "dc1d2cb750ca4e2e9f9a74ccd1c6c5cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Igor_Shpillband> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "question": "List the former partner of the figure skaters whose former choreographer was Igor Shpillband.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Igor_Shpillband", "seq": "77,91", "label": "Igor Shpillband"}], "predicate mapping": [], "id": "2c84a9a631f743f0b2302b12af7aa606"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the television shows whose distributors are located at Burbank, California.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burbank,_California", "seq": "60,78", "label": "Burbank, California"}], "predicate mapping": [], "id": "e575b8c0e88a481db2a8c94388a81fdc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kakae> <http://dbpedia.org/property/title> ?uri } ", "question": "What is the title of Kakae ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kakae", "seq": "21,25", "label": "Kakae"}], "predicate mapping": [], "id": "1ccd1c0a38d94273b20369bad3a4e3e6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri } ", "question": "List all the line of Vadodara Junction railway station?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "seq": "21,53", "label": "Vadodara Junction railway station"}], "predicate mapping": [], "id": "bf81c3eaa06d49e9b4022d317a8b2af0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Salford_City_F.C.> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "question": "What is the birth city of the Salford City F.C players ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Salford_City_F.C.", "seq": "30,45", "label": "Salford City F.C"}], "predicate mapping": [], "id": "c6d8bd8b828a4ffca756fcd6a7b9cad6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri } ", "question": "List the team for which Doug Acomb played ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doug_Acomb", "seq": "24,33", "label": "Doug Acomb"}], "predicate mapping": [], "id": "2832515b3cd94fbaba52612934519520"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "question": "To which US states does the roads belong which meet at the East Whiteland Township in Pennsylvania?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania", "seq": "59,97", "label": "East Whiteland Township in Pennsylvania"}], "predicate mapping": [], "id": "a12b9f66bee84b9db6177e03023690f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Birmingham_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "To what other locations does the airlines have flights, who also fly to Birmingham?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Birmingham_Airport", "seq": "72,81", "label": "Birmingham"}], "predicate mapping": [], "id": "655aee0c067641ffbd67c9dac3ce438a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri  . }", "question": "How many states does the Pioneer corporation operate in?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pioneer_Corporation", "seq": "25,43", "label": "Pioneer corporation"}], "predicate mapping": [], "id": "91ea8eda1f9b4116a2f984f432ff6ea6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oldsmobile_88> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . }", "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oldsmobile_88", "seq": "64,76", "label": "Oldsmobile 88"}], "predicate mapping": [], "id": "9559251273fe4cfd94ae14dc401612d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people are there whose children died in Indiana?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana", "seq": "49,55", "label": "Indiana"}], "predicate mapping": [], "id": "bcf6d38828d24556aa001e0484100b31"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d'Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri. <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri . }", "question": "Which mountain range is the one with Ponte d'Aveneyre and Le Gibloux?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pointe_d'Aveneyre", "seq": "37,52", "label": "Ponte d'Aveneyre"}, {"uri": "http://dbpedia.org/resource/Le_Gibloux", "seq": "58,67", "label": "Le Gibloux"}], "predicate mapping": [], "id": "ad765492f88c48c3b2bc9040652ce954"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "What is the appliance which uses the central processing unit manufactured by Marvell Technology Group?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marvell_Technology_Group", "seq": "77,100", "label": "Marvell Technology Group"}], "predicate mapping": [], "id": "dd14801af7dd48b5b9c3860b4f2ac690"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "In which team was the person drafted who has studied at the Worcester college, Oxford?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Worcester_College,_Oxford", "seq": "60,84", "label": "Worcester college, Oxford"}], "predicate mapping": [], "id": "c0b4eebc87244ce9a17b1517fc5a7e4f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tower> <http://dbpedia.org/ontology/militaryBranch> ?uri } ", "question": "What is the military branch of John Tower ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tower", "seq": "31,40", "label": "John Tower"}], "predicate mapping": [], "id": "94efeafa9ef24e1391fdb5bed1b465b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }", "question": "How many people used to play in the youthclub of FC Barcelona?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/FC_Barcelona", "seq": "49,60", "label": "FC Barcelona"}], "predicate mapping": [], "id": "8c423ae07cd444eca119288d4f151034"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Bremerton> <http://dbpedia.org/property/type> ?uri } ", "question": "What is the type of Naval Station Bremerton ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Naval_Station_Bremerton", "seq": "20,42", "label": "Naval Station Bremerton"}], "predicate mapping": [], "id": "09496228c50d4dd0829420bde30ad222"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)> . ?x <http://dbpedia.org/property/office> ?uri  . }", "question": "Count the number of offices held by people who have their allegiances with the american civil war union?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_(American_Civil_War)", "seq": "98,102", "label": "union"}], "predicate mapping": [], "id": "a5f83e85563f44108c787e395fe60425"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Kevin_Tsujihara> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are some movies whose distributors are led by Kevin Tsujihara?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kevin_Tsujihara", "seq": "51,65", "label": "Kevin Tsujihara"}], "predicate mapping": [], "id": "5dd25945300c4882b7f41d51f864edbf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What are the other band members of the band one of whose current member is Robert De Niro?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_De_Niro", "seq": "75,88", "label": "Robert De Niro"}], "predicate mapping": [], "id": "d8805aed27b84e74a23977910500e942"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Quagmire's_Quagmire> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }", "question": "Who are the relatives of the character after which Quagmire's Quagmire was made?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quagmire's_Quagmire", "seq": "51,69", "label": "Quagmire's Quagmire"}], "predicate mapping": [], "id": "3f32bfb3b7df4136b3983a9dfe3beed0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri } ", "question": "Who are the tenants of MasterCard Centre?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/MasterCard_Centre", "seq": "23,39", "label": "MasterCard Centre"}], "predicate mapping": [], "id": "694a307769eb4f02b15d499978c98c6a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/property/president> ?uri } ", "question": "Who is the President of United World College of Costa Rica ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica", "seq": "24,57", "label": "United World College of Costa Rica"}], "predicate mapping": [], "id": "ba8179bb4b874d8a8ec1115fefbd1fb2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/industry> <http://dbpedia.org/resource/Video_game> }", "question": "Is nintendo in the video games industry?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nintendo", "seq": "3,10", "label": "nintendo"}, {"uri": "http://dbpedia.org/resource/Video_game", "seq": "19,29", "label": "video games"}], "predicate mapping": [], "id": "fab1a809ffa043059b189683eb9c205e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "In which movies directed by Orson Welles has Bernard Herrmann as music composer ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bernard_Herrmann", "seq": "45,60", "label": "Bernard Herrmann"}, {"uri": "http://dbpedia.org/resource/Orson_Welles", "seq": "28,39", "label": "Orson Welles"}], "predicate mapping": [], "id": "bc7257226afd49379f8622d5735bd59f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia> . ?x <http://dbpedia.org/property/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}", "question": "What is the major shrine of the monarchs whose successor is Dragimir of Travunia and Zachlumia?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia", "seq": "60,93", "label": "Dragimir of Travunia and Zachlumia"}], "predicate mapping": [], "id": "4279f6d60e2b40aca3b49c6d92f96f80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/United_Center> . ?uri <http://dbpedia.org/property/team> ?x  . }", "question": "Who all play for the teams performing in the united center?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Center", "seq": "45,57", "label": "united center"}], "predicate mapping": [], "id": "2361961d044049bfb2ea19866fcc28b9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gold_Coast_Football_Club> <http://dbpedia.org/property/location> ?uri } ", "question": "Where is the gold coast football club located?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Coast_Football_Club", "seq": "13,36", "label": "gold coast football club"}], "predicate mapping": [], "id": "9db99f7b0b424eef87494372c398bb83"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ", "question": "Which award that has been given to James F Obrien, had used Laemmle Theatres for some service?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "seq": "60,75", "label": "Laemmle Theatres"}, {"uri": "http://dbpedia.org/resource/James_F._O'Brien", "seq": "35,48", "label": "James F Obrien"}], "predicate mapping": [], "id": "d499386227fb4943ad773dfaf48271a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Dinamo_Krasnodar> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Where are the Dinamo Krasnodar players born?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dinamo_Krasnodar", "seq": "14,29", "label": "Dinamo Krasnodar"}], "predicate mapping": [], "id": "613d4281e6a24597aed9eb6dc6ddae4a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Alexius_Meinong> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexius_Meinong", "seq": "71,85", "label": "Alexius Meinong"}], "predicate mapping": [], "id": "0f0065ebc6d9448a9925cf985837df80"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri } ", "question": "Who is the founder of Wuropean School, Karlsruhe ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_School,_Karlsruhe", "seq": "22,47", "label": "Wuropean School, Karlsruhe"}], "predicate mapping": [], "id": "13a6659956ff48d8ad29034fecc6357d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Croton_River> }", "question": "Does the croton river flow into the hudson?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hudson_River", "seq": "9,20", "label": "croton river"}, {"uri": "http://dbpedia.org/resource/Croton_River", "seq": "9,20", "label": "croton river"}], "predicate mapping": [], "id": "459448bd75ec43279fcae4db9efacd08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WASH_(FM)> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . }", "question": "List the program genres of the sister stations of 97.1 WASH FM?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/WASH_(FM)", "seq": "55,58", "label": "WASH"}], "predicate mapping": [], "id": "6f280f2da9014ea5b9dd55d08cd22cd5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Koay_Teng_Hai> <http://dbpedia.org/ontology/religion> ?uri} ", "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "seq": "20,33", "label": "Paul Demiville"}, {"uri": "http://dbpedia.org/resource/Koay_Teng_Hai", "seq": "56,68", "label": "Koay Teng Hai"}], "predicate mapping": [], "id": "8994dc83e54f403699937e9328a327a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . }", "question": "Count all the band members who are in Bands which have signed up with Entertainment One Music?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Entertainment_One_Music", "seq": "70,92", "label": "Entertainment One Music"}], "predicate mapping": [], "id": "0bc0430408384e73b48e9e08a71e7f11"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": " Erik Jendresen is the writer of which television show?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "1,14", "label": "Erik Jendresen"}], "predicate mapping": [], "id": "2dccee64e1754b3ebb0e0b7dbd8f53e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hearth_and_Home> <http://dbpedia.org/ontology/editor> ?uri } ", "question": "Who is the editor of Hearth and Home ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hearth_and_Home", "seq": "21,35", "label": "Hearth and Home"}], "predicate mapping": [], "id": "3bcdc25b65614b0487c429348217ea4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mike_Shinoda> } ", "question": "Mike Shinoda is in which band?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mike_Shinoda", "seq": "0,11", "label": "Mike Shinoda"}], "predicate mapping": [], "id": "a2ccd223b18049ec8f3baa631c19db91"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri} ", "question": "Which leader of United States House of Representatives was the appinter of ohn Drayton ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "seq": "16,73", "label": "United States House of Representatives was the appinter of"}, {"uri": "http://dbpedia.org/resource/John_Drayton", "seq": "75,85", "label": "ohn Drayton"}], "predicate mapping": [], "id": "af5f1360af214572ad2d8a7f52b326c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mercedes-Benz_Superdome> <http://dbpedia.org/ontology/tenant> ?uri  . }", "question": "How many tenants are there in the Mercedes Benz Superdome?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome", "seq": "34,56", "label": "Mercedes Benz Superdome"}], "predicate mapping": [], "id": "2d350c457f654871877104d78d4595be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chatumongol_Sonakul> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the religion of the successor of Chatumongol Sonakul?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chatumongol_Sonakul", "seq": "41,59", "label": "Chatumongol Sonakul"}], "predicate mapping": [], "id": "2ce7408563bc4fff84ed8255c318beac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri} ", "question": "Which associated band of the Teddy Riley is also the performer of the Before I Let You Go?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Teddy_Riley", "seq": "29,39", "label": "Teddy Riley"}, {"uri": "http://dbpedia.org/resource/Before_I_Let_You_Go", "seq": "70,88", "label": "Before I Let You Go"}], "predicate mapping": [], "id": "4b2bed5caa0f4fcd97539ab5fe8b0c31"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/John_Bowlby> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "List all the doctoral student of the scientist who has advised john Bowlby ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Bowlby", "seq": "63,73", "label": "john Bowlby"}], "predicate mapping": [], "id": "9385b5410adb4b398d78b74233daa3e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Oddworld> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "How many developers have worked on games of the Oddworld series?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oddworld", "seq": "48,55", "label": "Oddworld"}], "predicate mapping": [], "id": "c68c8778028948a5a3e0de11281c7ca8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Josep_Maria_Bartomeu> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Count everyone who was in a youthclub chaired by Josep Maria Bartomeu ?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josep_Maria_Bartomeu", "seq": "49,68", "label": "Josep Maria Bartomeu"}], "predicate mapping": [], "id": "70aa9eff865c482b9b003af932aaf051"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Piper_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }", "question": "Is Peter Piper Pizza in the pizza industry?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Piper_Pizza", "seq": "3,19", "label": "Peter Piper Pizza"}, {"uri": "http://dbpedia.org/resource/Pizza", "seq": "28,32", "label": "pizza"}], "predicate mapping": [], "id": "13a66e0633544928a5c94aa1f3012477"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name a river starting from arequipa region?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arequipa_Region", "seq": "27,41", "label": "arequipa region"}], "predicate mapping": [], "id": "4faf770f82744bd3a5ae913949ab8d0a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Emel_(magazine)> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the religion of the person who founded the Emel magazine?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emel_(magazine)", "seq": "51,54", "label": "Emel"}], "predicate mapping": [], "id": "efb34433b68544b09f7dc35e94b450f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . }", "question": "How many local authorities manage mixed gender schools?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mixed-sex_education", "seq": "34,53", "label": "mixed gender schools"}], "predicate mapping": [], "id": "62c64f48fb4e42cba7d5df25238d0c00"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }", "question": "What are some apes?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ape", "seq": "14,17", "label": "apes"}], "predicate mapping": [], "id": "19a1601d48324aeb87419019f0e0e027"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Rational_analysis> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What is the alma mater of the scientist who is known for Rational analysis ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rational_analysis", "seq": "57,73", "label": "Rational analysis"}], "predicate mapping": [], "id": "c7922582976442cfb8e59c1660842c18"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "What organisations purpose is Peace?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peace", "seq": "30,34", "label": "Peace"}], "predicate mapping": [], "id": "059b389bffc642eaab76a7072a3a9b9c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri } ", "question": "name the mountain range of Le Gibloux ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Le_Gibloux", "seq": "27,36", "label": "Le Gibloux"}], "predicate mapping": [], "id": "1a7add8911774e34a9753b1970a42b0f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Transit_(Minnesota)> <http://dbpedia.org/property/headquarters> ?uri } ", "question": "Where is the headquarters of Metro Transit (Minnesota) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Transit_(Minnesota)", "seq": "29,41", "label": "Metro Transit"}], "predicate mapping": [], "id": "020c57dc849e4ed79054a420fb7f59ff"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Crouch> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> }", "question": "Is Peter Crouch currently in the Stoke City FC?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Crouch", "seq": "3,14", "label": "Peter Crouch"}, {"uri": "http://dbpedia.org/resource/Stoke_City_F.C.", "seq": "33,45", "label": "Stoke City FC"}], "predicate mapping": [], "id": "f915a7c6e28343a1861fb5a31d770432"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Temptress> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Lloyd_Nosler> }", "question": "Is Lloyd  Nosler the editor of The Temptress?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Temptress", "seq": "31,43", "label": "The Temptress"}, {"uri": "http://dbpedia.org/resource/Lloyd_Nosler", "seq": "3,15", "label": "Lloyd  Nosler"}], "predicate mapping": [], "id": "5e350b58254d4f07a7a629bb71533ba6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}", "question": "Which relative of ralf schumacher is a famous formula one racer?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ralf_Schumacher", "seq": "18,32", "label": "ralf schumacher"}], "predicate mapping": [], "id": "28b62059c317408d9e02cdf9e33d1935"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harriet_Andersson> <http://dbpedia.org/ontology/partner> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "List the awards won by the spouse of Harriet Andersson?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harriet_Andersson", "seq": "37,53", "label": "Harriet Andersson"}], "predicate mapping": [], "id": "47a8730100bb43ab9b5565b15e073f44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}", "question": "How many Thesaban towns are there?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thesaban", "seq": "9,16", "label": "Thesaban"}], "predicate mapping": [], "id": "8a90aa06557b4f7387d69334dbc420ef"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri. <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri} ", "question": "List the judges of Rising Star which is also the artist of Brad Paisley discography ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)", "seq": "19,29", "label": "Rising Star"}, {"uri": "http://dbpedia.org/resource/Brad_Paisley_discography", "seq": "59,82", "label": "Brad Paisley discography"}], "predicate mapping": [], "id": "95a5e8b6535b44d7a306e95c185accee"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri } ", "question": "Who are the current members of Insects vs Robots?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Insects_vs_Robots", "seq": "31,47", "label": "Insects vs Robots"}], "predicate mapping": [], "id": "69644dc7516e4f57a68e2ef38707770b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oliver_Sacks> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Columbia_University> }", "question": "Did Oliver Sacks study at the Columbia University?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oliver_Sacks", "seq": "4,15", "label": "Oliver Sacks"}, {"uri": "http://dbpedia.org/resource/Columbia_University", "seq": "30,48", "label": "Columbia University"}], "predicate mapping": [], "id": "d15fc086b4a342d0a45205ffd6963f8c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Classic_rock> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri }", "question": "How many other genere are there of the radio stations whose one of the genre  is Classic rock ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Classic_rock", "seq": "81,92", "label": "Classic rock"}], "predicate mapping": [], "id": "02ae1a10a037480a91be9b50a5073a8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Letter_to_a_Christian_Nation> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "What is the alma mater of the author of Letter to a Christian Nation ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Letter_to_a_Christian_Nation", "seq": "40,67", "label": "Letter to a Christian Nation"}], "predicate mapping": [], "id": "02d8c986d51743f79aadb85498ab95eb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Beasley> <http://dbpedia.org/ontology/race> ?uri } ", "question": "name the races where bobby beasley took part ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bobby_Beasley", "seq": "21,33", "label": "bobby beasley"}], "predicate mapping": [], "id": "760c753b13f2446a9330ada587e18873"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darcs> <http://dbpedia.org/ontology/license> ?uri } ", "question": "What is the content license of Darcs ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darcs", "seq": "31,35", "label": "Darcs"}], "predicate mapping": [], "id": "acc08e9a7a55497086586e40d6223753"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Point!> <http://dbpedia.org/property/narrated> ?uri } ", "question": "Who was the narrator in the point?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Point!", "seq": "24,32", "label": "the point"}], "predicate mapping": [], "id": "6cf76cd43efe4dae9271d0dcafd040d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . }", "question": "How many items belong to the Science Fiction genre?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Science_fiction", "seq": "29,43", "label": "Science Fiction"}], "predicate mapping": [], "id": "8ae784fd30814515b6229d039f232b79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "question": "Which basketball team's president studied in the Brockport Golden Eagles?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles", "seq": "49,71", "label": "Brockport Golden Eagles"}], "predicate mapping": [], "id": "37d312b3fc364f16bdc7b55e5a845a90"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/King's_Quest_VI> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who is the developer of the software which serves the platform for King's Quest VI?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/King's_Quest_VI", "seq": "67,81", "label": "King's Quest VI"}], "predicate mapping": [], "id": "1df640ae02bb4421947b10d25fb15963"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Limited_liability_company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "What magazine companies are of form Limited liability company?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Limited_liability_company", "seq": "36,60", "label": "Limited liability company"}], "predicate mapping": [], "id": "930321a78c1f43668bb1a7051bc5727b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/cities> ?uri }", "question": "Count the cities whihch are on the same sea as that of Miami ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miami", "seq": "55,59", "label": "Miami"}], "predicate mapping": [], "id": "e2916bd3eb4a49159537f5a32218b829"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "How many scientist became famous for the battle of Occupation of Japan?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Occupation_of_Japan", "seq": "51,69", "label": "Occupation of Japan"}], "predicate mapping": [], "id": "7124c65f43eb4c7db607755053ad3252"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri} ", "question": "Which owner of the national Herald india is the leader of Kumta ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_National_Herald_(India)", "seq": "15,33", "label": "the national Herald"}, {"uri": "http://dbpedia.org/resource/Kumta", "seq": "58,62", "label": "Kumta"}], "predicate mapping": [], "id": "722afd3c1d7f45638c954d4bac6d0dfb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Southend-on-Sea", "seq": "39,53", "label": "Southend-on-Sea"}, {"uri": "http://dbpedia.org/resource/Essex", "seq": "74,78", "label": "Essex"}], "predicate mapping": [], "id": "12bc818a1cad45d1a91e51273310e997"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/line> <http://dbpedia.org/resource/Z\u00fcrich\u2013Affoltern_am_Albis\u2013Zug_railway_line> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In how many countries does the Zurich Affoltern am Albis Zug line go?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Z\u00fcrich\u2013Affoltern_am_Albis\u2013Zug_railway_line", "seq": "31,64", "label": "Zurich Affoltern am Albis Zug line"}], "predicate mapping": [], "id": "b64d9fce937f4f0e9a0ca37ee8953f92"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Give me the count of all people who ascented a peak in California?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "55,64", "label": "California"}], "predicate mapping": [], "id": "975c249b705448208e1323922ac6f2da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What people are known to work for Johnny Cash?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Johnny_Cash", "seq": "34,44", "label": "Johnny Cash"}], "predicate mapping": [], "id": "d7cf27ca038544a0aedfa9c7533e0743"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Helen_Getachew> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Haile_Selassie_Gugsa> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "What is the official residence of the Helen Getachew which is also the palce of death of the Haile Selassie Gugsa ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Helen_Getachew", "seq": "38,51", "label": "Helen Getachew"}, {"uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa", "seq": "93,112", "label": "Haile Selassie Gugsa"}], "predicate mapping": [], "id": "d4dcd0fd68e54344be04bf5a83626fb8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What rivers originate from Australian Alps?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australian_Alps", "seq": "27,41", "label": "Australian Alps"}], "predicate mapping": [], "id": "a40f13291ca14b10b2f098c618bb7b4d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._T._Krogh> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Camilla_Martin> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What is the nationality of the J. T. Krogh which is also the  sovereign state of the Camilla Martin", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._T._Krogh", "seq": "31,41", "label": "J. T. Krogh"}, {"uri": "http://dbpedia.org/resource/Camilla_Martin", "seq": "85,98", "label": "Camilla Martin"}], "predicate mapping": [], "id": "7791f674f69644b597e58b7e0b2da6be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What's the religion of the winner of china election of 2008?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008", "seq": "27,58", "label": "winner of china election of 2008"}], "predicate mapping": [], "id": "ec098d0e9dc04cb997cf1bedf575db5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Canada> . ?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Benedict_XVI>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "Name the saint whose major shrine is in Canada and was canonized by Pope Benedict XVI?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "seq": "40,45", "label": "Canada"}, {"uri": "http://dbpedia.org/resource/Pope_Benedict_XVI", "seq": "68,84", "label": "Pope Benedict XVI"}], "predicate mapping": [], "id": "eb9973f1951346f39307949428dd4e26"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber> . ?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Murray_Gold>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose sculptor is C. E. Webber and composed by Murray Gold?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/C._E._Webber", "seq": "46,57", "label": "C. E. Webber"}, {"uri": "http://dbpedia.org/resource/Murray_Gold", "seq": "75,85", "label": "Murray Gold"}], "predicate mapping": [], "id": "dc23a511ad514de1aa0138b011745698"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Lampedusa> . ?x <http://dbpedia.org/property/constituency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the constituency of the people who died in Lampedusa?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lampedusa", "seq": "51,59", "label": "Lampedusa"}], "predicate mapping": [], "id": "85cdd790d3474b37b3fbbb8ecfd40517"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_the_West_Indies> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "Where else did the graduates of the university of west indies study?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_the_West_Indies", "seq": "36,60", "label": "university of west indies"}], "predicate mapping": [], "id": "5b6758a1346840589e4406f834826e3c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many different places have people beatified by Pope Pius X died?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Pius_X", "seq": "54,64", "label": "Pope Pius X"}], "predicate mapping": [], "id": "0eb2c9964a5047548bafa2cc6ffb4019"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which statesman is married to Dolley Madison?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "30,43", "label": "Dolley Madison"}], "predicate mapping": [], "id": "cb55d0a92ec24545ab35ad668354f53e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kakae> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri} ", "question": "What is the title of the Kakae and also the district of the Robert William Wilcox ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kakae", "seq": "25,29", "label": "Kakae"}, {"uri": "http://dbpedia.org/resource/Robert_William_Wilcox", "seq": "60,80", "label": "Robert William Wilcox"}], "predicate mapping": [], "id": "ed4fb70a35a34a85bd5669521192912b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Richard_Taylor_(colonel)> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "How many groups have fought in wars where Richard Taylor fought too?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Taylor_(colonel)", "seq": "42,55", "label": "Richard Taylor"}], "predicate mapping": [], "id": "7dfadb99e8c946deaabb77d1f0ef093c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Halyna_Kukhar> }", "question": "Is Halyna Kukhar the former coach of Stanislav Morozov?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanislav_Morozov", "seq": "37,53", "label": "Stanislav Morozov"}, {"uri": "http://dbpedia.org/resource/Halyna_Kukhar", "seq": "3,15", "label": "Halyna Kukhar"}], "predicate mapping": [], "id": "46cb9047955d4914a06a2fd681844bba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri . }", "question": "Who directed the haunted house and alice in wonderland?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alice's_Wonderland", "seq": "35,53", "label": "alice in wonderland"}, {"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "seq": "13,29", "label": "the haunted house"}], "predicate mapping": [], "id": "da7f8fc6054d436fa5dc4a6dca13af51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Ziggi_Recado> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What is the origin of the musical artist whose associated band is Ziggi Recado ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ziggi_Recado", "seq": "66,77", "label": "Ziggi Recado"}], "predicate mapping": [], "id": "569f87ca37d249fca1fd669c42b61425"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Urban_area> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Count the sports played at universities located in Urban Areas?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Urban_area", "seq": "51,61", "label": "Urban Areas"}], "predicate mapping": [], "id": "39670fa8f4204ba69a06afe012d003cb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kiki_Cutter> <http://dbpedia.org/property/club> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "question": "Where the club of Kiki Cutter located?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kiki_Cutter", "seq": "18,28", "label": "Kiki Cutter"}], "predicate mapping": [], "id": "c24dda07f8a74f7a97a4c283745cc67c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jane_Austen_in_Manhattan> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Emma_(novel)> <http://dbpedia.org/property/author> ?uri . }", "question": "Who penned Emma and Jane Austen in Manhatten?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jane_Austen_in_Manhattan", "seq": "20,43", "label": "Jane Austen in Manhatten"}, {"uri": "http://dbpedia.org/resource/Emma_(novel)", "seq": "11,14", "label": "Emma"}], "predicate mapping": [], "id": "8facfcdabe5c45f6a4ff24195185f240"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deputy> <http://dbpedia.org/resource/Robert_T._Herres> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Which wars were fought by the commander whose deputy was Robert T. Herres?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_T._Herres", "seq": "57,72", "label": "Robert T. Herres"}], "predicate mapping": [], "id": "b80894dd929f4fff8e33453137e5f838"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bucyrus_MT6300AC> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }", "question": "Is the Bucyrus MT6300AC assembled in north america?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bucyrus_MT6300AC", "seq": "7,22", "label": "Bucyrus MT6300AC"}, {"uri": "http://dbpedia.org/resource/North_America", "seq": "37,49", "label": "north america"}], "predicate mapping": [], "id": "44579153ae3b44e89b30a9b9990e1c09"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacob> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri . }", "question": "What are all the religions in which Jacob and Abraham are important?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jacob", "seq": "36,40", "label": "Jacob"}, {"uri": "http://dbpedia.org/resource/Abraham", "seq": "46,52", "label": "Abraham"}], "predicate mapping": [], "id": "a807b47daf314dd1867083e605303a2b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri } ", "question": "What is the game platform of Google Cloud Connect ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Cloud_Connect", "seq": "29,48", "label": "Google Cloud Connect"}], "predicate mapping": [], "id": "fd948db9a1074ffca0b870175bf8308e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Jean-Marc_Germain> . ?uri <http://dbpedia.org/property/mayor> ?x  . }", "question": "Which city's mayor is married to Jean Marc Germain?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean-Marc_Germain", "seq": "33,49", "label": "Jean Marc Germain"}], "predicate mapping": [], "id": "c9f63111222c4d6c837952e9c7db59f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company which provides Outlook.com as service and also has a product named Microsoft Azure ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Outlook.com", "seq": "32,42", "label": "Outlook.com"}, {"uri": "http://dbpedia.org/resource/Microsoft_Azure", "seq": "84,98", "label": "Microsoft Azure"}], "predicate mapping": [], "id": "e9767fcb96f14efeaa05520dc4675f58"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ", "question": "What is the common award won by geoffrey Rush and Laemmle Theatres ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geoffrey_Rush", "seq": "32,44", "label": "geoffrey Rush"}, {"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "seq": "50,65", "label": "Laemmle Theatres"}], "predicate mapping": [], "id": "0f95ea47819f4c68bd0ce67b5a955e3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Microsoft_Expression_Encoder> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "Who develops the computation platform of Microsoft Expression Encoder ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Expression_Encoder", "seq": "41,68", "label": "Microsoft Expression Encoder"}], "predicate mapping": [], "id": "4a3f11eb3f2d4d0389762febc9a3d122"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ron_Cyrus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "To which persons is Ron Cyrus a relative?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ron_Cyrus", "seq": "20,28", "label": "Ron Cyrus"}], "predicate mapping": [], "id": "cec0cca9c76744ca97e1a9740254d40a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "In which country is the Chapelle Saint-Louis de Carthage located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage", "seq": "24,55", "label": "Chapelle Saint-Louis de Carthage"}], "predicate mapping": [], "id": "3a6432cd1ada457994b8cd04721bcccd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Franz_Brentano>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist who was awarded a position in Royal Society and has academic advisor as Franz Brentano?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "49,61", "label": "Royal Society"}, {"uri": "http://dbpedia.org/resource/Franz_Brentano", "seq": "91,104", "label": "Franz Brentano"}], "predicate mapping": [], "id": "9a2c07ecaef04020b5ad3820012f0ef4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . }", "question": "In how many places can I find tombs of people who fought in the Norwalk Trainband?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norwalk_Trainband", "seq": "64,80", "label": "Norwalk Trainband"}], "predicate mapping": [], "id": "2f9f8fd7f42f40a19ee4c0b72746fef6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Ajahn_Sao_Kantas\u012blo> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "Which nationality of Newin Chidchob is also the nationality of Ajahn Sao Kantaslo ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newin_Chidchob", "seq": "21,34", "label": "Newin Chidchob"}, {"uri": "http://dbpedia.org/resource/Ajahn_Sao_Kantas\u012blo", "seq": "63,80", "label": "Ajahn Sao Kantaslo"}], "predicate mapping": [], "id": "7f491bee97b44a1eb028ecd5aea8a442"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movies' composers have won a BAFTA for film music?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music", "seq": "35,54", "label": "BAFTA for film music"}], "predicate mapping": [], "id": "a655921614b54e81b96b9832c987cc05"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Microsoft_Office> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> }", "question": "Is Microsoft office written in C++", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Office", "seq": "3,18", "label": "Microsoft office"}, {"uri": "http://dbpedia.org/resource/C++", "seq": "31,33", "label": "C++"}], "predicate mapping": [], "id": "a4af0ba8a3fe4331ac77ceb9f178ed02"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Altazor> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Pablo_Picasso> }", "question": "Was the altazor drawn by Picasso?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Altazor", "seq": "8,14", "label": "altazor"}, {"uri": "http://dbpedia.org/resource/Pablo_Picasso", "seq": "22,31", "label": "by Picasso"}], "predicate mapping": [], "id": "abca45aad53b4fdbaa4b40cd8f0a6490"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . }", "question": "How many people used to play for Toronto Argonauts?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Argonauts", "seq": "33,49", "label": "Toronto Argonauts"}], "predicate mapping": [], "id": "081763becc9f4357b36cb9ef05856c1d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri } ", "question": "What is the allegiance of John Kotelawala ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Kotelawala", "seq": "26,40", "label": "John Kotelawala"}], "predicate mapping": [], "id": "0496d085c1c84057847b2b47a44df27d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }", "question": "In how many languages did Marika Gombitova sing?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marika_Gombitov\u00e1", "seq": "26,41", "label": "Marika Gombitova"}], "predicate mapping": [], "id": "522b9a5a5c03491bbbb0b8eb89fc063f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri} ", "question": "What is the common party of Chandra Shekhar and Govinda  ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chandra_Shekhar", "seq": "28,42", "label": "Chandra Shekhar"}, {"uri": "http://dbpedia.org/resource/Govinda_(actor)", "seq": "48,54", "label": "Govinda"}], "predicate mapping": [], "id": "af46582ccf234c2f9f78b845dd3c11ee"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_D\u00edaz_Figueroa> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Cruce_a_Nado_Internacional> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What is the official residence of the Christopher Daz Figuero which is also the  state of the Cruce a Nado Internacional", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_D\u00edaz_Figueroa", "seq": "38,60", "label": "Christopher Daz Figuero"}, {"uri": "http://dbpedia.org/resource/Cruce_a_Nado_Internacional", "seq": "94,119", "label": "Cruce a Nado Internacional"}], "predicate mapping": [], "id": "e1d32c8ac1044f5b815f5bd8b971b736"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri } ", "question": "What are the track and field events of Jamiatu Muslim Mindanao?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "39,61", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [], "id": "477b36580d6c453e9fe828225b61fbb0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . }", "question": "How many different songwriters have had their songs recorded in London?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "seq": "64,69", "label": "London"}], "predicate mapping": [], "id": "c9adffe8cefd409cac7b4cb98a75654b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> ?uri. <http://dbpedia.org/resource/Valentin_Muratov> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which university of Alexandre Tichonov is the place of death of Valentin Muratov /", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexandre_Tichonov", "seq": "20,37", "label": "Alexandre Tichonov"}, {"uri": "http://dbpedia.org/resource/Valentin_Muratov", "seq": "64,79", "label": "Valentin Muratov"}], "predicate mapping": [], "id": "ce42ceda65bc44e4af05eebe148399f6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Kansas_Legislature> <http://dbpedia.org/ontology/house> ?uri} ", "question": "What are the common houses of US Congress and the Kansas Legislature?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Congress", "seq": "20,40", "label": "houses of US Congress"}, {"uri": "http://dbpedia.org/resource/Kansas_Legislature", "seq": "50,67", "label": "Kansas Legislature"}], "predicate mapping": [], "id": "acf18faa3348443eb2081c4a516063f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/capital> ?uri. <http://dbpedia.org/resource/Nicole_Lai> <http://dbpedia.org/ontology/restingPlace> ?uri} ", "question": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pulau_Ubin", "seq": "41,50", "label": "Pulau Ubin"}, {"uri": "http://dbpedia.org/resource/Nicole_Lai", "seq": "85,94", "label": "Nicole Lai"}], "predicate mapping": [], "id": "27b4aeb6443f452ab9936158e4704854"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Darden> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri} ", "question": "What is the common military branch of the Thomas Darden and that of Edwin F. Hunter", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Darden", "seq": "42,54", "label": "Thomas Darden"}, {"uri": "http://dbpedia.org/resource/Edwin_F._Hunter", "seq": "68,82", "label": "Edwin F. Hunter"}], "predicate mapping": [], "id": "bdd508af2ed146e7ba2598dd73e439b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri } ", "question": "Which is the university of Vanderbilt Commodores ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vanderbilt_Commodores", "seq": "27,47", "label": "Vanderbilt Commodores"}], "predicate mapping": [], "id": "c9b8f77f399f4f88b60f4a252aa7e825"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri . }", "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics", "seq": "38,81", "label": "Switzerland in 2004 and 2008 summer Olympics"}, {"uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics", "seq": "38,81", "label": "Switzerland in 2004 and 2008 summer Olympics"}], "predicate mapping": [], "id": "3a4019df663a4b7694548d7e5fa8ed39"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/ontology/portrayer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character's portrayer was edited by Roger Barton?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)", "seq": "52,63", "label": "Roger Barton"}], "predicate mapping": [], "id": "76c3eb3bdc2b4a3d846ba7a10155535c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Darren_McNamara> <http://dbpedia.org/property/currentTeam> ?x . ?x <http://dbpedia.org/ontology/locationCountry> ?uri  . }", "question": "Which country does the current team of Darren McNamara belong to?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darren_McNamara", "seq": "39,53", "label": "Darren McNamara"}], "predicate mapping": [], "id": "4c72ce839cc74eb5af7c755665ba0b19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "List some pupils of National Science Medal winning scientists?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Medal_of_Science", "seq": "20,35", "label": "National Science"}], "predicate mapping": [], "id": "0875010dd1d442a09d23bdaaf2293064"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Louisa_Hill> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/American_Football_Wellington> <http://dbpedia.org/ontology/country> ?uri . }", "question": "Which is the common nation of Louisa Hill and American Football Wellington from?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louisa_Hill", "seq": "30,40", "label": "Louisa Hill"}, {"uri": "http://dbpedia.org/resource/American_Football_Wellington", "seq": "46,73", "label": "American Football Wellington"}], "predicate mapping": [], "id": "1787b4b57f8648f7a691dc0b6458a93c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }", "question": "Was robert sarvis a nominee of the US Senate?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Sarvis", "seq": "4,16", "label": "robert sarvis"}, {"uri": "http://dbpedia.org/resource/United_States_Senate", "seq": "35,43", "label": "US Senate"}], "predicate mapping": [], "id": "1dcc19d42ba74a9487b2f289e05c435e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show which has judge as harry Connick and is broadcasted on Fox Broadcasting Company ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "72,95", "label": "Fox Broadcasting Company"}, {"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "seq": "36,52", "label": "harry Connick and"}], "predicate mapping": [], "id": "82c928cbd1774387a68f7fb4dd3e62ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batch_Monitor> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas> <http://dbpedia.org/property/distributor> ?uri} ", "question": "What company brought Riddim Ribbon to the market, and developed the batch monitor?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Batch_Monitor", "seq": "68,80", "label": "batch monitor"}, {"uri": "http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas", "seq": "21,52", "label": "Riddim Ribbon to the market, and"}], "predicate mapping": [], "id": "7ad84cbcf92d434bb36c969e41e4969c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri } ", "question": "Who is the successor of McDonnell Douglas ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/McDonnell_Douglas", "seq": "24,40", "label": "McDonnell Douglas"}], "predicate mapping": [], "id": "e496a9c37c484d349983cda8defe8e0e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boga_(soft_drink)> <http://dbpedia.org/property/origin> ?uri } ", "question": "where did Boga originate?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boga_(soft_drink)", "seq": "10,13", "label": "Boga"}], "predicate mapping": [], "id": "dbd91640b99b4b68accaf939e7b660b6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Clay> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri} ", "question": "What is the order of the Henry Clay and profession of the William Luther Hill?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Clay", "seq": "25,34", "label": "Henry Clay"}, {"uri": "http://dbpedia.org/resource/William_Luther_Hill", "seq": "58,76", "label": "William Luther Hill"}], "predicate mapping": [], "id": "8bc8f57fd4dc4186ba01fb3c91533c19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Chris_DuBois> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}", "question": "Name the co-founder of the record labels which have one of the founder as Chris DuBois ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris_DuBois", "seq": "74,85", "label": "Chris DuBois"}], "predicate mapping": [], "id": "abdbfd4f0fc94f8abd065f71ee33daaa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Xianren_Cave> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Who is the builder of Estadio Nacional de Costa Rica and also location of Xianren Cave ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)", "seq": "22,51", "label": "Estadio Nacional de Costa Rica"}, {"uri": "http://dbpedia.org/resource/Xianren_Cave", "seq": "74,85", "label": "Xianren Cave"}], "predicate mapping": [], "id": "fc3fe84aeff64b73884ae52e139bfb71"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri } ", "question": "what does the cahora bassa flow into?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cahora_Bassa", "seq": "14,25", "label": "cahora bassa"}], "predicate mapping": [], "id": "84d8ee90740d450784488c785a892205"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }", "question": "What awards have been given to the anyone who raced in the Lawrence Realization Stakes?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes", "seq": "59,85", "label": "Lawrence Realization Stakes"}], "predicate mapping": [], "id": "1c1c775a8beb4abfaacf4e09a2fdde14"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }", "question": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Merritt_Paulson", "seq": "78,92", "label": "Merritt Paulson"}], "predicate mapping": [], "id": "5cb7cae6ad1c4e6884cdf454075a9ec5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist whose academic advisor is Karl Ewald Hasse and supervisor is Georg Meissner?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse", "seq": "45,60", "label": "Karl Ewald Hasse"}, {"uri": "http://dbpedia.org/resource/Georg_Meissner", "seq": "80,93", "label": "Georg Meissner"}], "predicate mapping": [], "id": "8cf47e5b92d148bdac37fa14e7f2f0d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Erik Jendresen is writer and Play tone is company of which TV show ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "0,13", "label": "Erik Jendresen"}, {"uri": "http://dbpedia.org/resource/Playtone", "seq": "29,37", "label": "Play tone"}], "predicate mapping": [], "id": "ef953fcfd8774d258a795e40f2c3858b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Edward_Magoon> <http://dbpedia.org/property/restingplace> ?uri } ", "question": "Name the resting place of Charles Edward Magoon ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Edward_Magoon", "seq": "26,46", "label": "Charles Edward Magoon"}], "predicate mapping": [], "id": "20d4fbedbfba402298cd46213df4550e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bangkok> <http://dbpedia.org/ontology/leaderName> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }", "question": "Where is the residence of the governor of Bangkok ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangkok", "seq": "42,48", "label": "Bangkok"}], "predicate mapping": [], "id": "6c81695f20d946cfbb2d34523cce45c7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jawaharlal_Nehru> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "Who owns the newspaper which was founded by Nehru?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jawaharlal_Nehru", "seq": "44,48", "label": "Nehru"}], "predicate mapping": [], "id": "6674f869460343a08285a7ecc8e8efef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "who all play for of the american football players at  Quarterback position?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quarterback", "seq": "54,64", "label": "Quarterback"}], "predicate mapping": [], "id": "997800a673344212a2c5e15235cd6f2a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri } ", "question": "In which region was political figure Wayne Allard elected?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wayne_Allard", "seq": "37,48", "label": "Wayne Allard"}], "predicate mapping": [], "id": "bc55397cdb6c4e01b5cb95814c0c9662"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manendragarh> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Rishang_Keishing> <http://dbpedia.org/property/party> ?uri} ", "question": "Which party of Rishang Keishing is the leader at Manendragarh ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manendragarh", "seq": "49,60", "label": "Manendragarh"}, {"uri": "http://dbpedia.org/resource/Rishang_Keishing", "seq": "15,30", "label": "Rishang Keishing"}], "predicate mapping": [], "id": "f194dbdb9cd343d0a3713fc8e635fff2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emmett_Hughes> <http://dbpedia.org/ontology/nationality> ?uri  . }", "question": "Where is Emmett Hughes from?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emmett_Hughes", "seq": "9,21", "label": "Emmett Hughes"}], "predicate mapping": [], "id": "d492192a5490409c9eedf51d1e09b74b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri } ", "question": "Name the district of Robert William Wilcox ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_William_Wilcox", "seq": "21,41", "label": "Robert William Wilcox"}], "predicate mapping": [], "id": "ba1296ab79d44a72b90bc4eda20551f0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri } ", "question": "Who is the author of Karakuri Dji Ultimo ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "seq": "21,39", "label": "Karakuri Dji Ultimo"}], "predicate mapping": [], "id": "3c2822d238f74e5d8723e577709dbc0d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson> . ?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies in which music is give by  Laurie Johnson and edited by Anthony Harvey ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laurie_Johnson", "seq": "43,56", "label": "Laurie Johnson"}, {"uri": "http://dbpedia.org/resource/Anthony_Harvey", "seq": "72,85", "label": "Anthony Harvey"}], "predicate mapping": [], "id": "96586e0449a14210adfeea2f9756672f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/borough> <http://dbpedia.org/resource/Tendring> . ?x <http://dbpedia.org/ontology/district> ?uri  . }", "question": "What are some districts in the Tendring borough?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tendring", "seq": "31,38", "label": "Tendring"}], "predicate mapping": [], "id": "87e83ee1d27a42928457988a175777b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows which are in NTSC and 5.1 surround sound?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/NTSC", "seq": "43,46", "label": "NTSC"}, {"uri": "http://dbpedia.org/resource/5.1_surround_sound", "seq": "52,69", "label": "5.1 surround sound"}], "predicate mapping": [], "id": "72c7e0fedd6143eb940bc3debcdec811"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}", "question": "Give me a count of bacterias which belongs to Bacilli class?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacilli", "seq": "46,52", "label": "Bacilli"}], "predicate mapping": [], "id": "6027ae40ca0541feb5c23edebbf8dc5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice> . ?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Luigi_Brugnaro>  . }", "question": " Name the city whose province is Metropolitan City of Venice and has leader as Luigi Brugnaro ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice", "seq": "33,59", "label": "Metropolitan City of Venice"}, {"uri": "http://dbpedia.org/resource/Luigi_Brugnaro", "seq": "79,92", "label": "Luigi Brugnaro"}], "predicate mapping": [], "id": "87b8d216055241b8bfb033091e0b401d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/\u00c6thelred_the_Unready> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "In which sects was the aristocrat venerated, whose parent is Thelred the Unready?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c6thelred_the_Unready", "seq": "61,79", "label": "Thelred the Unready"}], "predicate mapping": [], "id": "6f0ee8f2cf284dce972eed151ef62685"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose voice is given by April Stewart and it's distributor is Broadcast syndication?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/April_Stewart", "seq": "49,61", "label": "April Stewart"}, {"uri": "http://dbpedia.org/resource/Broadcast_syndication", "seq": "87,107", "label": "Broadcast syndication"}], "predicate mapping": [], "id": "b999081fee064aae850db1e1963425c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "What is the appliance build jointly by Sony and Asus?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "seq": "39,42", "label": "Sony"}, {"uri": "http://dbpedia.org/resource/Asus", "seq": "48,51", "label": "Asus"}], "predicate mapping": [], "id": "468c3951514945a0be198af850f2e036"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "What games are played at institutions affiliated with the international association of universities?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/International_Association_of_Universities", "seq": "58,98", "label": "international association of universities"}], "predicate mapping": [], "id": "e16be5fbd56d460f90909d96e7655e59"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }", "question": "Whose units are responsible for close air support?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Close_air_support", "seq": "32,48", "label": "close air support"}], "predicate mapping": [], "id": "2ab3f24e0f7942e2beb152acb193fba3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ", "question": "Which work of Craig van Tilbury is close to the area of The Chess Monthyl ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Chess_Monthly", "seq": "56,72", "label": "The Chess Monthyl"}, {"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "seq": "14,30", "label": "Craig van Tilbury"}], "predicate mapping": [], "id": "e0baa3e7583a49c484a441b60d77088a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }", "question": " Count the participants of the NBA.", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "seq": "11,33", "label": "participants of the NBA"}], "predicate mapping": [], "id": "55b783d8ff214544b144eab6929fe919"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/United_States_Senate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "How many politicians are in the US Senate?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Senate", "seq": "25,40", "label": "in the US Senate"}], "predicate mapping": [], "id": "4f6ae681c8cd42ca97172a0eb6a2601b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/2004\u201305_FC_Barcelona_season> <http://dbpedia.org/property/name> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "question": "How many players participated in the 2004-05 FC Barcelona season?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/2004\u201305_FC_Barcelona_season", "seq": "37,63", "label": "2004-05 FC Barcelona season"}], "predicate mapping": [], "id": "c4d5f1f0500b4321ace51aaa29c775f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }", "question": "Count everyone who studied at an institute which are in Suburbs?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Suburb", "seq": "56,62", "label": "Suburbs"}], "predicate mapping": [], "id": "835041264319434da9eae0ff2fa79b48"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Audenried_Tunnel> <http://dbpedia.org/ontology/location> ?uri} ", "question": "Which source of broad creek is the Audenried tunnel located ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)", "seq": "16,26", "label": "broad creek"}, {"uri": "http://dbpedia.org/resource/Audenried_Tunnel", "seq": "35,50", "label": "Audenried tunnel"}], "predicate mapping": [], "id": "1538e37aff2242c1a828e3a85c5ed1c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "Count me the number of people whose military unit is involved with Close air support ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Close_air_support", "seq": "67,83", "label": "Close air support"}], "predicate mapping": [], "id": "73855487a1de46828e5f91a3cf063c8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/QF_6-pounder_Hotchkiss> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Who were fighting the war where the QF Hotchkiss was used?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/QF_6-pounder_Hotchkiss", "seq": "36,47", "label": "QF Hotchkiss"}], "predicate mapping": [], "id": "39ff074f19dd4139aa8df33d7f1f58bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "What awards have been given to the artists coming out of the university of Melbourne, faculty of VCA and MCM?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM", "seq": "61,107", "label": "university of Melbourne, faculty of VCA and MCM"}], "predicate mapping": [], "id": "61b80c35c46340f49bd57e0bc1086975"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri } ", "question": "Which universities are alma mater to Charles Plosser?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Plosser", "seq": "37,51", "label": "Charles Plosser"}], "predicate mapping": [], "id": "63e6c4e6a8e54d1d84d524f2d2efec81"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temptation_Waits> <http://dbpedia.org/ontology/recordedIn> ?uri } ", "question": "Where was the Temptation Waits recorded?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Temptation_Waits", "seq": "14,29", "label": "Temptation Waits"}], "predicate mapping": [], "id": "e8ba1b2b3f3944aa9e7a39ebfb9d8640"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri } ", "question": "Name the species of Panthera leo fossilis ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Panthera_leo_fossilis", "seq": "20,40", "label": "Panthera leo fossilis"}], "predicate mapping": [], "id": "571fc2015ffd4fc78f1f711b2042fbe1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What is the associated band of the musical artist who is the producer of The Trumpet Kings Meet Joe Turner ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner", "seq": "73,105", "label": "The Trumpet Kings Meet Joe Turner"}], "predicate mapping": [], "id": "8498d4343f9b475eb530413e390c99cd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1989_Portuguese_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ", "question": "Name the driver who had a pole finish in 1989 Portuguese Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix", "seq": "41,66", "label": "1989 Portuguese Grand Prix"}], "predicate mapping": [], "id": "af1582bae86d4e2dbb0237cb9e880064"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> } ", "question": "what are some common surnames of female people?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Female", "seq": "33,38", "label": "female"}], "predicate mapping": [], "id": "1eb5d6d148254250bbcdae0ff473cf35"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> . ?x <http://dbpedia.org/property/membership> ?uri }", "question": "Give me the total number of membership of the organisations which have memebers as  Azerbaijan?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Azerbaijan", "seq": "84,93", "label": "Azerbaijan"}], "predicate mapping": [], "id": "66c29c1492c74dc0887a4d8ed49584f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tabriz> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who is the builder of the bridge owned by Tabriz ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tabriz", "seq": "42,47", "label": "Tabriz"}], "predicate mapping": [], "id": "6843ef8a60e748b1845aa257e4054420"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which show's theme music was composed by Primus and voiced by Isaac Hayes?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Primus_(band)", "seq": "41,46", "label": "Primus"}, {"uri": "http://dbpedia.org/resource/Isaac_Hayes", "seq": "62,72", "label": "Isaac Hayes"}], "predicate mapping": [], "id": "3d937ff8b74e4b77873053158ed4a571"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Bruce_Harrell> . ?uri <http://dbpedia.org/property/governingBody> ?x  . }", "question": "Which city's governing body is led by Bruce Harrell?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Harrell", "seq": "38,50", "label": "Bruce Harrell"}], "predicate mapping": [], "id": "f99ff03fa6aa4f94ac6dd9d409b8706a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/LPGA> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What are the reason served by Toll Global Express which is also the country of LPGA ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toll_Global_Express", "seq": "30,48", "label": "Toll Global Express"}, {"uri": "http://dbpedia.org/resource/LPGA", "seq": "79,82", "label": "LPGA"}], "predicate mapping": [], "id": "789c4ee3592743b49f1e3f05c8a35b1e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "Give the total number of places to which airlines go, who also go to Glasgow?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glasgow_Airport", "seq": "69,75", "label": "Glasgow"}], "predicate mapping": [], "id": "82e734b7dd9541a89f7cef6cbcb9b9df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }", "question": "Where does the rail route, which ends at the Moskovsky station, begins?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)", "seq": "45,61", "label": "Moskovsky station"}], "predicate mapping": [], "id": "0dc38267699e4810bc3da41fe383f592"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Band_of_Brothers_(miniseries)> . ?uri <http://dbpedia.org/property/writer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose writers did notable work for Band of Brothers ?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Band_of_Brothers_(miniseries)", "seq": "65,80", "label": "Band of Brothers"}], "predicate mapping": [], "id": "52db9e57f2664971af4d8b9d4dd8b49f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/12th_Field_Artillery_Regiment> <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Colorado> }", "question": "Was 12th Field Artillery Regiment garrisoned at colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/12th_Field_Artillery_Regiment", "seq": "4,32", "label": "12th Field Artillery Regiment"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "48,55", "label": "colorado"}], "predicate mapping": [], "id": "6d862521319c45838d0b8922b8bd22a1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Mark_Latham> <http://dbpedia.org/property/primeminister> ?uri} ", "question": "Who is the common prime minster of William Deaner and mark Latham ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Deane", "seq": "35,48", "label": "William Deaner"}, {"uri": "http://dbpedia.org/resource/Mark_Latham", "seq": "54,64", "label": "mark Latham"}], "predicate mapping": [], "id": "606abcc3ca2744b2906bb0e7cdd47256"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/County_Westmeath> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What is the genre of the Band whose home town is County Westmeath?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/County_Westmeath", "seq": "49,64", "label": "County Westmeath"}], "predicate mapping": [], "id": "44d2ca7a78c54e4e8e4034be3b29abd0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patterson_Houses> <http://dbpedia.org/ontology/municipality> ?uri } ", "question": "What is the municipality of Patterson Houses ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Patterson_Houses", "seq": "28,43", "label": "Patterson Houses"}], "predicate mapping": [], "id": "696529855616457e86adf4ee2c4833a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Levi_Lincoln,_Jr.> . ?x <http://dbpedia.org/property/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}", "question": "What is the successor of the governors whose child is Levi Lincoln, Jr.?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Levi_Lincoln,_Jr.", "seq": "54,69", "label": "Levi Lincoln, Jr"}], "predicate mapping": [], "id": "7c998b30d1464e4096270e79dab19769"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gareth_Southgate> <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/Middlesbrough_F.C.> }", "question": "Was Gareth Southgate a manager of Middlesbrough F.C.?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gareth_Southgate", "seq": "4,19", "label": "Gareth Southgate"}, {"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "34,50", "label": "Middlesbrough F.C"}], "predicate mapping": [], "id": "819cbba8b6af4f75bddb596029d507d6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System> . ?x <http://dbpedia.org/property/district> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "In which city is the building, whose part is the Martin AN/FSG1 anti aircraft system?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System", "seq": "49,83", "label": "Martin AN/FSG1 anti aircraft system"}], "predicate mapping": [], "id": "bfc1096eaf1243c6b9d2d32967f50390"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Volleyball> . ?x <http://dbpedia.org/property/athletics> ?uri }", "question": "Count the number of sports played by the universities whihc also plays Volleyball ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Volleyball", "seq": "71,80", "label": "Volleyball"}], "predicate mapping": [], "id": "b335029079ec49f5972d4b5846330c15"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri . }", "question": "In which religions are both Pope Gregory 1 and Edwin of northumbria reverred?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Gregory_I", "seq": "28,41", "label": "Pope Gregory 1"}, {"uri": "http://dbpedia.org/resource/Edwin_of_Northumbria", "seq": "47,66", "label": "Edwin of northumbria"}], "predicate mapping": [], "id": "fac30a60a31948d38da3463419202599"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Croatian_Inline_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which wine region of Bogdanua is the Croatian Inline hockey team part of ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogdanu\u0161a", "seq": "21,28", "label": "Bogdanua"}, {"uri": "http://dbpedia.org/resource/Croatian_Inline_Hockey_League", "seq": "37,68", "label": "Croatian Inline hockey team part"}], "predicate mapping": [], "id": "f3500fd23d3a4a29bff285293f25ae61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Loyd> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri . }", "question": "For which games are Sam Loyd and Eric Schiller both famous?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sam_Loyd", "seq": "20,27", "label": "Sam Loyd"}, {"uri": "http://dbpedia.org/resource/Eric_Schiller", "seq": "33,45", "label": "Eric Schiller"}], "predicate mapping": [], "id": "918fa31e392c498eb55811d9fa7b697c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Count the number of religions followed by Janta Dal members.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Janata_Dal", "seq": "42,50", "label": "Janta Dal"}], "predicate mapping": [], "id": "8c33f93613d64297b003b2f378be8c76"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alberta_Highway_42> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Lousana>  . }", "question": "Does Lousana lie at the end of Alberta Highway 42?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alberta_Highway_42", "seq": "31,48", "label": "Alberta Highway 42"}, {"uri": "http://dbpedia.org/resource/Lousana", "seq": "5,11", "label": "Lousana"}], "predicate mapping": [], "id": "26729aff756e4638a9b104c39f66ba59"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which president of United States had vice president as John Adams?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Adams", "seq": "55,64", "label": "John Adams"}], "predicate mapping": [], "id": "d536516bc342455c89d920f17b86dc1e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Where are the tombs of kings and queens who have died in England?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "57,63", "label": "England"}], "predicate mapping": [], "id": "d84486681133495fa12247728693ae90"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hank_Brown> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "Where was the successor of Hank Brown born?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hank_Brown", "seq": "27,36", "label": "Hank Brown"}], "predicate mapping": [], "id": "6e1b08820a934affb050c025035b8a9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/ethnicity> <http://dbpedia.org/resource/Greeks> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Greek writers have won which award?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greeks", "seq": "0,4", "label": "Greek"}], "predicate mapping": [], "id": "6e0f647889314bb68424848e0c6e2d13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Larry_J._Franco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Give me a count of movies whose producer is Larry J. Franco?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Larry_J._Franco", "seq": "44,58", "label": "Larry J. Franco"}], "predicate mapping": [], "id": "9e0cf38ea6bf48b18ba968d51da06694"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }", "question": "Who authored the works published in the Jump Square Magazine?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jump_Square", "seq": "40,50", "label": "Jump Square"}], "predicate mapping": [], "id": "847f6bf7556844018c82cace3485a7a9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri } ", "question": "Name the partners of Kelly Brook?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelly_Brook", "seq": "21,31", "label": "Kelly Brook"}], "predicate mapping": [], "id": "c6210ff5ca7d44fd8d63a4a8c291e777"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Prawn_Song_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the TV Show whose theme is composed by someone signed up with Prawn Song Records?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Prawn_Song_Records", "seq": "70,87", "label": "Prawn Song Records"}], "predicate mapping": [], "id": "9303edfb0af843e094e5273e975f604e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "question": "Count everyone who lives in a place where Indian English is an official language ?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_English", "seq": "42,55", "label": "Indian English"}], "predicate mapping": [], "id": "3c8a202e192c4382af9462f6ba5b67bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> } ", "question": "Count the  total number of mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chordate", "seq": "51,58", "label": "Chordate"}, {"uri": "http://dbpedia.org/resource/Diprotodontia", "seq": "84,96", "label": "Diprotodontia"}], "predicate mapping": [], "id": "d1caae4b8c75454d93e63dad304d42b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Dennis_DeConcini> <http://dbpedia.org/property/residence> ?uri . }", "question": "Where does Dennis DeConcini and Scott Berkun both live?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scott_Berkun", "seq": "32,43", "label": "Scott Berkun"}, {"uri": "http://dbpedia.org/resource/Dennis_DeConcini", "seq": "11,26", "label": "Dennis DeConcini"}], "predicate mapping": [], "id": "ab981f539cf94ceea0c6ca6ddf8f673d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_A._Danaher_III> <http://dbpedia.org/property/office> ?uri } ", "question": "Where does John A Danaher III work?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_A._Danaher_III", "seq": "11,28", "label": "John A Danaher III"}], "predicate mapping": [], "id": "0c2db5b405ac48dcb16b0ce50df877d1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?uri } ", "question": "What is the location town of First Church of Christ, Scientist (Pittsburgh) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)", "seq": "29,61", "label": "First Church of Christ, Scientist"}], "predicate mapping": [], "id": "1b2911efce6c47eca4f936300c9bb041"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah> . }", "question": "Whose commanders are Colin Powell and Jaber Al-Ahmad Al-Sabah?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colin_Powell", "seq": "21,32", "label": "Colin Powell"}, {"uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah", "seq": "38,60", "label": "Jaber Al-Ahmad Al-Sabah"}], "predicate mapping": [], "id": "fcf7d180e4f849d884627ce282a7d659"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MacKenzie_Miller> <http://dbpedia.org/property/birthPlace> ?uri } ", "question": "Where was MacKenzie Miller born?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/MacKenzie_Miller", "seq": "10,25", "label": "MacKenzie Miller"}], "predicate mapping": [], "id": "3cf7f7b831724521976ea028c52cda60"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairmount,_Indiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who is the person whose home town is Fairmount, Indiana?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fairmount,_Indiana", "seq": "37,54", "label": "Fairmount, Indiana"}], "predicate mapping": [], "id": "9986303e97774cd7a0eb26d611ebfb8c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>}", "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini ?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave", "seq": "34,59", "label": "Letitia MacTavish Hargrave"}, {"uri": "http://dbpedia.org/resource/Martino_Martini", "seq": "65,79", "label": "Martino Martini"}], "predicate mapping": [], "id": "9077ab52a3a64bf292bf4d297b63970e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/6-18-67> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/George_Lucas> }", "question": "Is George Lucas the cinematographer of 6-18-67?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/6-18-67", "seq": "39,45", "label": "6-18-67"}, {"uri": "http://dbpedia.org/resource/George_Lucas", "seq": "3,14", "label": "George Lucas"}], "predicate mapping": [], "id": "e79c464a0faa4544b7317d38d2bc4f10"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Amblin_Television> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the shows whose company's successor is Amblin Television.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amblin_Television", "seq": "44,60", "label": "Amblin Television"}], "predicate mapping": [], "id": "cae3487d42164d05933fe21a244679b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri }", "question": "Count the total number of battles fought by the military people which fought in Levant ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Levant", "seq": "80,85", "label": "Levant"}], "predicate mapping": [], "id": "3d79316015644677b50c9a9187864e97"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Beeleigh_Abbey> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "List the graves of the royalities which have been buried at Beeleigh Abbey ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beeleigh_Abbey", "seq": "60,73", "label": "Beeleigh Abbey"}], "predicate mapping": [], "id": "1defef355b2c46aabc6b54f50c3c95fc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Auckland_rugby_union_team> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "In which country does the Auckland rugby union team play  ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Auckland_rugby_union_team", "seq": "26,50", "label": "Auckland rugby union team"}], "predicate mapping": [], "id": "5202a1a43509411c97552eca15f0aa05"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Many_Hands> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "question": "Which genre of books does the writer of The Many Hands write?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Many_Hands", "seq": "40,53", "label": "The Many Hands"}], "predicate mapping": [], "id": "e0d5791e431e4dfaa75b9ae5077f76f6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri } ", "question": "Name the sports played by Jamiatu Muslim Mindanao?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "26,48", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [], "id": "4f1f3f16733d448ab1125085d243f9f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Laozi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "Laozi has authored which books ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laozi", "seq": "0,4", "label": "Laozi"}], "predicate mapping": [], "id": "28cd37f0c056464ba94caaf56714d451"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri. <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri} ", "question": "Which person naratted The Incredible Hulk and also the writer of Tales of Suspense ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "seq": "22,40", "label": "The Incredible Hulk"}, {"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "seq": "65,81", "label": "Tales of Suspense"}], "predicate mapping": [], "id": "c453823ead1c41b19be3ef0d12dffbcf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose opening theme is Te Deum (Charpentier)?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)", "seq": "51,57", "label": "Te Deum"}], "predicate mapping": [], "id": "8cb5fda5cb994ed4a6559ef08a02c270"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }", "question": "What is the total number of participant in conflict of SFOR?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/SFOR", "seq": "55,58", "label": "SFOR"}], "predicate mapping": [], "id": "d8d26021d6d14746b178240e9a73b5c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "From how many different places have people gone to the Harward Medical School?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard_Medical_School", "seq": "55,76", "label": "Harward Medical School"}], "predicate mapping": [], "id": "2a7a43ae00334b49bc601589c3cad2a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river passing through Reading Berkshire and has mouth place at Essex ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "31,47", "label": "Reading Berkshire"}, {"uri": "http://dbpedia.org/resource/Essex", "seq": "72,76", "label": "Essex"}], "predicate mapping": [], "id": "1d9e39c815aa470e98599d9dce9429ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies music composers are associated with Demis Roussos ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Demis_Roussos", "seq": "52,64", "label": "Demis Roussos"}], "predicate mapping": [], "id": "8799ce61b9644208a9ceb5a2851990ef"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Ivory_Coast_national_football_team> } ", "question": "Who all play for the Ivory Coast football team?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivory_Coast_national_football_team", "seq": "21,45", "label": "Ivory Coast football team"}], "predicate mapping": [], "id": "68b47db5171449cab76dfcb3095290e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Amaravila> <http://dbpedia.org/ontology/leaderName> ?uri . }", "question": "Which party has come in power at both Balangir and Amaravila in india?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Balangir_district", "seq": "38,59", "label": "Balangir and Amaravila"}, {"uri": "http://dbpedia.org/resource/Amaravila", "seq": "51,59", "label": "Amaravila"}], "predicate mapping": [], "id": "535f797b72ad4456b8a00fc9099707aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri . }", "question": "What are some common games played in PATTS college of aeronautics and Jamiatu muslim mindanao?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "seq": "37,64", "label": "PATTS college of aeronautics"}, {"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "70,92", "label": "Jamiatu muslim mindanao"}], "predicate mapping": [], "id": "9145f59edef44c5a9a17a3fe513e7567"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?x <http://dbpedia.org/property/executiveProducer> ?uri }", "question": "List the total number of executive producer of TV show which have one of the executiive producer as Steven Moffat ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Moffat", "seq": "100,112", "label": "Steven Moffat"}], "predicate mapping": [], "id": "371d70719856441eaf31d0f5046aa071"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Major_All_Stars_Season_1> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri . }", "question": "What is the nation of the Major All Stars Season 1 and Pioneer Corporation ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Major_All_Stars_Season_1", "seq": "26,49", "label": "Major All Stars Season 1"}, {"uri": "http://dbpedia.org/resource/Pioneer_Corporation", "seq": "55,73", "label": "Pioneer Corporation"}], "predicate mapping": [], "id": "e3aa6561a7cc47cf9a28949ebf5a6af6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Plant> . ?uri <http://dbpedia.org/ontology/division> ?x  . }", "question": "How many things belong to a division of plant kingdom?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plant", "seq": "40,44", "label": "plant"}], "predicate mapping": [], "id": "45e3091f10f74546abd072865a7e6b78"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> . ?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Assyrian_Neo-Aramaic>  . }", "question": "Where is Semnani and Assyrian Neo-Aramaic spoken ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Semnani_languages", "seq": "9,28", "label": "Semnani and Assyrian"}, {"uri": "http://dbpedia.org/resource/Assyrian_Neo-Aramaic", "seq": "21,40", "label": "Assyrian Neo-Aramaic"}], "predicate mapping": [], "id": "66a0125dafb4421d8a52c9f2008e8a18"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Abarth> }", "question": "Does Massimo Liverani play for Abarth?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massimo_Liverani", "seq": "5,20", "label": "Massimo Liverani"}, {"uri": "http://dbpedia.org/resource/Abarth", "seq": "31,36", "label": "Abarth"}], "predicate mapping": [], "id": "cf9b667b1efe4e6cb0e035746c6bba30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ludwig_Von_Drake> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "What is the fictional character which has Clan McDuck and Ludwig Von Draken as relatives?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clan_McDuck", "seq": "42,52", "label": "Clan McDuck"}, {"uri": "http://dbpedia.org/resource/Ludwig_Von_Drake", "seq": "58,74", "label": "Ludwig Von Draken"}], "predicate mapping": [], "id": "a737185e8cc848e3ab56d97876bccbff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Name the appliance produced by Foxconn and its OS is provided by PlayStation 3 system software ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxconn", "seq": "31,37", "label": "Foxconn"}, {"uri": "http://dbpedia.org/resource/PlayStation_3_system_software", "seq": "65,93", "label": "PlayStation 3 system software"}], "predicate mapping": [], "id": "9e456d1b7d7a40c499f3f40a98c78f52"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Island_Bayou_(Oklahoma)> <http://dbpedia.org/ontology/source> ?uri } ", "question": "Name the source Island of Bayou ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Island_Bayou_(Oklahoma)", "seq": "16,30", "label": "Island of Bayou"}], "predicate mapping": [], "id": "3e9133d020ca44b7a475fec7231d4ad5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Dartmouth_College> }", "question": "Did Alexander Magleby study at the Dartmouth College?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Magleby", "seq": "4,20", "label": "Alexander Magleby"}, {"uri": "http://dbpedia.org/resource/Dartmouth_College", "seq": "35,51", "label": "Dartmouth College"}], "predicate mapping": [], "id": "3ae2345e8e8844b1bcdc731a3b106eb9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomy_Bourdelle> <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "question": "Where was Thomy Bourdelle born?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomy_Bourdelle", "seq": "10,24", "label": "Thomy Bourdelle"}], "predicate mapping": [], "id": "a7f07e0669f64b349876998f51a1f5c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Geneva> . ?uri <http://dbpedia.org/property/company> ?x  . }", "question": "Companies headquartered in Geneva own which TV Shows?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "seq": "27,32", "label": "Geneva"}], "predicate mapping": [], "id": "6abe087917704e3f90ab3bbeb58cc5bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Penguin> . ?x <http://dbpedia.org/ontology/authority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Who owns the schools which have a penguin as its mascot?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Penguin", "seq": "34,40", "label": "penguin"}], "predicate mapping": [], "id": "5a9664b9e22545ef8fbc5d56f48ce5c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WCSE-LP> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/city> ?uri  . }", "question": "In which city is the sister station of WCSE-LP located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/WCSE-LP", "seq": "39,45", "label": "WCSE-LP"}], "predicate mapping": [], "id": "01a41f39bd59458cb89c2df139ccc213"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Bangkok> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the total number of relgions followed by people born in Bangkok?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangkok", "seq": "64,70", "label": "Bangkok"}], "predicate mapping": [], "id": "042fb5267c974d90beae49ab51013b82"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Leona_Baumgartner> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Twin cities 400 is operated by what city, which is the birthplace of Leona Baumgarter?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Twin_Cities_400", "seq": "0,14", "label": "Twin cities 400"}, {"uri": "http://dbpedia.org/resource/Leona_Baumgartner", "seq": "69,84", "label": "Leona Baumgarter"}], "predicate mapping": [], "id": "700b88a3eb40456a8ec23a305cc5e2e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "question": "Where are the homestadiums of the seasons chaired by Merritt Paulson?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Merritt_Paulson", "seq": "53,67", "label": "Merritt Paulson"}], "predicate mapping": [], "id": "b7b9319df8c949b1a7ddcb86ae2879b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)> <http://dbpedia.org/ontology/series> ?uri} ", "question": "What is the products of the BBC Multimedia and series of the The Last Resort (Doctor Who)", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Multimedia", "seq": "28,41", "label": "BBC Multimedia"}, {"uri": "http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)", "seq": "61,75", "label": "The Last Resort"}], "predicate mapping": [], "id": "d4cce931336041649e567c91e9bfb7c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Terry_Gou> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "question": "What are the gadgets whose manufacturing company is founded by Terry Gou?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terry_Gou", "seq": "63,71", "label": "Terry Gou"}], "predicate mapping": [], "id": "c09fbce16b2a4485808f9dbd9870a971"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ", "question": "In which of the parties that have governed over Rishikesh, does Govinda belong too?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Govinda_(actor)", "seq": "64,70", "label": "Govinda"}, {"uri": "http://dbpedia.org/resource/Rishikesh", "seq": "48,56", "label": "Rishikesh"}], "predicate mapping": [], "id": "f129083b942f4b85aa56e2f5b04507ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "List softwares written in C++ and runs on Mac OS ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "42,47", "label": "Mac OS"}, {"uri": "http://dbpedia.org/resource/C++", "seq": "26,28", "label": "C++"}], "predicate mapping": [], "id": "47d43bd9adb04270b992a2f42fdd440d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Leonid_Fedun> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }", "question": "What are the home stadiums of the things Leonid Fedun has been the chairman of?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Leonid_Fedun", "seq": "41,52", "label": "Leonid Fedun"}], "predicate mapping": [], "id": "6e2a9956638d4d918c8bc965f66fb09a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hunter_Pence> <http://dbpedia.org/ontology/team> ?uri } ", "question": "For which team does hunter pence play for?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hunter_Pence", "seq": "20,31", "label": "hunter pence"}], "predicate mapping": [], "id": "a82ecf0242f748acbf844b9c3181614a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers>} ", "question": "How many have former teams as Indianapolis Colts and Carolina Panthers?", "sparql_id": 107, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indianapolis_Colts", "seq": "30,47", "label": "Indianapolis Colts"}, {"uri": "http://dbpedia.org/resource/Carolina_Panthers", "seq": "53,69", "label": "Carolina Panthers"}], "predicate mapping": [], "id": "113d32b939f643a3ba85439d8bf95a1f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/David_Ian_Salter> } ", "question": "Of what all has David Ian Salter been an editor of?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Ian_Salter", "seq": "16,31", "label": "David Ian Salter"}], "predicate mapping": [], "id": "5932978b97be44fd926095c0dfaad785"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri } ", "question": "Who owns Ivanpah Solar Power Facility?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility", "seq": "9,36", "label": "Ivanpah Solar Power Facility"}], "predicate mapping": [], "id": "1455c7629a9f4b2cab3a809b4feac666"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "Where are ethnic group located which speak Nebraskan?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nebraska", "seq": "43,51", "label": "Nebraskan"}], "predicate mapping": [], "id": "163faec9938d47df8df231307032c826"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri } ", "question": "Name the sharehoders of The National Herald ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_National_Herald_(India)", "seq": "24,42", "label": "The National Herald"}], "predicate mapping": [], "id": "b9bf97d01e9745d681eda36b557db3a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "List some things that Swedish people have become famous for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sweden", "seq": "22,28", "label": "Swedish"}], "predicate mapping": [], "id": "b4ab98c79b904735bf86e5221256116e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri. <http://dbpedia.org/resource/Jimmy_Quillen> <http://dbpedia.org/ontology/militaryBranch> ?uri} ", "question": "Which  governing body of the Oahu Railway and Land Company is also the military branch of the Jimmy Quillen ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company", "seq": "29,57", "label": "Oahu Railway and Land Company"}, {"uri": "http://dbpedia.org/resource/Jimmy_Quillen", "seq": "94,106", "label": "Jimmy Quillen"}], "predicate mapping": [], "id": "ebc8f78170a84f1b82725c6d20206319"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Mass_media> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "How many things are made by companies who produce mass media articles?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mass_media", "seq": "50,59", "label": "mass media"}], "predicate mapping": [], "id": "8265fe61d94940a4b5d099c217d00245"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the rivers who originate from Essex?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Essex", "seq": "35,39", "label": "Essex"}], "predicate mapping": [], "id": "1d9fe6f6eb72444b935342fb4d81dad1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Adam_Ludwik_Czartoryski> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "What is the place of death of the royalties one of whose parents was Adam Ludwik Czartoryski?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Adam_Ludwik_Czartoryski", "seq": "69,91", "label": "Adam Ludwik Czartoryski"}], "predicate mapping": [], "id": "2e77394fb30c488ba0cb3132da2b5e95"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Hardie_Gramatky> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character whose voice's animator is Hardie Gramatky?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hardie_Gramatky", "seq": "55,69", "label": "Hardie Gramatky"}], "predicate mapping": [], "id": "dcb720202a9b4b1bac3951450a734b3a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Splash_(film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Rita_Wilson> <http://dbpedia.org/property/spouse> ?uri . }", "question": "What actor starred in Splash and is married to Rita Wilson?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Splash_(film)", "seq": "22,27", "label": "Splash"}, {"uri": "http://dbpedia.org/resource/Rita_Wilson", "seq": "47,57", "label": "Rita Wilson"}], "predicate mapping": [], "id": "be6257ece9e546bc821b110aed45c1b1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lion> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }", "question": "Is lion an animal?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lion", "seq": "3,6", "label": "lion"}, {"uri": "http://dbpedia.org/resource/Animal", "seq": "11,16", "label": "animal"}], "predicate mapping": [], "id": "6f768f7b19424f46bd39e6238cd0662c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "Which players have represented Los Angeles Angels of Anaheim?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim", "seq": "31,59", "label": "Los Angeles Angels of Anaheim"}], "predicate mapping": [], "id": "6e7b5dec0d264850bf90a1ff6256427a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose distributor's headquarters is New York?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "56,63", "label": "New York"}], "predicate mapping": [], "id": "d8d554549f9949d5833e62ee180939b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/BBC> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the shows whose network is run by BBC.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC", "seq": "39,41", "label": "BBC"}], "predicate mapping": [], "id": "e0472e2206c9496a9f05207287956509"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hamas> <http://dbpedia.org/property/international> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "What is the religion of the political party which is an international party of Hamas?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hamas", "seq": "79,83", "label": "Hamas"}], "predicate mapping": [], "id": "f6f5d9f089ee4019abd4ce4fb8a6235e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What are some games availible on nintendo's virtual console?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Console", "seq": "44,58", "label": "virtual console"}], "predicate mapping": [], "id": "0cae9ed212d44d639d21c9747fe2c523"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chidambaram_Subramaniam> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "For which party's PM did Chidambaram Subramaniam serve?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chidambaram_Subramaniam", "seq": "25,47", "label": "Chidambaram Subramaniam"}], "predicate mapping": [], "id": "2f91368c9d5c424791d014f111214078"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}", "question": "Which bacteria's taxonomic class is Bacilli?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacilli", "seq": "36,42", "label": "Bacilli"}], "predicate mapping": [], "id": "8b32454f2b2e4618a018054db9635e5b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri} ", "question": "Who was the prime minister of Victor Hope, 2nd Marquess of Linlithgow and also the editor of British Gazette ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow", "seq": "30,68", "label": "Victor Hope, 2nd Marquess of Linlithgow"}, {"uri": "http://dbpedia.org/resource/British_Gazette", "seq": "93,107", "label": "British Gazette"}], "predicate mapping": [], "id": "4b8c7926f42b4c87ab22e1d6116e4c50"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Magnolia_Place> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Greek_Revival_architecture> }", "question": "Is the magnolia place of the greek revival architectural style?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Magnolia_Place", "seq": "7,20", "label": "magnolia place"}, {"uri": "http://dbpedia.org/resource/Greek_Revival_architecture", "seq": "29,55", "label": "greek revival architectural"}], "predicate mapping": [], "id": "0f11a466b24a499382890661bf1fc5ef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character whose relative are Duck family and Clan McDuck?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duck_family_(Disney)", "seq": "48,58", "label": "Duck family"}, {"uri": "http://dbpedia.org/resource/Clan_McDuck", "seq": "64,74", "label": "Clan McDuck"}], "predicate mapping": [], "id": "6f8d3265d2f34fe2823b67ae38748882"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Scotland> . ?uri <http://dbpedia.org/ontology/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movies whose cast member were born in Scotland.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scotland", "seq": "47,54", "label": "Scotland"}], "predicate mapping": [], "id": "faa44f1aaa984ca3b8508b206a3d0434"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies distributed by Warner Bros. and directed by Ridley Scott ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros.", "seq": "31,41", "label": "Warner Bros"}, {"uri": "http://dbpedia.org/resource/Ridley_Scott", "seq": "60,71", "label": "Ridley Scott"}], "predicate mapping": [], "id": "57e62ad01fb74f208589fefbb58693e3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri} ", "question": "Which recognized title of Frank Thorne is also the product of Playboy Enterprise ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playboy_Enterprises", "seq": "62,79", "label": "Playboy Enterprise"}, {"uri": "http://dbpedia.org/resource/Frank_Thorne", "seq": "26,37", "label": "Frank Thorne"}], "predicate mapping": [], "id": "b3e73fe9523d4661876a510c322a6d66"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Kentaro_Takekuma> . ?x <http://dbpedia.org/property/publisher> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}", "question": "Who is the publisher of the comic, one of whose authors is Kentaro Takekuma ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kentaro_Takekuma", "seq": "59,74", "label": "Kentaro Takekuma"}], "predicate mapping": [], "id": "56360270525d4a54a2201b9a4d1f5f55"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Operation_Autumn_Clouds> <http://dbpedia.org/property/result> ?uri } ", "question": "What was the result of Operation Autumn Clouds ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds", "seq": "23,45", "label": "Operation Autumn Clouds"}], "predicate mapping": [], "id": "1c72a1337f9d4e5aabf86018b6b52340"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Kiev> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}", "question": "List the significant building of the architect who also designed  Kiev?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kiev", "seq": "66,69", "label": "Kiev"}], "predicate mapping": [], "id": "9de9adf4a6e94b7a8958262626c02714"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/George_Washington> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/General_(United_States)> }", "question": "Was George Washington on the rank of general?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Washington", "seq": "4,20", "label": "George Washington"}, {"uri": "http://dbpedia.org/resource/General_(United_States)", "seq": "37,43", "label": "general"}], "predicate mapping": [], "id": "246f18a55ab64b0fbb6478194175418d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri } ", "question": "What softwares were created by Apple Productivity Experience Group ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group", "seq": "31,65", "label": "Apple Productivity Experience Group"}], "predicate mapping": [], "id": "68516929d5024193a4b6db18b81526ba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/CTV_Television_Network> . ?x <http://dbpedia.org/property/judges> ?uri  . }", "question": "Count the number of judges who've come on CTV network shows.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/CTV_Television_Network", "seq": "42,52", "label": "CTV network"}], "predicate mapping": [], "id": "f43f2072568f44aaa9450a64e62ca3da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriting> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the shows whose creator has worked as a screenwriter?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriting", "seq": "49,60", "label": "screenwriter"}], "predicate mapping": [], "id": "3d48aaabb0914e66b31f1f131e6694fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Newman_Haynes_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> ?x  . }", "question": "Who is the person whose opponent's father is Newman Haynes Clanton?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newman_Haynes_Clanton", "seq": "45,65", "label": "Newman Haynes Clanton"}], "predicate mapping": [], "id": "a9c3b3eccb964ced854274422bbdec73"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "What is the mountain whose parent mountain peak is Nevado de Toluca?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nevado_de_Toluca", "seq": "51,66", "label": "Nevado de Toluca"}], "predicate mapping": [], "id": "d33ef66c27f14eab8306e08bdf8b8973"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "Which religions are practiced in India?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/India", "seq": "33,37", "label": "India"}], "predicate mapping": [], "id": "5f5159b391bc417294f896820d53baf8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaptaan> <http://dbpedia.org/property/recorded> ?uri. <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri} ", "question": "What is the Recorded of the Kaptaan is also the headquarters of the Orient News ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaptaan", "seq": "28,34", "label": "Kaptaan"}, {"uri": "http://dbpedia.org/resource/Orient_News", "seq": "68,78", "label": "Orient News"}], "predicate mapping": [], "id": "3a8332895e0e42bf98c79235b4002de4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Operation_Autumn_Clouds> <http://dbpedia.org/property/result> <http://dbpedia.org/resource/Gaza_Strip> }", "question": "Is Gaza Strip the result of Operation Autumn Clouds?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds", "seq": "28,50", "label": "Operation Autumn Clouds"}, {"uri": "http://dbpedia.org/resource/Gaza_Strip", "seq": "3,12", "label": "Gaza Strip"}], "predicate mapping": [], "id": "4d97dbf2259544de93801dc834e88eb7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose predecessor is Henry E. Catto, Jr. and successor is Adrian A. Basora?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.", "seq": "44,61", "label": "Henry E. Catto, Jr"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "81,96", "label": "Adrian A. Basora"}], "predicate mapping": [], "id": "8937f9f398fb4c4091e5b258bed5abf1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/property/hubs> ?uri } ", "question": "?What are the airline hubs of Cascade Airways", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cascade_Airways", "seq": "30,44", "label": "Cascade Airways"}], "predicate mapping": [], "id": "606ecd9c542e4d1d8cd5322a41818757"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frank_R._Lillie_House> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }", "question": "Is the Frank R Lillie House has the Chicago architecture?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_R._Lillie_House", "seq": "7,26", "label": "Frank R Lillie House"}, {"uri": "http://dbpedia.org/resource/Chicago", "seq": "36,42", "label": "Chicago"}], "predicate mapping": [], "id": "9ca41a6f79a14b689dcfae0764808cd6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri . }", "question": "Grey gppse and eristoff is produced by which company?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)", "seq": "0,9", "label": "Grey gppse"}, {"uri": "http://dbpedia.org/resource/Eristoff", "seq": "15,22", "label": "eristoff"}], "predicate mapping": [], "id": "b727f0394eae4116bc3af96be4da1c1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors> . ?uri <http://dbpedia.org/property/constituency> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which politician's constituency is led by the SF Board of Supervisors?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors", "seq": "46,68", "label": "SF Board of Supervisors"}], "predicate mapping": [], "id": "6f9848de2af84f4fbcded6f13f857cf2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri. <http://dbpedia.org/resource/Tonight's_the_Night_(Blackstreet_song)> <http://dbpedia.org/ontology/musicalBand> ?uri . }", "question": "Name the common musical band of Take Me There and Tonight's the Night ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)", "seq": "32,44", "label": "Take Me There"}, {"uri": "http://dbpedia.org/resource/Tonight's_the_Night_(Blackstreet_song)", "seq": "50,68", "label": "Tonight's the Night"}], "predicate mapping": [], "id": "eec96c7f869747149720de05e392503f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Boeing_Field> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}", "question": "What are the county seats of the region which operates the Boeing Field?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_Field", "seq": "59,70", "label": "Boeing Field"}], "predicate mapping": [], "id": "19ab52b648234276ae7f2e54b88f4ea7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What is the university whose campus are Indiana and Iowa?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana", "seq": "40,46", "label": "Indiana"}, {"uri": "http://dbpedia.org/resource/Iowa", "seq": "52,55", "label": "Iowa"}], "predicate mapping": [], "id": "1bcf8001ee594f30bb75b84ca66dabab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "To which political party does the writer of In the Bazaars of Hyderabad belong?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad", "seq": "44,70", "label": "In the Bazaars of Hyderabad"}], "predicate mapping": [], "id": "dbc169a2e4a34f00b36ca8be031fe8f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "List the other members of the band of which Juelz Santana is a part?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Juelz_Santana", "seq": "44,56", "label": "Juelz Santana"}], "predicate mapping": [], "id": "292a555f92794024a9334e9248fd2c1a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri } ", "question": "Where did the 2015 MLS All-Star Game take place?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game", "seq": "14,35", "label": "2015 MLS All-Star Game"}], "predicate mapping": [], "id": "4a03be4b69ea4b10ba1e3d95a5f86f62"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pontiac_Building> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ", "question": "What is the style of architecture of Pontiac Building ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pontiac_Building", "seq": "37,52", "label": "Pontiac Building"}], "predicate mapping": [], "id": "0373e167503941919cb83707358aee72"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/News_Corp> . ?uri <http://dbpedia.org/ontology/employer> ?x  . }", "question": "Name some people working at someplace owned by News Corp.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/News_Corp", "seq": "47,55", "label": "News Corp"}], "predicate mapping": [], "id": "447a43a67f144236a29b626f440ec2a0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re> <http://dbpedia.org/property/constituency> ?uri } ", "question": "Name the constituency of  Jonas Gahr Stre ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re", "seq": "26,40", "label": "Jonas Gahr Stre"}], "predicate mapping": [], "id": "a5012e9aba5b40bbbc06155442c8940c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Quezon_City> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "What is the mascot of military in Quezon city?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quezon_City", "seq": "34,44", "label": "Quezon city"}], "predicate mapping": [], "id": "262bc6894dcd4fda8c651eb310b44496"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)> <http://dbpedia.org/ontology/director> ?uri } ", "question": "Name the directors of Lennon Legend: The Very Best of John Lennon (DVD) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)", "seq": "22,64", "label": "Lennon Legend: The Very Best of John Lennon"}], "predicate mapping": [], "id": "6689a88cf3af48998efaa96b5466f7cb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Benjamin_Spock> . ?x <http://dbpedia.org/property/incumbent> ?uri  . }", "question": "Who was the president at the time when the opponent of Benjamin Spock held office?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benjamin_Spock", "seq": "55,68", "label": "Benjamin Spock"}], "predicate mapping": [], "id": "0213a459e69a402da238e1ea7bf48f91"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Atlant_Moscow_Oblast> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }", "question": "For how many other teams have the members of Atlant Moscow Oblast played?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atlant_Moscow_Oblast", "seq": "45,64", "label": "Atlant Moscow Oblast"}], "predicate mapping": [], "id": "f96d57842d93417d8597a69c57604dd8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/BBC> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are some products of the company whose parent is BBC?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC", "seq": "54,56", "label": "BBC"}], "predicate mapping": [], "id": "dfc6f1364b4f43ac8569c33167e51bee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janaka_Thissakuttiarachchi> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Ati\u015ba> <http://dbpedia.org/ontology/occupation> ?uri . }", "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Janaka_Thissakuttiarachchi", "seq": "0,25", "label": "Janaka Thissakuttiarachchi"}, {"uri": "http://dbpedia.org/resource/Ati\u015ba", "seq": "70,74", "label": "Atisa"}], "predicate mapping": [], "id": "c24ec1614e724dd8aa615e6054a4f8f3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}", "question": "How many sports are played in maharashtran schools?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra", "seq": "30,41", "label": "maharashtran"}], "predicate mapping": [], "id": "e8ea9501be9241a191a46ec67d21f79b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Trade_association> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "List the served region of the organisations of Trade association.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trade_association", "seq": "47,63", "label": "Trade association"}], "predicate mapping": [], "id": "6924f47eafe44da9954f729ada2342f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/E._W._Kemble> . ?uri <http://dbpedia.org/ontology/notableWork> ?x  . }", "question": "Whose famous works have been illustrated by E W Kemble?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/E._W._Kemble", "seq": "44,53", "label": "E W Kemble"}], "predicate mapping": [], "id": "7c0d1f9a0e5e430ea5c1edbef2007075"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_South_End> <http://dbpedia.org/property/owners> ?uri } ", "question": "Who is the owner of the South end ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_South_End", "seq": "20,32", "label": "the South end"}], "predicate mapping": [], "id": "3180262923484726bbeebc7b398144d1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri } ", "question": "List down the commanders of Battle of Fort stephenson ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson", "seq": "28,52", "label": "Battle of Fort stephenson"}], "predicate mapping": [], "id": "6b763993596b4edab96dd9ec9211ba78"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Entronque_de_Herradura> <http://dbpedia.org/property/nickname> ?uri} ", "question": "Which cities of the American Mediterranean Sea has Nickname Entronque de Herradura?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "seq": "20,45", "label": "American Mediterranean Sea"}, {"uri": "http://dbpedia.org/resource/Entronque_de_Herradura", "seq": "60,81", "label": "Entronque de Herradura"}], "predicate mapping": [], "id": "ba7f17bb21dc46b9979f8bffb96711ed"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brown's_Corners,_Toronto> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/George_Karrys> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "What is the municipality of the Brown's Corners, Toronto and also the  place of birth of the George Karrys", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brown's_Corners,_Toronto", "seq": "32,55", "label": "Brown's Corners, Toronto"}, {"uri": "http://dbpedia.org/resource/George_Karrys", "seq": "93,105", "label": "George Karrys"}], "predicate mapping": [], "id": "7e627205a122439da56687c80907b67e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcal\u00e1_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "List the books whose authors are in Alcal de Henares.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alcal\u00e1_de_Henares", "seq": "36,51", "label": "Alcal de Henares"}], "predicate mapping": [], "id": "1cf22c99abb546c680faf2a6b74be80c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Guatemala> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> }", "question": "Is Guatemala a unitary state?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guatemala", "seq": "3,11", "label": "Guatemala"}, {"uri": "http://dbpedia.org/resource/Unitary_state", "seq": "15,27", "label": "unitary state"}], "predicate mapping": [], "id": "bc844f916fc34914ad85428c10a7184c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy> } ", "question": "what are some journals of academic Philosophy", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philosophy", "seq": "35,44", "label": "Philosophy"}], "predicate mapping": [], "id": "498f586cd8424c38b3af6f802891e55a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "question": "By which member of parliament was Provisional Government of Saskatchewan led?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan", "seq": "34,71", "label": "Provisional Government of Saskatchewan"}], "predicate mapping": [], "id": "5894b0cd2f60427089e1eb2fc7c0607f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)> <http://dbpedia.org/property/opentheme> <http://dbpedia.org/resource/Taylor_Swift> }", "question": "Did taylor swift do the theme song of The Farmer Wants a Wife?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)", "seq": "38,60", "label": "The Farmer Wants a Wife"}, {"uri": "http://dbpedia.org/resource/Taylor_Swift", "seq": "4,15", "label": "taylor swift"}], "predicate mapping": [], "id": "d5b9d26028c14c77af021dfcc3cc13c2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri } ", "question": "Where does the Kentucky cycle take place?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Kentucky_Cycle", "seq": "11,28", "label": "the Kentucky cycle"}], "predicate mapping": [], "id": "2c6285f3f7ad4840802f57a3ec025f80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "question": "Which drinks have emerged from the US?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "6,16", "label": "drinks have"}], "predicate mapping": [], "id": "953d596a5ee1434a969fadbb3a3741a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/La_Marseillaise> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "question": "What currencies have been prevalent in the country whose national anthem is La Marseillaise?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/La_Marseillaise", "seq": "76,90", "label": "La Marseillaise"}], "predicate mapping": [], "id": "a0e58ea11b974c7a85d86e9f454b77c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Curran> <http://dbpedia.org/property/college> ?uri } ", "question": "Name the college of Jon Curran ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Curran", "seq": "20,29", "label": "Jon Curran"}], "predicate mapping": [], "id": "b698642c0c4944baad539ca67412e78a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vietnam_Airlines> <http://dbpedia.org/ontology/location> ?uri } ", "question": "Where is Vietnam Airlines located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vietnam_Airlines", "seq": "9,24", "label": "Vietnam Airlines"}], "predicate mapping": [], "id": "3280fa6df4c244cfa8768b869e50218f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Dartington_College_of_Arts> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Who is the chancellor of the university which affiliates the Dartington College of Arts?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dartington_College_of_Arts", "seq": "61,86", "label": "Dartington College of Arts"}], "predicate mapping": [], "id": "685ddf1e1ed641888613c5f9c85267b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many sitcoms are there whose theme music is composed by a New Yorker?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "62,71", "label": "New Yorker"}], "predicate mapping": [], "id": "e33e3f1a2e9d462cb891215cad82dc5b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michigan_Renaissance_Festival> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Comcast_SportsNet_Chicago> <http://dbpedia.org/ontology/broadcastArea> ?uri . }", "question": "Comcast SportsNet is broadcasted in what area, which also has the Michigan Renaissance Festival?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Renaissance_Festival", "seq": "66,94", "label": "Michigan Renaissance Festival"}, {"uri": "http://dbpedia.org/resource/Comcast_SportsNet_Chicago", "seq": "0,31", "label": "Comcast SportsNet is broadcasted"}], "predicate mapping": [], "id": "5a8d27913f2348a5a0a9641d53ef1704"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/SummerSlam_(2004)> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }", "question": "List all the tenants of the stadium where the WWF Summer Slam 2004 took place.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/SummerSlam_(2004)", "seq": "50,60", "label": "Summer Slam"}], "predicate mapping": [], "id": "46394065a08e478b946f7994c131b013"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Catastrophe_of_Success> <http://dbpedia.org/ontology/author> ?uri} ", "question": "Which writer of A streetcar Named Desire is also the author of The Catastrophe of Success ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)", "seq": "16,39", "label": "A streetcar Named Desire"}, {"uri": "http://dbpedia.org/resource/The_Catastrophe_of_Success", "seq": "63,88", "label": "The Catastrophe of Success"}], "predicate mapping": [], "id": "64cb26ab6c624d9daee385d3e86ed7c4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which venue of indy PopCon is also the death palce of Louis Le Cocqq ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indy_PopCon", "seq": "15,25", "label": "indy PopCon"}, {"uri": "http://dbpedia.org/resource/Louis_LeCocq", "seq": "54,67", "label": "Louis Le Cocqq"}], "predicate mapping": [], "id": "6ad1a5e54b384e689efa82debf6b0c4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Downriver> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Cyrus_Mann> <http://dbpedia.org/property/birthPlace> ?uri . }", "question": "What state was Cyrus Mann born in, and has the famous Downriver ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Downriver", "seq": "54,62", "label": "Downriver"}, {"uri": "http://dbpedia.org/resource/Cyrus_Mann", "seq": "15,24", "label": "Cyrus Mann"}], "predicate mapping": [], "id": "9ba55398005e4e5c9354a2f73d3f4113"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri } ", "question": "Who is the appointer of William Cushing ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Cushing", "seq": "24,38", "label": "William Cushing"}], "predicate mapping": [], "id": "d585bb851bb2430d9893a3976b2310bd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Filbert's_Old_Time_Root_Beer> <http://dbpedia.org/ontology/origin> ?uri } ", "question": "Where is the origin of Filbert's Old Time Root Beer ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Filbert's_Old_Time_Root_Beer", "seq": "23,50", "label": "Filbert's Old Time Root Beer"}], "predicate mapping": [], "id": "331c4b8c9a8a40a78ec70c332af7cf77"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show with theme music by Primus and broadcasted on Comedy Central ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "63,76", "label": "Comedy Central"}, {"uri": "http://dbpedia.org/resource/Primus_(band)", "seq": "37,42", "label": "Primus"}], "predicate mapping": [], "id": "e7cb1c037fd84b45a5a0b5e4de0f3ef2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)> <http://dbpedia.org/ontology/musicalBand> ?uri } ", "question": "Name the musical band of Written in the Stars ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)", "seq": "25,44", "label": "Written in the Stars"}], "predicate mapping": [], "id": "f82d0e347f514ec1bcb41a22922ce6aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/In_a_Word_or_2> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "List down all the associcated musical artist of the artist of In a Word or 2 ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/In_a_Word_or_2", "seq": "62,75", "label": "In a Word or 2"}], "predicate mapping": [], "id": "5fa9fa2055eb4ddbb39a16de5cdc76ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/International_Union_of_Anarchists> <http://dbpedia.org/property/affiliation> ?uri  . }", "question": "Count the affiliations of International Union of Anarchists?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/International_Union_of_Anarchists", "seq": "26,58", "label": "International Union of Anarchists"}], "predicate mapping": [], "id": "e18fd4075a914d4a8455c72375bdd4b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Hugh_Hefner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Hugh Hefner is editor of which magazine?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hugh_Hefner", "seq": "0,10", "label": "Hugh Hefner"}], "predicate mapping": [], "id": "965fd3fdc73445e6b1bddc3d141ebb3c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WGBC_(DT2)> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri  . }", "question": "Which are the previous broadcast networks of sister channels of WGBC?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/WGBC_(DT2)", "seq": "64,67", "label": "WGBC"}], "predicate mapping": [], "id": "3bb69cb3b8634c3689b4846fcbb449cd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri } ", "question": "On which subjects does the author of the novel Thud! delve?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thud!", "seq": "47,51", "label": "Thud!"}], "predicate mapping": [], "id": "94de863bd4184aa2a7f508889eabee26"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Lancy> }", "question": "Is Lancy a city close to Geneva?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "seq": "25,30", "label": "Geneva"}, {"uri": "http://dbpedia.org/resource/Lancy", "seq": "3,7", "label": "Lancy"}], "predicate mapping": [], "id": "103349c9b1c646bca70a2c8d7a4458d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Triplicate> <http://dbpedia.org/property/sire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . }", "question": "Which awards have been given to the horse who sired Triplicate ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Triplicate", "seq": "52,61", "label": "Triplicate"}], "predicate mapping": [], "id": "d3b2ba7427da4cfba3470565de8c8c64"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)> } ", "question": "Who is the american football player whose highschool is Ringgold High School (Pennsylvania)?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)", "seq": "56,75", "label": "Ringgold High School"}], "predicate mapping": [], "id": "24e52abfafbb43d491744511cbfbfb38"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Give me some organizations working for Environmentalism", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Environmentalism", "seq": "39,54", "label": "Environmentalism"}], "predicate mapping": [], "id": "f075032d8bb14876a93a95f98cda7330"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "List books authored by Miguel de Cervantes and published by Francisco de Robles ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miguel_de_Cervantes", "seq": "23,41", "label": "Miguel de Cervantes"}, {"uri": "http://dbpedia.org/resource/Francisco_de_Robles", "seq": "60,78", "label": "Francisco de Robles"}], "predicate mapping": [], "id": "dbb28edd6b1a49f384baf3d63c64a0b3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri} ", "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sino-French_War", "seq": "18,32", "label": "Sino French War"}, {"uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey", "seq": "52,72", "label": "Raoul Magrin-Vernerey"}], "predicate mapping": [], "id": "6205616c0ee048eab5e020480247818b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Honeybuns> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Wahoo!> }", "question": "Is Wahoo! the previous work of Honeybuns?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Honeybuns", "seq": "31,39", "label": "Honeybuns"}, {"uri": "http://dbpedia.org/resource/Wahoo!", "seq": "3,8", "label": "Wahoo!"}], "predicate mapping": [], "id": "e4fd9eca450f4cb2ba2b2bc4f87102ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Willis_Sharpe_Kilmer> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "question": "List the awards given to the race horses bred by Willis Sharpe Kilmer.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willis_Sharpe_Kilmer", "seq": "49,68", "label": "Willis Sharpe Kilmer"}], "predicate mapping": [], "id": "f0e59cb06b254517af079b9825cebc6b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Labour_Party_(Norway)> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/constituency> ?uri  . }", "question": "What is the constituency of the leader of Labour Party (Norway)?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Labour_Party_(Norway)", "seq": "42,53", "label": "Labour Party"}], "predicate mapping": [], "id": "2ba0e19e73f04f15b8858aec5e4e7bd7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Little_Easton> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "List the tomb of the royalties whose burial place is Little Easton ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Little_Easton", "seq": "53,65", "label": "Little Easton"}], "predicate mapping": [], "id": "d7c5b09663594b8d9849e4b0a4561068"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bellaire,_Ohio> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "question": "The players born in Bellaire, Ohio have played for which team?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bellaire,_Ohio", "seq": "20,33", "label": "Bellaire, Ohio"}], "predicate mapping": [], "id": "0a6db2441bd741369578947633c0ff1f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fr._Orlando> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What games can be played in schools founded by Fr. Orlando?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Orlando", "seq": "47,57", "label": "Fr. Orlando"}], "predicate mapping": [], "id": "1ffae1c9ef7d48869e193bade845992d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose voices is given by  Mona Marshall?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mona_Marshall", "seq": "56,68", "label": "Mona Marshall"}], "predicate mapping": [], "id": "715cd1e1ff8d43868e231fe93c6699c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show distributed by Warner Bros. has Christopher Franke as one of the artist ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros._Television", "seq": "29,56", "label": "Warner Bros. has Christopher"}, {"uri": "http://dbpedia.org/resource/Christopher_Franke", "seq": "46,63", "label": "Christopher Franke"}], "predicate mapping": [], "id": "1f3e42c050df4103ab6f4ee7b80bc037"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Memphis,_Tennessee> . ?x <http://dbpedia.org/ontology/school> ?uri  . }", "question": "Where did the graduates of Memphis, Tenessee continue their education?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Memphis,_Tennessee", "seq": "27,43", "label": "Memphis, Tenessee"}], "predicate mapping": [], "id": "66629e2919e3457b92e9412d2765707f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/GNU> }", "question": "Is Frontaccounting licensed under GNU license?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frontaccounting", "seq": "3,17", "label": "Frontaccounting"}, {"uri": "http://dbpedia.org/resource/GNU", "seq": "34,36", "label": "GNU"}], "predicate mapping": [], "id": "479e2179c3784c05b660e355e8236391"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri } ", "question": "Who is the employer of Ralph flanders ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ralph_Flanders", "seq": "23,36", "label": "Ralph flanders"}], "predicate mapping": [], "id": "321da0a6b5db42d28b6af0d8130999ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Ontario,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}", "question": "What is an airport inside ontario?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario,_California", "seq": "26,32", "label": "ontario"}], "predicate mapping": [], "id": "95e2eff5a1b64e1b9ce1e7edf8adedcf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What sports are played by school which owns Fr. Agnel Stadium ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium", "seq": "44,60", "label": "Fr. Agnel Stadium"}], "predicate mapping": [], "id": "f6c5c6f3ecd14071b9bfc93098fb994e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Midhurst> . ?uri <http://dbpedia.org/ontology/creator> ?x  . }", "question": "Which things have been made by artists who died in Midhurst?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Midhurst", "seq": "51,58", "label": "Midhurst"}], "predicate mapping": [], "id": "b3e252172359437c9a8de2e762ad5ce7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Ben_Nighthorse_Campbell> <http://dbpedia.org/property/state> ?uri} ", "question": "What is the Location of the Peetz Table Wind Energy Center which is also the state of Ben Nighthorse Campbell ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center", "seq": "28,57", "label": "Peetz Table Wind Energy Center"}, {"uri": "http://dbpedia.org/resource/Ben_Nighthorse_Campbell", "seq": "86,108", "label": "Ben Nighthorse Campbell"}], "predicate mapping": [], "id": "5b3a93c4212a454bb5186485623329c7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sarah_Kazemy> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Cervelle_de_canut> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What is the citizenship of the Sarah Kazemy and land of the Cervelle de canut", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sarah_Kazemy", "seq": "31,42", "label": "Sarah Kazemy"}, {"uri": "http://dbpedia.org/resource/Cervelle_de_canut", "seq": "60,76", "label": "Cervelle de canut"}], "predicate mapping": [], "id": "3b8e4f3b8b154b09b5afa7f034e6aa1f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> ?uri } ", "question": "From which team did Marv McFadden played ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marv_McFadden", "seq": "20,32", "label": "Marv McFadden"}], "predicate mapping": [], "id": "e2c86da7511a495c8e6a199690371c48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "What is the city whose mayor is Anne Hidalgo?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anne_Hidalgo", "seq": "32,43", "label": "Anne Hidalgo"}], "predicate mapping": [], "id": "d645d34b10204b259900c68a10b1de61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "Name some dishes made with flowering plants.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Flowering_plant", "seq": "27,42", "label": "flowering plants"}], "predicate mapping": [], "id": "4c9dc9bbe2444c8890caed8026dde6df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Poland> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}", "question": "Which nation's engineers have graduated in Poland?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Poland", "seq": "43,48", "label": "Poland"}], "predicate mapping": [], "id": "0b8b29a0b2b745acbbed6037be44ec41"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/buildingType> <http://dbpedia.org/resource/Ferris_wheel> . ?x <http://dbpedia.org/property/locationTown> ?uri  . }", "question": "What are some cities which have a Ferris wheel?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferris_wheel", "seq": "34,45", "label": "Ferris wheel"}], "predicate mapping": [], "id": "a7ad80582ef84f54bb67cf7108003796"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri } ", "question": "What is the draft team of Bob MacMillan ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_MacMillan", "seq": "26,38", "label": "Bob MacMillan"}], "predicate mapping": [], "id": "d527f6cf049c4bd29df7ab1f81a69de8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Luzhniki_Stadium> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri }", "question": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luzhniki_Stadium", "seq": "79,94", "label": "Luzhniki Stadium"}], "predicate mapping": [], "id": "0261cb6df27c42bea175c81ec1b62f5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northanger_Abbey> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Susanna_Clarke> <http://dbpedia.org/property/influences> ?uri . }", "question": "Which author inspired Susanna Clarke, and wrote Northanger Abbey?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Northanger_Abbey", "seq": "48,63", "label": "Northanger Abbey"}, {"uri": "http://dbpedia.org/resource/Susanna_Clarke", "seq": "22,35", "label": "Susanna Clarke"}], "predicate mapping": [], "id": "1a98e56e3b3844d28ca9cb861532a949"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri } ", "question": "List the races of Fergie Sutherland?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fergie_Sutherland", "seq": "18,34", "label": "Fergie Sutherland"}], "predicate mapping": [], "id": "122b26f0029248c683b600712a408383"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Caterpillar_797> <http://dbpedia.org/ontology/assembly> ?uri } ", "question": "Where is the  assembly of Caterpillar 797 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Caterpillar_797", "seq": "26,40", "label": "Caterpillar 797"}], "predicate mapping": [], "id": "619c994eb3cd4bbfb7925d970b1f3ad9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stagecoach,_Colorado> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri . }", "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stagecoach,_Colorado", "seq": "25,44", "label": "stagecoach, where is"}, {"uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center", "seq": "48,77", "label": "Peetz Table Wind Energy Center"}], "predicate mapping": [], "id": "892b60fa57f743969c1fe9bf5708e9c0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri } ", "question": "Which things are Breann McGregor known for ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Breann_McGregor", "seq": "17,31", "label": "Breann McGregor"}], "predicate mapping": [], "id": "4423f1c8b04e4c438c50790d4c60c722"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1992_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ", "question": "Who is the Pole driver of 1992 Canadian Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1992_Canadian_Grand_Prix", "seq": "26,49", "label": "1992 Canadian Grand Prix"}], "predicate mapping": [], "id": "ec13e17ac45d4c1a8e774331d113e8cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "question": "List everything governed by the Democratic Party of US?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)", "seq": "32,47", "label": "Democratic Party"}], "predicate mapping": [], "id": "d90cfc130f684d5a9c0c03a85e6e6dc3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sentinel_High_School> <http://dbpedia.org/property/teamName> ?uri } ", "question": "Sentinel High School  team is known as ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sentinel_High_School", "seq": "0,19", "label": "Sentinel High School"}], "predicate mapping": [], "id": "962450920a5d4789866bb953d15deaa4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerrell_Jackson> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Andrew_Economos> <http://dbpedia.org/ontology/formerTeam> ?uri} ", "question": "Of all the teams that Andrew Economos played for, which one did Jerrel Jackson play his first game for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerrell_Jackson", "seq": "64,77", "label": "Jerrel Jackson"}, {"uri": "http://dbpedia.org/resource/Andrew_Economos", "seq": "22,36", "label": "Andrew Economos"}], "predicate mapping": [], "id": "5f84770805fe4db48a22ddd19ae2daf5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "What are some software which are written in languages that are run on Unix like OS?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Unix-like", "seq": "70,78", "label": "Unix like"}], "predicate mapping": [], "id": "81237995d578482ea6accf7e9ffcd320"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies writtten by the group Monty Python ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monty_Python", "seq": "38,49", "label": "Monty Python"}], "predicate mapping": [], "id": "ce5ddceafe844a9bb7a76194c0af8c7f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Columbus_Crew_SC> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballMatch>}", "question": "Where did some of the matches take place where Columbus Crew SC played?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Columbus_Crew_SC", "seq": "47,62", "label": "Columbus Crew SC"}], "predicate mapping": [], "id": "b39233c5a03a4b7087e4b5546806cc80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_News_(TV_channel)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows belong to the networks one of whose sister station is BBC News?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_News_(TV_channel)", "seq": "69,76", "label": "BBC News"}], "predicate mapping": [], "id": "43d606c2a68b425aa232aff1c3428a37"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/maintainedBy> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "What are some shareholders of the bridge maintained by the Massachusetts department of transportation?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation", "seq": "59,100", "label": "Massachusetts department of transportation"}], "predicate mapping": [], "id": "a29f93a5bc72413887c3844c5ebf8e76"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Alex_Chalk> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "question": "List the agencies located someplace lead by Alex Chalk.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alex_Chalk", "seq": "44,53", "label": "Alex Chalk"}], "predicate mapping": [], "id": "f6ced5d820a1470b843b40391b01cf86"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ", "question": "Which creator of Theme Time Radio Hour has also given the  musical score of the The Times They Are a-Changin' (musical)?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour", "seq": "17,37", "label": "Theme Time Radio Hour"}, {"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "seq": "80,107", "label": "The Times They Are a-Changin"}], "predicate mapping": [], "id": "abb80d23ef834a749f6d227acc81e758"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/property/university> ?uri } ", "question": "Alexander Magleby, a rugby player is alma mater to which university?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Magleby", "seq": "0,16", "label": "Alexander Magleby"}], "predicate mapping": [], "id": "d2698d17b3fc4da3b3a659d38d722a13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Montauk_State_Park> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Through which cities do the rivers starting at the Montauk State Park flow?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Montauk_State_Park", "seq": "51,68", "label": "Montauk State Park"}], "predicate mapping": [], "id": "78aeb7a8b2814ff1a4a9f813f7e41392"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "People from how many political parties exist in Maharashtra?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra", "seq": "48,58", "label": "Maharashtra"}], "predicate mapping": [], "id": "9c90326c60b94d57bf5ee570607ca6b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Michelle_D._Johnson> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Among the universities having Gyrfalcon as mascot which have Michelle D. Johnson as superintendent ? ", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michelle_D._Johnson", "seq": "61,79", "label": "Michelle D. Johnson"}, {"uri": "http://dbpedia.org/resource/Gyrfalcon", "seq": "30,38", "label": "Gyrfalcon"}], "predicate mapping": [], "id": "8b493628c6cb47dcaa54dfa91d17f425"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Billy_Clanton> . }", "question": "Whose opponents are Ike Clanton and Billy Clanton?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ike_Clanton", "seq": "20,30", "label": "Ike Clanton"}, {"uri": "http://dbpedia.org/resource/Billy_Clanton", "seq": "36,48", "label": "Billy Clanton"}], "predicate mapping": [], "id": "f155833272af4760ab962b2c4a75ea1f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Classical_League> <http://dbpedia.org/property/motto> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ", "question": "Which moto of american Classical League is also the academic discipline of Probus ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Classical_League", "seq": "14,38", "label": "american Classical League"}, {"uri": "http://dbpedia.org/resource/Probus_(journal)", "seq": "75,80", "label": "Probus"}], "predicate mapping": [], "id": "7a65376ab49c4988a7e19d19ee8b0575"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . }", "question": "Who are the people whose alumna is a part of the National Collegiate Athletic Association?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "49,88", "label": "National Collegiate Athletic Association"}], "predicate mapping": [], "id": "28f1b38fd1fa43dcafd2eee7e5778775"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Thailand_insurgency> <http://dbpedia.org/ontology/commander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "To which religion does the commander of South Thailand insurgency belong?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Thailand_insurgency", "seq": "40,64", "label": "South Thailand insurgency"}], "predicate mapping": [], "id": "25d1a97101e943698160921c3f0bb7cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edsel> <http://dbpedia.org/property/parent> ?uri } ", "question": "What is the parent company of Edsel?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edsel", "seq": "30,34", "label": "Edsel"}], "predicate mapping": [], "id": "7e8d0703ae84488c9069607df8d097d6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . }", "question": "Give me a count of everything owned by the network whose sister name is The CW?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_CW", "seq": "72,77", "label": "The CW"}], "predicate mapping": [], "id": "921e9607ab704a2293e0d3c7a2e6dbe3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/border> <http://dbpedia.org/resource/Modoc_Plateau> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}", "question": "In which state does the valley bordering the Modoc plateau lie?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Modoc_Plateau", "seq": "45,57", "label": "Modoc plateau"}], "predicate mapping": [], "id": "b0daa7f219de4127802c163ea4d7b308"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Morton_Dexter> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri . }", "question": "Name the common alma mater of the Henry Morton Dexter and Jack McGregor", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Morton_Dexter", "seq": "34,52", "label": "Henry Morton Dexter"}, {"uri": "http://dbpedia.org/resource/Jack_McGregor", "seq": "58,70", "label": "Jack McGregor"}], "predicate mapping": [], "id": "af78d170c10743f2b8c2008336992a65"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Jill_Krementz> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Which famous writer was married to Jill Krementz and had a son named Edith Vonnegut ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jill_Krementz", "seq": "35,47", "label": "Jill Krementz"}, {"uri": "http://dbpedia.org/resource/Edith_Vonnegut", "seq": "69,82", "label": "Edith Vonnegut"}], "predicate mapping": [], "id": "e2c84e16da1c4ada900d8e9932d4c088"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "What did the people buried in Toronto die of?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "30,36", "label": "Toronto"}], "predicate mapping": [], "id": "17a32c37985d4016a2887aaeae4c165c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri } ", "question": "Which are the races in which Martin Molony participated?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Molony", "seq": "29,41", "label": "Martin Molony"}], "predicate mapping": [], "id": "f04e2e9f5e1246b7a8494b970c269e6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> ?uri . }", "question": "What is the main common interests of the Philip Novak and Timothy Morton?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philip_Novak", "seq": "41,52", "label": "Philip Novak"}, {"uri": "http://dbpedia.org/resource/Timothy_Morton", "seq": "58,71", "label": "Timothy Morton"}], "predicate mapping": [], "id": "cc91a807569c4c39bd0a00e68053d9c9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Yabanc\u0131_Damat> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/United_Arab_Emirates> }", "question": "Was Yabanc Damat first aired in UAE?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yabanc\u0131_Damat", "seq": "4,15", "label": "Yabanc Damat"}, {"uri": "http://dbpedia.org/resource/United_Arab_Emirates", "seq": "4,27", "label": "Yabanc Damat first aired"}], "predicate mapping": [], "id": "4382d08ff34c47ffbf3c17b6a9451ce1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Name some basketball players who  have played for chicago bulls?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "seq": "50,62", "label": "chicago bulls"}], "predicate mapping": [], "id": "6aff1d15601947138c861eb36f7aa7ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "list the organisation with motive for peace and environmentalism?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peace", "seq": "38,42", "label": "peace"}, {"uri": "http://dbpedia.org/resource/Environmentalism", "seq": "48,63", "label": "environmentalism"}], "predicate mapping": [], "id": "6f3fc96104a94a63a66096801b34bf71"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the company which has Raymond Conner and Dennis Muilenburg as key person?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "seq": "30,43", "label": "Raymond Conner"}, {"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "49,65", "label": "Dennis Muilenburg"}], "predicate mapping": [], "id": "fe375b78109c42628cbc2ce69704bc5b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri} ", "question": "What is the field of the Jon Speelman and occupation of the Karen Grigorian?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "25,36", "label": "Jon Speelman"}, {"uri": "http://dbpedia.org/resource/Karen_Grigorian", "seq": "60,74", "label": "Karen Grigorian"}], "predicate mapping": [], "id": "7ba861cb0c5447b79cb878b421cf1113"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri } ", "question": "List the maintainers of Pandaruan Bridge?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pandaruan_Bridge", "seq": "24,39", "label": "Pandaruan Bridge"}], "predicate mapping": [], "id": "ddf2a44585b34de3afaf20021f33a330"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river with source country in Zambia and source region as North-Western Province, Zambia?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "seq": "90,95", "label": "Zambia"}, {"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "66,95", "label": "North-Western Province, Zambia"}], "predicate mapping": [], "id": "28ef4e7c24d544d1b9c35db869e032b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Tenderfoot_(miniseries)> <http://dbpedia.org/ontology/producer> ?uri } ", "question": "Who were the producers of the tenderfoot?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Tenderfoot_(miniseries)", "seq": "26,39", "label": "the tenderfoot"}], "predicate mapping": [], "id": "42e685f396ad4d289d05e57d384f0b3c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Fran\u00e7ois_Beauchemin> <http://dbpedia.org/ontology/formerTeam> ?uri} ", "question": "Which former team of Franois Beauchemin does the Nathan Dempsey played for ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nathan_Dempsey", "seq": "49,62", "label": "Nathan Dempsey"}, {"uri": "http://dbpedia.org/resource/Fran\u00e7ois_Beauchemin", "seq": "21,38", "label": "Franois Beauchemin"}], "predicate mapping": [], "id": "90670bde322f4fdb820424305500a826"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hopje> <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Coffee> }", "question": "Is coffee a main ingredient of Hopje?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hopje", "seq": "31,35", "label": "Hopje"}, {"uri": "http://dbpedia.org/resource/Coffee", "seq": "3,8", "label": "coffee"}], "predicate mapping": [], "id": "751a7482320c4deb949864158d4b16b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saint_Joseph> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)> . }", "question": "Who has Saint Joseph and Mary as parents ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Joseph", "seq": "8,19", "label": "Saint Joseph"}, {"uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)", "seq": "25,28", "label": "Mary"}], "predicate mapping": [], "id": "a62ce2cfa64b4b0fb7f2e17ba58b43d1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tweenies:_Game_Time> <http://dbpedia.org/property/publisher> ?x . ?x <http://dbpedia.org/property/products> ?uri  . }", "question": "List the products of the company which published Tweenies: Game Time.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tweenies:_Game_Time", "seq": "49,67", "label": "Tweenies: Game Time"}], "predicate mapping": [], "id": "af164ec109cc41a8895ca7011ca62c3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many sitcoms were produced by the company whose predecessor was the Desilu Productions", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Desilu_Productions", "seq": "72,89", "label": "Desilu Productions"}], "predicate mapping": [], "id": "0692b55140154ca68f9797dda50c0caa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/BMW_M10> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}", "question": "Which engine's successor's predecessor is BMW M10?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BMW_M10", "seq": "42,48", "label": "BMW M10"}], "predicate mapping": [], "id": "e68e190c5fea42bd9d7b2f106c0299e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Samsu-iluna>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which person's successor is Samsu-iluna?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samsu-iluna", "seq": "28,38", "label": "Samsu-iluna"}], "predicate mapping": [], "id": "e52a7b93b92f4a908fbe6e753ea32d89"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri } ", "question": "To which region does the Miluk language belong?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miluk_language", "seq": "25,38", "label": "Miluk language"}], "predicate mapping": [], "id": "87210ff3e55b4299a32d89b85345d93f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Simon_Ferro> . ?x <http://dbpedia.org/ontology/president> ?uri  . }", "question": "Under which president did the predecessor of Simon Ferro work?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Ferro", "seq": "45,55", "label": "Simon Ferro"}], "predicate mapping": [], "id": "ae8ea7fe77cc49459a8f5e49652308d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/New_York_City_Housing_Authority> . ?x <http://dbpedia.org/ontology/municipality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "In which municipalities does the NYC housing authority own buildings?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_Housing_Authority", "seq": "33,53", "label": "NYC housing authority"}], "predicate mapping": [], "id": "ffd7305acc7848ba94088cfcda3648c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Camp_Nou> . ?x <http://dbpedia.org/property/name> ?uri  . }", "question": "What are some team members of the team based in Camp Nou?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Camp_Nou", "seq": "48,55", "label": "Camp Nou"}], "predicate mapping": [], "id": "6ed618f4088e4b24921cb9a0130ce68c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Diego_Surf_(film)> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Andy_Warhol> }", "question": "Was andy worhol the director of the san diego surf?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Diego_Surf_(film)", "seq": "36,49", "label": "san diego surf"}, {"uri": "http://dbpedia.org/resource/Andy_Warhol", "seq": "4,14", "label": "andy worhol"}], "predicate mapping": [], "id": "2ca6b83130654efb9992783432c6e211"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Humes_High_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name a person who was educated in Humes High School ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Humes_High_School", "seq": "34,50", "label": "Humes High School"}], "predicate mapping": [], "id": "0f1a0373eac342828313fec23a869b83"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/University_of_Edinburgh> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Count the number of places where alumini of Edinburgh university have died?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Edinburgh", "seq": "33,52", "label": "alumini of Edinburgh"}], "predicate mapping": [], "id": "bc8d8dac1f054a9eaaf3a61ebce0decd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> }", "question": "Is Cologny a neighbouring city of Geneva?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "seq": "34,39", "label": "Geneva"}, {"uri": "http://dbpedia.org/resource/Cologny", "seq": "3,9", "label": "Cologny"}], "predicate mapping": [], "id": "0f3f93023ae74d94bac356887ec1e15b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Face_to_Face_(1976_film)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "List the awards won by the writer of Face to Face ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Face_to_Face_(1976_film)", "seq": "37,48", "label": "Face to Face"}], "predicate mapping": [], "id": "ce0cda33ee3e45b0b88aae26a2908f48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/territory> <http://dbpedia.org/resource/Dane_County,_Wisconsin> . ?uri <http://dbpedia.org/ontology/restingPlace> ?x  . }", "question": "Whose tomb is in cities under Dane County of Wisconsin?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dane_County,_Wisconsin", "seq": "30,53", "label": "Dane County of Wisconsin"}], "predicate mapping": [], "id": "1efd0ef701644607af3ae7939ea319be"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sicklefin_lemon_shark> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }", "question": "Does the Sicklefin lemon shark belong in the animal kingdom?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sicklefin_lemon_shark", "seq": "9,29", "label": "Sicklefin lemon shark"}, {"uri": "http://dbpedia.org/resource/Animal", "seq": "45,50", "label": "animal"}], "predicate mapping": [], "id": "0a010b343f2b41da91c743a12b3a47a0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys> <http://dbpedia.org/ontology/localAuthority> ?uri } ", "question": "What is the local authority of Liverpool Institute High School for Boys ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys", "seq": "31,70", "label": "Liverpool Institute High School for Boys"}], "predicate mapping": [], "id": "91921f98a78148b1b74c79a5bd598e40"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kira_Plastinina> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Sergey_Ryazansky> <http://dbpedia.org/property/placeOfBirth> ?uri . }", "question": "What is the place of birth of the Kira Plastinina and Sergey Ryazansky", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kira_Plastinina", "seq": "34,48", "label": "Kira Plastinina"}, {"uri": "http://dbpedia.org/resource/Sergey_Ryazansky", "seq": "54,69", "label": "Sergey Ryazansky"}], "predicate mapping": [], "id": "8a98295e35f9472fbc9b9d7ebb99de74"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Digit-Alb> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Christine_Rolfes> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which of the continents that Digitalb worked in, was christine rolfes born in?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Digit-Alb", "seq": "29,36", "label": "Digitalb"}, {"uri": "http://dbpedia.org/resource/Christine_Rolfes", "seq": "53,68", "label": "christine rolfes"}], "predicate mapping": [], "id": "8fce468edfb5414283a20c5f243e0728"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Church_of_England> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Give me the places where people who worked in Church of England died in ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Church_of_England", "seq": "46,62", "label": "Church of England"}], "predicate mapping": [], "id": "3f4b72d7662b4caa82f1760f020528db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What famous musicians play the remo?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Remo", "seq": "31,34", "label": "remo"}], "predicate mapping": [], "id": "c39f9c9df5b147d49a09ee2a5ef485d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea> . }", "question": "What belongs to the families of Buccinidae and Buccinoidea?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buccinidae", "seq": "32,41", "label": "Buccinidae"}, {"uri": "http://dbpedia.org/resource/Buccinoidea", "seq": "47,57", "label": "Buccinoidea"}], "predicate mapping": [], "id": "ff112c068fe348d99bc382783bc5554f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the television shows whose network's executive officer is Steve Burke.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)", "seq": "63,73", "label": "Steve Burke"}], "predicate mapping": [], "id": "6437c30f7c71486d9651bdf6c5109725"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri } ", "question": "List down all notable works of Neil Cross ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Cross", "seq": "31,40", "label": "Neil Cross"}], "predicate mapping": [], "id": "89de2e9950be4d148cceb0f13606223d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }", "question": "What is the largest city of the country which have an assembly of Plymouth Savoy?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_Savoy", "seq": "66,79", "label": "Plymouth Savoy"}], "predicate mapping": [], "id": "10540b9b82364f5eb00957a38632eca3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Nintendo_Entertainment_Planning_&_Development> }", "question": "Does nintendo have a division called Nintendo Entertainment Planning & Development?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nintendo", "seq": "37,44", "label": "Nintendo"}, {"uri": "http://dbpedia.org/resource/Nintendo_Entertainment_Planning_&_Development", "seq": "37,81", "label": "Nintendo Entertainment Planning & Development"}], "predicate mapping": [], "id": "f6ce613bfafa488daaf3caf27629399b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}", "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Damon_Hill", "seq": "77,86", "label": "Damon Hill"}], "predicate mapping": [], "id": "aaee7a24a90e47d3954f143bf64ca267"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)> <http://dbpedia.org/property/recorded> ?uri } ", "question": "In which city wasThe Triple Door (The Courage album)  performed live?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)", "seq": "14,31", "label": "wasThe Triple Door"}], "predicate mapping": [], "id": "1a8cc713ccd443c9ba6a74d395b4b6b2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_K> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }", "question": "Was the Model K designed by Herny Ford?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Model_K", "seq": "8,14", "label": "Model K"}, {"uri": "http://dbpedia.org/resource/Henry_Ford", "seq": "28,37", "label": "Herny Ford"}], "predicate mapping": [], "id": "3af799b07d8d4b5c8a03857948db6c6f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ", "question": "Which local authority of Buckhurst Hill County High School is the palce of burial of Elizabeth Rhuddlan ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan", "seq": "85,102", "label": "Elizabeth Rhuddlan"}, {"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "seq": "25,57", "label": "Buckhurst Hill County High School"}], "predicate mapping": [], "id": "9e0dd9094d6b42b2ade24c563d35c3db"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Arctic_Tale> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }", "question": "Is Queen Latifah the narrator of Arctic Tale?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arctic_Tale", "seq": "33,43", "label": "Arctic Tale"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "seq": "3,15", "label": "Queen Latifah"}], "predicate mapping": [], "id": "34eed5d543524bd6a5872d93bf79d3e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "What is manufactured by a company headed by Kazuo Hirai?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kazuo_Hirai", "seq": "44,54", "label": "Kazuo Hirai"}], "predicate mapping": [], "id": "cf2c22fcebba4a6f86eed6755e915b2f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benu\u00e9_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }", "question": "List the outflows of the lake whose one of the outflows is Benu river ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benu\u00e9_River", "seq": "59,68", "label": "Benu river"}], "predicate mapping": [], "id": "3c301cf561394deba7b635bc6a8f2877"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Takla_Haymanot's_Church_(Alexandria)> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "List the major shrines of the saints whose one of the shrine is St. Takla Haymanot's Church ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Takla_Haymanot's_Church_(Alexandria)", "seq": "64,90", "label": "St. Takla Haymanot's Church"}], "predicate mapping": [], "id": "17b4a249affa4dde85cdeb1693177725"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Dallas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies were founded in Dallas?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas", "seq": "35,40", "label": "Dallas"}], "predicate mapping": [], "id": "da03ed79bd2448b49214a557bd180b57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "What are the mammals whose phylum is Chordate?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chordate", "seq": "37,44", "label": "Chordate"}], "predicate mapping": [], "id": "b4b08639276b4e5f8db54327fc6c012f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/S._H._Kapadia> <http://dbpedia.org/property/religion> ?uri } ", "question": "What is the denomination of S. H. Kapadia ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/S._H._Kapadia", "seq": "28,40", "label": "S. H. Kapadia"}], "predicate mapping": [], "id": "3c8fdf37975f4f08945c5542bcc97d93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/L'Enfant_a_la_tasse> <http://dbpedia.org/property/artist> ?uri . }", "question": "Who created the Women in the Garden and also the L'Enfant a la tasse ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Women_in_the_Garden", "seq": "16,34", "label": "Women in the Garden"}, {"uri": "http://dbpedia.org/resource/L'Enfant_a_la_tasse", "seq": "49,67", "label": "L'Enfant a la tasse"}], "predicate mapping": [], "id": "ee30b589024f41ba94eeeb43ca06b2cb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> } ", "question": "Charles Willing Byrd was the governor under which politician?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "seq": "0,19", "label": "Charles Willing Byrd"}], "predicate mapping": [], "id": "b4072b20f7fa40d7b0fe48885dca9d53"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ford_F-Series_first_generation> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "Who is the maker of the engine of Ford F-Series first generation ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_F-Series_first_generation", "seq": "34,63", "label": "Ford F-Series first generation"}], "predicate mapping": [], "id": "7d5159ea5c5a452086175f68079c8e22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Omaha,_Nebraska>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "question": "Which state's largest city is Omaha?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Omaha,_Nebraska", "seq": "30,34", "label": "Omaha"}], "predicate mapping": [], "id": "f7dc75036c854765af67522f62223266"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri } ", "question": "In which wars has Steven Palazzo fought?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Palazzo", "seq": "18,31", "label": "Steven Palazzo"}], "predicate mapping": [], "id": "209493482df043e9ac2583b042622b16"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/CTV_Television_Network> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Who all have been judges on CTV Network's shows?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/CTV_Television_Network", "seq": "28,38", "label": "CTV Network"}], "predicate mapping": [], "id": "44126a7ebefe489c8d4093ec82f95ef1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ", "question": "Which training center of William Anthony has also alumni named Philip W Pillsbury ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "seq": "25,39", "label": "William Anthony"}, {"uri": "http://dbpedia.org/resource/Philip_W._Pillsbury", "seq": "63,80", "label": "Philip W Pillsbury"}], "predicate mapping": [], "id": "fcbd2eb259ad4797a4de074a9e6ca51b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Old_Saybrook,_Connecticut> } ", "question": "Which rivers end in Old Saybrook, Connecticut?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Old_Saybrook,_Connecticut", "seq": "20,44", "label": "Old Saybrook, Connecticut"}], "predicate mapping": [], "id": "8f75a8ba0817469791fe7f783a003b62"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Toru\u0144_gingerbread> . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "question": "List all the nicknames of the city which has Toru gingerbread as one of it ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toru\u0144_gingerbread", "seq": "45,60", "label": "Toru gingerbread"}], "predicate mapping": [], "id": "9f6eaa108131427a9ac70decbdd4d153"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's executive producer is Douglas Netter and composed by Stewart Copeland ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Douglas_Netter", "seq": "38,51", "label": "Douglas Netter"}, {"uri": "http://dbpedia.org/resource/Stewart_Copeland", "seq": "69,84", "label": "Stewart Copeland"}], "predicate mapping": [], "id": "e1d331f8870d4fcb99ef55121fda7c31"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose network is TNT (TV channel) and Prime Time Entertainment Network?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "seq": "42,44", "label": "TNT"}, {"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "seq": "63,94", "label": "Prime Time Entertainment Network"}], "predicate mapping": [], "id": "af7ff586aa3e46058865543dba5c96b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri } ", "question": "Where is the arena of WPC Dynamo Moscow situated?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow", "seq": "22,38", "label": "WPC Dynamo Moscow"}], "predicate mapping": [], "id": "374e41e0c9074e29aa08bc200f1d9a04"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Who was the writer of the novel Maniac Magee?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maniac_Magee", "seq": "32,43", "label": "Maniac Magee"}], "predicate mapping": [], "id": "e52302c32d6440dba926e0d3ed0f97f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Frank_Rogers_(record_producer)> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}", "question": "Name the founders of the record labels whose one of the founders is Frank Rogers ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)", "seq": "68,79", "label": "Frank Rogers"}], "predicate mapping": [], "id": "ed3777b583d140ae9097e15d39c80d2f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Ted_Hartley> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are some movies whose distributer's CEO is Ted Hartley?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Hartley", "seq": "48,58", "label": "Ted Hartley"}], "predicate mapping": [], "id": "990acb5fafe142619ee7ad93a614fcf9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose starting music is composed by Ron Grainer?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ron_Grainer", "seq": "66,76", "label": "Ron Grainer"}], "predicate mapping": [], "id": "7db07f152ba64000952041d7c269d816"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Hyde> <http://dbpedia.org/ontology/militaryBranch> ?uri } ", "question": "List the military branch of  Henry Hyde ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Hyde", "seq": "29,38", "label": "Henry Hyde"}], "predicate mapping": [], "id": "74a833da4a3449f792fe8603400f3a51"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Montecito_Inn> <http://dbpedia.org/property/developer> ?uri } ", "question": "Who is the developer of Montecito Inn ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Montecito_Inn", "seq": "24,36", "label": "Montecito Inn"}], "predicate mapping": [], "id": "a51b846524854b8d8be7950d0143aa08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Mus\u00e9e_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "How many artists' works are in Muse d'Orsay?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mus\u00e9e_d'Orsay", "seq": "31,42", "label": "Muse d'Orsay"}], "predicate mapping": [], "id": "48eb16573ec141a5ab3f8b412564aea6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Canal_&_River_Trust> . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "question": "In how many different places does Canal and River Trust own its assets?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canal_&_River_Trust", "seq": "34,54", "label": "Canal and River Trust"}], "predicate mapping": [], "id": "73c600f7e8e647769990e32d95c69f46"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier> } ", "question": "which planet was discovered by Urbain Le Verrier?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Urbain_Le_Verrier", "seq": "31,47", "label": "Urbain Le Verrier"}], "predicate mapping": [], "id": "b2179061510340db8454e133c3829727"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/West_Papua_football_team> <http://dbpedia.org/ontology/stadium> ?uri } ", "question": "Where is the stadium of west Papus football team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Papua_football_team", "seq": "24,47", "label": "west Papus football team"}], "predicate mapping": [], "id": "19cf7033523648298b64a3b26c61d63c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Megabalanus_concinnus> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ", "question": "Who are some authoritative persons on the matter of Megabalanus concinnus?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Megabalanus_concinnus", "seq": "52,72", "label": "Megabalanus concinnus"}], "predicate mapping": [], "id": "b6ebb2f75c0a40edb2c5f55a8490d32f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Barbara_Ann_Crancer>  . }", "question": "Who is the father of Barbara Ann Crancer?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barbara_Ann_Crancer", "seq": "21,39", "label": "Barbara Ann Crancer"}], "predicate mapping": [], "id": "8ff0158616ba4528a7ed38a4e45df6bf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . }", "question": "Whose music composer is signed up with Sony Music Entertainment?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "seq": "39,62", "label": "Sony Music Entertainment"}], "predicate mapping": [], "id": "9977743655db452280ad8b646cb1901d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Male> } ", "question": "What are some given names for males?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Male", "seq": "30,34", "label": "males"}], "predicate mapping": [], "id": "10b3153964714ccd855e09939b3fea93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Marlboro_Township,_New_Jersey>  . }", "question": "Which famous person is born in Marlboro Township, New Jersey?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marlboro_Township,_New_Jersey", "seq": "31,59", "label": "Marlboro Township, New Jersey"}], "predicate mapping": [], "id": "96c26048a5cc488796e2747513584530"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri } ", "question": "Name the parent company of Ford Falcon Cobra ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra", "seq": "27,43", "label": "Ford Falcon Cobra"}], "predicate mapping": [], "id": "d1129ddcb8c04a6d88e360a759cf01d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Soares_da_Costa> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Saores de costa built a bridge over which river?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Soares_da_Costa", "seq": "0,14", "label": "Saores de costa"}], "predicate mapping": [], "id": "9bc21c53162242ed83aa510e3a346546"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/CKFM-FM> . ?x <http://dbpedia.org/ontology/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "Where is the radio broadcasted in, whose sister station is CKFM-FM?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/CKFM-FM", "seq": "59,65", "label": "CKFM-FM"}], "predicate mapping": [], "id": "6cf9b1c0073641558b6b87a6afd477c3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Politics> }", "question": "Does A foreign policy of freedom belong to the genre Politics?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom", "seq": "5,31", "label": "A foreign policy of freedom"}, {"uri": "http://dbpedia.org/resource/Politics", "seq": "53,60", "label": "Politics"}], "predicate mapping": [], "id": "63ca129cc4fa4a1a982e2980c540e35b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Chestnut_(coat)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Chestnut colored horses have won which races?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chestnut_(coat)", "seq": "0,7", "label": "Chestnut"}], "predicate mapping": [], "id": "5b5d82f71a4c4d54989be43bbf8d4ce4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri . }", "question": "For which common president did Jim Sasser and Mike McCurry work?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Sasser", "seq": "31,40", "label": "Jim Sasser"}, {"uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)", "seq": "46,57", "label": "Mike McCurry"}], "predicate mapping": [], "id": "8185bbd0be854ace812c865f25e2ffb2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chickasaw_Campaign_of_1736> <http://dbpedia.org/property/combatant> ?uri } ", "question": "Of how many battles is Chickasaw Campaign of 1736 consisted?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chickasaw_Campaign_of_1736", "seq": "23,48", "label": "Chickasaw Campaign of 1736"}], "predicate mapping": [], "id": "bdbf00bc5747405fb0687f5da283e0d8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }", "question": "Jerry Bock's musicals has been adapted from how many things?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Bock", "seq": "0,9", "label": "Jerry Bock"}], "predicate mapping": [], "id": "427a250b939b4dbfab09841c8f20e929"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>}", "question": "In what group Joe Jonas and Kevin Jonas were previously involved?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Jonas", "seq": "14,22", "label": "Joe Jonas"}, {"uri": "http://dbpedia.org/resource/Kevin_Jonas", "seq": "28,38", "label": "Kevin Jonas"}], "predicate mapping": [], "id": "08365c0b072f40a6bc18e0f181f3518d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Miguel_Garc\u00eda_Granados> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "What is the birth place of the children of Miguel Garca Granados ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miguel_Garc\u00eda_Granados", "seq": "43,63", "label": "Miguel Garca Granados"}], "predicate mapping": [], "id": "720882e8f33e4b9a8d62b57e24b5c363"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Titus_Software> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Titus software publishes which genre of games?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Titus_Software", "seq": "0,13", "label": "Titus software"}], "predicate mapping": [], "id": "edec33716ab949b993955978a2dc9011"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kimberly_Stewart> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/ontology/spouse> ?uri  . }", "question": "Who are the spouse of the parents of Kimberly Stewart?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kimberly_Stewart", "seq": "37,52", "label": "Kimberly Stewart"}], "predicate mapping": [], "id": "5574fe2aa59d4b4394e830d098886f3c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri. <http://dbpedia.org/resource/Double_Diamond_(album)> <http://dbpedia.org/ontology/recordLabel> ?uri} ", "question": "What academic discipline of the Journal of Cerebral Blood Flow & Metabolism is also the record label of the Double Diamond (album)?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism", "seq": "32,74", "label": "Journal of Cerebral Blood Flow & Metabolism"}, {"uri": "http://dbpedia.org/resource/Double_Diamond_(album)", "seq": "108,121", "label": "Double Diamond"}], "predicate mapping": [], "id": "79b29a50491143fcb95984df5dc84ca0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_G._Santos> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Wendy_Jaquet> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Where were Micheal Santos and Wendy Jaquet born?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_G._Santos", "seq": "11,24", "label": "Micheal Santos"}, {"uri": "http://dbpedia.org/resource/Wendy_Jaquet", "seq": "30,41", "label": "Wendy Jaquet"}], "predicate mapping": [], "id": "24248e8d88324f82a0d46eb1449b6e7f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri }", "question": "Count the number of fileds of the scientist whose one of the interest is Chinese poetry ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chinese_poetry", "seq": "73,86", "label": "Chinese poetry"}], "predicate mapping": [], "id": "6edb218446b8457c9a2ea5168ff7fb50"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_Security_Services> <http://dbpedia.org/property/houses> ?uri } ", "question": "What are the houses of Parliament Security Services ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Parliament_Security_Services", "seq": "23,50", "label": "Parliament Security Services"}], "predicate mapping": [], "id": "0baa037b73d543a7a59be401e8a0bc44"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_McCall> <http://dbpedia.org/ontology/governor> ?uri } ", "question": "Who is the governor of Carl McCall ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_McCall", "seq": "23,33", "label": "Carl McCall"}], "predicate mapping": [], "id": "9f03bf078f8e43e68ca2db1f89a182b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tuba_Dei> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "question": "What is the nickname of the city where Tuba Dei lives?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tuba_Dei", "seq": "39,46", "label": "Tuba Dei"}], "predicate mapping": [], "id": "6010a5c2d8cf410ba846684155d6afb3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Lake_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}", "question": "What borders the valley which falls under Lake County, Oregon?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_County,_Oregon", "seq": "42,60", "label": "Lake County, Oregon"}], "predicate mapping": [], "id": "2d048077fe044885a1f11a831df39ba7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show created by CE Webber and also has actor named Companion?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)", "seq": "71,79", "label": "Companion"}, {"uri": "http://dbpedia.org/resource/C._E._Webber", "seq": "36,44", "label": "CE Webber"}], "predicate mapping": [], "id": "297480b7b3fd43e7819b9eb234501795"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company founded in New Mexico manufactures Visual Studio ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "seq": "25,34", "label": "New Mexico"}, {"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "seq": "36,61", "label": "manufactures Visual Studio"}], "predicate mapping": [], "id": "6411e0733ae5460499b210f08633ce12"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "List the mascot of the universities which are a part of  National Collegiate Athletic Association.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "57,96", "label": "National Collegiate Athletic Association"}], "predicate mapping": [], "id": "46c7118086dc4e08bdd9bf77f4273377"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/X_(company)> <http://dbpedia.org/property/predecessor> ?uri} ", "question": "Which developer of Go was also the predecssor of X compnay ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Go_(programming_language)", "seq": "19,20", "label": "Go"}, {"uri": "http://dbpedia.org/resource/X_(company)", "seq": "49,48", "label": ""}], "predicate mapping": [], "id": "6125911b7ddd4d3cbca857215c9e59c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What sports are played at universities affiliated by States Colleges and Universities athletic association?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association", "seq": "53,105", "label": "States Colleges and Universities athletic association"}], "predicate mapping": [], "id": "31fb215b84b44ec5bed3253fc1734d5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Proch\u00e1zka> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri . }", "question": "Which team has had both Martin prochzka and garry unger as its players ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Proch\u00e1zka", "seq": "24,38", "label": "Martin prochzka"}, {"uri": "http://dbpedia.org/resource/Garry_Unger", "seq": "44,54", "label": "garry unger"}], "predicate mapping": [], "id": "0f8e4549023f4e80849e86009ce04679"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Shannon_Cave> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is that river whose source gets water from the Shannon cave?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shannon_Cave", "seq": "52,63", "label": "Shannon cave"}], "predicate mapping": [], "id": "80f27d6316b847f999d784e02ce6eaf2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergus_McMaster> <http://dbpedia.org/ontology/residence> ?uri } ", "question": "What is the official residence of Fergus McMaster ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fergus_McMaster", "seq": "34,48", "label": "Fergus McMaster"}], "predicate mapping": [], "id": "90b8340912aa47be9e2468424ccf95d8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which university has chancellor as Nicholas S. Zeppos?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos", "seq": "35,52", "label": "Nicholas S. Zeppos"}], "predicate mapping": [], "id": "a54d9ab5b073425aa078172cd3175ec8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/builder> ?uri }", "question": "What is the total number of  builder of the military structures whose builder is also United States?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "86,98", "label": "United States"}], "predicate mapping": [], "id": "c83f849b65f046198bee117225c1dac5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Excelsior_Stakes> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "From what countries have people participated in the Excelsior Stakes?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Excelsior_Stakes", "seq": "52,67", "label": "Excelsior Stakes"}], "predicate mapping": [], "id": "f38ad466348b4ec3ae7a9bcef89d6c51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Al_Bano_and_Romina_Power> <http://dbpedia.org/property/currentMembers> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "List the associated musical artist of the current members of Al Bano and Romina Power?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Bano_and_Romina_Power", "seq": "61,84", "label": "Al Bano and Romina Power"}], "predicate mapping": [], "id": "37fc8c815f8f4cd1a8c8b46ad3a577f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Hanging> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List some people who were opponents of someone who was died by hanging? ", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hanging", "seq": "63,69", "label": "hanging"}], "predicate mapping": [], "id": "7372eadd97374e8b88eb962559850324"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Dreith> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/John_McGeever> <http://dbpedia.org/ontology/team> ?uri . }", "question": "What team does John McGeever play for, which also employed Ben Dreith at some time?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ben_Dreith", "seq": "59,68", "label": "Ben Dreith"}, {"uri": "http://dbpedia.org/resource/John_McGeever", "seq": "15,27", "label": "John McGeever"}], "predicate mapping": [], "id": "967f6935fd4248ed99f03141a2b0e459"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Marionette_(software)> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company which produces Marionette and has key person as Edwin catmull ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marionette_(software)", "seq": "32,41", "label": "Marionette"}, {"uri": "http://dbpedia.org/resource/Edwin_Catmull", "seq": "65,77", "label": "Edwin catmull"}], "predicate mapping": [], "id": "0a6bea353ecd405497f5ceab8b5d3dc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Let_Me_Be_Your_Star> . ?x <http://dbpedia.org/property/guests> ?uri  . }", "question": "What is the total number of guests on the show whose theme music is Let me be your star?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Let_Me_Be_Your_Star", "seq": "68,86", "label": "Let me be your star"}], "predicate mapping": [], "id": "98cf58e6424a49e1afab18da3372f362"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri } ", "question": "Name the home town of Rolando Gomez ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rolando_Gomez", "seq": "22,34", "label": "Rolando Gomez"}], "predicate mapping": [], "id": "0f2bfb81e96b44b1bc4586e49852fccf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Luxuria_(band)> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Noko> }", "question": "Was Noko a band member of Luxuria?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luxuria_(band)", "seq": "26,32", "label": "Luxuria"}, {"uri": "http://dbpedia.org/resource/Noko", "seq": "4,7", "label": "Noko"}], "predicate mapping": [], "id": "3914f43429894759b145e663790fc209"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/IBC_Root_Beer> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "question": "In which cities can i find drinks similar to the IBC root beer?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/IBC_Root_Beer", "seq": "49,61", "label": "IBC root beer"}], "predicate mapping": [], "id": "07606daaf7b34904923872ec6df2df2d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Name some basketball players whose team is coached by Fred Hoiberg?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fred_Hoiberg", "seq": "54,65", "label": "Fred Hoiberg"}], "predicate mapping": [], "id": "6ad0d1eeef934ec0bfd88f85a1e3320f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who all have developed softwares for Unix Like OSes?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Unix-like", "seq": "37,45", "label": "Unix Like"}], "predicate mapping": [], "id": "881b5cae435244b2b7caadf0a38478e0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri } ", "question": "Who is the prime minister that Michael Jeffery served?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Jeffery", "seq": "31,45", "label": "Michael Jeffery"}], "predicate mapping": [], "id": "3dab698090ef4acda3d9a1bd30a307dc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose music is composed by Vangelis?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vangelis", "seq": "47,54", "label": "Vangelis"}], "predicate mapping": [], "id": "bf81b0ed08944a0091644587ff07d4fc"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Walt_Disney> }", "question": "Was Walt Disney the cinematographer of Mickey's Mellerdrammer?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer", "seq": "39,60", "label": "Mickey's Mellerdrammer"}, {"uri": "http://dbpedia.org/resource/Walt_Disney", "seq": "4,14", "label": "Walt Disney"}], "predicate mapping": [], "id": "f1eae8d8caba4bae88873a154dfec671"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rainbow_Warrior_(1955)> <http://dbpedia.org/ontology/operator> ?uri } ", "question": "Who is the operator of Rainbow Warrior (1955) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rainbow_Warrior_(1955)", "seq": "23,37", "label": "Rainbow Warrior"}], "predicate mapping": [], "id": "ff89e1f2ebea4884b42c7497cbf61372"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Aubie>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "To which sports team is Aubie the mascot?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aubie", "seq": "24,28", "label": "Aubie"}], "predicate mapping": [], "id": "46849da00b124a0f9c847045c1d34579"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennier> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Londo_Mollari> <http://dbpedia.org/ontology/series> ?uri . }", "question": "Which series are Lennier and Londo Mollari both from?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lennier", "seq": "17,23", "label": "Lennier"}, {"uri": "http://dbpedia.org/resource/Londo_Mollari", "seq": "29,41", "label": "Londo Mollari"}], "predicate mapping": [], "id": "732483cb47924b00b32792c0bb79f680"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Walter_Scharf> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Who acted in the movies whose music is composed by Walter Scharf?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Walter_Scharf", "seq": "51,63", "label": "Walter Scharf"}], "predicate mapping": [], "id": "ed3ea597f28a40cbbf89b727e336a636"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "Graduates of Somerville College have been in how many political parties?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Somerville_College,_Oxford", "seq": "13,40", "label": "Somerville College have been"}], "predicate mapping": [], "id": "c1d38d3b2ca945bd9989a4ea50cb9b23"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . }", "question": "What are some primates?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Primate", "seq": "14,21", "label": "primates"}], "predicate mapping": [], "id": "2eddea00fa824cbcaff727302f22ba39"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Morocco> . ?x <http://dbpedia.org/property/battles> ?uri }", "question": "Count the number of battles fought by the military person involved in Morocco ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Morocco", "seq": "70,76", "label": "Morocco"}], "predicate mapping": [], "id": "9f0fff722db84e1498deba1ebb619e50"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies were founded in Denton, texas?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denton_County,_Texas", "seq": "35,47", "label": "Denton, texas"}], "predicate mapping": [], "id": "89ff0d71b0d54f428fbebcc8d9f151ee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "Count the different causes of death of Christians.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christianity", "seq": "39,48", "label": "Christians"}], "predicate mapping": [], "id": "7fc3026611784ca68abe446d974bf7fb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/New_York_Yankees> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "question": "List all the teams which have someone who played their first game for the Yankees?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_Yankees", "seq": "70,80", "label": "the Yankees"}], "predicate mapping": [], "id": "a68039a3908e4104a6c881f0b0d1bac7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Who is the office holder whose deputy was Andrew Peacock and predecessor was Alexander Downer?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Peacock", "seq": "42,55", "label": "Andrew Peacock"}, {"uri": "http://dbpedia.org/resource/Alexander_Downer", "seq": "77,92", "label": "Alexander Downer"}], "predicate mapping": [], "id": "81fc6048cd674197b4c6918b39592d57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Government_of_the_United_Kingdom> . ?x <http://dbpedia.org/property/editor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "Who was the editor of the newspaper owned by the the UK government?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Government_of_the_United_Kingdom", "seq": "56,65", "label": "government"}], "predicate mapping": [], "id": "68d4d257dad14afa9f33b32b9f8f06cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show whose cast member is Companion (Doctor Who) and is related to The Sarah Jane Adventures?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)", "seq": "38,46", "label": "Companion"}, {"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "79,103", "label": "The Sarah Jane Adventures"}], "predicate mapping": [], "id": "bf76f57f7884400e8f11ba71e1d0787b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sanremo_Music_Festival> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "List all the collaborators of the artist which has collaborated with sanremo Music Festival ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanremo_Music_Festival", "seq": "69,90", "label": "sanremo Music Festival"}], "predicate mapping": [], "id": "c8c5d0a0594e48609e559b9b8766b7a5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Robert_Schenkkan> . ?x <http://dbpedia.org/property/place> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}", "question": "Where did the plays written by Robert Schenkkan take place?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Schenkkan", "seq": "31,46", "label": "Robert Schenkkan"}], "predicate mapping": [], "id": "0a0eaf434b7342f1a47f9e61c8093efe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Westminster_Abbey> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "In which sects were the aristocrats included, who were buried in Westminister abbey?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Westminster_Abbey", "seq": "65,82", "label": "Westminister abbey"}], "predicate mapping": [], "id": "4e06115370044892bc19f3433446d6c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Robert_Nutting>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "Which baseball team is owned by Robert Nutting?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Nutting", "seq": "32,45", "label": "Robert Nutting"}], "predicate mapping": [], "id": "6b7392c622bf4b9d8d89ad9e53010cb2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Private_school> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Which sports are played typically in private schools?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Private_school", "seq": "37,51", "label": "private schools"}], "predicate mapping": [], "id": "e7dde5ecb2d4418f9c39988c43ddb848"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the  people whose residence is Beverly Hills, California?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "seq": "36,60", "label": "Beverly Hills, California"}], "predicate mapping": [], "id": "a98e065d3ca64e319fdeba4de8cd09f7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henri_Becquerel> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Marie_Curie> }", "question": "Was Marie Curie a doctoral student of Henri Becquerel?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri_Becquerel", "seq": "38,52", "label": "Henri Becquerel"}, {"uri": "http://dbpedia.org/resource/Marie_Curie", "seq": "4,14", "label": "Marie Curie"}], "predicate mapping": [], "id": "c6a4fb6c10984d2494a7f6b2c3c6f6a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/N-tv> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the television shows whose network's sister names is N-tv.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/N-tv", "seq": "58,61", "label": "N-tv"}], "predicate mapping": [], "id": "ec357021bd3041b88bc21430566a7aa5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/OneDrive> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are some other services of the company whose service is Onedrive?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "seq": "61,68", "label": "Onedrive"}], "predicate mapping": [], "id": "478436ca4cc34c0bb4f8d95e5e869be7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Kazan> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "Where does the railway tracks start, which ends in Kazan?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kazan", "seq": "51,55", "label": "Kazan"}], "predicate mapping": [], "id": "ddc9605fad1340cfa17fe46efa3d5516"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/John_Tortorella> . ?uri <http://dbpedia.org/ontology/team> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "question": "Give me a count of all ice hockey players whose teams are headcoached by John Tortorella?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tortorella", "seq": "73,87", "label": "John Tortorella"}], "predicate mapping": [], "id": "f3a7adce77844beb83973ad768b686b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}", "question": "What are some important people in NGOs headed by Donna Shalala?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Donna_Shalala", "seq": "49,61", "label": "Donna Shalala"}], "predicate mapping": [], "id": "0fd3b4501cd4447d9cf64dd71b596c3c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/venue> <http://dbpedia.org/resource/San_Diego_Convention_Center> . ?x <http://dbpedia.org/property/venue> ?uri  . }", "question": "Name all the venues of the convention which has also been hosted in San Diego Convention ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Diego_Convention_Center", "seq": "68,87", "label": "San Diego Convention"}], "predicate mapping": [], "id": "1243d7724dc846eea4a227142bb548be"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri } ", "question": "Where is the county seat of King County, Washington?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/King_County,_Washington", "seq": "28,50", "label": "King County, Washington"}], "predicate mapping": [], "id": "83eea7c4c71d45ec847c1410bfbdd035"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "question": "How many relatives are there of the people who died in Germany?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Germany", "seq": "55,61", "label": "Germany"}], "predicate mapping": [], "id": "75aa8a417fa547bab0e8895242554497"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arctic_Ocean", "seq": "44,55", "label": "Arctic Ocean"}, {"uri": "http://dbpedia.org/resource/Laptev_Sea", "seq": "61,70", "label": "Laptev Sea"}], "predicate mapping": [], "id": "801fda9479a245bfba75d1f7d1881540"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lorenzo_de'_Medici> <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Lucrezia_Tornabuoni> }", "question": "Was Lucrezia Tornabuoni the mother of Lorenzo de' Medici?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lorenzo_de'_Medici", "seq": "38,55", "label": "Lorenzo de' Medici"}, {"uri": "http://dbpedia.org/resource/Lucrezia_Tornabuoni", "seq": "4,22", "label": "Lucrezia Tornabuoni"}], "predicate mapping": [], "id": "4f1a4374cc27457faacbad707a9ca72f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What band had  Nick Jonas and Kevin Jonas as former members ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nick_Jonas", "seq": "15,24", "label": "Nick Jonas"}, {"uri": "http://dbpedia.org/resource/Kevin_Jonas", "seq": "30,40", "label": "Kevin Jonas"}], "predicate mapping": [], "id": "92e3b5727baf4081b7905f89e63e2785"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northwest_Indian_War> <http://dbpedia.org/property/combatant> ?uri. <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri} ", "question": "What is the combatant of the Northwest Indian War and also the ethnic group of the Linda Hogan ", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Northwest_Indian_War", "seq": "29,48", "label": "Northwest Indian War"}, {"uri": "http://dbpedia.org/resource/Linda_Hogan", "seq": "83,93", "label": "Linda Hogan"}], "predicate mapping": [], "id": "d6c6b1031e8a40ccabf25cc682c9eb07"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/last> <http://dbpedia.org/resource/Star_Wars:_Episode_III_\u2013_Revenge_of_the_Sith> } ", "question": "Give me the characters who last appeared in Star Wars Episode 3", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Star_Wars:_Episode_III_\u2013_Revenge_of_the_Sith", "seq": "44,62", "label": "Star Wars Episode 3"}], "predicate mapping": [], "id": "5c6a09d1e72a45429f86bae07bb422e6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Cathedral_Range> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "List of people who were the first one to ascend a mountain in the Cathedral range?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cathedral_Range", "seq": "66,80", "label": "Cathedral range"}], "predicate mapping": [], "id": "19799ac99ae44c6ea599ce69e0ef0bc8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Northwestern_Hawaiian_Islands> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "question": "What is the city nearest to the islands in the Northwestern Hawaiian Islands?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Northwestern_Hawaiian_Islands", "seq": "47,75", "label": "Northwestern Hawaiian Islands"}], "predicate mapping": [], "id": "78af55409ffc4e32b981e66132116fdd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Ottawa_Citizen> . ?x <http://dbpedia.org/property/homeTown> ?uri  . }", "question": "Employees of Ottawa Citizen have come from which towns?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ottawa_Citizen", "seq": "13,26", "label": "Ottawa Citizen"}], "predicate mapping": [], "id": "9efa225a4f6841b5a6304ffb5111a1ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Christophe_Beck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie with narrator as Trevor Peacock and music composer  as Christophe Beck?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trevor_Peacock", "seq": "32,45", "label": "Trevor Peacock"}, {"uri": "http://dbpedia.org/resource/Christophe_Beck", "seq": "70,84", "label": "Christophe Beck"}], "predicate mapping": [], "id": "c7d501b648c444519cdf5fc5af8a1145"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . }", "question": "How many movies did Stanley Kubrick direct?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "seq": "20,34", "label": "Stanley Kubrick"}], "predicate mapping": [], "id": "b8f8719333604e9b9a5e34e7babe9e91"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the televesion show which has artist named Christopher Franke ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "seq": "48,65", "label": "Christopher Franke"}], "predicate mapping": [], "id": "5f620b019a9d4b988b56f5b4f3d4666a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Feminism_in_Canada> . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}", "question": "Where are the philosophers from, whose main work is on the matter of feminism in Canada?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Feminism_in_Canada", "seq": "69,86", "label": "feminism in Canada"}], "predicate mapping": [], "id": "a9026609cc0e4324bbc568de1e9c8f61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . }", "question": "In how many different places can I fnd Modern Architectural buildings?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Modern_architecture", "seq": "39,58", "label": "Modern Architectural"}], "predicate mapping": [], "id": "f0157809a86545afa67e70029372d9ef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/property/president> ?uri . }", "question": "Who is the President of the United World College of Costa Rica and United World Colleges ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica", "seq": "28,61", "label": "United World College of Costa Rica"}, {"uri": "http://dbpedia.org/resource/United_World_Colleges", "seq": "67,87", "label": "United World Colleges"}], "predicate mapping": [], "id": "e38ad8e6192b406494e5c1a4926019e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movie produced by Michael Deeley was distributed by Warner Bros ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros.", "seq": "58,68", "label": "Warner Bros"}, {"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "24,37", "label": "Michael Deeley"}], "predicate mapping": [], "id": "d0aac092bd35492b9e073efaf22ba601"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dean_Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What are some musicians who have worked with Dean Ambrose?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dean_Ambrose", "seq": "45,56", "label": "Dean Ambrose"}], "predicate mapping": [], "id": "cefb9d24941c422d97cf5b0e1d6a517f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who has had been the tenant of the stadium built by PCL construction firm?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/PCL_Construction", "seq": "52,67", "label": "PCL construction"}], "predicate mapping": [], "id": "7d987e66986840188fcae0a20722dccf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri . }", "question": "For which team did Cam Plante and Doug Acomb both play atleast once?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cam_Plante", "seq": "19,28", "label": "Cam Plante"}, {"uri": "http://dbpedia.org/resource/Doug_Acomb", "seq": "34,43", "label": "Doug Acomb"}], "predicate mapping": [], "id": "8dc6914347504e2983925818c0616850"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri } ", "question": "What is the type of Vesak ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vesak", "seq": "20,24", "label": "Vesak"}], "predicate mapping": [], "id": "c5f6f930e7c2465d84f9347c2ed9be35"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> } ", "question": "Which military personnel belong to the branch of Continental Army?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "seq": "49,64", "label": "Continental Army"}], "predicate mapping": [], "id": "a407bb2b3115418b9c87072530021edb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Emilio_N\u00fa\u00f1ez> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "Where did the president study, whose VP was Emilio Nez?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emilio_N\u00fa\u00f1ez", "seq": "44,53", "label": "Emilio Nez"}], "predicate mapping": [], "id": "12c919e6fa354555971464cbeb961149"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kaulahea_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/title> ?uri  . }", "question": "What is the title of the successor of Kaulahea I ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaulahea_I", "seq": "38,47", "label": "Kaulahea I"}], "predicate mapping": [], "id": "22c351d2188d4fdf9764737954766fa0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many different places were the people born who are members of National Museum of Racing and Hall of Fame?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame", "seq": "69,110", "label": "National Museum of Racing and Hall of Fame"}], "predicate mapping": [], "id": "3f08ba5c7c254c4391b45ec5efe64b44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which military commander fought his battle at Fort Gadsen?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Gadsden", "seq": "46,56", "label": "Fort Gadsen"}], "predicate mapping": [], "id": "095c674f34ba4e68bbf07397d12a0aa9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Phillippe_Cabot> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Columbia_University> }", "question": "Did Phillippe Cabot go to Columbia for studying?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Phillippe_Cabot", "seq": "4,18", "label": "Phillippe Cabot"}, {"uri": "http://dbpedia.org/resource/Columbia_University", "seq": "26,46", "label": "Columbia for studying"}], "predicate mapping": [], "id": "988903c3f615471fbd0fe2adeafdd518"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Brower's_Spring> } ", "question": "Which rivers start at the Brower's Spring?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brower's_Spring", "seq": "26,40", "label": "Brower's Spring"}], "predicate mapping": [], "id": "de86bc6a4b574f6ea396c7793787cb13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Edinburgh> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "For which reasons have the ones born in Edinburgh, died?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edinburgh", "seq": "40,48", "label": "Edinburgh"}], "predicate mapping": [], "id": "29718ea92a0c4340b8220c80488cd310"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Protestantism> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What games are played in Protestant schools?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Protestantism", "seq": "25,42", "label": "Protestant schools"}], "predicate mapping": [], "id": "86af262ded0c418592ba045d1b609aab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Meadow_Soprano> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which religion is followed by people in the family of Meadow Sopranos?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Meadow_Soprano", "seq": "54,68", "label": "Meadow Sopranos"}], "predicate mapping": [], "id": "fd0df4cfc4fc439696f39dd5d17dc45a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Tony_Randall_Show> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "List the notable works of the writer of The Tony Randall Show ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Tony_Randall_Show", "seq": "40,60", "label": "The Tony Randall Show"}], "predicate mapping": [], "id": "aff5614125a14573982db28c91a123c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Which software uses windows as it's operating system and is written in C++ ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "15,26", "label": "uses windows"}, {"uri": "http://dbpedia.org/resource/C++", "seq": "71,73", "label": "C++"}], "predicate mapping": [], "id": "5aebd57c3f2140568f2473946d068238"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ", "question": "Which draft team od Dale Mitchell is also the tenant of Master Card center /", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)", "seq": "20,32", "label": "Dale Mitchell"}, {"uri": "http://dbpedia.org/resource/MasterCard_Centre", "seq": "56,73", "label": "Master Card center"}], "predicate mapping": [], "id": "65e7f354b21d4f9eb1902ef3435b1f59"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Linn_Ullmann> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What prizes have been awarded to the relatives of Linn Ullmann?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linn_Ullmann", "seq": "50,61", "label": "Linn Ullmann"}], "predicate mapping": [], "id": "76979737099748f4a8ec2329b9f2a7f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Who is the scientist whose academic advisor was Karl Ewald Hasse?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse", "seq": "48,63", "label": "Karl Ewald Hasse"}], "predicate mapping": [], "id": "212a265d6c5f4b94a59ae65ab6741cce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/The_Paris_Sisters> . ?x <http://dbpedia.org/property/language> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Paris Sisters singles are of which language?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Paris_Sisters", "seq": "0,12", "label": "Paris Sisters"}], "predicate mapping": [], "id": "26de4237807b43509a696a7aa4460ae3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/City_of_Angels> . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "question": "List the other nicknames of city which has one of the nickname as City of Angels ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_Angels", "seq": "66,79", "label": "City of Angels"}], "predicate mapping": [], "id": "e3e252422e084971a88eab39961db3c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/succeeded> <http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PlayboyPlaymate>}", "question": "Which models were featured in Playboy Playmates 1954?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954", "seq": "27,51", "label": "in Playboy Playmates 1954"}], "predicate mapping": [], "id": "47af7157273449c9855fdc6169f53bc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Arabiya_99> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "Where is the sister station of Al Arabiya 99 located?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Arabiya_99", "seq": "31,43", "label": "Al Arabiya 99"}], "predicate mapping": [], "id": "8a6b193951864f6599a5793d574b5f02"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "Count the awards received by the ones who fought the battle of france?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_France", "seq": "53,68", "label": "battle of france"}], "predicate mapping": [], "id": "11b1b9c7215d497589a3b1657936580f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Chip_Hale>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "What is the baseball team whose club manager is Chip Hale?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chip_Hale", "seq": "48,56", "label": "Chip Hale"}], "predicate mapping": [], "id": "c2e076a790a4486b93dcd39fbd2281db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }", "question": "Which cities are located around the sea into which the ionian flows?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ionian_Sea", "seq": "55,66", "label": "ionian flows"}], "predicate mapping": [], "id": "32fab0cef56a47c1998aeed3476af6d2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri } ", "question": "By what person of which political party is Balangir district led?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Balangir_district", "seq": "43,59", "label": "Balangir district"}], "predicate mapping": [], "id": "cb15bf7284f846b29b8e526dbe1593a5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What team were the people drafted to, which are in the National Hockey League?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Hockey_League", "seq": "55,76", "label": "National Hockey League"}], "predicate mapping": [], "id": "8b85636931964fff9dbdd3890ae49b79"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri} ", "question": "What is the owner of Ivanpah Solar Power Facility and the original developer of Dart?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility", "seq": "21,48", "label": "Ivanpah Solar Power Facility"}, {"uri": "http://dbpedia.org/resource/Dart_(programming_language)", "seq": "80,83", "label": "Dart"}], "predicate mapping": [], "id": "db8768bc59044ae58cdf6ba508873b38"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> } ", "question": "Who all are buried in Arlington national cementary?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_National_Cemetery", "seq": "22,49", "label": "Arlington national cementary"}], "predicate mapping": [], "id": "1470a63eb37e4e13bd56e77aa0ebfe3d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri } ", "question": "Where did Jerry Tagge do his elementary schooling?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Tagge", "seq": "10,20", "label": "Jerry Tagge"}], "predicate mapping": [], "id": "321d971403c844f7b7233e28728d227e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ", "question": "who manufactures the SHO V8?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine", "seq": "21,26", "label": "SHO V8"}], "predicate mapping": [], "id": "c425a861d015448ea91b7fbda3cc03cf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Sierra_del_Merend\u00f3n> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which source of Water resources management in El Salvador is also the nation of the Sierra del Merendn?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador", "seq": "16,56", "label": "Water resources management in El Salvador"}, {"uri": "http://dbpedia.org/resource/Sierra_del_Merend\u00f3n", "seq": "84,101", "label": "Sierra del Merendn"}], "predicate mapping": [], "id": "aa6d6a9311c148d4ad8adcf7211e37d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Elliot_Goldenthal> . ?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elliot_Goldenthal", "seq": "43,59", "label": "Elliot Goldenthal"}, {"uri": "http://dbpedia.org/resource/Akiva_Goldsman", "seq": "79,92", "label": "Akiva Goldsman"}], "predicate mapping": [], "id": "d3d85e553d834356807085b355f01240"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/England> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows had their painters born in England?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "39,45", "label": "England"}], "predicate mapping": [], "id": "51cbc9d885dd4b7ea69442fd1343c8c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lucky_You_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards are won by the screenwriter of Lucky You?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucky_You_(film)", "seq": "43,51", "label": "Lucky You"}], "predicate mapping": [], "id": "625ae94833b045a0a4baa5ce95d97900"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Running_back> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "What is the former team of the american football players whose position is Running back?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Running_back", "seq": "75,86", "label": "Running back"}], "predicate mapping": [], "id": "03bb0e70f8a44f4f8650ccf6d6ff03dc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Crane> <http://dbpedia.org/property/children> ?uri } ", "question": "Which political party got elected in First Legislative Assembly of Uttar Pradesh ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Crane", "seq": "67,79", "label": "Uttar Pradesh"}], "predicate mapping": [], "id": "fd40821f1b1c4243bc23ef7f91268311"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Government_of_Mauritius> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "question": "In which areas can we find the networks owned by the govt of Mauritius?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Government_of_Mauritius", "seq": "53,69", "label": "govt of Mauritius"}], "predicate mapping": [], "id": "871775efcda94304826009853e33cb49"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Which current players once played for Toronto argonauts?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Argonauts", "seq": "38,54", "label": "Toronto argonauts"}], "predicate mapping": [], "id": "7d3a614fe3294084b04b3d873b41c665"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company builds Microsoft Azure and Microsoft Surface?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Azure", "seq": "21,35", "label": "Microsoft Azure"}, {"uri": "http://dbpedia.org/resource/Microsoft_Surface", "seq": "41,57", "label": "Microsoft Surface"}], "predicate mapping": [], "id": "7abda6e6bf294ae7a68497a1c4579a94"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ", "question": "Which contnet license provider of Microsoft Office Picture Manager is also the game platform of Google Clud Connect ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager", "seq": "34,65", "label": "Microsoft Office Picture Manager"}, {"uri": "http://dbpedia.org/resource/Google_Cloud_Connect", "seq": "96,114", "label": "Google Clud Connect"}], "predicate mapping": [], "id": "13fd5d955c674770a707d5548231b9e1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Iceman_(comics)> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Stan_Lee> }", "question": "Did Stan Lee create the Iceman comics?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iceman_(comics)", "seq": "24,29", "label": "Iceman"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "seq": "4,11", "label": "Stan Lee"}], "predicate mapping": [], "id": "7645a46261d14d09a5d676889c29a695"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Scott_(director)> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose director's daughter is Luke Scott?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luke_Scott_(director)", "seq": "49,58", "label": "Luke Scott"}], "predicate mapping": [], "id": "1941e1a9b0c24c018927477c05b1e5cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/ontology/governmentType> ?uri. <http://dbpedia.org/resource/Mizoram_Legislative_Assembly> <http://dbpedia.org/property/party> ?uri} ", "question": "Whihc party of the Mizoram Legislative Assembly is the government type of kumta ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kumta", "seq": "74,78", "label": "kumta"}, {"uri": "http://dbpedia.org/resource/Mizoram_Legislative_Assembly", "seq": "19,46", "label": "Mizoram Legislative Assembly"}], "predicate mapping": [], "id": "129712fe4ad5420f9c2c7ec7bf7b44be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who has rented the stadiums owned by Toronto?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "37,43", "label": "Toronto"}], "predicate mapping": [], "id": "c58dabff921c4dc18a7525f173f9b73d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . }", "question": "Who won a Norbert Wiener Award for Social and Professional Responsibility?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility", "seq": "10,72", "label": "Norbert Wiener Award for Social and Professional Responsibility"}], "predicate mapping": [], "id": "1ce8eb889dc948598061a205d9ac8292"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ford_Transit> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}", "question": "Who is the mfr. of the engine used in Ford Transit ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Transit", "seq": "38,49", "label": "Ford Transit"}], "predicate mapping": [], "id": "a3226ab632ca4954b180bdb3473e0aa4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ferrel_Harris> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Green_Wix_Unthank> <http://dbpedia.org/ontology/restingPlace> ?uri} ", "question": "What is the birthplace of the Ferrel Harris which is also resting palce of  Green Wix Unthank?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferrel_Harris", "seq": "30,42", "label": "Ferrel Harris"}, {"uri": "http://dbpedia.org/resource/Green_Wix_Unthank", "seq": "76,92", "label": "Green Wix Unthank"}], "predicate mapping": [], "id": "4db21db33c10474689e1a77bde6e0c01"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "What currencies are circulated in the countries where people speak French?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_language", "seq": "67,72", "label": "French"}], "predicate mapping": [], "id": "ebde94c05f654d6b8a9dc3a159f815e9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Dob\u0161insk\u00e1_Ice_Cave> <http://dbpedia.org/ontology/region> ?uri} ", "question": "Which division of Serbia national team is also the region of Dobinsk Ice Cave ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Serbia_national_American_football_team", "seq": "18,56", "label": "Serbia national team is also the region"}, {"uri": "http://dbpedia.org/resource/Dob\u0161insk\u00e1_Ice_Cave", "seq": "61,76", "label": "Dobinsk Ice Cave"}], "predicate mapping": [], "id": "8d1df3c7e7af4760a3bf0077cd9afb56"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Kaan_\u00d6nder> <http://dbpedia.org/property/currentTeam> ?uri . }", "question": "Name the common current team of the Shaun Thong and Kaannder ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_Thong", "seq": "36,46", "label": "Shaun Thong"}, {"uri": "http://dbpedia.org/resource/Kaan_\u00d6nder", "seq": "52,59", "label": "Kaannder"}], "predicate mapping": [], "id": "35a87d039618479c830132847e30888b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show which has cast member as Jason Carter and network is TNT (TV channel)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "seq": "53,64", "label": "Jason Carter"}, {"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "seq": "81,83", "label": "TNT"}], "predicate mapping": [], "id": "7a4d4807f7e44d8298c4c03226d00b85"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/731_Lexington_Avenue> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "Who hold stocks in the bank which is located at 731 Lexington Avenue?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/731_Lexington_Avenue", "seq": "48,67", "label": "731 Lexington Avenue"}], "predicate mapping": [], "id": "4fa56fcae915405bb3dc2d843d72a39b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/UFC_152> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who rented the stadium where the UFC 152 take place?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/UFC_152", "seq": "33,39", "label": "UFC 152"}], "predicate mapping": [], "id": "99a59ee47bac4242b9a447372ed7862e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Iran> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which company's cars are assembled in Iran?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iran", "seq": "38,41", "label": "Iran"}], "predicate mapping": [], "id": "d734bb40ec504463855c4d255151750f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Timothy_L._Woodruff> } ", "question": "Under which president was timothy l. woodruff a lieutenant?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timothy_L._Woodruff", "seq": "26,44", "label": "timothy l. woodruff"}], "predicate mapping": [], "id": "2a4df258ebd845d6b60aa3371a5e639c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1985_Portuguese_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri . }", "question": "Which first driver of  European Grand Prix 1993 is also finished first in 1985 Portuguese Grand Prix ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/1993_European_Grand_Prix", "seq": "23,41", "label": "European Grand Prix"}, {"uri": "http://dbpedia.org/resource/1985_Portuguese_Grand_Prix", "seq": "74,99", "label": "1985 Portuguese Grand Prix"}], "predicate mapping": [], "id": "d229a447683c43bdab10a891ceb42456"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Vijay_Chavan> <http://dbpedia.org/property/placeOfBirth> ?uri . }", "question": "What place is the birthplace of Vijay Chavan where Eka Lagnachi Teesri Goshta is located as well?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta", "seq": "51,76", "label": "Eka Lagnachi Teesri Goshta"}, {"uri": "http://dbpedia.org/resource/Vijay_Chavan", "seq": "32,43", "label": "Vijay Chavan"}], "predicate mapping": [], "id": "1df641d8a68b4fc085b0cb54337deb82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri . }", "question": "In which fields are both Paul Demiville and Sylvain levi experts?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "seq": "25,38", "label": "Paul Demiville"}, {"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "seq": "44,55", "label": "Sylvain levi"}], "predicate mapping": [], "id": "e9036a6c1a674f64a85a400eb987393b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }", "question": "Ernest Rutherford was the advisor of how many people?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "seq": "0,16", "label": "Ernest Rutherford"}], "predicate mapping": [], "id": "78671ca44f6445c08adb515eb5031860"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri} ", "question": "Which birthplace of Liliya Lobanova is also the location of the Snake Island ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liliya_Lobanova", "seq": "20,34", "label": "Liliya Lobanova"}, {"uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)", "seq": "64,75", "label": "Snake Island"}], "predicate mapping": [], "id": "482ddc59c8bc469aba847456beec32d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Steve_Winwood> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Where were some people associated with Steve Winwood employed at?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Winwood", "seq": "39,51", "label": "Steve Winwood"}], "predicate mapping": [], "id": "754a3bc265ae4fe1833884e86aceb12b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri } ", "question": "What is the nationality of Aishath Saffa ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aishath_Saffa", "seq": "27,39", "label": "Aishath Saffa"}], "predicate mapping": [], "id": "7750fb1d95a7475ea49813b10023c2ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jonathan_Haskell> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "question": "Who were involved in the wars where Jonathan Haskell battled?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonathan_Haskell", "seq": "36,51", "label": "Jonathan Haskell"}], "predicate mapping": [], "id": "f58241b0c93f471fb1b44686630eccf1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/River_Shannon> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> }", "question": "Does the river shannon originate from Dowra?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/River_Shannon", "seq": "9,21", "label": "river shannon"}, {"uri": "http://dbpedia.org/resource/Dowra", "seq": "38,42", "label": "Dowra"}], "predicate mapping": [], "id": "950b70d788fa482b9c3855e96aebe7ac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri } ", "question": "What is the currency of Kerguelen Islands ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kerguelen_Islands", "seq": "24,40", "label": "Kerguelen Islands"}], "predicate mapping": [], "id": "bd98b86d3b6c435aacc10d295ce6d25c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jevan_Snead> <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> }", "question": "Does Jevan Snead play as Quarterback?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jevan_Snead", "seq": "5,15", "label": "Jevan Snead"}, {"uri": "http://dbpedia.org/resource/Quarterback", "seq": "25,35", "label": "Quarterback"}], "predicate mapping": [], "id": "22fdf1b988044e3992540ed303e59a54"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In how many nations is Coconut a common food ingredient?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Coconut", "seq": "23,29", "label": "Coconut"}], "predicate mapping": [], "id": "b3accf6c63ba441da4b7f73c93c7fc87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the show whose jury consist of Jennifer Lopez and Randy Jackson?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "seq": "36,49", "label": "Jennifer Lopez"}, {"uri": "http://dbpedia.org/resource/Randy_Jackson", "seq": "55,67", "label": "Randy Jackson"}], "predicate mapping": [], "id": "d23c4c43e4f1484b99c8054143bf2438"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tahiti> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands> }", "question": "Is tahiti in the Society Islands achipelago?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tahiti", "seq": "3,8", "label": "tahiti"}, {"uri": "http://dbpedia.org/resource/Society_Islands", "seq": "17,31", "label": "Society Islands"}], "predicate mapping": [], "id": "50f9b25a3d0c408fb2383283fe04a6d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "How many games have been composed by Hirokazu Tanaka?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hirokazu_Tanaka", "seq": "37,51", "label": "Hirokazu Tanaka"}], "predicate mapping": [], "id": "e845283de6574fc59a1cce2cc027c070"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Stony_Brook_University_Hospital> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}", "question": "Where did the fashion designer study who died at the Stony Brook University Hospital?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stony_Brook_University_Hospital", "seq": "53,83", "label": "Stony Brook University Hospital"}], "predicate mapping": [], "id": "73b6ab3abf6f45c4b9e8d5139432cbc2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name few television shows's anchored by Ryan Seacrest?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "40,52", "label": "Ryan Seacrest"}], "predicate mapping": [], "id": "e47dfae4d0b64adf925f7961a27179fe"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/U.N.I.T.Y.> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Queen_Latifah> }", "question": "Was Queen Latifah in the U.N.I.T.Y. group?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/U.N.I.T.Y.", "seq": "25,33", "label": "U.N.I.T.Y"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "seq": "4,16", "label": "Queen Latifah"}], "predicate mapping": [], "id": "67483b164094400d9d576eccb59768bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Russell_T_Davies> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Give me some shows related to the ones created by Russell Davies", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "50,63", "label": "Russell Davies"}], "predicate mapping": [], "id": "c75bb3f9a6a54bc995eec394e964b45e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Grand_Forks_Air_Force_Base> . ?x <http://dbpedia.org/ontology/region> ?uri }", "question": "List the total number of regions of the building whose are located in\\Grand Forks Air Force Base?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grand_Forks_Air_Force_Base", "seq": "67,95", "label": "in\\Grand Forks Air Force Base"}], "predicate mapping": [], "id": "8346271fdbeb43c38d5f057dcd618d8f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Where is the headquarters of the company which runs the Metro Blue Line in minnesota?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)", "seq": "56,70", "label": "Metro Blue Line"}], "predicate mapping": [], "id": "9bd93e910858410cb64bf86b0f1a17f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Jamestown,_Virginia> . ?uri <http://dbpedia.org/property/allegiance> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamestown,_Virginia", "seq": "73,91", "label": "Jamestown, Virginia"}], "predicate mapping": [], "id": "69cb6ce0352f474abab40245852c8670"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which religion's people are member of BJP?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party", "seq": "0,22", "label": "Which religion's people"}], "predicate mapping": [], "id": "a561ecf7220a4ede974139e2dd42ed14"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "Count the different alma maters of people employed by the CNN", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/CNN", "seq": "58,60", "label": "CNN"}], "predicate mapping": [], "id": "432c5c5d446a4b608c1de47eac01170d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "How many dishes are made with an ingredient belonging to the flowering plant species?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Flowering_plant", "seq": "61,75", "label": "flowering plant"}], "predicate mapping": [], "id": "9e2d283b09f4408392359dbb0df6b0a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/governingBody> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri . }", "question": "What is the common governing body of the Naval Air Facility Adak and Oahu Railway and Land Company?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak", "seq": "41,63", "label": "Naval Air Facility Adak"}, {"uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company", "seq": "69,97", "label": "Oahu Railway and Land Company"}], "predicate mapping": [], "id": "e204ffab3fc443009fdb2fe1076fe742"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/PRS_Guitars> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . }", "question": "Whose band members are known to play a PRS guitar?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/PRS_Guitars", "seq": "39,48", "label": "PRS guitar"}], "predicate mapping": [], "id": "6d530d8977fd4a4cbc5f2cb377470f1d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Funky_Lab_Rat> <http://dbpedia.org/property/released> <http://dbpedia.org/resource/North_America> }", "question": "Was the Funky Lab Rat released in North America?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Funky_Lab_Rat", "seq": "8,20", "label": "Funky Lab Rat"}, {"uri": "http://dbpedia.org/resource/North_America", "seq": "34,46", "label": "North America"}], "predicate mapping": [], "id": "3ea8d607953f4c308929055937b16aaa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dornier_Aerodyne> <http://dbpedia.org/property/nationalOrigin> ?uri } ", "question": "Which nation is the origin of Dornier Aerodyne ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dornier_Aerodyne", "seq": "30,45", "label": "Dornier Aerodyne"}], "predicate mapping": [], "id": "7852a6da015f4c208bb9f11e5e423d74"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rival> <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Where is the rival school of Somerset Berkeley Regional High school?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School", "seq": "29,66", "label": "Somerset Berkeley Regional High school"}], "predicate mapping": [], "id": "7b5b0c8cb0ab4bd392162a7625ee8375"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri . }", "question": "Which is the city closest to both the Lodaiska site and the home of David w brown?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/LoDaisKa_Site", "seq": "38,50", "label": "Lodaiska site"}, {"uri": "http://dbpedia.org/resource/David_W._Brown_House", "seq": "68,80", "label": "David w brown"}], "predicate mapping": [], "id": "2dc904ef3c0548be8f0e6094c1d29e82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mohamedia,_Tunisia> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "What is the state of the settlement, which is the sub assembly of Mohamedia, Tunisia ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mohamedia,_Tunisia", "seq": "66,83", "label": "Mohamedia, Tunisia"}], "predicate mapping": [], "id": "06b5a80c33ba482fae7bb1d6ca6f4466"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose company is HBO and Playtone?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "42,44", "label": "HBO"}, {"uri": "http://dbpedia.org/resource/Playtone", "seq": "50,57", "label": "Playtone"}], "predicate mapping": [], "id": "6a5d40f8a52947ff8f4c0f896df790b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fredis_Refunjol> . }", "question": "Whose leaders are Willem-Alexander and Fredis Refunjol?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands", "seq": "18,44", "label": "Willem-Alexander and Fredis"}, {"uri": "http://dbpedia.org/resource/Fredis_Refunjol", "seq": "39,53", "label": "Fredis Refunjol"}], "predicate mapping": [], "id": "24fb6dd7a0ba43e2868b53007f2509e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What television show are distributed by Broadcast syndication?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broadcast_syndication", "seq": "40,60", "label": "Broadcast syndication"}], "predicate mapping": [], "id": "278c456525224d648387222246b05683"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri} ", "question": "Who is the common parent of Gettv and hypnotize mind ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/GetTV", "seq": "28,32", "label": "Gettv"}, {"uri": "http://dbpedia.org/resource/Hypnotize_Minds", "seq": "38,51", "label": "hypnotize mind"}], "predicate mapping": [], "id": "b0d14b766ec544f7b6027a2ff2c21705"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri } ", "question": "Name the mascot of Austin College ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Austin_College", "seq": "19,32", "label": "Austin College"}], "predicate mapping": [], "id": "db8ba3e09dd14372b45c7565c2b078f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Leallah> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "What is the birth city of trainer of Leallah?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Leallah", "seq": "37,43", "label": "Leallah"}], "predicate mapping": [], "id": "e61297db8f36438f953bf3f79b912f41"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person with opponents Ike Clanton and Tom McLaury?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ike_Clanton", "seq": "31,41", "label": "Ike Clanton"}, {"uri": "http://dbpedia.org/resource/Tom_McLaury", "seq": "47,57", "label": "Tom McLaury"}], "predicate mapping": [], "id": "698471b904f24b2aa626bb6426728661"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports", "seq": "59,84", "label": "Los Angeles World Airports"}], "predicate mapping": [], "id": "de301d41a10c41a3a2d59f1551e5d9ac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Karafarin_Bank> <http://dbpedia.org/ontology/product> ?uri} ", "question": "What is used as money for French Southern and Antarctic Lands is also the  product of the Karafarin Bank ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands", "seq": "26,60", "label": "French Southern and Antarctic Lands"}, {"uri": "http://dbpedia.org/resource/Karafarin_Bank", "seq": "90,103", "label": "Karafarin Bank"}], "predicate mapping": [], "id": "53c6290f51ab4906877de90618901cdd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's resting place is in  Palo Alto, California and was succeeded by Adrian A. Basora ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "seq": "43,63", "label": "Palo Alto, California"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "86,101", "label": "Adrian A. Basora"}], "predicate mapping": [], "id": "e57b71a78a4646b0a3ce6c506fffc8e6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Denzil_Minnan-Wong> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the companies which are in cities under Denzil Minnan Wong?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denzil_Minnan-Wong", "seq": "45,62", "label": "Denzil Minnan Wong"}], "predicate mapping": [], "id": "fa5fce44a7e64b59826c7dba9a288670"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/George_Washington> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Which city was founded by  George Washington and John Forbes (British Army officer)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Washington", "seq": "27,43", "label": "George Washington"}, {"uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)", "seq": "49,59", "label": "John Forbes"}], "predicate mapping": [], "id": "8e8ac76792d840c9849445eb2ee65da9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tokaj_wine_region> <http://dbpedia.org/property/country> ?uri } ", "question": "List the country of Tokaj wine region ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tokaj_wine_region", "seq": "20,36", "label": "Tokaj wine region"}], "predicate mapping": [], "id": "778cbddc962441b5b7e5928f7fbd4c0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}", "question": "Who are the golf players whose college is Arizona State Sun Devils?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils", "seq": "42,65", "label": "Arizona State Sun Devils"}], "predicate mapping": [], "id": "d291a478d5a74fb6bebdcc6c74bf55c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/John_B._Waldo> . ?x <http://dbpedia.org/property/state> ?uri  . }", "question": "Where is the successor of john waldo from?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_B._Waldo", "seq": "26,35", "label": "john waldo"}], "predicate mapping": [], "id": "3bb7be1a180e47e49b6cc14c06051021"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/Richard_Heron> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which home town of Cline Buckens is the place of Death of Richard heron ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/C\u00e9line_Buckens", "seq": "19,31", "label": "Cline Buckens"}, {"uri": "http://dbpedia.org/resource/Richard_Heron", "seq": "58,70", "label": "Richard heron"}], "predicate mapping": [], "id": "22eeb146aa1f41a4b0db6df5844b3fed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Name some cars similar to the ones which are assembled at the Jefferson North Assembly?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jefferson_North_Assembly", "seq": "62,85", "label": "Jefferson North Assembly"}], "predicate mapping": [], "id": "a501085682e8485f815a18df2b94a9a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . }", "question": "Which awards are presented by the committee located in Stockholm?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stockholm", "seq": "55,63", "label": "Stockholm"}], "predicate mapping": [], "id": "d7c077b487cb42b5869f72a3cd8d28be"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robbie_Diack> <http://dbpedia.org/property/school> ?uri } ", "question": "Which school did Robbie Diack attend?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robbie_Diack", "seq": "17,28", "label": "Robbie Diack"}], "predicate mapping": [], "id": "d6aaeb41aef44a8b8bffd1a5e90e3d16"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest> <http://dbpedia.org/ontology/starring> ?uri } ", "question": "Who is the film star of On Air with Ryan Seacrest ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest", "seq": "24,48", "label": "On Air with Ryan Seacrest"}], "predicate mapping": [], "id": "f1036fdd007245499c769a21e5ecb88e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Saxophone> . ?uri <http://dbpedia.org/property/starring> ?x  . }", "question": "List everything in which saxophone players have been casted.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saxophone", "seq": "25,33", "label": "saxophone"}], "predicate mapping": [], "id": "e3bdce2f724541fc987861adb5d4e715"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)> <http://dbpedia.org/ontology/author> ?uri } ", "question": "Who wrote Catch My soul ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)", "seq": "10,22", "label": "Catch My soul"}], "predicate mapping": [], "id": "b25f5f59b6e44ff28e90122b0cd42a0f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge> <http://dbpedia.org/property/builder> ?uri } ", "question": "Who is the builder of Atamurat-Kerkichi Bridge ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge", "seq": "22,45", "label": "Atamurat-Kerkichi Bridge"}], "predicate mapping": [], "id": "87745e512088474b8c15730c5bb6c4c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "How many bands collaborated with artists who signed up with EMI?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/EMI", "seq": "60,62", "label": "EMI"}], "predicate mapping": [], "id": "0db563660d024f5db42e2ff6ddb9f966"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Be\u015fikta\u015f_JK_(wheelchair_basketball)> <http://dbpedia.org/ontology/president> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "Where did the president study, who's the president of Besiktas JK?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Be\u015fikta\u015f_JK_(wheelchair_basketball)", "seq": "54,64", "label": "Besiktas JK"}], "predicate mapping": [], "id": "83858d645fa74a698c361696ed79496f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri } ", "question": "To which destinations does Air 2000 fly?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_2000", "seq": "27,34", "label": "Air 2000"}], "predicate mapping": [], "id": "31f62ce6b5864c64a97f7cc543adf78e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Project_Runway_Canada> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "In which places can we find the people won the Project Runaway Canada?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Project_Runway_Canada", "seq": "47,68", "label": "Project Runaway Canada"}], "predicate mapping": [], "id": "d30be769b8ad4830a948b6b989b27b12"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "question": "How many factions were fighting in the wars where Blue Jacket was a commander?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blue_Jacket", "seq": "50,60", "label": "Blue Jacket"}], "predicate mapping": [], "id": "b8223f04582b4b20a1089758559d531f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Daredevils> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }", "question": "Did Stan Lee write the Daredevils?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Daredevils", "seq": "19,32", "label": "the Daredevils"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "seq": "4,11", "label": "Stan Lee"}], "predicate mapping": [], "id": "364f8115122d4456bd0b8b6d9667f399"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }", "question": "How many record labels publish works of Jazz fusion?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jazz_fusion", "seq": "40,50", "label": "Jazz fusion"}], "predicate mapping": [], "id": "7355543eae974888a7f58b4d3f0b935f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/L\u00ea_H\u1ed3ng_Phong> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "Where was the person born whose successor was Le Hong Phong?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/L\u00ea_H\u1ed3ng_Phong", "seq": "46,58", "label": "Le Hong Phong"}], "predicate mapping": [], "id": "6593b0b0d9e445f68fe8d0c7cb6deb32"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Sukhumbhand_Paribatra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}", "question": "To what region is Sukhumbhand Paribatra, a leader?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra", "seq": "18,38", "label": "Sukhumbhand Paribatra"}], "predicate mapping": [], "id": "37c6c9560a004182b868a8325b4125f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Picasso's_Last_Words_(Drink_to_Me)> <http://dbpedia.org/property/recorded> ?uri } ", "question": "Where was Picasso's Last Words recorded ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Picasso's_Last_Words_(Drink_to_Me)", "seq": "10,29", "label": "Picasso's Last Words"}], "predicate mapping": [], "id": "8427427253454182aca2857c9c998594"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }", "question": "What is the largest city of the birthplace of Pat Kirkwood?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)", "seq": "46,57", "label": "Pat Kirkwood"}], "predicate mapping": [], "id": "b39bd89257314e1590322c36e2473a36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Yes_(band)> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "For how many movies have the music composer composed music, who have collaborated with Yes ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yes_(band)", "seq": "87,89", "label": "Yes"}], "predicate mapping": [], "id": "b202004bedfc47c3ab2bf3c5a1cadc48"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri } ", "question": "What is the largest city of Pulau Ubin ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pulau_Ubin", "seq": "28,37", "label": "Pulau Ubin"}], "predicate mapping": [], "id": "08a500572859403193faa199f742c448"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Athens> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "What is the former team of the Athens borned basketball players ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Athens", "seq": "31,36", "label": "Athens"}], "predicate mapping": [], "id": "9babaa2d96e64f1db42f3fb1df04a4bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/ontology/president> ?uri} ", "question": "Which key perosn of the Elders is also the president of united World College ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Elders_(organization)", "seq": "20,29", "label": "the Elders"}, {"uri": "http://dbpedia.org/resource/United_World_Colleges", "seq": "56,75", "label": "united World College"}], "predicate mapping": [], "id": "ec8a5db122044505b00fd65fb461df70"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Uganda> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri }", "question": "What is the total number of other nearest countries to the lakes whose nearest countries is Uganda?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Uganda", "seq": "92,97", "label": "Uganda"}], "predicate mapping": [], "id": "6b13f7438d6d4847b09299089889dd7e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "37,48", "label": "Simon Fuller"}, {"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "seq": "64,78", "label": "Jennifier Lopez"}], "predicate mapping": [], "id": "840cc802cdf04e8eac6a2f572777b0fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_One> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Give me some shows owned by BBC one and BBC hd?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_One", "seq": "28,34", "label": "BBC one"}, {"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "40,45", "label": "BBC hd"}], "predicate mapping": [], "id": "0130934ed9434be69d31f035e062979a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Jay_Lane> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the shows whose theme was composed by a band in which Jay Lane used to be?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jay_Lane", "seq": "59,66", "label": "Jay Lane"}], "predicate mapping": [], "id": "379c894ed50943efa6daca5de2dba735"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Greater_London> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Where do the rivers from greater London flow into?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_London", "seq": "25,38", "label": "greater London"}], "predicate mapping": [], "id": "f81e7f1fee7f4af2a3dcb722750b7137"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jared_Kushner> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "question": "List out the people who are related to the relatives of Jared Kushner ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jared_Kushner", "seq": "56,68", "label": "Jared Kushner"}], "predicate mapping": [], "id": "2c1e5203a1b34f32b1e7d70c4086c339"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Buzz_Williams> }", "question": "Was Buzz Williams the headcoach of the Marquette Golden Eagles mens team?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "seq": "39,71", "label": "Marquette Golden Eagles mens team"}, {"uri": "http://dbpedia.org/resource/Buzz_Williams", "seq": "4,16", "label": "Buzz Williams"}], "predicate mapping": [], "id": "a3791b21aca7437b82671f3c7f08d07d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "How many units follow the US Navy Department's command structure?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy", "seq": "29,63", "label": "Navy Department's command structure"}], "predicate mapping": [], "id": "d8f5b908b827406cb94b84acf46a4d08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/opponent> <http://dbpedia.org/resource/John_G._Schmitz> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "Under which US president was a politician in opposition of John G Schmitz?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_G._Schmitz", "seq": "59,72", "label": "John G Schmitz"}], "predicate mapping": [], "id": "9833117a26d84052ac213535b41a7fd9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri. <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri} ", "question": "Whcih creator of Theme Time Radio Hour also created subsequent work of Moondoc Matinee ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moondog_Matinee", "seq": "71,85", "label": "Moondoc Matinee"}, {"uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour", "seq": "17,37", "label": "Theme Time Radio Hour"}], "predicate mapping": [], "id": "670aa15c90d24e1e973eaeb3581ebacd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duncan_U._Fletcher> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri} ", "question": "Which education institute of Duncan U. Fletcher is also the university of Vanderbilt Commodores ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duncan_U._Fletcher", "seq": "29,46", "label": "Duncan U. Fletcher"}, {"uri": "http://dbpedia.org/resource/Vanderbilt_Commodores", "seq": "74,94", "label": "Vanderbilt Commodores"}], "predicate mapping": [], "id": "24b693a3d51d407081f086a373e872c9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri} ", "question": "Which license provider of MSX basic is also the designer of Language Integrated Query ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Language_Integrated_Query", "seq": "60,84", "label": "Language Integrated Query"}, {"uri": "http://dbpedia.org/resource/MSX_BASIC", "seq": "26,34", "label": "MSX basic"}], "predicate mapping": [], "id": "5581904287e54612991d36031d060a31"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory> } ", "question": "Who was the United States president who also served as a governor of Indiana Territory?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana_Territory", "seq": "69,85", "label": "Indiana Territory"}], "predicate mapping": [], "id": "1b3cf7cd113c4026ae73b7cb071d05d8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ", "question": "Who built the Ford Y-block engine ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Y-block_engine", "seq": "14,32", "label": "Ford Y-block engine"}], "predicate mapping": [], "id": "9682bc0632d6403e9e533df9f9bee572"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ellen_Lundstr\u00f6m> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards received by spouse of Ellen Lundstrom?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ellen_Lundstr\u00f6m", "seq": "42,56", "label": "Ellen Lundstrom"}], "predicate mapping": [], "id": "57b3533cb2b741e1a567c34b4ff71b21"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Plymouth_High_School_for_Girls> <http://dbpedia.org/ontology/county> <http://dbpedia.org/resource/Devon> }", "question": "Is Plymouth High School for Girls in Devon county?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_High_School_for_Girls", "seq": "3,32", "label": "Plymouth High School for Girls"}, {"uri": "http://dbpedia.org/resource/Devon", "seq": "37,41", "label": "Devon"}], "predicate mapping": [], "id": "92a16632674c43289898624bf2cb23aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Club_One_Air> <http://dbpedia.org/ontology/hubAirport> ?x . ?x <http://dbpedia.org/property/cityServed> ?uri  . }", "question": "In which city is the hub airport of Club One Air?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Club_One_Air", "seq": "36,47", "label": "Club One Air"}], "predicate mapping": [], "id": "b8c65342df0845babde8d67c22d0343c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/poleDriver> <http://dbpedia.org/resource/Mika_H\u00e4kkinen> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "List the first drivers of Grand Prixes where Mika Hakkinen was a pole driver.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mika_H\u00e4kkinen", "seq": "45,57", "label": "Mika Hakkinen"}], "predicate mapping": [], "id": "15dd4008b74d40e89454e046b370e8f8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer>  . }", "question": "Who produced the Pixar Image Computer?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pixar_Image_Computer", "seq": "17,36", "label": "Pixar Image Computer"}], "predicate mapping": [], "id": "00fb7cf892ed4de0a25b3d8c04526470"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Name the royalty whose daughter was Cleopatra V and was married to Ptolemy XIV of Egypt?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "seq": "67,86", "label": "Ptolemy XIV of Egypt"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt", "seq": "67,86", "label": "Ptolemy XIV of Egypt"}], "predicate mapping": [], "id": "7ffdaaa1870e4b449f08ef6591198dfb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "question": "What are some islands in the bahamas?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Bahamas", "seq": "25,35", "label": "the bahamas"}], "predicate mapping": [], "id": "8ef554c7762349339b7cecc0fdf1bf1e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mother_Teresa> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> }", "question": "Was mother teresa beatified by John Paul the second?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mother_Teresa", "seq": "4,16", "label": "mother teresa"}, {"uri": "http://dbpedia.org/resource/Pope_John_Paul_II", "seq": "31,43", "label": "John Paul the"}], "predicate mapping": [], "id": "dcf35e72e0e94e41bde4a681a72c6e01"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri  . }", "question": "Who is the designer of Saleen S5S Raptor ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor", "seq": "23,39", "label": "Saleen S5S Raptor"}], "predicate mapping": [], "id": "900865ae340c40d793d500a8d01ca479"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Buckethead> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name some TV shows whose theme is made by a band associated with Buckethead?", "sparql_id": 906, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buckethead", "seq": "65,74", "label": "Buckethead"}], "predicate mapping": [], "id": "6e4a15a53aae46c98668eb591c9d4c6d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }", "question": "How many different people hold authority over the members of Balanidae family?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Balanidae", "seq": "61,69", "label": "Balanidae"}], "predicate mapping": [], "id": "299a2517930845609e238e4349ba2e5a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }", "question": "Which fields' academic journals are found in the US?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "36,47", "label": "found in the"}], "predicate mapping": [], "id": "e97e582bdce440f9acac0f42cfa04053"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Ch\u00eane-Bougeries> . }", "question": "Which  municipality is neighbored by Cologny and Chne-Bougeries?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "seq": "37,43", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Ch\u00eane-Bougeries", "seq": "49,62", "label": "Chne-Bougeries"}], "predicate mapping": [], "id": "a1b9bccd83024859887b1a4045cc1240"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Kurt_Rambis> } ", "question": "Which basketball team's coach is Kurt Rambis?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kurt_Rambis", "seq": "33,43", "label": "Kurt Rambis"}], "predicate mapping": [], "id": "663ee78f1ef04f2e993a7e2bfc3a33f6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Pacific_Ocean> . ?x <http://dbpedia.org/ontology/regionServed> ?uri }", "question": "How many other region served are there of the companies which serves  Pacific Ocean ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pacific_Ocean", "seq": "70,82", "label": "Pacific Ocean"}], "predicate mapping": [], "id": "ef2ee51cf7824d8fa2fd0a5ab306a4dc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Bob_McMullan> <http://dbpedia.org/ontology/primeMinister> ?uri . }", "question": "Which common prime minister did Graham Richardson and Bon McMullan serve ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Richardson", "seq": "32,48", "label": "Graham Richardson"}, {"uri": "http://dbpedia.org/resource/Bob_McMullan", "seq": "54,65", "label": "Bon McMullan"}], "predicate mapping": [], "id": "787190bf105a421a9ce3d9c43676b4e9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ernest_de_Saisset> <http://dbpedia.org/ontology/almaMater> ?uri } ", "question": "Name the alma mater of Ernest de Saisset ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_de_Saisset", "seq": "23,39", "label": "Ernest de Saisset"}], "predicate mapping": [], "id": "ec64691c6956449cb904adfc2f248e5e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Giannis_Alafouzos> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ", "question": "Where does the Giannis Alafouzos originate?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Giannis_Alafouzos", "seq": "15,31", "label": "Giannis Alafouzos"}], "predicate mapping": [], "id": "7d551dbcd79d403490a5b99b491823dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco>  . }", "question": "Whose constituency is Duboce Triangle ?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "seq": "22,36", "label": "Duboce Triangle"}], "predicate mapping": [], "id": "dd2c217006414f468433007e3ee89d47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Mark_Latham> . ?uri <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Tim_Mathieson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder with predecessor as Mark Latham and partner Tim Mathieson ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Latham", "seq": "43,53", "label": "Mark Latham"}, {"uri": "http://dbpedia.org/resource/Tim_Mathieson", "seq": "67,79", "label": "Tim Mathieson"}], "predicate mapping": [], "id": "df38113ac72a4b079f4b7ce32a5fab4d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "What are some party leaders of the parties which have had a seat in Berlin?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Berlin", "seq": "68,73", "label": "Berlin"}], "predicate mapping": [], "id": "279603f7c94547af858759999611f14d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What awards have been given to Screenwriters?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "seq": "31,43", "label": "Screenwriters"}], "predicate mapping": [], "id": "1f0727912ac34c55b9900d1943f9a7af"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/William_C._Cramer> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "What is the location city of the Denver Broncos which is also  place of birth of the William C. Cramer ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denver_Broncos", "seq": "33,46", "label": "Denver Broncos"}, {"uri": "http://dbpedia.org/resource/William_C._Cramer", "seq": "85,101", "label": "William C. Cramer"}], "predicate mapping": [], "id": "a39c0776beac448ba93918e218e263d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What companies are located in toronto?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "30,36", "label": "toronto"}], "predicate mapping": [], "id": "861f142fbb834b069b0085c225e1a899"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hiroji_Kiyotake> . ?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Which video game's artist is Hiroji Kiyotake and computing platform is Virtual Console?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hiroji_Kiyotake", "seq": "29,43", "label": "Hiroji Kiyotake"}, {"uri": "http://dbpedia.org/resource/Virtual_Console", "seq": "71,85", "label": "Virtual Console"}], "predicate mapping": [], "id": "a6422effde9d467e8150547dafbdb5f6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri. <http://dbpedia.org/resource/Charles_A._Boutelle> <http://dbpedia.org/property/restingplace> ?uri} ", "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics", "seq": "24,62", "label": "Maine School of Science and Mathematics"}, {"uri": "http://dbpedia.org/resource/Charles_A._Boutelle", "seq": "93,111", "label": "Charles A. Boutelle"}], "predicate mapping": [], "id": "6d79d046defe4cb683dddbf548a4dbc1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas> . ?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which Harris County based company is a subsidiary of Tandem Computers?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harris_County,_Texas", "seq": "6,24", "label": "Harris County based"}, {"uri": "http://dbpedia.org/resource/Tandem_Computers", "seq": "53,68", "label": "Tandem Computers"}], "predicate mapping": [], "id": "d1bcc9750c134471969808b985308178"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lysistrata> <http://dbpedia.org/property/characters> ?uri } ", "question": "List the characters of Lysistrata ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lysistrata", "seq": "23,32", "label": "Lysistrata"}], "predicate mapping": [], "id": "f84586d24de34750a3807a55539f8bf9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/P._Elmo_Futrell,_Jr.> <http://dbpedia.org/property/office> ?uri  . }", "question": "Where is the office of P Elmo Futrell Jr?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/P._Elmo_Futrell,_Jr.", "seq": "23,39", "label": "P Elmo Futrell Jr"}], "predicate mapping": [], "id": "6165d3f09df840a0920e30b60a8a66ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . }", "question": "Which spouse of Ptolemy XIV had a mother named Ptolemy XII auletes ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "seq": "47,65", "label": "Ptolemy XII auletes"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt", "seq": "47,65", "label": "Ptolemy XII auletes"}], "predicate mapping": [], "id": "17f767e9a51b4a3d935fa194d0de2f8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "What is the baseball team whose club manager's debut team is Houston Astros?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston_Astros", "seq": "61,74", "label": "Houston Astros"}], "predicate mapping": [], "id": "9a52bd8a34ec4f4ea8936de7ddaf2d47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the producer of the television shows distributed by FremantleMedia.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/FremantleMedia", "seq": "57,70", "label": "FremantleMedia"}], "predicate mapping": [], "id": "d9a5d02d87f1498995339381249f32ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Stan_Kroenke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "What stadium's operator is Stan Kroenke", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stan_Kroenke", "seq": "27,38", "label": "Stan Kroenke"}], "predicate mapping": [], "id": "fdff8ccca9db497f99b8d58a8528289e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many corporations were founded in Texas?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "seq": "38,42", "label": "Texas"}], "predicate mapping": [], "id": "0adae92fcd52472bb68050b2bbb93c44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/binomialAuthority> <http://dbpedia.org/resource/\u00c9douard_M\u00e9n\u00e9tries> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }", "question": "List all binomial authority of the insects whose one of the  binomial authority is douard Mntries?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c9douard_M\u00e9n\u00e9tries", "seq": "83,96", "label": "douard Mntries"}], "predicate mapping": [], "id": "2bb47e7a93f54b089d92f2822728eb97"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Willow_Creek> <http://dbpedia.org/ontology/state> ?uri } ", "question": "In which state is Red Willow Creek?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_Willow_Creek", "seq": "18,33", "label": "Red Willow Creek"}], "predicate mapping": [], "id": "d173daed7ab8420da0c8c83b7327b298"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri  . }", "question": "Where does Manu cornet work?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manu_Cornet", "seq": "11,21", "label": "Manu cornet"}], "predicate mapping": [], "id": "6b258a86694f43419d3c78e7aec3c3a7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fazlur_Rahman_Khan> <http://dbpedia.org/ontology/restingPlace> ?uri } ", "question": "Name the resting place of Fazlur Rahman Khan ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fazlur_Rahman_Khan", "seq": "26,43", "label": "Fazlur Rahman Khan"}], "predicate mapping": [], "id": "51c70eaba07848f2a77e752b51b5d1d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "question": "List some teams for which someone who has played as a defender, now plays?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "seq": "54,66", "label": "defender, now"}], "predicate mapping": [], "id": "b387a0ed9c02429981b6d661bfe7d779"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Barbara_Bestor> <http://dbpedia.org/property/knownFor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "In which place is the company which is known for Barbara bestor located ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barbara_Bestor", "seq": "49,62", "label": "Barbara bestor"}], "predicate mapping": [], "id": "81a19f6c64e14ffeb7f3f28e34230331"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }", "question": "Count all the places where companies located in Ontario operate.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "48,54", "label": "Ontario"}], "predicate mapping": [], "id": "b107d70a40bd4d58953a8a9b4aacc109"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Mrunalini_Kunte> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "question": "What is the famous relative of Mrunalini Kunte known for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mrunalini_Kunte", "seq": "31,45", "label": "Mrunalini Kunte"}], "predicate mapping": [], "id": "7f3a0c2887a7423eb69732bbf1208c88"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_W._Hyatt> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the resting place of the person who is the successor of James W. Hyatt ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_W._Hyatt", "seq": "64,77", "label": "James W. Hyatt"}], "predicate mapping": [], "id": "3c8f5b5976af40178208af0ac6ccae51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Diana_Taylor_(superintendent)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "What politician's partner is Diana Taylor ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Diana_Taylor_(superintendent)", "seq": "29,40", "label": "Diana Taylor"}], "predicate mapping": [], "id": "e8db37fb6c5445dbbbc87de13325c056"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Bradenton,_Florida> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who was the architect of the stadium currently run by Brandenton?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bradenton,_Florida", "seq": "54,63", "label": "Brandenton"}], "predicate mapping": [], "id": "75f2b0e695d0422494bcbf36743ad108"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Methodist_Central_Hall_Westminster> <http://dbpedia.org/ontology/district> ?uri } ", "question": "What is the district of Methodist Central Hall Westminster ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Methodist_Central_Hall_Westminster", "seq": "24,57", "label": "Methodist Central Hall Westminster"}], "predicate mapping": [], "id": "04f9e85f054f4225bed1717739a1e8f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "What is the academic journal whose editor is Stephen Law?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_Law", "seq": "45,55", "label": "Stephen Law"}], "predicate mapping": [], "id": "dd004ede34464a0f82faca6742a25184"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean-Louis_Arcand> <http://dbpedia.org/property/institution> <http://dbpedia.org/resource/Geneva> }", "question": "Does Jean Louis Arcand work for Geneva?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean-Louis_Arcand", "seq": "5,21", "label": "Jean Louis Arcand"}, {"uri": "http://dbpedia.org/resource/Geneva", "seq": "32,37", "label": "Geneva"}], "predicate mapping": [], "id": "8e29eff6b17f4319b9c659532af37bad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Republic_of_Korea_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many religions are followed amongst the people who've worked in the Korean army?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Republic_of_Korea_Army", "seq": "68,82", "label": "the Korean army"}], "predicate mapping": [], "id": "c7dc969d31554373b40ef9f089a6bbc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Hyderabad> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "List the people died in Hyderabad and are a member of political party ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyderabad", "seq": "24,32", "label": "Hyderabad"}], "predicate mapping": [], "id": "9eed6571d0a94fbb9a0cbca09a094a42"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Pyusawhti> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "What kind of buildings were designed by Pyusawhti?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pyusawhti", "seq": "40,48", "label": "Pyusawhti"}], "predicate mapping": [], "id": "4c467d0fc1fd40a199f7c5588d0aaee0"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Esther_Alder> }", "question": "Is Esther Alder the mayor of Geneva?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "seq": "29,34", "label": "Geneva"}, {"uri": "http://dbpedia.org/resource/Esther_Alder", "seq": "3,14", "label": "Esther Alder"}], "predicate mapping": [], "id": "9e8f8ca6979d424ca40a9cad3ba2b841"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "What are the baseball players who played for San Francisco Giants?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Giants", "seq": "45,64", "label": "San Francisco Giants"}], "predicate mapping": [], "id": "4d2c398f35de4c2891ccc4c3b77e1ed6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri} ", "question": "Which architect of Marine Corps Air Station Kaneohe Bay was also tenant of New Sanno hotel /'", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay", "seq": "19,54", "label": "Marine Corps Air Station Kaneohe Bay"}, {"uri": "http://dbpedia.org/resource/New_Sanno_Hotel", "seq": "75,89", "label": "New Sanno hotel"}], "predicate mapping": [], "id": "4a64f2d15b0b43d8a9e07d44a7be8966"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/USS_Sturtevant_(DE-239)> <http://dbpedia.org/property/shipBuilder> ?uri . }", "question": "Which ship builder built the USS Camp and Sturtevant ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)", "seq": "29,36", "label": "USS Camp"}, {"uri": "http://dbpedia.org/resource/USS_Sturtevant_(DE-239)", "seq": "42,51", "label": "Sturtevant"}], "predicate mapping": [], "id": "526573654e8e40fe9c04f756f3343bd8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri } ", "question": "Where does the Jerusalem Institute of Justice render their services?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice", "seq": "15,44", "label": "Jerusalem Institute of Justice"}], "predicate mapping": [], "id": "69c1b8315bfc45bc8d7001b2207bf482"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Bodhi_Elfman> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are some movies whose score is composed by relatives of Bodhi Elfman?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bodhi_Elfman", "seq": "61,72", "label": "Bodhi Elfman"}], "predicate mapping": [], "id": "e0e0942378134df3b26ed071efe372b3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh> <http://dbpedia.org/property/party> ?uri } ", "question": "Which political party got elected in First Legislative Assembly of Uttar Pradesh ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh", "seq": "37,79", "label": "First Legislative Assembly of Uttar Pradesh"}], "predicate mapping": [], "id": "adb445039dba499fb87254b5db15cf1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Menlo_Park,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies were founded in Menlo Park, California?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Menlo_Park,_California", "seq": "35,56", "label": "Menlo Park, California"}], "predicate mapping": [], "id": "5e35e8af2b984b51b235bbe13703c939"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Fox_Sports_(United_States)> . ?uri <http://dbpedia.org/ontology/channel> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose channel's parent organisation is Fox Sports?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Sports_(United_States)", "seq": "67,76", "label": "Fox Sports"}], "predicate mapping": [], "id": "ccb09f2a248b46a6bbc34abf3022e4f2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedBand> ?uri } ", "question": "Which bands are associated to David Paton?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Paton", "seq": "30,40", "label": "David Paton"}], "predicate mapping": [], "id": "bed5afa37566420489106a8f8da38bb0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)> <http://dbpedia.org/property/writer> ?uri } ", "question": "Who wrote a streetcar named desire?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)", "seq": "10,33", "label": "a streetcar named desire"}], "predicate mapping": [], "id": "39c7d79acd6a4c698df99c2cf360fdee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What sports can be played at universities in Metro Manila?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Manila", "seq": "45,56", "label": "Metro Manila"}], "predicate mapping": [], "id": "87ca63e3887e495ebe99cdef9dc9f3d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kafue_River> <http://dbpedia.org/ontology/riverMouth> ?uri. <http://dbpedia.org/resource/Shire_River> <http://dbpedia.org/ontology/riverMouth> ?uri . }", "question": "Where does Kafue and Shire river flow into?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kafue_River", "seq": "21,31", "label": "Shire river"}, {"uri": "http://dbpedia.org/resource/Shire_River", "seq": "21,31", "label": "Shire river"}], "predicate mapping": [], "id": "14aeee6f609641969e67d616c245ed48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brian_Deegan_(rider)> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Harold_Lloyd> <http://dbpedia.org/property/birthPlace> ?uri . }", "question": "Which US state gave  us Brian Deegan and Harold Lyold?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Deegan_(rider)", "seq": "24,35", "label": "Brian Deegan"}, {"uri": "http://dbpedia.org/resource/Harold_Lloyd", "seq": "41,52", "label": "Harold Lyold"}], "predicate mapping": [], "id": "2ae49f2b089243fe8429fb7fc6f37020"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Loretta_Ucelli> <http://dbpedia.org/ontology/president> ?uri } ", "question": "Who is the president when Loretta Ucelli used to work for Democratic party?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Loretta_Ucelli", "seq": "26,39", "label": "Loretta Ucelli"}], "predicate mapping": [], "id": "23b82966a26e4e568066583eee6da399"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charlemagne> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Antipope_Paschal_III> }", "question": "was Charlemagne canonized by antipope pachal 3?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charlemagne", "seq": "4,14", "label": "Charlemagne"}, {"uri": "http://dbpedia.org/resource/Antipope_Paschal_III", "seq": "29,45", "label": "antipope pachal 3"}], "predicate mapping": [], "id": "56180046035946cf88878e6666d488c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . }", "question": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carolina_Panthers", "seq": "44,60", "label": "Carolina Panthers"}, {"uri": "http://dbpedia.org/resource/Indianapolis_Colts", "seq": "66,83", "label": "Indianapolis Colts"}], "predicate mapping": [], "id": "739fbedde305453abbfed585e00e09b1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ghana> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Akan_language> }", "question": "Is Akan spoken in Ghana?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ghana", "seq": "18,22", "label": "Ghana"}, {"uri": "http://dbpedia.org/resource/Akan_language", "seq": "3,13", "label": "Akan spoken"}], "predicate mapping": [], "id": "5eb2e5439fa141a895d7ce6ec1c0460b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Midland_College>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "How many basketball players studied in the Midland College?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Midland_College", "seq": "43,57", "label": "Midland College"}], "predicate mapping": [], "id": "a74dc03be29c445da9b7b70e054546d1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Rickenbacker is a musical instrument played by which artists?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rickenbacker", "seq": "0,11", "label": "Rickenbacker"}], "predicate mapping": [], "id": "f40c1a2ee9c24177ad87206df71211e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hinkey_Haines> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri . }", "question": "Deion sanders and Hinkey haines debuted their career with which common team?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hinkey_Haines", "seq": "18,30", "label": "Hinkey haines"}, {"uri": "http://dbpedia.org/resource/Deion_Sanders", "seq": "0,12", "label": "Deion sanders"}], "predicate mapping": [], "id": "b8602cf66ce54d7480a3cf07b2d2329f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shawn_Johnson> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Liang_Chow> }", "question": "Is Liang Chow the headcoach of Shawn Johnson?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shawn_Johnson", "seq": "31,43", "label": "Shawn Johnson"}, {"uri": "http://dbpedia.org/resource/Liang_Chow", "seq": "3,12", "label": "Liang Chow"}], "predicate mapping": [], "id": "1bfa3acdacdd4b798f6e8cf072d4ed54"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/University_of_Miami> . ?x <http://dbpedia.org/property/workInstitutions> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}", "question": "List the work institute of the medicians who has also worked at University of Miami ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Miami", "seq": "64,82", "label": "University of Miami"}], "predicate mapping": [], "id": "2ea87bee77ff44d2a1bd856fc6106c1c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "question": "What ethinicity of Linda Hogan is also the state of origin of Holmes Colbert ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Hogan", "seq": "19,29", "label": "Linda Hogan"}, {"uri": "http://dbpedia.org/resource/Holmes_Colbert", "seq": "62,75", "label": "Holmes Colbert"}], "predicate mapping": [], "id": "fbc52b963d5141a6b89216bae276bf21"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "In which television shows has Eliza Schneider given her voice?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eliza_Schneider", "seq": "30,44", "label": "Eliza Schneider"}], "predicate mapping": [], "id": "7b86db7dd4c14d2e8d914ef82ac4044e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/race> <http://dbpedia.org/resource/Dubai_World_Cup> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}", "question": "Where are jockeys in Dubai World Cup from?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dubai_World_Cup", "seq": "21,35", "label": "Dubai World Cup"}], "predicate mapping": [], "id": "3932dc742d734d208470a844d5484ced"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lawrence_Okoye> <http://dbpedia.org/property/nationality> ?uri } ", "question": "From which country is Lawrence Okoye's nationality ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lawrence_Okoye", "seq": "22,35", "label": "Lawrence Okoye"}], "predicate mapping": [], "id": "75956ea1ffb748f7b9bb48794ac65260"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Which american football players currently plays for Michigan Wolverines?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "seq": "52,70", "label": "Michigan Wolverines"}], "predicate mapping": [], "id": "fce78279c2e143a79652b8514207cd41"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Henry_Miller_Shreve> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "What is the location of the Walter Evans Edge office which is also the place of birth of henry Miller ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Walter_Evans_Edge", "seq": "28,44", "label": "Walter Evans Edge"}, {"uri": "http://dbpedia.org/resource/Henry_Miller_Shreve", "seq": "89,100", "label": "henry Miller"}], "predicate mapping": [], "id": "d6d1fdb7f3604da48fee7fba7961f107"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri } ", "question": "What is the base currency of Benelux ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benelux", "seq": "29,35", "label": "Benelux"}], "predicate mapping": [], "id": "0d7b3b1e1ef24b64bb14f8a88bb3ba16"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What other destinations do airlines go to, whose flights also come to Glasgow?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glasgow_Airport", "seq": "70,76", "label": "Glasgow"}], "predicate mapping": [], "id": "5ba35b11cd8b47b3bdb0467bb646621b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "List down the common sports played by PATTS College of Aeronautics and lytechnic University of the Philippines Taguig ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "seq": "38,65", "label": "PATTS College of Aeronautics"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "seq": "71,116", "label": "lytechnic University of the Philippines Taguig"}], "predicate mapping": [], "id": "cd069e1c88ed4e77ae308cbb998f57ca"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Romeo> <http://dbpedia.org/ontology/deathPlace> ?uri } ", "question": "Where did Steve Romeo dies ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Romeo", "seq": "10,20", "label": "Steve Romeo"}], "predicate mapping": [], "id": "8e45bd7253a74f70beef10fbff653824"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "Of the sports commonly played at Islamic Azad Uni, tehran, which one does Jon Speelman play?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "74,85", "label": "Jon Speelman"}, {"uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch", "seq": "33,63", "label": "Islamic Azad Uni, tehran, which"}], "predicate mapping": [], "id": "6e794f3cb6e6412f993f19aa5cd71225"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ancient_Rome> <http://dbpedia.org/ontology/governmentType> ?uri } ", "question": "What is the government type of Ancient Rome ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ancient_Rome", "seq": "31,42", "label": "Ancient Rome"}], "predicate mapping": [], "id": "81717b01e68a4e36876d59157b0c01d9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri } ", "question": "Who are the animator of The Skeleton Dance?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "24,41", "label": "The Skeleton Dance"}], "predicate mapping": [], "id": "58f1836b2739462a8eee1fb265dfabf3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Agatha_of_Sicily> <http://dbpedia.org/ontology/canonizedBy> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}", "question": "What is the birth location of the pope who was canonized by Agatha of Sicily?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Agatha_of_Sicily", "seq": "60,75", "label": "Agatha of Sicily"}], "predicate mapping": [], "id": "80b6db330714404da1f2443e719d62f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Laurence_Mark> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }", "question": "Who have become famous by movies produced by Laurence Mark?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laurence_Mark", "seq": "45,57", "label": "Laurence Mark"}], "predicate mapping": [], "id": "69fee15c06f64c7eb69fdfc71e10c6d8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/Balaton_wine_region> <http://dbpedia.org/ontology/location> ?uri} ", "question": "What is the common country of Ganz UV and Balaton wine region ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganz_UV", "seq": "30,36", "label": "Ganz UV"}, {"uri": "http://dbpedia.org/resource/Balaton_wine_region", "seq": "42,60", "label": "Balaton wine region"}], "predicate mapping": [], "id": "8553c4fee8b04dc18263ee3f07b81807"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenpeace_Nordic> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ", "question": "What organization is the parent of Greenpeace Nordic?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greenpeace_Nordic", "seq": "35,51", "label": "Greenpeace Nordic"}], "predicate mapping": [], "id": "6f1d569a147d482ca609cfdbec7c9ed8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Give me some softwares which run on mac os", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "36,41", "label": "mac os"}], "predicate mapping": [], "id": "aaf4a21d2ca04d3bb91aed5c6063223d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri} ", "question": "Which destination of the Novair International Airways is also the  predecessor of the Chevrolet Caprice?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Novair_International_Airways", "seq": "25,52", "label": "Novair International Airways"}, {"uri": "http://dbpedia.org/resource/Chevrolet_Caprice", "seq": "86,102", "label": "Chevrolet Caprice"}], "predicate mapping": [], "id": "691a84e5e7b3486aa5ff297feb1d534b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What are some scientists who have stateless citizenship?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Statelessness", "seq": "34,54", "label": "stateless citizenship"}], "predicate mapping": [], "id": "11b93f9e8ea74606a3e6e0e6f6e55a21"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Harlow> <http://dbpedia.org/property/doctoralStudents> ?uri } ", "question": "List the doctoral students of Harry Harlow ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Harlow", "seq": "30,41", "label": "Harry Harlow"}], "predicate mapping": [], "id": "53ed8e82e6ec49d0b9e1762d781e71d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri. <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri . }", "question": "Panthera leo fossils and Liger belong to which species?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Panthera_leo_fossilis", "seq": "0,19", "label": "Panthera leo fossils"}, {"uri": "http://dbpedia.org/resource/Liger", "seq": "25,29", "label": "Liger"}], "predicate mapping": [], "id": "2006a24c1c3e478b98df523596714251"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "which awards have been given to people who fought in the Battle of France?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_France", "seq": "57,72", "label": "Battle of France"}], "predicate mapping": [], "id": "30d46acd81d9420f9bef5bbebec0d15f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have been trained in an institute located in California?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "61,70", "label": "California"}], "predicate mapping": [], "id": "44378225c4c7414bbcfefcb69cfc2d92"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ", "question": "Which composer subsequent work of Moondog Matinee and also composed The TImes They are A changin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "seq": "68,95", "label": "The TImes They are A changin"}, {"uri": "http://dbpedia.org/resource/Moondog_Matinee", "seq": "34,48", "label": "Moondog Matinee"}], "predicate mapping": [], "id": "a9fc9b062b16419dbf83984d9a7bcb0e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }", "question": "Name whose youth club was FC Barcelona ?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/FC_Barcelona", "seq": "26,37", "label": "FC Barcelona"}], "predicate mapping": [], "id": "444c3a8fb88747a4bce43c1d413b2b26"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Church_and_Wellesley> <http://dbpedia.org/property/leaderName> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Which religion does the leader of Church and Wellesley follow?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Church_and_Wellesley", "seq": "34,53", "label": "Church and Wellesley"}], "predicate mapping": [], "id": "7991781a1984410b9f4707dd643830a3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erastus_Wiman> <http://dbpedia.org/ontology/citizenship> ?uri } ", "question": "What is the citizenship of Erastus Wiman ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erastus_Wiman", "seq": "27,39", "label": "Erastus Wiman"}], "predicate mapping": [], "id": "92dea938b59a49b88d62bed248dc6a4c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Amazon_River> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region> }", "question": "Does the Amazon River start in Arequipa Region?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amazon_River", "seq": "9,20", "label": "Amazon River"}, {"uri": "http://dbpedia.org/resource/Arequipa_Region", "seq": "31,45", "label": "Arequipa Region"}], "predicate mapping": [], "id": "7e9e2be8376e470bbfbe44d535fd2b65"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/ontology/nearestCity> ?uri } ", "question": "Which is the nearest city to Elliott Bay ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elliott_Bay", "seq": "29,39", "label": "Elliott Bay"}], "predicate mapping": [], "id": "24b98ce65ef6434f9ea0fdbc61657261"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri} ", "question": "What magazine is Marritt Cabal known for which has Lucifer Hammer as publisher ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Merritt_Cabal", "seq": "17,29", "label": "Marritt Cabal"}, {"uri": "http://dbpedia.org/resource/Lucifer's_Hammer", "seq": "51,64", "label": "Lucifer Hammer"}], "predicate mapping": [], "id": "5cf1e1c8ee184ab0aa42a8628980116b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose screenplay is done by Eric Roth?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Roth", "seq": "48,56", "label": "Eric Roth"}], "predicate mapping": [], "id": "8575d9a3b2064c21985eeeeb57e60eb4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movie whose music was given by Geoffrey Burgon and distributed by Cinema International Corporation?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geoffrey_Burgon", "seq": "40,54", "label": "Geoffrey Burgon"}, {"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "75,106", "label": "Cinema International Corporation"}], "predicate mapping": [], "id": "dd43bcfacc674fb8980f943492e44533"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri. <http://dbpedia.org/resource/Sherlock_Holmes_(play)> <http://dbpedia.org/property/characters> ?uri} ", "question": "Which series has an episode called The lost special and also a character named Sherlock Holmes ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Lost_Special", "seq": "35,50", "label": "The lost special"}, {"uri": "http://dbpedia.org/resource/Sherlock_Holmes_(play)", "seq": "79,93", "label": "Sherlock Holmes"}], "predicate mapping": [], "id": "e8c5049fd8a743ee8d0faf76a10ae000"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Shahid_Khan> } ", "question": "Which football teams is Shahid Khan proprietor to?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shahid_Khan", "seq": "24,34", "label": "Shahid Khan"}], "predicate mapping": [], "id": "9e56e9f24bb64c5b894e7a47b2c9cd94"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri } ", "question": "What cities are near to Nihoa which is also known as Bird Island ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nihoa", "seq": "24,28", "label": "Nihoa"}], "predicate mapping": [], "id": "ffc2d9ad79e947ae95f0e8795dad6214"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> } ", "question": "Which football players currently have their contracts with Stoke City F.C.?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stoke_City_F.C.", "seq": "59,72", "label": "Stoke City F.C"}], "predicate mapping": [], "id": "2d3b740bd54a4388a8be9f63fcaef04d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fig_Tree_Bay> <http://dbpedia.org/ontology/inflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "How many cities are around the sea in which the the fig tree bay meets?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fig_Tree_Bay", "seq": "52,63", "label": "fig tree bay"}], "predicate mapping": [], "id": "51982b316423405bb8b05661dd691bff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Grand_Day_Out> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What are all the prizes won by the writer of A Grand Day Out?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Grand_Day_Out", "seq": "45,59", "label": "A Grand Day Out"}], "predicate mapping": [], "id": "9049b588d47b4566b827b69d457b3725"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . }", "question": "Count the number of families of the Animal kingdom.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Animal", "seq": "36,41", "label": "Animal"}], "predicate mapping": [], "id": "002b171e559d44dab3ae234723824bac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Jann_Wenner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Which magazine has publisher as Jann Wenner?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jann_Wenner", "seq": "32,42", "label": "Jann Wenner"}], "predicate mapping": [], "id": "da9e64c20e50473fb7df93281a4a2d44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri . }", "question": "Where are Thomas Franois Burgers and Johannes Gerhardus Strijdom buried?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers", "seq": "10,31", "label": "Thomas Franois Burgers"}, {"uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom", "seq": "37,63", "label": "Johannes Gerhardus Strijdom"}], "predicate mapping": [], "id": "b1d14746b41f47459edf2a268414687f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/address> ?uri } ", "question": "where are renaissance centers located?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Renaissance_Center", "seq": "10,28", "label": "renaissance centers"}], "predicate mapping": [], "id": "14d666af4e7f4944b90397bb7836911e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation> <http://dbpedia.org/property/broadcastArea> ?uri } ", "question": "What are the broadcast areas of Mauritius Broadcasting Corporation?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation", "seq": "32,65", "label": "Mauritius Broadcasting Corporation"}], "predicate mapping": [], "id": "ca66ad5b2f544c31a6254b0ba2808274"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alan_Kusov__11> <http://dbpedia.org/ontology/team> ?x . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "Where is the ground of the soccer club, which has Alan Kusov as a team member ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alan_Kusov__11", "seq": "50,62", "label": "Alan Kusov as"}], "predicate mapping": [], "id": "c4cb772e25ba433582020a0bf1bea228"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri } ", "question": "which president was served by Joseph Stiglitz?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joseph_Stiglitz", "seq": "30,44", "label": "Joseph Stiglitz"}], "predicate mapping": [], "id": "9c91b4cd6e5341e08778831ad38a79d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Piotr_Baron> . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "question": "What is the nickname of the club managed by Piotr baron?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Piotr_Baron", "seq": "44,54", "label": "Piotr baron"}], "predicate mapping": [], "id": "eba614f60dae40f98002cee1a97d644a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Goolwa,_South_Australia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Give the name of the river with source place as Australian Alps and has mouth place as Goolwa , a place in Siyuth Australia ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australian_Alps", "seq": "48,62", "label": "Australian Alps"}, {"uri": "http://dbpedia.org/resource/Goolwa,_South_Australia", "seq": "107,122", "label": "Siyuth Australia"}], "predicate mapping": [], "id": "d3c5d6d98b654e44bbd5b942e911e74a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Trish_Stratus> }", "question": "Did Trish Stratus train Christina Crawford?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)", "seq": "24,41", "label": "Christina Crawford"}, {"uri": "http://dbpedia.org/resource/Trish_Stratus", "seq": "4,16", "label": "Trish Stratus"}], "predicate mapping": [], "id": "4a61c257cb3c4649a59faec69a5bab87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cavalcade_of_America> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/The_United_States_Steel_Hour> <http://dbpedia.org/ontology/writer> ?uri . }", "question": "Who is the writer of the Cavalcade of America and The United States Steel Hour ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cavalcade_of_America", "seq": "25,44", "label": "Cavalcade of America"}, {"uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour", "seq": "50,77", "label": "The United States Steel Hour"}], "predicate mapping": [], "id": "6abff67222f640f98134a1d608370fc0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Gunasekara> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Anuruddha_Ratwatte> <http://dbpedia.org/property/allegiance> ?uri . }", "question": "To what nation do Victor Gunasekara and Anuruddha Ratwatte owe their allegiance?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Victor_Gunasekara", "seq": "18,34", "label": "Victor Gunasekara"}, {"uri": "http://dbpedia.org/resource/Anuruddha_Ratwatte", "seq": "40,57", "label": "Anuruddha Ratwatte"}], "predicate mapping": [], "id": "d98921970a2643a8b9b1d8863e275faf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Which artists have co-starred with Kris Kristofferson?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kris_Kristofferson", "seq": "35,52", "label": "Kris Kristofferson"}], "predicate mapping": [], "id": "191277ee793a402ab582ed1fbba59680"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "Count the total religions followed by the ones living in England.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "57,63", "label": "England"}], "predicate mapping": [], "id": "1cedfca911824453b06451cbc8104541"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ", "question": "Which club of Michael Springer is also the parent organization of Syracuse University press ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Springer", "seq": "14,29", "label": "Michael Springer"}, {"uri": "http://dbpedia.org/resource/Syracuse_University_Press", "seq": "66,90", "label": "Syracuse University press"}], "predicate mapping": [], "id": "569d57916252412ab7543cdd78e851a3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri } ", "question": "Name the cover artist of the adventure of Tom sawyer ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "seq": "25,51", "label": "the adventure of Tom sawyer"}], "predicate mapping": [], "id": "9496ce7155814acaac417eb27fd22cc1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eastern_Washington> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri . }", "question": "Which river flows through both eastern and western washington?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eastern_Washington", "seq": "43,60", "label": "western washington"}, {"uri": "http://dbpedia.org/resource/Central_Washington", "seq": "43,60", "label": "western washington"}], "predicate mapping": [], "id": "0d9332702ee748b2a87f19d9c50726e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2002_Players_Championship> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}", "question": "What is the nationality of the golf player who won the  2002 Players Championship ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/2002_Players_Championship", "seq": "56,80", "label": "2002 Players Championship"}], "predicate mapping": [], "id": "1bbb3a798a1f410986aeee42f900f74b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who was the president under which people won the United States House of Representatives elections in 1790 ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790", "seq": "49,104", "label": "United States House of Representatives elections in 1790"}], "predicate mapping": [], "id": "3fd0cb3a9d11496ca7d876547a5e6409"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Collin_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which companies are founded in the city of which Collin County Texas is a part?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Collin_County,_Texas", "seq": "49,67", "label": "Collin County Texas"}], "predicate mapping": [], "id": "96886b0fa50b4ecebcc44d15c8c59b37"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Terminal_Station_(Chattanooga)> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}", "question": "Terminal Station at Chattanooga is made by architects from which University?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminal_Station_(Chattanooga)", "seq": "0,15", "label": "Terminal Station"}], "predicate mapping": [], "id": "b8180174343249208cb2beeebf8476a0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which home stadium of 2011-12 FC Spartak Moscow season is also the location of birth of the Svetlana Gounkina ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season", "seq": "22,53", "label": "2011-12 FC Spartak Moscow season"}, {"uri": "http://dbpedia.org/resource/Svetlana_Gounkina", "seq": "92,108", "label": "Svetlana Gounkina"}], "predicate mapping": [], "id": "d2b7dba56c5f4859813272dda053e0a1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Knierim> <http://dbpedia.org/ontology/formerPartner> ?uri } ", "question": "Who is the former partner of Chris Knierim ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris_Knierim", "seq": "29,41", "label": "Chris Knierim"}], "predicate mapping": [], "id": "d742a7e01f4c4ee48d60d542ecc2fb42"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BMW_M40> <http://dbpedia.org/property/predecessor> ?uri } ", "question": "What is the predecessor of BMW M40 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/BMW_M40", "seq": "27,33", "label": "BMW M40"}], "predicate mapping": [], "id": "443f406a43a149918fa7e12a6326a81e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}", "question": "How many different pole drivers are there, of the GPs when Renault was the first team?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Renault_in_Formula_One", "seq": "59,73", "label": "Renault was the"}], "predicate mapping": [], "id": "c015a34029f941aeb5c25cfc4bab4c52"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2006_Oakland_Raiders_season> <http://dbpedia.org/property/coach> ?x . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "What is the former team of the football player who is the coach of 2006 Oakland Raiders season ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/2006_Oakland_Raiders_season", "seq": "67,93", "label": "2006 Oakland Raiders season"}], "predicate mapping": [], "id": "74971790782c4927ab2f8321c4e322a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal>  . }", "question": "Amongst the winner of Lovelace medal, who has John Robert as doctoral supervisor ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Robert_Woodyard", "seq": "46,68", "label": "John Robert as doctoral"}, {"uri": "http://dbpedia.org/resource/Lovelace_Medal", "seq": "22,35", "label": "Lovelace medal"}], "predicate mapping": [], "id": "e179bec4f0ea4b508f69fac03d08356e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri } ", "question": "who was the australian flagbearer of 2008 Summer Olympics?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics", "seq": "12,56", "label": "australian flagbearer of 2008 Summer Olympics"}], "predicate mapping": [], "id": "b9b35134084c486ab2f02ecdc549e6bc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Bertrada_of_Laon> } ", "question": "Whose mam is Bertrada of Laon?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bertrada_of_Laon", "seq": "13,28", "label": "Bertrada of Laon"}], "predicate mapping": [], "id": "3230de5fe63a44debe27de6c25e6aedf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "List the leaders of all the cities through which the Ganga river flows ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganges", "seq": "53,57", "label": "Ganga"}], "predicate mapping": [], "id": "7652df11d2a14922acffd1e9556bfb09"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._S._M._Hooper> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Robert_Valentine_(composer)> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What is the common citizenship between JSM Hopoer and Robert Valentine ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._S._M._Hooper", "seq": "39,48", "label": "JSM Hopoer"}, {"uri": "http://dbpedia.org/resource/Robert_Valentine_(composer)", "seq": "54,69", "label": "Robert Valentine"}], "predicate mapping": [], "id": "4b41483f7e73472da3d5fafa4cc448d6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Rob_Patterson>  . }", "question": "Who is the partner of Rob Patterson?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rob_Patterson", "seq": "22,34", "label": "Rob Patterson"}], "predicate mapping": [], "id": "51484b4dd82e47e9838bd6ae4d77c67a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Julie_Gardner> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are all the TV shows which are related to the ones produced by Julie Gardner?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julie_Gardner", "seq": "68,80", "label": "Julie Gardner"}], "predicate mapping": [], "id": "7e6d0482a40245e6bf7602e2ad0d65ed"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri } ", "question": "Name the parent company of  Ford Air Transport Service ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service", "seq": "28,53", "label": "Ford Air Transport Service"}], "predicate mapping": [], "id": "d96691130f534245a4d69a4dcbc67391"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "Which football teams are in a city where Oakland Athletics were the tenants?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oakland_Athletics", "seq": "41,57", "label": "Oakland Athletics"}], "predicate mapping": [], "id": "c077c60d66924d99ad283dbd4078d564"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have worked in the band one of whose current member is Hynief?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hynief", "seq": "71,76", "label": "Hynief"}], "predicate mapping": [], "id": "9287889114534eda9daed4e2d79a4680"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_\u2013_Women's_downhill> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "What is the residence of the bronze medalist of Alpine skiing at the women's downhill competition at the 1972 Winter Olympics?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_\u2013_Women's_downhill", "seq": "48,84", "label": "Alpine skiing at the women's downhill"}], "predicate mapping": [], "id": "42c827cfc2294a5390f501f2f6447b1a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Art_Deco> }", "question": "Does Mt St. Peter Churt follow the architectural style of art deco?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_St._Peter_Church", "seq": "5,22", "label": "Mt St. Peter Churt"}, {"uri": "http://dbpedia.org/resource/Art_Deco", "seq": "58,65", "label": "art deco"}], "predicate mapping": [], "id": "4a9b50b6f10f4e23bfacaee43d35e802"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri } ", "question": "Which companies published Super Mario Adventures?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Super_Mario_Adventures", "seq": "26,47", "label": "Super Mario Adventures"}], "predicate mapping": [], "id": "1ef8cd8959f34ef2b16979eec3a75888"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }", "question": "King crimson has been recorded in which places?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/King_Crimson", "seq": "0,11", "label": "King crimson"}], "predicate mapping": [], "id": "711db5b7af9245649c23c84820a2671c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Georgetown_University> <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/William_Doyle_(businessman)> }", "question": "Is william doyle the chairman of Georgetown university?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Georgetown_University", "seq": "33,53", "label": "Georgetown university"}, {"uri": "http://dbpedia.org/resource/William_Doyle_(businessman)", "seq": "3,15", "label": "william doyle"}], "predicate mapping": [], "id": "a9081790bb784c2da0983b1fa106ab2c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri } ", "question": "who developed google videos?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Videos", "seq": "14,26", "label": "google videos"}], "predicate mapping": [], "id": "965e3f4581784cb492f2fe92677b9928"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Count me all the video game distributor whose parent company is Warner Bros ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros.", "seq": "64,74", "label": "Warner Bros"}], "predicate mapping": [], "id": "582f1c08834e4bbd825c551add0365e4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elizabeth_Ann_Seton> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Paul_VI> }", "question": "Was Elizabeth Ann Seton canonized by Pope Paul VI?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton", "seq": "4,22", "label": "Elizabeth Ann Seton"}, {"uri": "http://dbpedia.org/resource/Pope_Paul_VI", "seq": "37,48", "label": "Pope Paul VI"}], "predicate mapping": [], "id": "409f7fe7f1614782a7c0a3659521a50b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Brazil> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/S\u00e3o_Paulo> }", "question": "Is Sao Paulo the largest city of Brazil?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brazil", "seq": "33,38", "label": "Brazil"}, {"uri": "http://dbpedia.org/resource/S\u00e3o_Paulo", "seq": "3,11", "label": "Sao Paulo"}], "predicate mapping": [], "id": "1d9d0611f1a341ddb067c01fc356f3dd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ford_Motor_Company> }", "question": "Does Ford own the Ford Kansas Assembly plant?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "seq": "18,43", "label": "Ford Kansas Assembly plant"}, {"uri": "http://dbpedia.org/resource/Ford_Motor_Company", "seq": "18,28", "label": "Ford Kansas"}], "predicate mapping": [], "id": "7de6776232624ca297b978ded3f8f754"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Royal_blue> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What are the nicknames of the schools whose color is royal blue?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_blue", "seq": "53,62", "label": "royal blue"}], "predicate mapping": [], "id": "dcb85ef5573c48b38fec1148f6076eae"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pink_Floyd> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/David_Gilmour> }", "question": "Was David Gilmour a former member of Pink Floyd?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pink_Floyd", "seq": "37,46", "label": "Pink Floyd"}, {"uri": "http://dbpedia.org/resource/David_Gilmour", "seq": "4,16", "label": "David Gilmour"}], "predicate mapping": [], "id": "f56af3f27ab94106a92cb2337b8c73ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder who has a child named lori Black and Harvard Westlake school as one of the educational institute ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "seq": "45,54", "label": "lori Black"}, {"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "60,82", "label": "Harvard Westlake school"}], "predicate mapping": [], "id": "305a5e72abde4540a896cb6f4e731952"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Yashpal_Kapur> <http://dbpedia.org/ontology/party> ?uri} ", "question": "Which ppolitical party of Yashpal Kapur is also the owner of National Herald ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_National_Herald_(India)", "seq": "61,75", "label": "National Herald"}, {"uri": "http://dbpedia.org/resource/Yashpal_Kapur", "seq": "26,38", "label": "Yashpal Kapur"}], "predicate mapping": [], "id": "53399784d528412faa510052199348bf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Pro_Duta_FC_season> <http://dbpedia.org/property/stadium> ?uri } ", "question": "Name the sstadium of 2015 Pro Duta FC season ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Pro_Duta_FC_season", "seq": "21,43", "label": "2015 Pro Duta FC season"}], "predicate mapping": [], "id": "fc8f458df57d49c1a584f223702f336f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri} ", "question": "What is the region served by Toll Global Express and also borders Siberia ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toll_Global_Express", "seq": "29,47", "label": "Toll Global Express"}, {"uri": "http://dbpedia.org/resource/Siberia", "seq": "66,72", "label": "Siberia"}], "predicate mapping": [], "id": "3d37be8adf384987ad3f198bd18908f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/McLean_Hospital> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}", "question": "Where is the tombstone of the congressman who died in the McLean hospital?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/McLean_Hospital", "seq": "58,72", "label": "McLean hospital"}], "predicate mapping": [], "id": "208d4114c72d4eb8aa2dc244a8f1e842"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Neil_Gaiman> . ?uri <http://dbpedia.org/ontology/notableWork> ?x  . }", "question": "Which writer is famous for works written by Neil Gaiman?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Gaiman", "seq": "44,54", "label": "Neil Gaiman"}], "predicate mapping": [], "id": "536fa92bfb0c4a26bdd1546cbbbc9030"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Ottoman_Empire> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards have been given to citizens of the Ottoman Empire?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ottoman_Empire", "seq": "47,60", "label": "Ottoman Empire"}], "predicate mapping": [], "id": "63ed80a6c6304f309c4370cd47649349"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Red_Lion_Area_School_District> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_Lion_Area_School_District", "seq": "66,94", "label": "Red Lion Area School District"}], "predicate mapping": [], "id": "bdc8518615b54204b29359054a6ad859"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Jamie_Kellner> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "question": "Who are the shareholder of the broadcast networks whose owning company is Jamie Kellner?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamie_Kellner", "seq": "74,86", "label": "Jamie Kellner"}], "predicate mapping": [], "id": "105a1052c4e54d828a4f8b08aca03408"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "List the state of the universities whose nation is United States ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "51,63", "label": "United States"}], "predicate mapping": [], "id": "9b05edb125ad445c826406a7e5bad001"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Houston_Fort_Bend_Airport> <http://dbpedia.org/property/cityServed> ?uri} ", "question": "Which destination of Emerald Air is also the city served by houston Fort Bend Airport ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)", "seq": "21,31", "label": "Emerald Air"}, {"uri": "http://dbpedia.org/resource/Houston_Fort_Bend_Airport", "seq": "60,84", "label": "houston Fort Bend Airport"}], "predicate mapping": [], "id": "a8ffab72a4f64753b5a7c3ff38c48057"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Buddhist_Tai_Hung_College> <http://dbpedia.org/property/religion> ?uri} ", "question": "What faith of Buddhist Tai Hung College is also the acadmeic interest of Paul Demiville ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "seq": "73,86", "label": "Paul Demiville"}, {"uri": "http://dbpedia.org/resource/Buddhist_Tai_Hung_College", "seq": "14,38", "label": "Buddhist Tai Hung College"}], "predicate mapping": [], "id": "efe69ad1cb94450398a0a0a408332d63"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "What are the software whose operating systems are Mac OS and Microsoft Windows?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "50,55", "label": "Mac OS"}, {"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "61,77", "label": "Microsoft Windows"}], "predicate mapping": [], "id": "a7c33137e9004883871a9e2a4a7eddb9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Utah_State_Route_162> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Colorado> }", "question": "Does the Utah State Route 162 end at Colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Utah_State_Route_162", "seq": "9,28", "label": "Utah State Route 162"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "37,44", "label": "Colorado"}], "predicate mapping": [], "id": "c18a6d5e8e5849f2b9a305dce85ad014"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Houston> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "List the debut team of the baseball player who born in Houston.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston", "seq": "55,61", "label": "Houston"}], "predicate mapping": [], "id": "898f2a6888704c2b843822e4e7ef60d1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Harbaugh> <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> }", "question": "Is jim harbaugh currently in the Michigan Wolverines?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Harbaugh", "seq": "3,14", "label": "jim harbaugh"}, {"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "seq": "33,51", "label": "Michigan Wolverines"}], "predicate mapping": [], "id": "8ce6aa741f5047309e078d1c2a08e7a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "How many awards have been received by graduates of University of Melbourne, Faculty of VCA & MCM?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM", "seq": "51,95", "label": "University of Melbourne, Faculty of VCA & MCM"}], "predicate mapping": [], "id": "82a6252eb38448dba20dc6489bc2b39c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Thomas_Egerton_(publisher)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "To which books Thomas Egerton, an editor?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Egerton_(publisher)", "seq": "15,28", "label": "Thomas Egerton"}], "predicate mapping": [], "id": "58cf5b8a4f4e47bcb79a98fac51edd37"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth,_Vermont", "seq": "44,60", "label": "Plymouth, Vermont"}, {"uri": "http://dbpedia.org/resource/Samuel_W._McCall", "seq": "70,85", "label": "Samuel W. McCall"}], "predicate mapping": [], "id": "bef8f6aac12d4d6283dceb45a5a45f15"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Booker_T_(wrestler)> }", "question": "Was christina crawford trained by Booker T?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)", "seq": "4,21", "label": "christina crawford"}, {"uri": "http://dbpedia.org/resource/Booker_T_(wrestler)", "seq": "34,41", "label": "Booker T"}], "predicate mapping": [], "id": "da77bfa505514635bfea5b12d1f3b075"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }", "question": "In how many places has Garbage recorded their songs?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Garbage_(band)", "seq": "23,29", "label": "Garbage"}], "predicate mapping": [], "id": "595c138b55a942dd940bede3ff72b507"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Shaun_the_Sheep> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What award was won by executive producer of Shaun the Sheep?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_the_Sheep", "seq": "44,58", "label": "Shaun the Sheep"}], "predicate mapping": [], "id": "5d0e2659e4b0492fb4530be48fa720db"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> ?uri } ", "question": "Name the current club of Abdelhameed Amarri ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abdelhameed_Amarri", "seq": "25,42", "label": "Abdelhameed Amarri"}], "predicate mapping": [], "id": "4c68e37c40ea4e44950037ef974d5879"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tickle_Me> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Viva_Las_Vegas> <http://dbpedia.org/property/artist> ?uri . }", "question": "Whose songs are Tickle Me and Viva Las Vegas?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tickle_Me", "seq": "16,24", "label": "Tickle Me"}, {"uri": "http://dbpedia.org/resource/Viva_Las_Vegas", "seq": "30,43", "label": "Viva Las Vegas"}], "predicate mapping": [], "id": "264c4445e1374947ab6f8121e12c286c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Among the scientist known for Manhattan Project who had a doctoral student named Charles Ellis ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis", "seq": "81,93", "label": "Charles Ellis"}, {"uri": "http://dbpedia.org/resource/Manhattan_Project", "seq": "30,46", "label": "Manhattan Project"}], "predicate mapping": [], "id": "0da441743df14fafb7bc6b4bcacc81bf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Lisa_Brummel> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge", "seq": "23,45", "label": "Sidney Catlin Partrodge"}, {"uri": "http://dbpedia.org/resource/Lisa_Brummel", "seq": "89,100", "label": "Lisa Brummel"}], "predicate mapping": [], "id": "9abe253ae8a348c8b5f3b85f4cf62072"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kady_O'Malley> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri} ", "question": "Which club of perianne Lones is also the home town of the Kady O'Malley ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kady_O'Malley", "seq": "58,70", "label": "Kady O'Malley"}, {"uri": "http://dbpedia.org/resource/Perianne_Jones", "seq": "14,27", "label": "perianne Lones"}], "predicate mapping": [], "id": "b225170899d7462d96eaf7899775423b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Native_Indonesians> <http://dbpedia.org/property/region> ?uri } ", "question": "Which countries share a similar sociocultural and ethnic heritage of that of Native Indonesians?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Native_Indonesians", "seq": "77,94", "label": "Native Indonesians"}], "predicate mapping": [], "id": "176507c0f98f445c85cccae3d80a54b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Cheers> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose opening theme's album is Cheers?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cheers", "seq": "59,64", "label": "Cheers"}], "predicate mapping": [], "id": "aedcce3300544a758c309617ae9a6643"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ", "question": "Which driver had the pole position in 1994 Spanish Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix", "seq": "38,60", "label": "1994 Spanish Grand Prix"}], "predicate mapping": [], "id": "9869859173884cf5b5ce1628b5ff947c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Auckland> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "What are some organizations in Auckland created to do?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Auckland", "seq": "31,38", "label": "Auckland"}], "predicate mapping": [], "id": "35d4c9e5bb0d403a8949fe9fb0639704"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources> . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "question": "Where are the agencies headquartered at, which are under the Colorado Dept of Natural Resources?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources", "seq": "61,94", "label": "Colorado Dept of Natural Resources"}], "predicate mapping": [], "id": "fe21b9172386466fb7fef8d29772878e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Eclipse_(song)> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "Who is the producer of album, which has the song Eclipse ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eclipse_(song)", "seq": "49,55", "label": "Eclipse"}], "predicate mapping": [], "id": "077d0f48ef144f898f729892e65c7e91"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many different religions have economists followed?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Economist", "seq": "34,43", "label": "economists"}], "predicate mapping": [], "id": "4bae6679286944e0ab5bae123d3b66f8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri } ", "question": "What is the automobile platform of Chiva bus ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chiva_bus", "seq": "35,43", "label": "Chiva bus"}], "predicate mapping": [], "id": "7548aa9412d4455198e5c71f7383e131"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri } ", "question": "What borders siberia?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siberia", "seq": "13,19", "label": "siberia"}], "predicate mapping": [], "id": "67b466a2660f466f99bcd5f3bb96785a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Feras_Saied> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "In which city where there is a headquarters of Orient News and also Feras Saied died?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orient_News", "seq": "47,57", "label": "Orient News"}, {"uri": "http://dbpedia.org/resource/Feras_Saied", "seq": "68,78", "label": "Feras Saied"}], "predicate mapping": [], "id": "2c9ee30345e3457898f20d4bc672ae79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the producers who produced movies starring Michael Jackson.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Jackson", "seq": "48,62", "label": "Michael Jackson"}], "predicate mapping": [], "id": "2d8b81a320094537aa88cb937f7b7676"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Raymond_E._Baldwin> <http://dbpedia.org/property/branch> ?uri } ", "question": "In which department does Raymond Baldwin work?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_E._Baldwin", "seq": "25,39", "label": "Raymond Baldwin"}], "predicate mapping": [], "id": "026887c01dd8473f92d6ec1da23af18d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Lighthouse_Boys_Club> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }", "question": "What teams did the ex teamplayers of lighthouse boy club start their career with?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lighthouse_Boys_Club", "seq": "37,55", "label": "lighthouse boy club"}], "predicate mapping": [], "id": "b7f41cde28da47ef84c2c318244b7edd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Jeff_Munn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "question": "Jeff Munn is the president of which basketball team ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeff_Munn", "seq": "0,8", "label": "Jeff Munn"}], "predicate mapping": [], "id": "204a5a67d76344009f7ee3711bb79292"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Okee_Dokee_Brothers> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "What is the city  of the 2015 MLS All-Star Game and birthplace of the The Okee Dokee Brothers", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game", "seq": "25,46", "label": "2015 MLS All-Star Game"}, {"uri": "http://dbpedia.org/resource/The_Okee_Dokee_Brothers", "seq": "70,92", "label": "The Okee Dokee Brothers"}], "predicate mapping": [], "id": "a7858c99b352427d9f96227ed65fe2bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }", "question": "How many had their debut team coached by Chip Kelly?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chip_Kelly", "seq": "41,50", "label": "Chip Kelly"}], "predicate mapping": [], "id": "4ead31ba05b240b792523ee77e1c2d85"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ", "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Purvis_Eureka", "seq": "18,30", "label": "Purvis Eureka"}, {"uri": "http://dbpedia.org/resource/Ford_Theatre", "seq": "60,71", "label": "Ford Theatre"}], "predicate mapping": [], "id": "ce99d86c121449bda242a1944532331a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Emma_Frost> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/John_Byrne_(comics)> }", "question": "Did John Byrne create Emma Frost?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emma_Frost", "seq": "22,31", "label": "Emma Frost"}, {"uri": "http://dbpedia.org/resource/John_Byrne_(comics)", "seq": "4,13", "label": "John Byrne"}], "predicate mapping": [], "id": "2aec8ac28a254b8a8edbbb921aae4ef0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "74,90", "label": "Dennis Muilenburg"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "seq": "36,48", "label": "named Chinook"}], "predicate mapping": [], "id": "59a2342df2b04a22832b4b8d099295ea"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_League> <http://dbpedia.org/property/champion> ?uri } ", "question": "Name the champion of National League ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_League", "seq": "21,35", "label": "National League"}], "predicate mapping": [], "id": "1916515a00a74f8b951851aa671a3b0a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Bombshell_(Smash)> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}", "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bombshell_(Smash)", "seq": "75,83", "label": "Bombshell"}], "predicate mapping": [], "id": "6cd5cdc40f6e4af8a04465a6699c16ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Cayuse_language> <http://dbpedia.org/property/region> ?uri . }", "question": "Miluk and Cayuse are still spoken in which part of the world?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miluk_language", "seq": "0,15", "label": "Miluk and Cayuse"}, {"uri": "http://dbpedia.org/resource/Cayuse_language", "seq": "10,19", "label": "Cayuse are"}], "predicate mapping": [], "id": "bbc69cd1992d42deba2ecb4e218a9349"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Advanced_Micro_Devices> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "question": "What is the device whose successor's CPU is by AMD?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Advanced_Micro_Devices", "seq": "8,17", "label": "the device"}], "predicate mapping": [], "id": "4a31ab37401a4ef5ad33539030e1f079"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/David_Charles_(physician)> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }", "question": "With whom is the institution of David Charles affiliated?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Charles_(physician)", "seq": "32,44", "label": "David Charles"}], "predicate mapping": [], "id": "0394d1d9bb67406ebe89217042530952"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Tony_Hogg> <http://dbpedia.org/property/battles> ?uri . }", "question": "Which battle did both Steven Palazao and tony hogg fight in?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Palazzo", "seq": "22,35", "label": "Steven Palazao"}, {"uri": "http://dbpedia.org/resource/Tony_Hogg", "seq": "41,49", "label": "tony hogg"}], "predicate mapping": [], "id": "ce165bf79de24f10844b39944b1c118c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show whose producer is Stephen E. Ambrose and company is HBO ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "35,52", "label": "Stephen E. Ambrose"}, {"uri": "http://dbpedia.org/resource/HBO", "seq": "69,71", "label": "HBO"}], "predicate mapping": [], "id": "5be47b8830304a13bc505638e513ee8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose musicians's home town is Volos?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Volos", "seq": "51,55", "label": "Volos"}], "predicate mapping": [], "id": "15bff090fc0748d79b3ae1c06235f0ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species American Pekin duck?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie", "seq": "49,70", "label": "Huey, Dewey, and Louie"}, {"uri": "http://dbpedia.org/resource/American_Pekin_duck", "seq": "90,108", "label": "American Pekin duck"}], "predicate mapping": [], "id": "15578900e719497ea0e89f95818a753a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Skinstad> <http://dbpedia.org/property/school> ?uri } ", "question": "List the school of Bobby Skinstad?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bobby_Skinstad", "seq": "19,32", "label": "Bobby Skinstad"}], "predicate mapping": [], "id": "05e8ba378fa84157a0c3163e2e5a29bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ", "question": "Who was the coach of marquette Golden Eagles men's basketball team-2012,13 season ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team", "seq": "21,70", "label": "marquette Golden Eagles men's basketball team-2012"}], "predicate mapping": [], "id": "2462f71d97294217948911559d7808a7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Hiroyuki_Takei> . ?x <http://dbpedia.org/property/author> ?uri  . }", "question": "Who authored the work illustrated by Hiroyuki Takei?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hiroyuki_Takei", "seq": "37,50", "label": "Hiroyuki Takei"}], "predicate mapping": [], "id": "2bc92d2e97e4487786a07b6f8ae592b4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ", "question": "What made Jon Speelman and Eric Schiller famous?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "10,21", "label": "Jon Speelman"}, {"uri": "http://dbpedia.org/resource/Eric_Schiller", "seq": "27,39", "label": "Eric Schiller"}], "predicate mapping": [], "id": "cad47dbadca34d12a26f9f492cee5f29"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "In which wars army men awarded with the Croix de Guerre, fought?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)", "seq": "40,62", "label": "Croix de Guerre, fought"}], "predicate mapping": [], "id": "7b7764c0196d461999cc23dd0df6c84e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri. <http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "question": "Which manufacturer of the Boeing B-17 Flying fortress is the manager of burro Flats Painted Caves ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave", "seq": "72,96", "label": "burro Flats Painted Caves"}, {"uri": "http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress", "seq": "26,52", "label": "Boeing B-17 Flying fortress"}], "predicate mapping": [], "id": "4d44f78d46374b24819e6cdf6753aad7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Tomb_of_Joshua> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "List the saints venerated in Islam having major shrine as Tomb of Joshua ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tomb_of_Joshua", "seq": "58,71", "label": "Tomb of Joshua"}, {"uri": "http://dbpedia.org/resource/Islam", "seq": "29,33", "label": "Islam"}], "predicate mapping": [], "id": "893492c37b564d4d9e1ce129547ed023"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.>  . }", "question": "How many people currently play for Stoke City F.C.?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stoke_City_F.C.", "seq": "35,48", "label": "Stoke City F.C"}], "predicate mapping": [], "id": "e6e655798ed9475796f9df8aa87c9a4e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many different places can I find companies which were founded in toronto?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "72,78", "label": "toronto"}], "predicate mapping": [], "id": "ec75426ef9034e49baa03c7c16d57f2a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "How many organizations own the website to which Jimmy Wales contributes?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmy_Wales", "seq": "48,58", "label": "Jimmy Wales"}], "predicate mapping": [], "id": "55b86a8a22e4483d935168408545caa7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Pennsylvania> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "List the former team of the american football players born in Pennsylvania ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pennsylvania", "seq": "62,73", "label": "Pennsylvania"}], "predicate mapping": [], "id": "f65d311739804cc7b1db894c7af0704f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Through how many cities does the river flowing into Arkansas go?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arkansas", "seq": "52,59", "label": "Arkansas"}], "predicate mapping": [], "id": "5c2111f2815f4809b9548ab2c0c677d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Ted_Osborne> . ?uri <http://dbpedia.org/property/relatives> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character's relatives were made by Ted Osborne?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Osborne", "seq": "51,61", "label": "Ted Osborne"}], "predicate mapping": [], "id": "74671972de564fbe97ece8a85fd86fcd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jon_Voight> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/relative> ?uri  . }", "question": "List the relatives of the children of Jon Voight ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Voight", "seq": "38,47", "label": "Jon Voight"}], "predicate mapping": [], "id": "c7dbb6a48a8840779ff9be16709df500"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> } ", "question": "who are the managers of england national under 20 football team?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-20_football_team", "seq": "24,62", "label": "england national under 20 football team"}], "predicate mapping": [], "id": "56eb8602184a4434af0162a88397b937"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which designer of RENFE also owns Renaissance Center ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/RENFE_Class_333", "seq": "18,32", "label": "RENFE also owns"}, {"uri": "http://dbpedia.org/resource/Renaissance_Center", "seq": "34,51", "label": "Renaissance Center"}], "predicate mapping": [], "id": "9b8b445ddfbb463187269990961ac846"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Kiick> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/New_Jersey> }", "question": "Did Jim Kiick do his highschool in New Jersey?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Kiick", "seq": "4,12", "label": "Jim Kiick"}, {"uri": "http://dbpedia.org/resource/New_Jersey", "seq": "35,44", "label": "New Jersey"}], "predicate mapping": [], "id": "0572e71a8200411493afdbc1072f5dc1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What shows are on the networks which are from the United States?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "50,62", "label": "United States"}], "predicate mapping": [], "id": "99a06bb6d4f3448da8d9b37aec6a17fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who have rented the stadium operated by Maple Leaf S&E?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment", "seq": "40,53", "label": "Maple Leaf S&E"}], "predicate mapping": [], "id": "2bce3f2fcdbd463ebbcd84e5b65eb439"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Boy_Is_Mine_(song)> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/Atlanta> }", "question": "Was the song The Boy is Mine recorded in Atlanta?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Boy_Is_Mine_(song)", "seq": "13,27", "label": "The Boy is Mine"}, {"uri": "http://dbpedia.org/resource/Atlanta", "seq": "41,47", "label": "Atlanta"}], "predicate mapping": [], "id": "b70fa433f4dd4ed88a72bdc33714a9fd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri } ", "question": "Where is Snake Island located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)", "seq": "9,20", "label": "Snake Island"}], "predicate mapping": [], "id": "586e586025864050b16699cda92980a7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "How many things do bridges designed by the UEM group go over?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/UEM_Group", "seq": "43,51", "label": "UEM group"}], "predicate mapping": [], "id": "80e23668ba59456699b2f0017dc1d2f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Who is the fictional character who portrayed in Terminator 2: Judgment Day?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "seq": "48,73", "label": "Terminator 2: Judgment Day"}], "predicate mapping": [], "id": "3938c7827542407499282f308306e854"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mount_Raimer> <http://dbpedia.org/property/nearestCity> ?x . ?x <http://dbpedia.org/ontology/river> ?uri  . }", "question": "Name the river which flows through the closest city of Mount Raimer ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Raimer", "seq": "55,66", "label": "Mount Raimer"}], "predicate mapping": [], "id": "48c8905bf346458bb8aa3e01c93dce7e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Mr._Tambourine_Man_(album)> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}", "question": "Who composed songs in the Mr Tambourine Man album?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mr._Tambourine_Man_(album)", "seq": "26,42", "label": "Mr Tambourine Man"}], "predicate mapping": [], "id": "a4854eb52d9844c99427d80f90751a22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Peter_Thorneycroft> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "question": "What are the relatives of the parliament member whose successor is Peter Thorneycroft?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Thorneycroft", "seq": "67,84", "label": "Peter Thorneycroft"}], "predicate mapping": [], "id": "3ece33a3b26c44ba89d83c5af7910d5a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Yes_(band)> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movies' music is composed by people associated with the band Yes?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yes_(band)", "seq": "67,69", "label": "Yes"}], "predicate mapping": [], "id": "149bc5e1fd2444619dd328bac52f849b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marina_Pankova> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Viktor_Ulyanich> <http://dbpedia.org/ontology/deathPlace> ?uri . }", "question": "What is the death place of the Marina Pankova and Viktor Ulyanich?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marina_Pankova", "seq": "31,44", "label": "Marina Pankova"}, {"uri": "http://dbpedia.org/resource/Viktor_Ulyanich", "seq": "50,64", "label": "Viktor Ulyanich"}], "predicate mapping": [], "id": "d0b29d9d5808405fa11f801b8506338d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Which american football player's current team is Michigan Wolverines and former team was  Baltimore Ravens ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "seq": "49,67", "label": "Michigan Wolverines"}, {"uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season", "seq": "90,105", "label": "Baltimore Ravens"}], "predicate mapping": [], "id": "b82d8ce46e1a4a6ba75108b376994f10"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/lyrics> <http://dbpedia.org/resource/Inma_Gonz\u00e1lez> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }", "question": "What famous work is derived from the one whose lyrics are written by Inma Gonzales?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Inma_Gonz\u00e1lez", "seq": "69,81", "label": "Inma Gonzales"}], "predicate mapping": [], "id": "6afc2e0ce3f244ce93a5bed1fab03623"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Web_hosting_service> . ?x <http://dbpedia.org/property/services> ?uri }", "question": "How many services are there of the companies whose services is Web hosting service ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Web_hosting_service", "seq": "63,81", "label": "Web hosting service"}], "predicate mapping": [], "id": "6e341f9757994d368143a578965e0a0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/rival> <http://dbpedia.org/resource/Somerset,_Massachusetts> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "In which region is the rival school of Somerset, Massachusetts located?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Somerset,_Massachusetts", "seq": "39,61", "label": "Somerset, Massachusetts"}], "predicate mapping": [], "id": "7b84eeaeb31143dba0d74b20dcc60e1c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri } ", "question": "What is the ethnicity of Linda Hogan ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Hogan", "seq": "25,35", "label": "Linda Hogan"}], "predicate mapping": [], "id": "38fa1e3c921240608e748ef6ccca70f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Hebron> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }", "question": "What are the veneration of the one for which there's a major shrine in Hebron?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hebron", "seq": "71,76", "label": "Hebron"}], "predicate mapping": [], "id": "18eeaa768fa343b285501be229538892"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stone_Canoe> <http://dbpedia.org/ontology/publisher> ?uri } ", "question": "By which university is the literary magazine named Stone Canoe published?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stone_Canoe", "seq": "51,61", "label": "Stone Canoe"}], "predicate mapping": [], "id": "ef3ade53eec84b978013bf8a36b43ddd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Farley_(businessman)> <http://dbpedia.org/property/relatives> ?uri } ", "question": "Who is the relative of Jim Farley (businessman) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Farley_(businessman)", "seq": "23,32", "label": "Jim Farley"}], "predicate mapping": [], "id": "069c73f4c6c84f3b8bed56b9f7dd229d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . }", "question": "How many politicians are in the militia?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Militia", "seq": "32,38", "label": "militia"}], "predicate mapping": [], "id": "b3de1886f6a34847a46f036db7e7f0f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Lusaka> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the rivers whose source country's capital is Lusaka?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lusaka", "seq": "50,55", "label": "Lusaka"}], "predicate mapping": [], "id": "16b3d3743de342dbb6297978d57410bc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Mar\u00eda_Orellana> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What is the source country of Water resources managemnt in EL Salvador is also the land of Jos MAra Orellana ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador", "seq": "30,69", "label": "Water resources managemnt in EL Salvador"}, {"uri": "http://dbpedia.org/resource/Jos\u00e9_Mar\u00eda_Orellana", "seq": "91,107", "label": "Jos MAra Orellana"}], "predicate mapping": [], "id": "a38439a78e5c4e43954ba3096b10f6c6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quinn_Ojinnaka> <http://dbpedia.org/property/billed> ?uri } ", "question": "From where is Quinn Ojinnaka billed?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quinn_Ojinnaka", "seq": "14,27", "label": "Quinn Ojinnaka"}], "predicate mapping": [], "id": "457b03f072e94856ae7b41637c9176a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies produced by Michael Deeley?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "32,45", "label": "Michael Deeley"}], "predicate mapping": [], "id": "13935f6f7c0546b48d83d2817eeb3a84"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . }", "question": "Some movies whose screenplay is done by american born people?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "32,47", "label": "done by american"}], "predicate mapping": [], "id": "b9b27ecb9a874649a57739e1ec0b5ab4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Price_of_Beauty> <http://dbpedia.org/ontology/narrator> ?uri } ", "question": "Who is the narrator of The Price of Beauty ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Price_of_Beauty", "seq": "23,41", "label": "The Price of Beauty"}], "predicate mapping": [], "id": "ef9ffe8b32f046acbf228229922d57c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . }", "question": "Which colonel consort is Dolley Madison?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "seq": "6,12", "label": "colonel"}, {"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "25,38", "label": "Dolley Madison"}], "predicate mapping": [], "id": "c45b083d0f4e4d43b3c84cbb54b3e598"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri. <http://dbpedia.org/resource/Michael_Nichols_(photographer)> <http://dbpedia.org/ontology/residence> ?uri} ", "question": "What is the area of the Tar Heel Sports Network which is  official residence of the Michael Nichols (photographer) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network", "seq": "24,46", "label": "Tar Heel Sports Network"}, {"uri": "http://dbpedia.org/resource/Michael_Nichols_(photographer)", "seq": "84,98", "label": "Michael Nichols"}], "predicate mapping": [], "id": "f5a49295f8c54b9da9ec95751c275127"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri . }", "question": "Which company ownes stock in Dagenham turbines and Ford Motor credit?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company", "seq": "51,67", "label": "Ford Motor credit"}, {"uri": "http://dbpedia.org/resource/Dagenham_wind_turbines", "seq": "29,45", "label": "Dagenham turbines"}], "predicate mapping": [], "id": "1d50c91b6a7745c6818f2e8464d35108"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth> <http://dbpedia.org/property/writer> ?uri } ", "question": "Who are the writers of South Park: The Stick of Truth?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth", "seq": "23,52", "label": "South Park: The Stick of Truth"}], "predicate mapping": [], "id": "49882217618b4878acdbf10713ec47c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . }", "question": "Enumerate all those who are in the Board of companies founded in New York?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "65,72", "label": "New York"}], "predicate mapping": [], "id": "26be0e284521464d866cfe4b6038a5fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show developed by J. Michael Straczynski and distributed by Warner Bros. Television?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "38,59", "label": "J. Michael Straczynski"}, {"uri": "http://dbpedia.org/resource/Warner_Bros._Television", "seq": "80,102", "label": "Warner Bros. Television"}], "predicate mapping": [], "id": "56262987cc8244aa8df969f4fb5a322e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri } ", "question": "Who did Bruce Bochy play for ? ", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Bochy", "seq": "8,18", "label": "Bruce Bochy"}], "predicate mapping": [], "id": "ab2e96b28d8345188ec38444b7b5d986"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999_Japanese_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }", "question": "Was Michael Schumacher a pole driver in the 1999 GP?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/1999_Japanese_Grand_Prix", "seq": "44,50", "label": "1999 GP"}, {"uri": "http://dbpedia.org/resource/Michael_Schumacher", "seq": "4,21", "label": "Michael Schumacher"}], "predicate mapping": [], "id": "9167d5c750d0472389d1ae6346e74154"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "How many universities participate in the NCAA Division I Football Bowl Subdivision?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision", "seq": "41,81", "label": "NCAA Division I Football Bowl Subdivision"}], "predicate mapping": [], "id": "125b4ddfca3f45c987a4f7d3791fd239"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Anaheim,_California> . ?x <http://dbpedia.org/property/director> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "Who directed the albums recorded in Anaheim?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anaheim,_California", "seq": "36,42", "label": "Anaheim"}], "predicate mapping": [], "id": "ee9d772c72a44b26b65fd5441aca57f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List few Swedish language movies ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "seq": "9,24", "label": "Swedish language"}], "predicate mapping": [], "id": "6deb0bfd163845caab7f56dfb4320204"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Your_Ice_Cream's_Dirty> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What is the home town of the band which is the artist of Your Ice Cream's Dirty ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Your_Ice_Cream's_Dirty", "seq": "57,78", "label": "Your Ice Cream's Dirty"}], "predicate mapping": [], "id": "3b09ae63d05f4be68bc5b4f1851a85b3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri} ", "question": "Which writer of the Snaman is also the writer of Neverwher ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)", "seq": "16,25", "label": "the Snaman"}, {"uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)", "seq": "49,57", "label": "Neverwher"}], "predicate mapping": [], "id": "8eea4bb7e4f9442a8153aa8ae835ffeb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Malaysia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many religion's people have died in Malaysia?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysia", "seq": "40,47", "label": "Malaysia"}], "predicate mapping": [], "id": "b829cf441b9c42dbb820113b2e8f0f95"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have managed a club which owns the Riverside Stadium?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Riverside_Stadium", "seq": "51,67", "label": "Riverside Stadium"}], "predicate mapping": [], "id": "bf8962801bda4524830a4a9e93f343ae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river's source mountain is Baikal Mountains and it's mouth is Lena Delta Wildlife Reserve?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baikal_Mountains", "seq": "33,48", "label": "Baikal Mountains"}, {"uri": "http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve", "seq": "68,94", "label": "Lena Delta Wildlife Reserve"}], "predicate mapping": [], "id": "2b8a8b2d5eaf46d0b7aa820e04fefcb9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Rohan_Marley> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person whose daughter is Rohan Marley and also another children named Sharon Marley ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rohan_Marley", "seq": "34,45", "label": "Rohan Marley"}, {"uri": "http://dbpedia.org/resource/Sharon_Marley", "seq": "79,91", "label": "Sharon Marley"}], "predicate mapping": [], "id": "84a295da828b427a813fe17472240251"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri } ", "question": "Name the members of European Go Federation?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Go_Federation", "seq": "20,41", "label": "European Go Federation"}], "predicate mapping": [], "id": "a93043e0abc847e0856bff25d6507a08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tetsugen_Bernard_Glassman> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the state of origin of the person who is the successor of Tetsugen Bernard Glassman?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tetsugen_Bernard_Glassman", "seq": "66,90", "label": "Tetsugen Bernard Glassman"}], "predicate mapping": [], "id": "d1cfe025d3704ab1a2fa9008bb6ee9fa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Michigan> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri }", "question": "How many other wine region are there of the grapes whose one of the wine region is Michigan ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan", "seq": "83,90", "label": "Michigan"}], "predicate mapping": [], "id": "eb2766085bd746d89dd712c21ee272c6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WiZeefa> <http://dbpedia.org/property/foundation> ?uri } ", "question": "Where was WiZeefa founded ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WiZeefa", "seq": "10,16", "label": "WiZeefa"}], "predicate mapping": [], "id": "20f92144bb5446848093e63a491a213f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Koolakamba> <http://dbpedia.org/ontology/family> ?uri } ", "question": "To which families does the Koolakamba belong ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Koolakamba", "seq": "27,36", "label": "Koolakamba"}], "predicate mapping": [], "id": "687c79c0439d4ae698063ce7d8192262"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What Orson Welles directed movie has  photography director as Gregg Toland ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregg_Toland", "seq": "62,73", "label": "Gregg Toland"}, {"uri": "http://dbpedia.org/resource/Orson_Welles", "seq": "5,16", "label": "Orson Welles"}], "predicate mapping": [], "id": "bf9af6758f024671b29e7786a3bd5039"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri} ", "question": "Which publisher of Lucifer's hammer is also known for Jo Garcia ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucifer's_Hammer", "seq": "19,34", "label": "Lucifer's hammer"}, {"uri": "http://dbpedia.org/resource/Jo_Garcia", "seq": "54,62", "label": "Jo Garcia"}], "predicate mapping": [], "id": "fc2b57a997ea496fa59b59645c999611"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri} ", "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Proix ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix", "seq": "19,38", "label": "SA MArino Grand Prix"}, {"uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix", "seq": "67,86", "label": "Canadian Grand Proix"}], "predicate mapping": [], "id": "7eb44afae7a540749ea01a4484cc116c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "How many awards have screenwriters won?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "seq": "21,33", "label": "screenwriters"}], "predicate mapping": [], "id": "ccfb1eb8fbba41d2931dfb71598a8784"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Champion_(presenter)> <http://dbpedia.org/property/birthPlace> ?uri} ", "question": "What is the local authority of the Buckhurst Hill County High School is also the birth palce of Sarah hampion ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "seq": "35,67", "label": "Buckhurst Hill County High School"}, {"uri": "http://dbpedia.org/resource/Sarah_Champion_(presenter)", "seq": "96,108", "label": "Sarah hampion"}], "predicate mapping": [], "id": "c7974233b0ce42da82267d5081901e7d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penobscot_Island_Air> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Ellei_Johndro> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which place founded by Penobscot Island Air is also the location fo Ellei Johndro ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Penobscot_Island_Air", "seq": "23,42", "label": "Penobscot Island Air"}, {"uri": "http://dbpedia.org/resource/Ellei_Johndro", "seq": "68,80", "label": "Ellei Johndro"}], "predicate mapping": [], "id": "a27e4cca5be64ee1a9b027ad15d8e2d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E39> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri . }", "question": "List the countries through which European rout E39 and E8 passes ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_route_E39", "seq": "33,49", "label": "European rout E39"}, {"uri": "http://dbpedia.org/resource/European_route_E8", "seq": "33,49", "label": "European rout E39"}], "predicate mapping": [], "id": "82515aca204c44bb8a57aef8e97e9753"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Federal_Bureau_of_Investigation>  . }", "question": "How many people work at the FBI?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Federal_Bureau_of_Investigation", "seq": "9,26", "label": "people work at the"}], "predicate mapping": [], "id": "3b5cc7aa7419456797aae6a58176eea2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Alain_Vigneault>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}", "question": "Name the hockey team whose head coach is Alain Vigneault?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alain_Vigneault", "seq": "41,55", "label": "Alain Vigneault"}], "predicate mapping": [], "id": "c83d6063d4884c32bb551e7905d704d9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)> <http://dbpedia.org/property/state> ?uri } ", "question": "In which state is Dorchester Bay (Boston Harbor) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)", "seq": "18,31", "label": "Dorchester Bay"}], "predicate mapping": [], "id": "fc6a428c69f44439b0c0594e95f8f2a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sonia_Gandhi> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "To which political party do the children of Sonia Gandhi belong?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sonia_Gandhi", "seq": "44,55", "label": "Sonia Gandhi"}], "predicate mapping": [], "id": "1211b3f99aab4dc185ce380c1579a8e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Which religion followers are the members of Janata Dal?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Janata_Dal", "seq": "44,53", "label": "Janata Dal"}], "predicate mapping": [], "id": "fe726ec84eda43a7aa4725b1811e6540"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri }", "question": "Count the nearest city to the historic palce whose one of the nearest city is Wisconsin ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wisconsin", "seq": "78,86", "label": "Wisconsin"}], "predicate mapping": [], "id": "78f8aae7da294e14b5bfdff2bb35d039"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Dublin_Airport> } ", "question": "What is the airline company has its headquarters in Dublin Airport?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dublin_Airport", "seq": "52,65", "label": "Dublin Airport"}], "predicate mapping": [], "id": "5c04724cd502432197623d0c85e4cd8d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri } ", "question": "What are the teams for which Wilfred McDonald played for?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wilfred_McDonald", "seq": "29,44", "label": "Wilfred McDonald"}], "predicate mapping": [], "id": "7424ae95bf2f42f5a33391da3da194a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Orthonychidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bird>}", "question": "What are some orthonychidae birds?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orthonychidae", "seq": "14,26", "label": "orthonychidae"}], "predicate mapping": [], "id": "f8980026033540a6b7278aa9d07efa35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Colonel_(The_Americans)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/music> ?uri  . }", "question": "List the music played in television episode which came after The Colonel (The Americans) ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Colonel_(The_Americans)", "seq": "61,71", "label": "The Colonel"}], "predicate mapping": [], "id": "13aa00a577f340fcbdb046e59b4c6be3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Berlin_(band)> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Dave_Schulz_(musician)> }", "question": "Is Dave Schulz a band member of Berlin?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Berlin_(band)", "seq": "32,37", "label": "Berlin"}, {"uri": "http://dbpedia.org/resource/Dave_Schulz_(musician)", "seq": "3,13", "label": "Dave Schulz"}], "predicate mapping": [], "id": "e14a10dfcbdb4da48072fcb7256cdf88"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Microsoft> }", "question": "Does MSX BASIC have a license of microsoft?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/MSX_BASIC", "seq": "5,13", "label": "MSX BASIC"}, {"uri": "http://dbpedia.org/resource/Microsoft", "seq": "33,41", "label": "microsoft"}], "predicate mapping": [], "id": "d5927c0324be4e2d8fa01205bb38a09e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Planet_Waves> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "List the subsequent work of the albums whose one of the subsequent work is Planet Waves?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Planet_Waves", "seq": "75,86", "label": "Planet Waves"}], "predicate mapping": [], "id": "ed1295a0e7e74eedae807b925a9ffc34"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "In which mountain Inyo National Forest and California are located?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Inyo_National_Forest", "seq": "18,37", "label": "Inyo National Forest"}, {"uri": "http://dbpedia.org/resource/California", "seq": "43,52", "label": "California"}], "predicate mapping": [], "id": "6e226915fc37413b8740c3a74cc977c5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alfred_Tarnowski> <http://dbpedia.org/property/placeOfDeath> ?uri } ", "question": "where did Alfred Tarnowski die?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alfred_Tarnowski", "seq": "10,25", "label": "Alfred Tarnowski"}], "predicate mapping": [], "id": "16e81494f124480cb7ff4c58f496996a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/property/licensee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "What are some licensees of the stations playing in Nashville, Tennessee?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nashville,_Tennessee", "seq": "51,70", "label": "Nashville, Tennessee"}], "predicate mapping": [], "id": "e486eea0f7ff4cf899bb864fd58f6f3a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredibles_(film_score)> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Finding_Nemo> }", "question": "Was the Incredibles released before Finding Nemo?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredibles_(film_score)", "seq": "4,18", "label": "the Incredibles"}, {"uri": "http://dbpedia.org/resource/Finding_Nemo", "seq": "36,47", "label": "Finding Nemo"}], "predicate mapping": [], "id": "f6acd592b57c4dac95edb3c787a5980e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Laszlo_Bellak> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "List the American MEditerranean Sea city is also the place of death of Laszlo Bellak ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "seq": "9,34", "label": "American MEditerranean Sea"}, {"uri": "http://dbpedia.org/resource/Laszlo_Bellak", "seq": "71,83", "label": "Laszlo Bellak"}], "predicate mapping": [], "id": "e45f92ad9a4348f4b762dff1b9350929"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Cape_Vincent,_New_York> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river originates from Cape Vincent and Kingston, Ontario?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Vincent,_New_York", "seq": "28,52", "label": "Cape Vincent and Kingston"}, {"uri": "http://dbpedia.org/resource/Kingston,_Ontario", "seq": "45,61", "label": "Kingston, Ontario"}], "predicate mapping": [], "id": "94b09d893f4549c8aa8340eebf9f2e4f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> } ", "question": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines", "seq": "72,114", "label": "House of Representatives of the Philippines"}], "predicate mapping": [], "id": "700bcd617886425282255b4748de26f6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Isaac Hayes has acted in which movies ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Isaac_Hayes", "seq": "0,10", "label": "Isaac Hayes"}], "predicate mapping": [], "id": "66867f2d03ca4db8b5d199cad01a7dee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }", "question": "How many thesis were supervised by Ernest Rutherford?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "seq": "35,51", "label": "Ernest Rutherford"}], "predicate mapping": [], "id": "8de783323c0a490694c0e920f0ad07b8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose related with  Doctor Who Confidential?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_Who_Confidential", "seq": "48,70", "label": "Doctor Who Confidential"}], "predicate mapping": [], "id": "1c9a76e118864c9c95e250236798f5fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/City_council> . ?uri <http://dbpedia.org/property/restingPlace> ?x  . }", "question": "Name all those buried in a place governed by a city council.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/City_council", "seq": "47,58", "label": "city council"}], "predicate mapping": [], "id": "c155dc611cc0417fa2b5841635593617"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri } ", "question": "What are the last two studio albums of Moondog Matinee ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moondog_Matinee", "seq": "39,53", "label": "Moondog Matinee"}], "predicate mapping": [], "id": "7b9e8db8a3234def93777d9786fa9db7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . }", "question": "How many people currently play for the NYC FC?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_FC", "seq": "39,44", "label": "NYC FC"}], "predicate mapping": [], "id": "54e227ff2d2e417f99bcbc650ff5d8a7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/property/battles> ?uri } ", "question": "List the battles fought by Roh Tae-woo ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roh_Tae-woo", "seq": "27,37", "label": "Roh Tae-woo"}], "predicate mapping": [], "id": "8a0781ae3e9644709d33491564bbab50"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Madiswil> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Gutenburg,_Switzerland> }", "question": "Is Gutenberg neighbouring with Madiswil?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Madiswil", "seq": "31,38", "label": "Madiswil"}, {"uri": "http://dbpedia.org/resource/Gutenburg,_Switzerland", "seq": "3,24", "label": "Gutenberg neighbouring"}], "predicate mapping": [], "id": "6182dae45a7a40889fd0d2797e4209ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "Which educational institution has Kaplan, Inc as it's affiliation?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "seq": "34,44", "label": "Kaplan, Inc"}], "predicate mapping": [], "id": "6224c64d6d3b40529a2999e42371cac2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/WWE> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }", "question": "Whose wife is a presenter at WWE?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/WWE", "seq": "29,31", "label": "WWE"}], "predicate mapping": [], "id": "812fb89fca9641a4a51e6bda1fec74ca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Concor_Holdings> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Over what do Concor holdings have a bridge?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Concor_Holdings", "seq": "13,27", "label": "Concor holdings"}], "predicate mapping": [], "id": "079e2720dce04b76bb7bc051f96ba21b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the parent company of company which owns Sony Bank?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Bank", "seq": "49,57", "label": "Sony Bank"}], "predicate mapping": [], "id": "541c5ade920c4308934784b55bbabc52"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . }", "question": "What is the total number of writers whose singles are recorded in Miami?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miami", "seq": "66,70", "label": "Miami"}], "predicate mapping": [], "id": "f301fa4d3e7043f0a10bcbd3b6fa41d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_L._D._Granger> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Job_Durfee> <http://dbpedia.org/property/state> ?uri . }", "question": "Daniel L D Granger and Job Durfee have based their political career in which US state?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_L._D._Granger", "seq": "0,17", "label": "Daniel L D Granger"}, {"uri": "http://dbpedia.org/resource/Job_Durfee", "seq": "23,32", "label": "Job Durfee"}], "predicate mapping": [], "id": "e35b89affcbc4e069a971dce50f9fd26"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Ronny_Vencatachellum> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "What is the common nationality of Viveka Babajee anad Ronny Vencatachellum ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Viveka_Babajee", "seq": "34,47", "label": "Viveka Babajee"}, {"uri": "http://dbpedia.org/resource/Ronny_Vencatachellum", "seq": "54,73", "label": "Ronny Vencatachellum"}], "predicate mapping": [], "id": "af555bca8edd4d7ba2850d9d4b99f6e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Joseph_Dion> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}", "question": "What is the city nearest to the historic place whose architect is Joseph Dion?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joseph_Dion", "seq": "66,76", "label": "Joseph Dion"}], "predicate mapping": [], "id": "7f8414559c5f475ead1ee872da7dd371"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri } ", "question": "Who are the employer of Don R. Berlin?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Don_R._Berlin", "seq": "24,36", "label": "Don R. Berlin"}], "predicate mapping": [], "id": "8b40533f058843bdb80b6c7f4e829f19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "How many different mascots are there of the NCAA teams?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "9,47", "label": "different mascots are there of the NCAA"}], "predicate mapping": [], "id": "21aefb3be51e45ccb573c41d235eb2c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Panathinaikos_F.C.> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }", "question": "Where do the stockholders of Pathaninaikos F.C. live?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Panathinaikos_F.C.", "seq": "29,45", "label": "Pathaninaikos F.C"}], "predicate mapping": [], "id": "a325797e93f24edab0569ec125f0d080"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose constituency is Haight-Ashbury?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Haight-Ashbury", "seq": "45,58", "label": "Haight-Ashbury"}], "predicate mapping": [], "id": "ac389328974d4442bd2e216aa4b43812"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri} ", "question": "What is the common ideology followed by Katyayana and Palang Dharma Party ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)", "seq": "40,48", "label": "Katyayana"}, {"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "seq": "54,72", "label": "Palang Dharma Party"}], "predicate mapping": [], "id": "2ba1fd420a3144f68cb807b475c66dd5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Zarqa_River>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river whose tributary is Zarqa River?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zarqa_River", "seq": "37,47", "label": "Zarqa River"}], "predicate mapping": [], "id": "807d486a431f48a38d65b567d7f19374"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }", "question": "How many home stadiums are there of the seasons whose chairman in Merritt Paulson?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Merritt_Paulson", "seq": "66,80", "label": "Merritt Paulson"}], "predicate mapping": [], "id": "4a249054ec63491c84cf76d9d1aff14e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "Where can I find some buildings of modern architecture?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Modern_architecture", "seq": "35,53", "label": "modern architecture"}], "predicate mapping": [], "id": "58c006275fb04301a88992b18018e5f8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri} ", "question": "Name the team Ramiro Pea played for, which was also the first team of Steve Ontiveros?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)", "seq": "70,84", "label": "Steve Ontiveros"}, {"uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a", "seq": "14,23", "label": "Ramiro Pea"}], "predicate mapping": [], "id": "1b6199ceb90d4d089a7a2933476ec371"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . }", "question": "Give me the count of all the names of characters created by Frank Miller", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Miller_(comics)", "seq": "60,71", "label": "Frank Miller"}], "predicate mapping": [], "id": "032949490f454dbabd4797646d3e840d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bream_Bay> <http://dbpedia.org/property/founder> ?uri } ", "question": "list the founders of Bream Bay ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bream_Bay", "seq": "21,29", "label": "Bream Bay"}], "predicate mapping": [], "id": "4af1cb3060f14095a5ac3b96593361a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Give me a count of bridges located in California ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "38,47", "label": "California"}], "predicate mapping": [], "id": "e91ada2d11fb415a90f5214a4568ae9a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> } ", "question": "List the companies operating in Australia?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia", "seq": "32,40", "label": "Australia"}], "predicate mapping": [], "id": "4973207551934a3bbfe9a31d282f7aa1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet> . ?uri <http://dbpedia.org/ontology/country> ?x  . }", "question": "What all are in the states whose anthem is Ja, vi esker dette landet?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet", "seq": "43,67", "label": "Ja, vi esker dette landet"}], "predicate mapping": [], "id": "6e3344185dfb4c5dbeed1d2254ad79fb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Piotr_Gli\u0144ski> . ?uri <http://dbpedia.org/property/leaderName> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Name the country whose leader's deputy is Piotr Glinski?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Piotr_Gli\u0144ski", "seq": "42,54", "label": "Piotr Glinski"}], "predicate mapping": [], "id": "16031b0772124f5996cbdab932ed9852"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Atl\u00e9tico_Petr\u00f3leos_de_Luanda_(handball)> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Which country are the players of the Atletico Petroleos de Luanda from?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atl\u00e9tico_Petr\u00f3leos_de_Luanda_(handball)", "seq": "37,64", "label": "Atletico Petroleos de Luanda"}], "predicate mapping": [], "id": "4b373e478fb544ff89ce330c0d13a38d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri } ", "question": "Who owns the ford kansas assembly plant?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "seq": "13,38", "label": "ford kansas assembly plant"}], "predicate mapping": [], "id": "7fe19c7b8b7e4a719c02a2308891d646"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "Which saints were the messengers of Islam?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Islam", "seq": "36,40", "label": "Islam"}], "predicate mapping": [], "id": "d225159e360c4ab99b91e8064247d40a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Taiwan> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Companies founded in Taiwan have typically which divisions?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "seq": "21,26", "label": "Taiwan"}], "predicate mapping": [], "id": "3624e029fd0e45c29e54521e58359db5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/James_Hartness> . ?x <http://dbpedia.org/property/occupation> ?uri  . }", "question": "What do the relatives of James Hartness do?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Hartness", "seq": "25,38", "label": "James Hartness"}], "predicate mapping": [], "id": "02d9f9ed093c4c9bac55160e89a71635"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u00c1ngel_Escobar> <http://dbpedia.org/property/debutteam> ?uri } ", "question": "What is the debut team of ngel Escobar ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c1ngel_Escobar", "seq": "26,37", "label": "ngel Escobar"}], "predicate mapping": [], "id": "5308076f247f416480c268da88eb6df0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pawan_Hans> <http://dbpedia.org/ontology/hubAirport> ?uri. <http://dbpedia.org/resource/India> <http://dbpedia.org/ontology/largestCity> ?uri} ", "question": "What is the hub airport of Pawan Hans, and is also the largest city of India?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pawan_Hans", "seq": "27,36", "label": "Pawan Hans"}, {"uri": "http://dbpedia.org/resource/India", "seq": "71,75", "label": "India"}], "predicate mapping": [], "id": "70568d51ea3b40fa9b6e40baba80e4fc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Sevan_Ross> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "question": "Where was the predecessor of Sevan Ross born?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sevan_Ross", "seq": "29,38", "label": "Sevan Ross"}], "predicate mapping": [], "id": "113256a516bc4fd6b1b550678ccd7750"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Daewoo_Tico> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which company produced the car which was a new version of Daewoo's Tico?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daewoo_Tico", "seq": "58,70", "label": "Daewoo's Tico"}], "predicate mapping": [], "id": "359b7ca38c6d488cb3ebdbb52b991c87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }", "question": "Who built the stadiums where 2014 FIFA under 17 woman's world cup took place?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup", "seq": "29,64", "label": "2014 FIFA under 17 woman's world cup"}], "predicate mapping": [], "id": "68cc4d86a23e4564a5b88efbd61a347b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri } ", "question": "Name the source of Raa ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ra\u0161a_(river)", "seq": "19,21", "label": "Raa"}], "predicate mapping": [], "id": "1230514af3324678b0f4930db7543258"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Cuman\u00e1> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "In which countries does the sea lie on whose shore is the city of Cumana?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cuman\u00e1", "seq": "66,71", "label": "Cumana"}], "predicate mapping": [], "id": "4e66595b1889429ea3cc642a64440f99"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri } ", "question": "What is the mascot of Galatasaray Handball Team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team", "seq": "22,46", "label": "Galatasaray Handball Team"}], "predicate mapping": [], "id": "a2f40f5069d544e0a258bc31e4b48533"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> }", "question": "Was Nick Jonas a member of the Jonas Brothers?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonas_Brothers", "seq": "31,44", "label": "Jonas Brothers"}, {"uri": "http://dbpedia.org/resource/Nick_Jonas", "seq": "4,13", "label": "Nick Jonas"}], "predicate mapping": [], "id": "f64ea5a5f2dc48fd8988423ab27e5f5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Hawaii> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "For which teams did the Hawai graduated players play their first game?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hawaii", "seq": "24,28", "label": "Hawai"}], "predicate mapping": [], "id": "e4f65c146f2447c0b3c8147f59a837e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . }", "question": "Who represent the constituencies of Noe Valley and Duboce Triangle ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco", "seq": "36,56", "label": "Noe Valley and Duboce"}, {"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "seq": "51,65", "label": "Duboce Triangle"}], "predicate mapping": [], "id": "609bdd6c95834ba0b808371bb01cb589"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Movie's produced by Michael Deeley has Jordan Cronenweth as director of photography", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "20,33", "label": "Michael Deeley"}, {"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "39,55", "label": "Jordan Cronenweth"}], "predicate mapping": [], "id": "4b43dbb1aa6943abab5354ce97147e72"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/Maryland_Jockey_Club> <http://dbpedia.org/property/keyPeople> ?uri} ", "question": "Which key person of maryland jockey club is the appointer of Joseph Clay ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)", "seq": "61,71", "label": "Joseph Clay"}, {"uri": "http://dbpedia.org/resource/Maryland_Jockey_Club", "seq": "20,39", "label": "maryland jockey club"}], "predicate mapping": [], "id": "5f874cdc5f2749c298a7a13fabc7859a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Spring_(Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which cities have the river one of whose Tributary is the Missouri's big spring?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Spring_(Missouri)", "seq": "69,78", "label": "big spring"}], "predicate mapping": [], "id": "1c6538227a4d41fdbcdb11eda17bce21"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }", "question": "Who has written works found in the Gangan comics?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gangan_Comics", "seq": "35,47", "label": "Gangan comics"}], "predicate mapping": [], "id": "a45050c81a4d44f28d5f4050ae9db959"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)> <http://dbpedia.org/property/currency> ?uri } ", "question": "What is the currency of Republic of Montenegro (1992-2006) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)", "seq": "24,45", "label": "Republic of Montenegro"}], "predicate mapping": [], "id": "3cade710572444c297c339d6443854ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Mama_Makes_Three> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}", "question": "Who has given guest appearances on the TV Episodes whose was music done by Mama Makes 3?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mama_Makes_Three", "seq": "75,86", "label": "Mama Makes 3"}], "predicate mapping": [], "id": "0c03e9d597b44f8bbef68457b98bb7c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "Which band was left by Kevin Jonas?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kevin_Jonas", "seq": "23,33", "label": "Kevin Jonas"}], "predicate mapping": [], "id": "9cda2b2237914ed59d7fe4aae8bc2c1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Queen_Noor_of_Jordan> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "List all the presidents of the school which had atleast one of the president as Queen Noor of Jordan ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan", "seq": "80,99", "label": "Queen Noor of Jordan"}], "predicate mapping": [], "id": "eecf29a370f5461f864f33e580e9eaaa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Start_+_Flug> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}", "question": "In which countries have the Start + Flug aircrafts originated?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Start_+_Flug", "seq": "28,39", "label": "Start + Flug"}], "predicate mapping": [], "id": "9f314843488844988113ecbbe314006d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association> } ", "question": "return some  players who have played in the NBA?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "seq": "21,38", "label": "who have played in"}], "predicate mapping": [], "id": "1979785c219b4798a0610b3ffc06873b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri } ", "question": "Name the nearest city to Tennie and Laura ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)", "seq": "25,40", "label": "Tennie and Laura"}], "predicate mapping": [], "id": "dc586a5d041844feb7a1d08718b05042"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri } ", "question": "Name the home Stadium of Kenya national under-20 football team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team", "seq": "25,61", "label": "Kenya national under-20 football team"}], "predicate mapping": [], "id": "a5e0d47ce7c24a0ea619a0edcaad11e8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism>} ", "question": "How many have been venerateds in Islam and Judaism?", "sparql_id": 107, "entity mapping": [{"uri": "http://dbpedia.org/resource/Islam", "seq": "33,37", "label": "Islam"}, {"uri": "http://dbpedia.org/resource/Judaism", "seq": "43,49", "label": "Judaism"}], "predicate mapping": [], "id": "00d4f5a80a1c49a1bcf053b454f4547f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Samuel_Hayes_(settler)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "What is the resting place of the politician who succeeded Samuel Hayes?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_Hayes_(settler)", "seq": "58,69", "label": "Samuel Hayes"}], "predicate mapping": [], "id": "fa9fedea238d4402b21a174c49cb2e2b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ethiopia> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Amharic> }", "question": "Is Amharic the official language of Ethiopia?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethiopia", "seq": "36,43", "label": "Ethiopia"}, {"uri": "http://dbpedia.org/resource/Amharic", "seq": "3,9", "label": "Amharic"}], "predicate mapping": [], "id": "297f153071e94b52b485cc7758d5bda7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mozambique", "seq": "38,47", "label": "Mozambique"}, {"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "70,99", "label": "North-Western Province, Zambia"}], "predicate mapping": [], "id": "0f6a8f881bad42279b23a45e3316c4e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Good_Hair> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comedian>}", "question": "List the people who influenced the comedian who acted in Good Hair ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Good_Hair", "seq": "57,65", "label": "Good Hair"}], "predicate mapping": [], "id": "574ba8734196413da81a96d3ec250fcc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anupong_Paochinda> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri . }", "question": "Which religion did both anupong paochinda and udit raj follow?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anupong_Paochinda", "seq": "24,40", "label": "anupong paochinda"}, {"uri": "http://dbpedia.org/resource/Udit_Raj", "seq": "46,53", "label": "udit raj"}], "predicate mapping": [], "id": "adc7d53883de42c6be0600b7cace1446"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u00dc\u00fcreg_Lake> <http://dbpedia.org/ontology/sourceCountry> ?uri } ", "question": "What is the source country of reg Lake ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00dc\u00fcreg_Lake", "seq": "30,37", "label": "reg Lake"}], "predicate mapping": [], "id": "7b47485d6943488fa5e56c5987062679"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Ring_of_Honor> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Where did the wrestler trained by Ring of Honour get billed?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ring_of_Honor", "seq": "34,47", "label": "Ring of Honour"}], "predicate mapping": [], "id": "ac781ca0b046427fb17b9f7d786504b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose cast members are Jeff Conaway and Jason Carter?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeff_Conaway", "seq": "51,62", "label": "Jeff Conaway"}, {"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "seq": "68,79", "label": "Jason Carter"}], "predicate mapping": [], "id": "34f7503c1f79416eaf15faa883428f9d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pat_Vincent> <http://dbpedia.org/ontology/deathPlace> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }", "question": "Who founded the city where Pat Vincent die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pat_Vincent", "seq": "27,37", "label": "Pat Vincent"}], "predicate mapping": [], "id": "7eab338cb255401796c57269d23ae776"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ellsworth_Bunker> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }", "question": "The successor of Ellsworth Bunker belongs to which religion?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ellsworth_Bunker", "seq": "17,32", "label": "Ellsworth Bunker"}], "predicate mapping": [], "id": "beb30f1a6feb4cb2a855e669bf3f7555"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Save_the_Queen> }", "question": "Is God Save the Queen the national anthem of United Kingdom?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Kingdom", "seq": "45,58", "label": "United Kingdom"}, {"uri": "http://dbpedia.org/resource/God_Save_the_Queen", "seq": "3,20", "label": "God Save the Queen"}], "predicate mapping": [], "id": "e408531d8dfb48d5af806122fb2e865b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ", "question": "GetTV is owned by which organisation?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/GetTV", "seq": "0,4", "label": "GetTV"}], "predicate mapping": [], "id": "e2b55df745ed48acb96b3572ab3e72e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "In which wars were people from the Saudi Arabian ministry of defense involved?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)", "seq": "49,67", "label": "ministry of defense"}], "predicate mapping": [], "id": "778e7cfd62804443a18d4c3eb9a42131"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Name the commanders of military conflicts where Roundhead was one of the commander ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)", "seq": "48,56", "label": "Roundhead"}], "predicate mapping": [], "id": "3e8b38a9e2204976a87534f098523f05"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saddam_Hussein> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Mushir> }", "question": "Was saddam hussein at the rank of Mushir ever?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saddam_Hussein", "seq": "4,17", "label": "saddam hussein"}, {"uri": "http://dbpedia.org/resource/Mushir", "seq": "34,39", "label": "Mushir"}], "predicate mapping": [], "id": "b75f8d3b6f504199a40530df99c12f74"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "Which mountain is located in inyo National Forest and has a parent peak named Nevado de Toluca ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Inyo_National_Forest", "seq": "29,48", "label": "inyo National Forest"}, {"uri": "http://dbpedia.org/resource/Nevado_de_Toluca", "seq": "78,93", "label": "Nevado de Toluca"}], "predicate mapping": [], "id": "ae33dcf324974e5a8a97acf8260a43ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dad's_Root_Beer> <http://dbpedia.org/property/locationCity> ?uri. <http://dbpedia.org/resource/Timothy_J._Roemer> <http://dbpedia.org/property/state> ?uri} ", "question": "Whihc state of Timothy J. Roemer is also the location city of Dad's Root Beer ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dad's_Root_Beer", "seq": "62,76", "label": "Dad's Root Beer"}, {"uri": "http://dbpedia.org/resource/Timothy_J._Roemer", "seq": "15,31", "label": "Timothy J. Roemer"}], "predicate mapping": [], "id": "7f0f74a296d6433abb524ea51574af2b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Arthur_St._Clair> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "question": "How many factions were involved in the battles fought by Arthur St. Clair?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_St._Clair", "seq": "57,72", "label": "Arthur St. Clair"}], "predicate mapping": [], "id": "d73ddbee285644de8877440e530c8c3a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Arctic_Ocean> . ?x <http://dbpedia.org/ontology/border> ?uri  . }", "question": "List borders of the admin region bordering Arctic ocean ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arctic_Ocean", "seq": "43,54", "label": "Arctic ocean"}], "predicate mapping": [], "id": "93149b69fa094becaa9a340eee7edad7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri } ", "question": "Who composed the music for Tonight's the Night ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)", "seq": "27,45", "label": "Tonight's the Night"}], "predicate mapping": [], "id": "6138681c5c4b40edae512667d67db3cb"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Athens> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> }", "question": "Is Giorgos Kaminis the mayor of Athens?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Athens", "seq": "32,37", "label": "Athens"}, {"uri": "http://dbpedia.org/resource/Giorgos_Kaminis", "seq": "3,17", "label": "Giorgos Kaminis"}], "predicate mapping": [], "id": "f93336205ff849d79ef737b987936d56"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Frampton's_Camel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "What are the artists that have been in the band Framptons camel?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frampton's_Camel", "seq": "48,62", "label": "Framptons camel"}], "predicate mapping": [], "id": "ace6d15c16bc4a83b76485ccda9762e6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Bantam_Spectra> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "question": "Bantam Spectra is the publisher of which series?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bantam_Spectra", "seq": "0,13", "label": "Bantam Spectra"}], "predicate mapping": [], "id": "f0d39660f1f94a2098c5ecae0c7159ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Stoke-on-Trent> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "question": "List the soccer players whose current team has the ground Stoke-on-Trent.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stoke-on-Trent", "seq": "58,71", "label": "Stoke-on-Trent"}], "predicate mapping": [], "id": "6da84c298eee46d9bb136c460ff99bb0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ", "question": "Who is the headcoach of 2013-14 Marquette Golden Eagles men's basketball team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "seq": "24,76", "label": "2013-14 Marquette Golden Eagles men's basketball team"}], "predicate mapping": [], "id": "f08fb8d368d348e482a1d9c778dd17d5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ", "question": "Which operator of New Sanno Hotel is also the  governing body of the Oahu Railway and Land Company ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Sanno_Hotel", "seq": "18,32", "label": "New Sanno Hotel"}, {"uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company", "seq": "69,97", "label": "Oahu Railway and Land Company"}], "predicate mapping": [], "id": "ce5909f4af904a12a1ffea92d437ff16"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "In which military conflict were Phm Vn ng and John McEwen commanders ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng", "seq": "32,40", "label": "Phm Vn ng"}, {"uri": "http://dbpedia.org/resource/John_McEwen", "seq": "46,56", "label": "John McEwen"}], "predicate mapping": [], "id": "86ca35205b364789addf51963601e201"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }", "question": "Does Air 2000 fly to the north american continent?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_2000", "seq": "5,12", "label": "Air 2000"}, {"uri": "http://dbpedia.org/resource/North_America", "seq": "25,38", "label": "north american"}], "predicate mapping": [], "id": "7ab5eba0fa5e4d2db3867b842e966443"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Open_House_(American_Horror_Story)> <http://dbpedia.org/property/music> ?uri } ", "question": "List the music of Open House (American Horror Story)?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Open_House_(American_Horror_Story)", "seq": "18,27", "label": "Open House"}], "predicate mapping": [], "id": "00691ec829834dd08cec97419d51eb4c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BMW_M43> . ?x <http://dbpedia.org/property/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}", "question": "What is the predecessor of the car engine which was succeeded by  BMW M43 ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/BMW_M43", "seq": "66,72", "label": "BMW M43"}], "predicate mapping": [], "id": "298ec5bdf98b4eaead3626a3d1fd8456"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "How many players debuted their careers from San Francisco 49ers?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_49ers", "seq": "44,62", "label": "San Francisco 49ers"}], "predicate mapping": [], "id": "5809473753f34eeab40d9ef6574a79a6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What movies have been written by authors of Monty Python ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monty_Python", "seq": "44,55", "label": "Monty Python"}], "predicate mapping": [], "id": "9199869451414c5da79221a37f5ffefd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mrunalini_Kunte> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "question": "List the things for which the relatives of Mrunalini Kunte are known?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mrunalini_Kunte", "seq": "43,57", "label": "Mrunalini Kunte"}], "predicate mapping": [], "id": "3fbefd4c3d514688b85789042b0b5376"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Bob_Dylan> }", "question": "Did Bob Dylan write the lyrics of the times they are a changin'?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "seq": "34,61", "label": "the times they are a changin"}, {"uri": "http://dbpedia.org/resource/Bob_Dylan", "seq": "4,12", "label": "Bob Dylan"}], "predicate mapping": [], "id": "e8cf794706634a76b62c2aaf12adf298"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gabriel_Par\u00eds_Gordillo> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/property/allegiance> ?uri . }", "question": "To which country do gabriel paris gordillo and gustavo rojas pinilla owe their allegiance?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gabriel_Par\u00eds_Gordillo", "seq": "20,41", "label": "gabriel paris gordillo"}, {"uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla", "seq": "47,67", "label": "gustavo rojas pinilla"}], "predicate mapping": [], "id": "3fa147b6f8f440749b08abb421bf2035"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_of_Puerto_Rico> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/Pina_Records> <http://dbpedia.org/property/founded> ?uri} ", "question": "What was founded by pina Records which has name of Geography of Puerto Rico ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geography_of_Puerto_Rico", "seq": "51,74", "label": "Geography of Puerto Rico"}, {"uri": "http://dbpedia.org/resource/Pina_Records", "seq": "20,31", "label": "pina Records"}], "predicate mapping": [], "id": "544df16ef59d472a8e6a01d0854aa485"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "How many saints have been venerated in Judaism?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judaism", "seq": "39,45", "label": "Judaism"}], "predicate mapping": [], "id": "3faefccf7050420780e9fac0a46abe38"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benu\u00e9_River> . ?x <http://dbpedia.org/property/outflow> ?uri  . }", "question": "List the outflows of the lake which has Benu river as one of it ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benu\u00e9_River", "seq": "40,49", "label": "Benu river"}], "predicate mapping": [], "id": "14eaf63728994ec89e6ab5dcfc7e4446"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Owen_Dougherty> <http://dbpedia.org/property/placeOfDeath> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Who is the co-founder of the city where Owen Dougherty died?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Owen_Dougherty", "seq": "40,53", "label": "Owen Dougherty"}], "predicate mapping": [], "id": "1e48900f6c1847c7832e07b1e02cb22c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Superior_general>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Religious>}", "question": "Who is a religious figure titled superior general?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Superior_general", "seq": "33,48", "label": "superior general"}], "predicate mapping": [], "id": "a1d198db24e842999eeb72b803b34c69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "What is the military unit whose command structures are United States Department of the Navy and United States Department of Defense?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy", "seq": "55,90", "label": "United States Department of the Navy"}, {"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "seq": "96,130", "label": "United States Department of Defense"}], "predicate mapping": [], "id": "225b40988f164cd18ab023c044dc99d0"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/James_Wong_Howe> }", "question": "Is James Wong Howe the cinematographer of Behave Yourself?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Behave_Yourself!", "seq": "42,56", "label": "Behave Yourself"}, {"uri": "http://dbpedia.org/resource/James_Wong_Howe", "seq": "3,17", "label": "James Wong Howe"}], "predicate mapping": [], "id": "6c551ce5e8ac471295a34da950408fa8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abigail_Adams> <http://dbpedia.org/property/children> ?uri } ", "question": "Who are the children of Abigail Adams?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abigail_Adams", "seq": "24,36", "label": "Abigail Adams"}], "predicate mapping": [], "id": "4ffdaa76aa994139b18edf277f905fed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Academy_of_Fine_Arts_In_\u0141\u00f3d\u017a> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards have the alumni of Academy of Fine Arts in Lodz achieved?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Academy_of_Fine_Arts_In_\u0141\u00f3d\u017a", "seq": "31,58", "label": "Academy of Fine Arts in Lodz"}], "predicate mapping": [], "id": "70c8d9f0e7c64d31b9e09f06e888d0ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Big_Ticket_Entertainment> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many TV shows are of the company which are of company which is a subsidiary of Big  Ticket Entertainment ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Ticket_Entertainment", "seq": "83,107", "label": "Big  Ticket Entertainment"}], "predicate mapping": [], "id": "0ca6c27bc7d045a09658ba31af63d7d0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri } ", "question": "Which are the predecessor of Chevrolet Caprice?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chevrolet_Caprice", "seq": "29,45", "label": "Chevrolet Caprice"}], "predicate mapping": [], "id": "843e418ed3c44ed7b63ee93d377e146a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Bodhin_Kjolhede> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "What was recorded by Live in Detroit, MI and also palce of birth of the Bodhin Kjolhede?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI", "seq": "21,39", "label": "Live in Detroit, MI"}, {"uri": "http://dbpedia.org/resource/Bodhin_Kjolhede", "seq": "72,86", "label": "Bodhin Kjolhede"}], "predicate mapping": [], "id": "4842524c47d4401f85295095f0e9c4bf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal>}", "question": "Which animal is the mascot of the 1502nd Infantry Brigade (Ready Reserve) and Galatasaray Handball Team ?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)", "seq": "34,56", "label": "1502nd Infantry Brigade"}, {"uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team", "seq": "78,102", "label": "Galatasaray Handball Team"}], "predicate mapping": [], "id": "85880ecb1ad440bf90276a657471d64b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "What are other famous works of the writer who created the Sarah Jane Adventures?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "54,78", "label": "the Sarah Jane Adventures"}], "predicate mapping": [], "id": "2c23a7087748489bacf1940fc992f121"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Open_Society_Foundations", "seq": "27,49", "label": "Open Society Foundation"}, {"uri": "http://dbpedia.org/resource/Susan_Weber_Soros", "seq": "70,86", "label": "Susan Weber Soros"}], "predicate mapping": [], "id": "996ec9ddd3fb4c8ea7715aea366c4f9d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_J._Perkins> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri} ", "question": "Which key person of the Clinton Foundation is also the president of Edward J. Perkins ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edward_J._Perkins", "seq": "68,84", "label": "Edward J. Perkins"}, {"uri": "http://dbpedia.org/resource/Clinton_Foundation", "seq": "24,41", "label": "Clinton Foundation"}], "predicate mapping": [], "id": "571ba10a407648e387c5b247b38c3175"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri } ", "question": "Name the sports played by Fr. Agnel Multipurpose School and Junior College?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "seq": "26,73", "label": "Fr. Agnel Multipurpose School and Junior College"}], "predicate mapping": [], "id": "dd56b34774864c2f898e20007c193984"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Fritz_Chess> <http://dbpedia.org/ontology/genre> ?uri} ", "question": "Which athletics of Jaimatu Muslim Mindano is same as the genre of the Fritz Chess ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "19,40", "label": "Jaimatu Muslim Mindano"}, {"uri": "http://dbpedia.org/resource/Fritz_Chess", "seq": "70,80", "label": "Fritz Chess"}], "predicate mapping": [], "id": "c44ba26fe4574a649b78f1dc00246dfd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm> . ?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}", "question": "Which are the comics characters painted by Bruce Timm and created by  Paul Dini?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Timm", "seq": "43,52", "label": "Bruce Timm"}, {"uri": "http://dbpedia.org/resource/Paul_Dini", "seq": "70,78", "label": "Paul Dini"}], "predicate mapping": [], "id": "268bbb26a2164faf852c530fc8ae5320"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Wheaton_College_(Massachusetts)> <http://dbpedia.org/property/nickname> ?uri . }", "question": "What is a common nickname given to both Lyons Township high school and the wheaton college in massachusetts?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lyons_Township_High_School", "seq": "40,65", "label": "Lyons Township high school"}, {"uri": "http://dbpedia.org/resource/Wheaton_College_(Massachusetts)", "seq": "75,89", "label": "wheaton college"}], "predicate mapping": [], "id": "0dbe25e3f60b4874ad6bbbde0b92db79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "In what battles did president Park Chung-hee participate?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Park_Chung-hee", "seq": "30,43", "label": "Park Chung-hee"}], "predicate mapping": [], "id": "b381525459274ec79b5b9168839aa7b4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stephanie> <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> }", "question": "Is stephanie a female?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephanie", "seq": "3,11", "label": "stephanie"}, {"uri": "http://dbpedia.org/resource/Female", "seq": "15,20", "label": "female"}], "predicate mapping": [], "id": "2c54bb98872f4466b6a36426db7f553d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "List the scientists whose doctoral advisor is Ernest Rutherford and are known for Manhattan Project?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "seq": "46,62", "label": "Ernest Rutherford"}, {"uri": "http://dbpedia.org/resource/Manhattan_Project", "seq": "82,98", "label": "Manhattan Project"}], "predicate mapping": [], "id": "f152c9e6bda2455781b4900277175979"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What is the layout of the automobiles whose designer company is Olivier Boulay?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Olivier_Boulay", "seq": "64,77", "label": "Olivier Boulay"}], "predicate mapping": [], "id": "b109f73fd21a466b80b5e96bbd12b4a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Count the number of religions followed by BJP members.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party", "seq": "39,52", "label": "by BJP members"}], "predicate mapping": [], "id": "ac1933135e72469c8eb4faa146c394db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have been the head coach for Middlesbrough FC?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "45,60", "label": "Middlesbrough FC"}], "predicate mapping": [], "id": "0b31ffed88a540dc80c450e15236a114"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . }", "question": "Who was on the boards of Freedom of the City and Royal Society?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Freedom_of_the_City", "seq": "25,43", "label": "Freedom of the City"}, {"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "49,61", "label": "Royal Society"}], "predicate mapping": [], "id": "181669e0211e4d799df81237c72d9b39"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Lanao_del_Sur> . ?x <http://dbpedia.org/ontology/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What games are played at universities in Lanao Del Sur?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lanao_del_Sur", "seq": "41,53", "label": "Lanao Del Sur"}], "predicate mapping": [], "id": "f8733a59b674426dac53692d6ac50bb0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Enrique_Jos\u00e9_Varona> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "What is the almamater of the president whose vice president was Enrique Jos Varona?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Enrique_Jos\u00e9_Varona", "seq": "64,81", "label": "Enrique Jos Varona"}], "predicate mapping": [], "id": "07ac58be90694523be7a9ad593d82ef4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ", "question": "What is the architecture of First National Bank and Trust Building (Lima, Ohio) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)", "seq": "28,65", "label": "First National Bank and Trust Building"}], "predicate mapping": [], "id": "d3c142c23fcd445e8acfe1320c5cddfb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Ronda> . ?uri <http://dbpedia.org/property/director> ?x  . }", "question": "Directors of which movies are buried in Ronda?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronda", "seq": "40,44", "label": "Ronda"}], "predicate mapping": [], "id": "30b207243bc34347a7cc38bb8cb88fd0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }", "question": "In which states does the river flow whose left tributary is Toms Creek?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)", "seq": "60,69", "label": "Toms Creek"}], "predicate mapping": [], "id": "c1958e8eaa264ab58264e8dbc6849720"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ", "question": "Which animator of the The Skeleton Dance is also the director of The Haunted House (1929 film) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "22,39", "label": "The Skeleton Dance"}, {"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "seq": "65,81", "label": "The Haunted House"}], "predicate mapping": [], "id": "093a1659d85d4b9cab08915271c4e918"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Golden_State_Warriors>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballLeague>}", "question": "What basketball league's champion is Golden State Warriors", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Golden_State_Warriors", "seq": "37,57", "label": "Golden State Warriors"}], "predicate mapping": [], "id": "7515efe0523a46909195354f0fb0838b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie in which Vangelis gave the music and Jordan was the cinematographer ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vangelis", "seq": "24,31", "label": "Vangelis"}, {"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "52,65", "label": "Jordan was the"}], "predicate mapping": [], "id": "190465152dd44639aab83ac6b0e1d0fa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Temptation_Waits> <http://dbpedia.org/ontology/recordedIn> ?uri} ", "question": "Which high school of the Jerry Tagge also was the palce hwer Temptation Waits was recorded ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Tagge", "seq": "25,35", "label": "Jerry Tagge"}, {"uri": "http://dbpedia.org/resource/Temptation_Waits", "seq": "61,76", "label": "Temptation Waits"}], "predicate mapping": [], "id": "09c521f0f65e49c5b02014c8d62cb12f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . }", "question": "How many people won the Gold Medal of the Royal Astronomical Society?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society", "seq": "24,67", "label": "Gold Medal of the Royal Astronomical Society"}], "predicate mapping": [], "id": "a6904e9b6e164493af1fde284d08f558"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . }", "question": "Stockholm is the HQ of how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stockholm", "seq": "0,8", "label": "Stockholm"}], "predicate mapping": [], "id": "33984af5c01b4427b7af87f294ee0f1c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alpine_Brigade_Taurinense> <http://dbpedia.org/ontology/battle> ?uri } ", "question": "With whom were the engagements of Alpine Brigade Taurinense?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alpine_Brigade_Taurinense", "seq": "34,58", "label": "Alpine Brigade Taurinense"}], "predicate mapping": [], "id": "6289a18178e44e02b341c0614bad4c81"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . }", "question": "Who is married to Susan Weber Soros?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Susan_Weber_Soros", "seq": "18,34", "label": "Susan Weber Soros"}], "predicate mapping": [], "id": "6adadd03b3254e5386b3c4bd1680b99d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "In how many different places have US people died?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "12,27", "label": "different places"}], "predicate mapping": [], "id": "a4572121e3a84ab491141bad9959a94e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abbas_Jafri> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ", "question": "What is the state of origin of Abbas Jafri ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abbas_Jafri", "seq": "31,41", "label": "Abbas Jafri"}], "predicate mapping": [], "id": "ac851fcc762c4a0abda96bed81bef120"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Algeria> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "Name the battle fought by the military persons who also fought in Algeria ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Algeria", "seq": "66,72", "label": "Algeria"}], "predicate mapping": [], "id": "fe5cca52ae464cf8901728f58148bac7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cancer> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Creative_Commons_license> }", "question": "does the journal of cancer have the creative commons license?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Journal_of_Cancer", "seq": "9,25", "label": "journal of cancer"}, {"uri": "http://dbpedia.org/resource/Creative_Commons_license", "seq": "36,59", "label": "creative commons license"}], "predicate mapping": [], "id": "8a3ce84f8932457284713d13f23eae30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "question": "Terry Pratchett has written about how many topics?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terry_Pratchett", "seq": "0,14", "label": "Terry Pratchett"}], "predicate mapping": [], "id": "f38d40e812a24ed08486f86b89c75ca7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "What is debut team of the baseball players who died in Los Angeles?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles", "seq": "55,65", "label": "Los Angeles"}], "predicate mapping": [], "id": "43e2baff638546e2a1d68bc013f30e65"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Shorty_Rogers> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "Who are the associated musical artist of the  artists of band Shorty Rogers?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shorty_Rogers", "seq": "62,74", "label": "Shorty Rogers"}], "predicate mapping": [], "id": "b4ccb08854ad40d48a962e5bc8319a51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ferguson> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri . }", "question": "Martin Ferguson and Mike Kelly served under which aussie PM?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Ferguson", "seq": "0,14", "label": "Martin Ferguson"}, {"uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)", "seq": "20,29", "label": "Mike Kelly"}], "predicate mapping": [], "id": "2453d5655cc8407182387fe5d0514477"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Arkansas> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "What is the region of the ethnic group which speaks the language of Arkansas?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arkansas", "seq": "68,75", "label": "Arkansas"}], "predicate mapping": [], "id": "d999286c2f1b4750b667f53ecdf21be0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Mississippi_River> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Who has fought in the conflicts around the Mississippi river?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mississippi_River", "seq": "43,59", "label": "Mississippi river"}], "predicate mapping": [], "id": "e0ad5d9267d544bea41199ce7045fc36"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u014ctani_University> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri} ", "question": "List the relegion of tani University which is also the life stance of udit Raj ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u014ctani_University", "seq": "21,35", "label": "tani University"}, {"uri": "http://dbpedia.org/resource/Udit_Raj", "seq": "70,77", "label": "udit Raj"}], "predicate mapping": [], "id": "95ad975ecd3f4f8a96cdc1d5ad089e0a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Texas> }", "question": "Does the San Macros River start in Texas?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Marcos_River", "seq": "9,24", "label": "San Macros River"}, {"uri": "http://dbpedia.org/resource/Texas", "seq": "35,39", "label": "Texas"}], "predicate mapping": [], "id": "33560cb70a394c659afde50ea4d2fa43"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "Which university's graduates have worked in the Quartermaster corps?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)", "seq": "48,66", "label": "Quartermaster corps"}], "predicate mapping": [], "id": "a6a548a2d1ac484d8b94cd09ecf53768"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/David_Prowse_(politician)> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "What is the mascot of the military unit of David Prowse?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Prowse_(politician)", "seq": "43,54", "label": "David Prowse"}], "predicate mapping": [], "id": "b19ab8c472b24e6b8dd6a089d1b46d61"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ", "question": "Which music band made Take Me There, and to which Tedd Riley was associated?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Teddy_Riley", "seq": "50,59", "label": "Tedd Riley"}, {"uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)", "seq": "22,34", "label": "Take Me There"}], "predicate mapping": [], "id": "551b48df0734464987251916a5e96362"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Mouse_Morris> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Mouse Morris' horses have raced in which races?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mouse_Morris", "seq": "0,11", "label": "Mouse Morris"}], "predicate mapping": [], "id": "2e6a230473e948a29d59e965ed724a74"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Silver_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Washington_Dulles_International_Airport> }", "question": "Does Silver Airways have a hub at the Washington Dulles International Airport?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Silver_Airways", "seq": "5,18", "label": "Silver Airways"}, {"uri": "http://dbpedia.org/resource/Washington_Dulles_International_Airport", "seq": "38,76", "label": "Washington Dulles International Airport"}], "predicate mapping": [], "id": "c8eb320ce07140629b07a873aa8a1f66"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri } ", "question": "What is the profession of William Luther Hill ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Luther_Hill", "seq": "26,44", "label": "William Luther Hill"}], "predicate mapping": [], "id": "07aeedead69840918b458b085e80e817"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthName> <http://dbpedia.org/resource/Kabir_Suman> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "What religion is Kabir Suman from?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kabir_Suman", "seq": "17,27", "label": "Kabir Suman"}], "predicate mapping": [], "id": "a47123efd7d64ca9aa928cfb92693d4d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Calera,_Oklahoma> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}", "question": "What are the source of the streams whose one of the source is Calera, Oklahoma?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Calera,_Oklahoma", "seq": "62,77", "label": "Calera, Oklahoma"}], "predicate mapping": [], "id": "6050cd3ccfcc4dfdb3d70fce8b1c3c92"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Big_Top_Ballet> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Front_Row_(software)> <http://dbpedia.org/property/developer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What company made the front row and distributed big top ballet?", "sparql_id": 316, "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Top_Ballet", "seq": "48,61", "label": "big top ballet"}, {"uri": "http://dbpedia.org/resource/Front_Row_(software)", "seq": "22,30", "label": "front row"}], "predicate mapping": [], "id": "7e818c143d0646119c7a6274c4471970"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rostov-Glavny> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ", "question": "What is the serving railway line of Rostov-Glavny ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostov-Glavny", "seq": "36,48", "label": "Rostov-Glavny"}], "predicate mapping": [], "id": "176e2c67c12547b9bad7e6dff1452cb4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company is located in Harris County, Texas?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harris_County,_Texas", "seq": "28,47", "label": "Harris County, Texas"}], "predicate mapping": [], "id": "7ba27bb9e46648a595380f3277ca4f2f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Email_filtering> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the alma mater of the scientist famous for Email filtering ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Email_filtering", "seq": "48,62", "label": "Email filtering"}], "predicate mapping": [], "id": "c588fe59d877476892d39589f6172632"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "question": "What is the genre for the developer of Interplay Entertainment?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Interplay_Entertainment", "seq": "39,61", "label": "Interplay Entertainment"}], "predicate mapping": [], "id": "9b31b9b3c89f471bafa57e35da9f566b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ", "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix", "seq": "74,96", "label": "1967 mexican Grand Prix"}, {"uri": "http://dbpedia.org/resource/Dagenham_wind_turbines", "seq": "32,53", "label": "Dafenham wind turbines"}], "predicate mapping": [], "id": "b01d261027ab4a75ad6a18e3a4808236"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Tell me the number of writers whose works have been recorded in Criteria Studios?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Criteria_Studios", "seq": "64,79", "label": "Criteria Studios"}], "predicate mapping": [], "id": "c885120c181e4448adfcbe1da45585fb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sarah_Kazemy> <http://dbpedia.org/property/residence> ?uri } ", "question": "What is the official residence of Sarah Kazemy ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sarah_Kazemy", "seq": "34,45", "label": "Sarah Kazemy"}], "predicate mapping": [], "id": "46b80622ce374a06a4553cc91038560a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Kingdom_of_Naples> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List all crafts of the people whose one of the profession is Kingdom of Naples ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingdom_of_Naples", "seq": "61,77", "label": "Kingdom of Naples"}], "predicate mapping": [], "id": "f3576d71ce1f48a6b87e8fb5a3713b6e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_People's_Revolutionary_Democratic_Front> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Tendaho_Dam> <http://dbpedia.org/property/country> ?uri} ", "question": "Which state of Tendaho dam is the headquarters of Ethiopian People's revolutionary democratic Front located ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethiopian_People's_Revolutionary_Democratic_Front", "seq": "50,98", "label": "Ethiopian People's revolutionary democratic Front"}, {"uri": "http://dbpedia.org/resource/Tendaho_Dam", "seq": "15,25", "label": "Tendaho dam"}], "predicate mapping": [], "id": "94437269d7074fa589ba7d6325c07e24"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> }", "question": "Was Apollo 11 a mission of Niel Armstrong?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Armstrong", "seq": "27,40", "label": "Niel Armstrong"}, {"uri": "http://dbpedia.org/resource/Apollo_11", "seq": "4,12", "label": "Apollo 11"}], "predicate mapping": [], "id": "d3f64fbb4efc4bf583de0d8ffe4be68d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Hammond_organ> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose music composer uses a Hammond organ?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hammond_organ", "seq": "48,60", "label": "Hammond organ"}], "predicate mapping": [], "id": "093e9fad547341e2a4784bd946f8d8cf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Paul_Weatherwax> }", "question": "Did Paul Weatherwax an editor of Behave Yourself?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Behave_Yourself!", "seq": "33,47", "label": "Behave Yourself"}, {"uri": "http://dbpedia.org/resource/Paul_Weatherwax", "seq": "4,18", "label": "Paul Weatherwax"}], "predicate mapping": [], "id": "d610ad560d0a413083759ecc7b270c9e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri } ", "question": "What ingredients are used in preparing the dish of Ragout fin?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ragout_fin", "seq": "51,60", "label": "Ragout fin"}], "predicate mapping": [], "id": "f2fd76539712496f89d28c3d4448d5d8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri . }", "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "seq": "21,49", "label": "Wickramabahu Centeral College"}, {"uri": "http://dbpedia.org/resource/Neungin_High_School", "seq": "55,73", "label": "Neungin High School"}], "predicate mapping": [], "id": "f2e6e08d863b45a0b2fde08ff71c4d93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many television shows are broadcasted on Fox Broadcasting Company?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "45,68", "label": "Fox Broadcasting Company"}], "predicate mapping": [], "id": "900f0ac67c2d4655b104b6664838d60c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "What is the fictional character which belongs to families of Darth Vader and Padm Amidala?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darth_Vader", "seq": "61,71", "label": "Darth Vader"}, {"uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala", "seq": "77,88", "label": "Padm Amidala"}], "predicate mapping": [], "id": "3fd0705b3a18418ca9748691d9ad8be4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> <http://dbpedia.org/ontology/album> ?uri } ", "question": "Where Everybody knows you is the theme album of which show ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "seq": "0,31", "label": "Where Everybody knows you is the"}], "predicate mapping": [], "id": "cff31d6e2dee48de9fc46d0ecb40ced5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ronaldinho> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Brazil_national_under-23_football_team> }", "question": "Does Ronaldinho play in the brazil's under 23 team?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronaldinho", "seq": "5,14", "label": "Ronaldinho"}, {"uri": "http://dbpedia.org/resource/Brazil_national_under-23_football_team", "seq": "28,49", "label": "brazil's under 23 team"}], "predicate mapping": [], "id": "2d605f84b9af4256b26d59a784cee86e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}", "question": "What are some rivers in Zambia which have a dam on them?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "seq": "24,29", "label": "Zambia"}], "predicate mapping": [], "id": "c37f438af3ac4daf95e2ddf9341f360d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/U.S._Route_165> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which office's people have died on the US Route 165?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/U.S._Route_165", "seq": "39,50", "label": "US Route 165"}], "predicate mapping": [], "id": "4e26840031c64a15a7abe3e1330a50b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Murray_Gold> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name some shows similar to the one whose theme song is made by Murray Gold.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Murray_Gold", "seq": "63,73", "label": "Murray Gold"}], "predicate mapping": [], "id": "eea52cce6ad445d8a6611b1b4d4538e7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri } ", "question": "What is the order of George Frisbie Hoar?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Frisbie_Hoar", "seq": "21,39", "label": "George Frisbie Hoar"}], "predicate mapping": [], "id": "5515c31e477642508f2333e66a7124e6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Middle_Temple> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }", "question": "Who are the opponents of graduates of the Middle Temple?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middle_Temple", "seq": "42,54", "label": "Middle Temple"}], "predicate mapping": [], "id": "db38999d5a924a30bf35df8596c3cedc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies were directed by the graduate of Burbank High School ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)", "seq": "49,67", "label": "Burbank High School"}], "predicate mapping": [], "id": "458d42b5dd84407f9c58816fa06defdd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Crook_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . }", "question": "What is on the border of the places which fall under crook county municipality, oregon?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Crook_County,_Oregon", "seq": "53,77", "label": "crook county municipality"}], "predicate mapping": [], "id": "a71853071a1b40a59c6ce4714b1ef5ee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company whose products is Boeing F/A-18E/F Super Hornet and key person is Raymond Conner?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "seq": "35,63", "label": "Boeing F/A-18E/F Super Hornet"}, {"uri": "http://dbpedia.org/resource/Raymond_Conner", "seq": "83,96", "label": "Raymond Conner"}], "predicate mapping": [], "id": "4795bf86bb3c409aa3c9750d6092aa2f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }", "question": "Who are some people whose relation is hqed in Gold Base?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Base", "seq": "46,54", "label": "Gold Base"}], "predicate mapping": [], "id": "44960e14ef46436fbcc7c4d75318662a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grand_Serail_of_Aleppo> <http://dbpedia.org/ontology/architecturalStyle> ?uri. <http://dbpedia.org/resource/Shaheed_Minar,_Kolkata> <http://dbpedia.org/ontology/architecturalStyle> ?uri . }", "question": "Name the common architecture of the Grand Serail of Aleppo and Shaheed Minar, Kolkata ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grand_Serail_of_Aleppo", "seq": "36,57", "label": "Grand Serail of Aleppo"}, {"uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata", "seq": "63,84", "label": "Shaheed Minar, Kolkata"}], "predicate mapping": [], "id": "a57fac7c18cc43cf9acdec289160a3f6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which New Mexico company provides One Drive as a service ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "seq": "6,15", "label": "New Mexico"}, {"uri": "http://dbpedia.org/resource/OneDrive", "seq": "34,42", "label": "One Drive"}], "predicate mapping": [], "id": "f08ad0e14fc34ee599e3747215483fca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company founded in New Mexico and provides Outlook.com as services ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "seq": "28,37", "label": "New Mexico"}, {"uri": "http://dbpedia.org/resource/Outlook.com", "seq": "52,62", "label": "Outlook.com"}], "predicate mapping": [], "id": "d91e9b0f8f0b4a2e8ebfa336a54bdde1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who operates the bridges designed by Malaysian PWD?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department", "seq": "37,49", "label": "Malaysian PWD"}], "predicate mapping": [], "id": "8cc77d4272db4da5a60221753631cf13"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri } ", "question": "Who edited Easy street ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Easy_Street_(film)", "seq": "11,21", "label": "Easy street"}], "predicate mapping": [], "id": "781e6cc08f044c428d77cc3790f657eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri . }", "question": "Among which city where Geography Club played also had the Kenticky Cycle ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geography_Club_(play)", "seq": "23,36", "label": "Geography Club"}, {"uri": "http://dbpedia.org/resource/The_Kentucky_Cycle", "seq": "54,71", "label": "the Kenticky Cycle"}], "predicate mapping": [], "id": "8365e95b808d440cac8c8e713017ab1c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri} ", "question": "Who was the animator of both Tommy Tucker's Tooth and Skeleton Dance?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "29,48", "label": "Tommy Tucker's Tooth"}, {"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "54,67", "label": "Skeleton Dance"}], "predicate mapping": [], "id": "13b47c5d160c4d96ad28e6814def4b42"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Roman_Abramovich> . ?uri <http://dbpedia.org/ontology/occupation> ?x  . }", "question": "Name everyone working for a company owned by Roman Abramovich.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roman_Abramovich", "seq": "45,60", "label": "Roman Abramovich"}], "predicate mapping": [], "id": "16bea2bafce74ca2990221d956a47fa0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Foundation_for_Economic_Education> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>}", "question": "What is the nationality of the economist who is one of the important people in the Foundation for Economic Education?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Foundation_for_Economic_Education", "seq": "83,115", "label": "Foundation for Economic Education"}], "predicate mapping": [], "id": "1f97981f73884227b98d2e193e4793c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Pittsburg,_New_Hampshire> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the rivers which originate from within Pittsburg?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburg,_New_Hampshire", "seq": "44,52", "label": "Pittsburg"}], "predicate mapping": [], "id": "60918268c9dc4bc9a944056cf08df4b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_\u2013_Men's_rings> <http://dbpedia.org/ontology/silverMedalist> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "question": "What is the place of death of the gymnast who was the silver medalist at the 1956 Summer Olympics Men's rings ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_\u2013_Men's_rings", "seq": "61,108", "label": "medalist at the 1956 Summer Olympics Men's rings"}], "predicate mapping": [], "id": "151f565ef0bc4267b5db57b098e82284"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Absolutely_Fabulous> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "What religion are the characters of Absolutely Fabulous from?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Absolutely_Fabulous", "seq": "36,54", "label": "Absolutely Fabulous"}], "predicate mapping": [], "id": "8b983e3a0771427fa876d31b4806a6a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Krapanski_Potok> . ?x <http://dbpedia.org/ontology/source> ?uri  . }", "question": "Where does the river begin whose left tributary is Krapanski Potok?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Krapanski_Potok", "seq": "51,65", "label": "Krapanski Potok"}], "predicate mapping": [], "id": "079c81f8aa684b9c90a281e08a9c84d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "question": "Name all the soccer players who played in a under 18 club for La Liga?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/La_Liga", "seq": "62,68", "label": "La Liga"}], "predicate mapping": [], "id": "fe429424b0b34adda047a3ba868f0489"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have coached the players of Middlesbrough FC?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "44,59", "label": "Middlesbrough FC"}], "predicate mapping": [], "id": "53e44c387e97481c93a92afe3bf4dd57"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Burns> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Romanticism> }", "question": "Was Robert Burns from the Romanticist School of thought?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Burns", "seq": "4,15", "label": "Robert Burns"}, {"uri": "http://dbpedia.org/resource/Romanticism", "seq": "26,36", "label": "Romanticist"}], "predicate mapping": [], "id": "fc4ee0bdf9ae4487ac6fc5f5dbdf452c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Kemijoki> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Name the sea whose inflow is Kemijoki and outflow is Danish straits?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kemijoki", "seq": "29,36", "label": "Kemijoki"}, {"uri": "http://dbpedia.org/resource/Danish_straits", "seq": "53,66", "label": "Danish straits"}], "predicate mapping": [], "id": "519d34ace38b4ea093d283425bef109e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/region> ?uri  . }", "question": "Count the number of region of AN/FSQ-7 Combat Direction Central?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central", "seq": "30,62", "label": "AN/FSQ-7 Combat Direction Central"}], "predicate mapping": [], "id": "2d254f44524040f49a25092be3e4f942"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Data_center_services> . ?x <http://dbpedia.org/property/services> ?uri }", "question": "Give me a count of the services by the company which provides Data center as the services ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Data_center_services", "seq": "62,88", "label": "Data center as the services"}], "predicate mapping": [], "id": "1f6748d64d834a7f9f8a849a841bb8fb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri } ", "question": "Where was Special 26 recorded ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Special_26", "seq": "10,19", "label": "Special 26"}], "predicate mapping": [], "id": "9e8d0173dbb749c3a9861e1887894afe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ingrid_von_Rosen> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "List the awards won by the wife of Ingrid von Rosen.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ingrid_von_Rosen", "seq": "35,50", "label": "Ingrid von Rosen"}], "predicate mapping": [], "id": "ade7e2b4ed804a43a9a124fe2f3e4efc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the people with Scientology as their religious belief?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scientology", "seq": "21,31", "label": "Scientology"}], "predicate mapping": [], "id": "6d69d75249944430948e09c0741a01b2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ", "question": "List common systems are developed by of the Google Videos and written by of the Google Web Toolkit ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Videos", "seq": "44,56", "label": "Google Videos"}, {"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "seq": "80,97", "label": "Google Web Toolkit"}], "predicate mapping": [], "id": "3720d9f7161b4dbba314e15c50a74922"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which program was on NBC network with executive producer as Glen and Les Charles?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "seq": "21,23", "label": "NBC"}, {"uri": "http://dbpedia.org/resource/Glen_and_Les_Charles", "seq": "60,79", "label": "Glen and Les Charles"}], "predicate mapping": [], "id": "978a09e0cd01477cb3b794cae035132a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)> <http://dbpedia.org/ontology/builder> ?uri } ", "question": "Name hte builder of Baku Olympic Stadium ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)", "seq": "20,39", "label": "Baku Olympic Stadium"}], "predicate mapping": [], "id": "4311e02017fd4760a06569b9821a2411"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri } ", "question": "Who is the animator of Tommy Tucker's Tooth ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "23,42", "label": "Tommy Tucker's Tooth"}], "predicate mapping": [], "id": "4294fa2db28d45f1933f8c4347b84964"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Buddha_and_His_Dhamma> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }", "question": "Is the book The Buddha and his Dhamma a book about Buddhism?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Buddha_and_His_Dhamma", "seq": "12,36", "label": "The Buddha and his Dhamma"}, {"uri": "http://dbpedia.org/resource/Buddhism", "seq": "51,58", "label": "Buddhism"}], "predicate mapping": [], "id": "f45f71305db04f20a4880e91502a2d7e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri } ", "question": "What is the national origin of Focke-Wulf Fw 260 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260", "seq": "31,47", "label": "Focke-Wulf Fw 260"}], "predicate mapping": [], "id": "fd1f031446b74ac481667ae2904eb14f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who is the person opposed  by Tom McLaury and Ike Clanton?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tom_McLaury", "seq": "30,40", "label": "Tom McLaury"}, {"uri": "http://dbpedia.org/resource/Ike_Clanton", "seq": "46,56", "label": "Ike Clanton"}], "predicate mapping": [], "id": "3814808bac334e5f8d76f56a99bf5403"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who all have developed a cross platform software?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cross-platform", "seq": "25,38", "label": "cross platform"}], "predicate mapping": [], "id": "7fe6c4ee43cd4a048ae22cb336c1e62a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Great_Ayton>  . }", "question": "Who attended Great Ayton university?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Great_Ayton", "seq": "13,23", "label": "Great Ayton"}], "predicate mapping": [], "id": "e60e13c61f15439ab1d8ee9a7d9e3956"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/War_of_1812> . ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Battle_of_the_Thames> . }", "question": "Who is known for are War of 1812 and Battle of the Thames?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/War_of_1812", "seq": "21,31", "label": "War of 1812"}, {"uri": "http://dbpedia.org/resource/Battle_of_the_Thames", "seq": "37,56", "label": "Battle of the Thames"}], "predicate mapping": [], "id": "db906608706f4028b90fa657a76a2fce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . }", "question": "Count everything garrisoned at the pentagon?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Pentagon", "seq": "31,42", "label": "the pentagon"}], "predicate mapping": [], "id": "b5297f4033954bbebf99e83717abf862"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "List few schools situated in Reading, Berkshire ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "29,46", "label": "Reading, Berkshire"}], "predicate mapping": [], "id": "96e065865fdc4334b92125a47b7afc00"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "How many rivers end in the Indian Ocean?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Ocean", "seq": "27,38", "label": "Indian Ocean"}], "predicate mapping": [], "id": "2b813b2612884ca0b83b6347da69b776"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What non fiction subjects are covered in books by Doubleday publishers?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doubleday_(publisher)", "seq": "50,58", "label": "Doubleday"}], "predicate mapping": [], "id": "44f0efbc081546a0be93ab03cbed3e68"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/tenants> ?uri }", "question": "Find the total number of tenants of the stadium whose tenants was Toronto Marlies?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Marlies", "seq": "66,80", "label": "Toronto Marlies"}], "predicate mapping": [], "id": "24853dbf6de64eb1951cbc2cb6673cf5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/Peanuts_Motion_Comics> . ?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Peanuts_Movie> . }", "question": "Who voiced in Peanuts Motion Comics and The Peanuts Movie?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peanuts_Motion_Comics", "seq": "14,34", "label": "Peanuts Motion Comics"}, {"uri": "http://dbpedia.org/resource/The_Peanuts_Movie", "seq": "40,56", "label": "The Peanuts Movie"}], "predicate mapping": [], "id": "712c9dd545ed457698ecdaee86202d3e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Rain_Over_Me> <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Planet_Pit> }", "question": "Is Rain Over me in the planet pit album?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rain_Over_Me", "seq": "3,14", "label": "Rain Over me"}, {"uri": "http://dbpedia.org/resource/Planet_Pit", "seq": "23,32", "label": "planet pit"}], "predicate mapping": [], "id": "a12b0138676940388abb030a095b99cf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}", "question": "The pope whose shrine is in St Peter's Basilica was venerated in which sects?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Peter's_Basilica", "seq": "28,46", "label": "St Peter's Basilica"}], "predicate mapping": [], "id": "04c55a217eca42488ea5a3fadb654924"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lillian_Disney> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List the honorary title given to the spouse of Lillian Disney ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lillian_Disney", "seq": "47,60", "label": "Lillian Disney"}], "predicate mapping": [], "id": "3ab803a589804dd8b296cbe19777f8dc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "seq": "46,54", "label": "Jack Ryan"}, {"uri": "http://dbpedia.org/resource/Robert_Sarvis", "seq": "60,72", "label": "Robert sarvis"}], "predicate mapping": [], "id": "7bfbc6d46c534d2bb0f4d755d9dc591b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery> . ?x <http://dbpedia.org/property/restingplace> ?uri }", "question": "What is the total number of other restingplace of the politicians whose one of the restingplace is East Norwalk Historical Cemetery?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery", "seq": "99,130", "label": "East Norwalk Historical Cemetery"}], "predicate mapping": [], "id": "1c8cf55dda6444e69a79532b4cb471f2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Afghanistan> . ?x <http://dbpedia.org/ontology/battle> ?uri }", "question": "Count the total number of conflicts people who were part of conflict in afghanisthan ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Afghanistan", "seq": "72,83", "label": "afghanisthan"}], "predicate mapping": [], "id": "5de5a571a8944ee88bd9e7605b13f4da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kenthurst,_New_South_Wales>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}", "question": "Which tennis players live in Kenthurst, new south wales?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenthurst,_New_South_Wales", "seq": "29,54", "label": "Kenthurst, new south wales"}], "predicate mapping": [], "id": "cc4ae85ad1744fa583816c7460e19d3b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Stan_Van_Gundy> } ", "question": "Stan Van Gundy serves as a head coach and president for which basketball team?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stan_Van_Gundy", "seq": "0,13", "label": "Stan Van Gundy"}], "predicate mapping": [], "id": "2afab07b2dac4282909806c34e40c6f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wringer_(novel)> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": " Wringer (novel) and Maniac Magee is the notable work of which author?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wringer_(novel)", "seq": "1,7", "label": "Wringer"}, {"uri": "http://dbpedia.org/resource/Maniac_Magee", "seq": "21,32", "label": "Maniac Magee"}], "predicate mapping": [], "id": "ab50944245784dce87146a8d1f1cc756"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Ukraine> }", "question": "Was Liliya Lobanova born in Ukraine?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liliya_Lobanova", "seq": "4,18", "label": "Liliya Lobanova"}, {"uri": "http://dbpedia.org/resource/Ukraine", "seq": "28,34", "label": "Ukraine"}], "predicate mapping": [], "id": "504cb25e8e274fb68f21b73610569d7a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mall_of_America> <http://dbpedia.org/property/owned> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }", "question": "Where is the head quarters of the parent company of Mall of America located?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mall_of_America", "seq": "52,66", "label": "Mall of America"}], "predicate mapping": [], "id": "13d8d20650a94f7cbef49822770fa47f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri } ", "question": "Where was Sino-French War fought ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sino-French_War", "seq": "10,24", "label": "Sino-French War"}], "predicate mapping": [], "id": "de5d715dbba14433bd2751418749b376"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Debre_Libanos> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "List all the major shrines of the saints which has one of the shrines as Debre Libanos ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Debre_Libanos", "seq": "73,85", "label": "Debre Libanos"}], "predicate mapping": [], "id": "b3401936fc1a491ebfa11cbeeda2c9b5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri } ", "question": "Who is the owner of  Chelsea F.C. ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chelsea_F.C.", "seq": "21,31", "label": "Chelsea F.C"}], "predicate mapping": [], "id": "1f6027121a154845a301780b46413756"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carolyn_Dennis> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri. <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri} ", "question": "Which associate musical artist of Carolyn Dennis is also the composer of Motorpsycho Nitemare ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carolyn_Dennis", "seq": "34,47", "label": "Carolyn Dennis"}, {"uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare", "seq": "73,92", "label": "Motorpsycho Nitemare"}], "predicate mapping": [], "id": "34f371d04a104a0d846d5cbab6231a08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arun_Chandra_Guha> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri . }", "question": "What is the political party of Arun Chandra Guha and Indira Gandhi?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arun_Chandra_Guha", "seq": "31,47", "label": "Arun Chandra Guha"}, {"uri": "http://dbpedia.org/resource/Indira_Gandhi", "seq": "53,65", "label": "Indira Gandhi"}], "predicate mapping": [], "id": "13d323edfef5499a85c7cb144d5d4793"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}", "question": "How many bacterias are there whose division is Firmicutes?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Firmicutes", "seq": "47,56", "label": "Firmicutes"}], "predicate mapping": [], "id": "f867edc1ebd04f73a619ade4c87800e0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/property/genre> ?uri} ", "question": "What genre isPyChess from, which employes Craig Van Tilbury?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "seq": "42,58", "label": "Craig Van Tilbury"}, {"uri": "http://dbpedia.org/resource/PyChess", "seq": "11,19", "label": "isPyChess"}], "predicate mapping": [], "id": "a99633a7312140699f6da5ec60b3545a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Autoconf> <http://dbpedia.org/ontology/developer> ?uri } ", "question": "List things developed by Autoconf ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Autoconf", "seq": "25,32", "label": "Autoconf"}], "predicate mapping": [], "id": "d7d6a471f045411d88c97b34e458c2c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastNetwork> <http://dbpedia.org/resource/SCOLA_(TV_service)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "In which cities are there stations of SCOLA?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/SCOLA_(TV_service)", "seq": "38,42", "label": "SCOLA"}], "predicate mapping": [], "id": "8a63017795e246a49a5be13cbb278cc2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/His_New_Job> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Charlie_Chaplin> }", "question": "Was His New Job edited by Charlie Chaplin?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/His_New_Job", "seq": "4,14", "label": "His New Job"}, {"uri": "http://dbpedia.org/resource/Charlie_Chaplin", "seq": "26,40", "label": "Charlie Chaplin"}], "predicate mapping": [], "id": "ccd7bfe91df242cba413e7b850bdff5e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Howard_Hughes_Medical_Institute>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which person belongs to the board of Howard Hughes Medical Institute?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Howard_Hughes_Medical_Institute", "seq": "37,67", "label": "Howard Hughes Medical Institute"}], "predicate mapping": [], "id": "c1a70be915f046f688328bccc9b5e78c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Texarkana,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What are some bands out to texarkana?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texarkana,_Texas", "seq": "27,35", "label": "texarkana"}], "predicate mapping": [], "id": "2adb8b5dae3e4e8ea92922a707e6341e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Petersen_House>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What famous politician died in the Petersen House?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Petersen_House", "seq": "35,48", "label": "Petersen House"}], "predicate mapping": [], "id": "61066d63cf6b4c3d9e4dfdec5c6a430c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri} ", "question": "Which cover artist of the The Adventures of Tom Sawyer also the source of inspiration of The Appple Tree ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "seq": "26,53", "label": "The Adventures of Tom Sawyer"}, {"uri": "http://dbpedia.org/resource/The_Apple_Tree", "seq": "89,103", "label": "The Appple Tree"}], "predicate mapping": [], "id": "ac76f62cf58949f59c0a4e39a351a377"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}", "question": "Which hockey team is coached by mike babcock?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mike_Babcock", "seq": "32,43", "label": "mike babcock"}], "predicate mapping": [], "id": "e03711f1cbfc4364aed4f709337e0f46"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Bryn_Mawr_Hospital> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "question": "Where was the person born who died in Bryn Mawr Hospital?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bryn_Mawr_Hospital", "seq": "38,55", "label": "Bryn Mawr Hospital"}], "predicate mapping": [], "id": "2b12d0b229e446478c13760e9b57a5ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/State_of_Mexico> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "Name the mountain whose parent peak is located in Mexico.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/State_of_Mexico", "seq": "39,55", "label": "located in Mexico"}], "predicate mapping": [], "id": "66ae293ce48e42c183df4a5acf2e684c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri } ", "question": "Where was Ne daj se, Nina first aired ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina", "seq": "10,24", "label": "Ne daj se, Nina"}], "predicate mapping": [], "id": "eea1a931ec7b42c3bbcb1273d1b870cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri . }", "question": "In which common territory did Sino French war and the Tonkin campaign take place?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sino-French_War", "seq": "30,44", "label": "Sino French war"}, {"uri": "http://dbpedia.org/resource/Tonkin_Campaign", "seq": "54,68", "label": "Tonkin campaign"}], "predicate mapping": [], "id": "0ef7dd290adb47cc9515959eaf8bd328"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Seattle_Mariners> <http://dbpedia.org/ontology/owner> ?uri} ", "question": "Which distributer of Glover is also the stockholde of Seattle Mariners ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glover_(video_game)", "seq": "21,26", "label": "Glover"}, {"uri": "http://dbpedia.org/resource/Seattle_Mariners", "seq": "54,69", "label": "Seattle Mariners"}], "predicate mapping": [], "id": "098a7f4275924007b358ee48cefc7b23"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colemanville_Covered_Bridge> <http://dbpedia.org/ontology/state> ?uri } ", "question": "In which state is Colemanville Covered Bridge located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colemanville_Covered_Bridge", "seq": "18,44", "label": "Colemanville Covered Bridge"}], "predicate mapping": [], "id": "85c76306bdca404d9198823c7f039b6e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "What are some important works of US citizens?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "36,43", "label": "citizens"}], "predicate mapping": [], "id": "c0f69ac1ab584bbaaca5272c9dd4aa74"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . }", "question": "How many characters were made by Paul Dini?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Dini", "seq": "33,41", "label": "Paul Dini"}], "predicate mapping": [], "id": "444b6f68ae4145c1a8e151fe606ade0a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)> <http://dbpedia.org/property/teamName> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ", "question": "What is the Team Name  of the Cristo Rey Jesuit High School (Chicago) and is also the nickname of the Lyons Township High School ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)", "seq": "30,58", "label": "Cristo Rey Jesuit High School"}, {"uri": "http://dbpedia.org/resource/Lyons_Township_High_School", "seq": "102,127", "label": "Lyons Township High School"}], "predicate mapping": [], "id": "7402ac71f855482d9acd335dbad8e3b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Ananda_Weerasekara> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the religion of the relatives of Ananda Weerasekara?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ananda_Weerasekara", "seq": "41,58", "label": "Ananda Weerasekara"}], "predicate mapping": [], "id": "c1d9817b260a4d0ead5c03372c35d776"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Only_the_Good_Die_Young> <http://dbpedia.org/property/fromAlbum> <http://dbpedia.org/resource/The_Stranger_(album)> }", "question": "Is the song Only the Good Die Young from The Stranger?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Only_the_Good_Die_Young", "seq": "12,34", "label": "Only the Good Die Young"}, {"uri": "http://dbpedia.org/resource/The_Stranger_(album)", "seq": "41,52", "label": "The Stranger"}], "predicate mapping": [], "id": "eb019f4872c64a79b87db465172c36a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Ham> . ?x <http://dbpedia.org/property/country> ?uri  . }", "question": "In which country's cuisine, ham is an important part?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ham", "seq": "28,30", "label": "ham"}], "predicate mapping": [], "id": "ec8b9535d59d4655b5ff3f5a185c99cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/ontology/genre> ?uri} ", "question": "What is the purpose of the Maharashtra Chess Association which is genere of PyChess?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association", "seq": "27,55", "label": "Maharashtra Chess Association"}, {"uri": "http://dbpedia.org/resource/PyChess", "seq": "76,82", "label": "PyChess"}], "predicate mapping": [], "id": "b34ea6d0eb0e4dc9878f34a21bde3842"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Morristown,_New_Jersey> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holders whose successor died in Morristown, New Jersey?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Morristown,_New_Jersey", "seq": "48,69", "label": "Morristown, New Jersey"}], "predicate mapping": [], "id": "8a79a42afec446ec8c50537ada39a7f3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Racism> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri }", "question": "What is the total number of other non-fiction subject of the books whose one of the subject is Racism?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Racism", "seq": "95,100", "label": "Racism"}], "predicate mapping": [], "id": "9c14d984d9b44eda8acb73656552d3dc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What medals have been given to people who died of lung cancer?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lung_cancer", "seq": "50,60", "label": "lung cancer"}], "predicate mapping": [], "id": "2d27c6297df54cbd99d354a61045dba8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri } ", "question": "Who operates twin Cities 400 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Twin_Cities_400", "seq": "13,27", "label": "twin Cities 400"}], "predicate mapping": [], "id": "9c2755a6ad1a44e6b2fae15bb6dda2fa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Radio_Philippines_Network> <http://dbpedia.org/property/area> ?uri } ", "question": "Name the broadcast area of  Radio Philippines Network ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Radio_Philippines_Network", "seq": "28,52", "label": "Radio Philippines Network"}], "predicate mapping": [], "id": "67e7b4cfd56449dd8e16839eb9d8325c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/AeroKlub_Wroc\u0142aw> . ?x <http://dbpedia.org/property/nationality> ?uri  . }", "question": "Which country's engineered have studied at Aero Klub in Wroclaw?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/AeroKlub_Wroc\u0142aw", "seq": "43,62", "label": "Aero Klub in Wroclaw"}], "predicate mapping": [], "id": "d2da7d56a898475493bd3e92b6d60c91"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Piotr_Gruszka> <http://dbpedia.org/property/hometown> ?uri } ", "question": "What is pitro Gruszka hometown ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Piotr_Gruszka", "seq": "8,20", "label": "pitro Gruszka"}], "predicate mapping": [], "id": "30599ffcad334bcc8b320111644de813"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "question": "Count the drinks originated in England.", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "31,37", "label": "England"}], "predicate mapping": [], "id": "665c48a565514b8d9451667f8ac5d5cb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Adams_(politician)> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/William_A._Purtell> <http://dbpedia.org/ontology/birthPlace> ?uri . }", "question": "What place did Edwin Adams die at, which gave birth to William A Purtell?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Adams_(politician)", "seq": "15,25", "label": "Edwin Adams"}, {"uri": "http://dbpedia.org/resource/William_A._Purtell", "seq": "55,71", "label": "William A Purtell"}], "predicate mapping": [], "id": "c44978af32a3433daf71471ea770529b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Angola> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Angola_Avante> }", "question": "Is Angola Avante the anthem of Angola?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Angola", "seq": "31,36", "label": "Angola"}, {"uri": "http://dbpedia.org/resource/Angola_Avante", "seq": "3,15", "label": "Angola Avante"}], "predicate mapping": [], "id": "96b3c05711324ad7b27f67b505eb0ef3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri } ", "question": "What sport activities are available at Polytechnic University of the Philippines Bataan?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan", "seq": "39,86", "label": "Polytechnic University of the Philippines Bataan"}], "predicate mapping": [], "id": "7b4b7b0484e344288b493a941b5ccf38"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/training> <http://dbpedia.org/resource/National_Film_School_in_\u0141\u00f3d\u017a> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "Trainees at the national film school of Lodz have received what awards?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Film_School_in_\u0141\u00f3d\u017a", "seq": "16,43", "label": "national film school of Lodz"}], "predicate mapping": [], "id": "1074b9904318467e873e1d05472c6ace"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> <http://dbpedia.org/resource/New_England> }", "question": "Is the Providence Chapel, Charlwood made in New English style of architecture?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood", "seq": "7,34", "label": "Providence Chapel, Charlwood"}, {"uri": "http://dbpedia.org/resource/New_England", "seq": "44,54", "label": "New English"}], "predicate mapping": [], "id": "c53debb465374190985a381113d5e2e1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri} ", "question": "Which tema did Dough Acomb played for which is also the drafty team of Dale Mitchell ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)", "seq": "71,83", "label": "Dale Mitchell"}, {"uri": "http://dbpedia.org/resource/Doug_Acomb", "seq": "15,25", "label": "Dough Acomb"}], "predicate mapping": [], "id": "a0e3214b00d7484d9630cf4983167626"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> } ", "question": "What is the river whose origin is North-Western Province, Zambia?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "34,63", "label": "North-Western Province, Zambia"}], "predicate mapping": [], "id": "0ecf1c79d31641a3b107442ce8b8399b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Tenzing_Norgay> }", "question": "Is Tenzing Norgay  the first person to scale Mt. Everest?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Everest", "seq": "45,55", "label": "Mt. Everest"}, {"uri": "http://dbpedia.org/resource/Tenzing_Norgay", "seq": "3,16", "label": "Tenzing Norgay"}], "predicate mapping": [], "id": "3271ac84219e4f5995da87af671eaab7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri . }", "question": "Which awards have been given to both Ingmar Bergman and Charles LeMaire?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ingmar_Bergman", "seq": "37,50", "label": "Ingmar Bergman"}, {"uri": "http://dbpedia.org/resource/Charles_LeMaire", "seq": "56,70", "label": "Charles LeMaire"}], "predicate mapping": [], "id": "2697998cbbd64b4aa7973251dcdd3b6d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_K._Kelly> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Umatilla_language> <http://dbpedia.org/property/region> ?uri} ", "question": "What is the state of Umatilla language which is also the state of James K. Kelly ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_K._Kelly", "seq": "66,79", "label": "James K. Kelly"}, {"uri": "http://dbpedia.org/resource/Umatilla_language", "seq": "21,37", "label": "Umatilla language"}], "predicate mapping": [], "id": "5d6c7cfe9fca43d7bf22d03f9f9d205e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In which country can I find the State Academic Opera and Ballet Theater and Baku Puppet Theatre?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater", "seq": "28,70", "label": "the State Academic Opera and Ballet Theater"}, {"uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre", "seq": "76,94", "label": "Baku Puppet Theatre"}], "predicate mapping": [], "id": "7cd083a1baa944fb93b2df81ca11207c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Q-Tip_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri} ", "question": "What band was Afrika Baby Bam a part of, and often performed with Q Tip?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Afrika_Baby_Bam", "seq": "14,28", "label": "Afrika Baby Bam"}, {"uri": "http://dbpedia.org/resource/Q-Tip_(musician)", "seq": "66,70", "label": "Q Tip"}], "predicate mapping": [], "id": "e4204a1a2f2040a6aadcc27f9ff9c8a0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri } ", "question": "List the governers of Jimmie Lou Fisher?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher", "seq": "22,38", "label": "Jimmie Lou Fisher"}], "predicate mapping": [], "id": "842c6e8c6a8b49ba99364b98105af678"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri  . }", "question": "Count the water bodies that flow into the North Sea?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Sea", "seq": "42,50", "label": "North Sea"}], "predicate mapping": [], "id": "daf410687a35451bbcf9909871db61f3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Where has GARAGE recorded its singles?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Garbage_(band)", "seq": "10,15", "label": "GARAGE"}], "predicate mapping": [], "id": "7dd6d733dada4602b5f9249a4418c0ce"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google.by> <http://dbpedia.org/ontology/author> ?uri} ", "question": "Which employer of Manu Cornet has alsoe written Google.by ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manu_Cornet", "seq": "18,28", "label": "Manu Cornet"}, {"uri": "http://dbpedia.org/resource/Google.by", "seq": "48,56", "label": "Google.by"}], "predicate mapping": [], "id": "0d8127d7d9f94ef6ad941ee30b14e54c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose theme music is by Primus?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Primus_(band)", "seq": "52,57", "label": "Primus"}], "predicate mapping": [], "id": "1c9cc2c14b38405a9af09ae095be1c88"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "Which field's journals are edited by Paul Morphy?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Morphy", "seq": "37,47", "label": "Paul Morphy"}], "predicate mapping": [], "id": "a44e98fa4c1e4f79b3c341844a6db478"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Croatia> }", "question": "Was Ne Daj Se, Nina first aired in Croatia?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina", "seq": "4,18", "label": "Ne Daj Se, Nina"}, {"uri": "http://dbpedia.org/resource/Croatia", "seq": "35,41", "label": "Croatia"}], "predicate mapping": [], "id": "f3ac616f8c0643cf88335eb3083c700d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ", "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "seq": "19,46", "label": "PATTS College of Aeronautics"}, {"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "73,84", "label": "Jon Speelman"}], "predicate mapping": [], "id": "d945ca666231404ea5dbf05646dcc45d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Peruvian_Army> <http://dbpedia.org/ontology/notableCommander> ?x . ?x <http://dbpedia.org/ontology/militaryRank> ?uri  . }", "question": "What is the military rank of the important commander of Peruvian Army?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peruvian_Army", "seq": "56,68", "label": "Peruvian Army"}], "predicate mapping": [], "id": "e0fcf7ea42184328aedd3b110006c43c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Canidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "What mammals fall into the biological family Canidae?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canidae", "seq": "45,51", "label": "Canidae"}], "predicate mapping": [], "id": "2e8e7385936a4f1ab5740f608898155f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth> <http://dbpedia.org/ontology/writer> ?uri } ", "question": "Name the writer of South Park: The Stick of Truth ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth", "seq": "19,48", "label": "South Park: The Stick of Truth"}], "predicate mapping": [], "id": "984b82270182472b9d8f250fe7d3aafc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri } ", "question": "Who is the authority of Maine School of Science and Mathematics ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics", "seq": "24,62", "label": "Maine School of Science and Mathematics"}], "predicate mapping": [], "id": "57ab787a271f4c28b2a0dca69d5e9068"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> } ", "question": "Give me the count of newspaper whose language is Sweedish and headquartered at stockholm ?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "seq": "31,44", "label": "whose language"}, {"uri": "http://dbpedia.org/resource/Stockholm", "seq": "79,87", "label": "stockholm"}], "predicate mapping": [], "id": "01086492a07e4c6eb96f182023d92f9f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . }", "question": "In how many places are the companies founded in Canada operating?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "seq": "48,53", "label": "Canada"}], "predicate mapping": [], "id": "b7d04c385e304556962dfa6f26906db4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name a person whose sucessor was Adrian A. basora and was educated at Harvard-Westlake School?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "70,92", "label": "Harvard-Westlake School"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "33,48", "label": "Adrian A. basora"}], "predicate mapping": [], "id": "b049e9b6c3d84f8db89c6dad58c1b742"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/property/title> ?uri  . }", "question": "How many titles have been won by the beauty queens which had brown hair?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brown_hair", "seq": "61,70", "label": "brown hair"}], "predicate mapping": [], "id": "0e64b5f73d5946c4b4e32140b22caf00"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/A_Goon's_Deed_in_a_Weary_World> . ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/CBS> . }", "question": "Who worked at  A Goon's Deed in a Weary World and CBS?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Goon's_Deed_in_a_Weary_World", "seq": "15,44", "label": "A Goon's Deed in a Weary World"}, {"uri": "http://dbpedia.org/resource/CBS", "seq": "50,52", "label": "CBS"}], "predicate mapping": [], "id": "e8e40d229e4d47308482febc1c021b8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "How many things are manufactured by the company whose subsidiary is Sony Corporation shareholders and subsidiaries?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries", "seq": "68,113", "label": "Sony Corporation shareholders and subsidiaries"}], "predicate mapping": [], "id": "2fb9c1e8780b4dd4a0c7734363590ed6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri . }", "question": "Ford Air Transport Service and Falcon cobra are both owned by which company?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service", "seq": "0,25", "label": "Ford Air Transport Service"}, {"uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra", "seq": "27,42", "label": "and Falcon cobra"}], "predicate mapping": [], "id": "a2f27d8c0508441cafed36479e7362a6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "seq": "28,42", "label": "Stanley Kubrick"}, {"uri": "http://dbpedia.org/resource/Anthony_Harvey", "seq": "58,71", "label": "Anthony Harvey"}], "predicate mapping": [], "id": "e6e8ea74524445e38326aadc3d4a8c33"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Which continents can be reached by flight companies available on Gatwick Airport?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gatwick_Airport", "seq": "65,79", "label": "Gatwick Airport"}], "predicate mapping": [], "id": "1330392af821465988520c7e62465234"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}", "question": "Who trained the wrestlers who are billed in Wisconsin?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wisconsin", "seq": "44,52", "label": "Wisconsin"}], "predicate mapping": [], "id": "bf425a8b2f6146f3b9e4bbbf61dfb270"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Magic_Trackpad> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who developed the software which is used as operating system of Magic Trackpad ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Magic_Trackpad", "seq": "64,77", "label": "Magic Trackpad"}], "predicate mapping": [], "id": "c5f2208531a94e90b3704d2666657f5c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ", "question": "Who is the head coach of 2009-10 Middlesbrough F.C. season ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season", "seq": "25,57", "label": "2009-10 Middlesbrough F.C. season"}], "predicate mapping": [], "id": "71f8fa4b19a547668255c9310216a8f3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Which builder has made concrete bridges?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Concrete", "seq": "23,30", "label": "concrete"}], "predicate mapping": [], "id": "edc54c2ea5cb4ecca8de2091fad5fbf7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Umkhonto_we_Sizwe> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Nelson_Mandela> }", "question": "Did Umkhonto we Sizwe had Nelson Mandela as a commander?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Umkhonto_we_Sizwe", "seq": "4,20", "label": "Umkhonto we Sizwe"}, {"uri": "http://dbpedia.org/resource/Nelson_Mandela", "seq": "26,39", "label": "Nelson Mandela"}], "predicate mapping": [], "id": "9f26789aeb6146feaff2e24761ec083a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/Steven_Clark_Cunningham> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Whichlocation city of the Denver Broncos is the palce of birth of Steven Clark Cunningham ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denver_Broncos", "seq": "26,39", "label": "Denver Broncos"}, {"uri": "http://dbpedia.org/resource/Steven_Clark_Cunningham", "seq": "66,88", "label": "Steven Clark Cunningham"}], "predicate mapping": [], "id": "5dbda61a444645df948f9da412547003"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/address> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}", "question": "How many venues are located in the US?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "9,18", "label": "venues are"}], "predicate mapping": [], "id": "11bda0b4ba6e488ca7e8255d984a7792"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warren_G._Harding> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Charles_Evans_Hughes> <http://dbpedia.org/ontology/president> ?uri} ", "question": "Which vice president of Warren G. Harsing is also the president of Evans Hughes ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warren_G._Harding", "seq": "24,40", "label": "Warren G. Harsing"}, {"uri": "http://dbpedia.org/resource/Charles_Evans_Hughes", "seq": "67,78", "label": "Evans Hughes"}], "predicate mapping": [], "id": "d8dbbad92b504881bd9c0c8a1932d15e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> } ", "question": "in which movies have momoki kochi acted", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Momoko_K\u014dchi", "seq": "21,32", "label": "momoki kochi"}], "predicate mapping": [], "id": "0fd9b98ee3744db6b234eecdfcbe9e70"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Southeast_Asia> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "In which countries can i find broadcasted TV in southeast asia?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Southeast_Asia", "seq": "48,61", "label": "southeast asia"}], "predicate mapping": [], "id": "954385119c2440dc9e9ee5c3b6adab5b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Rodney_Eade> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "Where can i find teams whose coach has been Rodney Eade.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rodney_Eade", "seq": "44,54", "label": "Rodney Eade"}], "predicate mapping": [], "id": "f6837bbaf0614048ab98cba4cad9d380"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Count all those whose youthclub performed at the 14-15 La Liga?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_La_Liga", "seq": "49,61", "label": "14-15 La Liga"}], "predicate mapping": [], "id": "44babf14274042b6a9d97382855b1f6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose Governor is Charles Willing Byrd and has resting place as North Bend, Ohio?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "seq": "41,60", "label": "Charles Willing Byrd"}, {"uri": "http://dbpedia.org/resource/North_Bend,_Ohio", "seq": "87,102", "label": "North Bend, Ohio"}], "predicate mapping": [], "id": "b49493ba48cb4704923543e074afb5c6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Juli_Ashton> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "What city is it where Wayne Allard governs and Juli Ashton was born?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wayne_Allard", "seq": "22,33", "label": "Wayne Allard"}, {"uri": "http://dbpedia.org/resource/Juli_Ashton", "seq": "47,57", "label": "Juli Ashton"}], "predicate mapping": [], "id": "766f8af12e0948349fb3a59be11f74e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . }", "question": "Which neighboring municipalities of Cologny has a mayor named Ester Alder ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "seq": "36,42", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Esther_Alder", "seq": "62,72", "label": "Ester Alder"}], "predicate mapping": [], "id": "9617ad4477da40298f1e0e562959fcc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Rostock and Oulu is the shore cities on which sea ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostock", "seq": "0,6", "label": "Rostock"}, {"uri": "http://dbpedia.org/resource/Oulu", "seq": "12,15", "label": "Oulu"}], "predicate mapping": [], "id": "4d7ac749c1ed4d359c857449cd3bfcd7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Agal\u00e9ga> . ?x <http://dbpedia.org/property/broadcastArea> ?uri }", "question": "Count the number of broadcast area of the TV stations which serves in Agalga ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Agal\u00e9ga", "seq": "70,75", "label": "Agalga"}], "predicate mapping": [], "id": "925fba8fe99f4fd68594b4e4ca58f5ba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia>  . }", "question": "Name the kingdom with currency Solidus (coin) and administrative headquarters in Nicomedia?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Solidus_(coin)", "seq": "31,37", "label": "Solidus"}, {"uri": "http://dbpedia.org/resource/Nicomedia", "seq": "81,89", "label": "Nicomedia"}], "predicate mapping": [], "id": "f32a9202283b4b51a57f25e1e59661f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Guggenheim_Partners>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "What are the baseball teams who belongs to  Guggenheim Partners?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guggenheim_Partners", "seq": "44,62", "label": "Guggenheim Partners"}], "predicate mapping": [], "id": "d80be4c2f6b7412d9bf97bfb7b793ae6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lee_Si-Chen> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Doug_Walgren> <http://dbpedia.org/ontology/almaMater> ?uri . }", "question": "Where did Doug Walgren and Lee Si Chen study?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lee_Si-Chen", "seq": "27,37", "label": "Lee Si Chen"}, {"uri": "http://dbpedia.org/resource/Doug_Walgren", "seq": "10,21", "label": "Doug Walgren"}], "predicate mapping": [], "id": "7bc28b110ed544cc8e98bdcf752d9c47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/George_Whitefield_Davis> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Where are the politicians buried who succeeded George Whitefield Davis?", "sparql_id": 605, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Whitefield_Davis", "seq": "47,69", "label": "George Whitefield Davis"}], "predicate mapping": [], "id": "fc9e2cac170a44a2abdca158f66cd5af"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose network's stockholder is Warner Bros. Television?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros._Television", "seq": "61,83", "label": "Warner Bros. Television"}], "predicate mapping": [], "id": "6d88e417c33d49cd85eaa5b9dc7b1174"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tofa\u015f_\u015eahin> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Ethiopia> }", "question": "Is the assembly of tofa ahin ethopia?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tofa\u015f_\u015eahin", "seq": "19,27", "label": "tofa ahin"}, {"uri": "http://dbpedia.org/resource/Ethiopia", "seq": "29,35", "label": "ethopia"}], "predicate mapping": [], "id": "87876aa79cba44138cff493d5e2315c7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What are some music artists whose bands have signed up with Entertainment One Music?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Entertainment_One_Music", "seq": "60,82", "label": "Entertainment One Music"}], "predicate mapping": [], "id": "4224e0b4c1b448f3b24c6ed62d2b7575"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ctenochaetus_binotatus> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Actinopterygii> }", "question": "Do Ctenochaetus Binotatus lie in the cActinopterygii class?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ctenochaetus_binotatus", "seq": "3,24", "label": "Ctenochaetus Binotatus"}, {"uri": "http://dbpedia.org/resource/Actinopterygii", "seq": "37,51", "label": "cActinopterygii"}], "predicate mapping": [], "id": "f17ff46a28de491a93859a94e3046480"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "How many food items have an ingredient from the Sapindales family?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sapindales", "seq": "48,57", "label": "Sapindales"}], "predicate mapping": [], "id": "ec821782125a4c71bd3630880a66897e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies have had a cinematographer who died in US?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "47,56", "label": "died in US"}], "predicate mapping": [], "id": "77b265d0903641b2b810680c1bd2bb67"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Qu\u00e1n_Th\u00e1nh_Temple> <http://dbpedia.org/property/buildingType> ?uri } ", "question": "Which type of  building is Qun Thnh Temple ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Qu\u00e1n_Th\u00e1nh_Temple", "seq": "27,41", "label": "Qun Thnh Temple"}], "predicate mapping": [], "id": "287db86b21b143a9a561c5ba6db3d528"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanley_Cavell> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/William_Shakespeare> }", "question": "Does Stanley Cavell study Shakespeare?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Cavell", "seq": "5,18", "label": "Stanley Cavell"}, {"uri": "http://dbpedia.org/resource/William_Shakespeare", "seq": "26,36", "label": "Shakespeare"}], "predicate mapping": [], "id": "bf777652c816485f8385ae21e670622b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri. <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which owner of Chelsea F.C also owns Evraz ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Evraz", "seq": "37,41", "label": "Evraz"}, {"uri": "http://dbpedia.org/resource/Chelsea_F.C.", "seq": "15,25", "label": "Chelsea F.C"}], "predicate mapping": [], "id": "9b45f5f43c2340bf8e4670188fdf164c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri} ", "question": "Who is the common distributer of Bombay Sapphire and Rev ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "seq": "33,47", "label": "Bombay Sapphire"}, {"uri": "http://dbpedia.org/resource/Rev_(drink)", "seq": "53,55", "label": "Rev"}], "predicate mapping": [], "id": "d369a9c08c2447f2b26af647610308bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amit_Saigal> <http://dbpedia.org/ontology/bodyDiscovered> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Name the largest city of the country where the body of Amit Saigal was discovered?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amit_Saigal", "seq": "55,65", "label": "Amit Saigal"}], "predicate mapping": [], "id": "635e0b878e574ae6af542fd1e1a9cdac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Bartlett_Giamatti> <http://dbpedia.org/ontology/hometown> ?uri } ", "question": "Where is the hometown of A Bartlett Giamatti?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/A._Bartlett_Giamatti", "seq": "25,43", "label": "A Bartlett Giamatti"}], "predicate mapping": [], "id": "3f8ac10edaaa4c4cbbde422c79de3c6d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tekle_Haymanot> <http://dbpedia.org/ontology/majorShrine> ?uri. <http://dbpedia.org/resource/Haile_Selassie_Gugsa> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which major shrine of Tekle haymanot is the palce of death of Haile Selassie Gugsa ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tekle_Haymanot", "seq": "22,35", "label": "Tekle haymanot"}, {"uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa", "seq": "62,81", "label": "Haile Selassie Gugsa"}], "predicate mapping": [], "id": "101dfea643e24d1483797bfb175000f1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri } ", "question": "List the ethnicity of Riley Reid?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Riley_Reid", "seq": "22,31", "label": "Riley Reid"}], "predicate mapping": [], "id": "e63144a282cb442497406a9b189093f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Sanskrit> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "List the fields of the scientists with Sanskrit as one of the interest ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanskrit", "seq": "39,46", "label": "Sanskrit"}], "predicate mapping": [], "id": "09a6fbecddd347ed8eb1e9af79aa1a07"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ", "question": "Who is the headcoach of 2008-09 Marquette Golden Eagles men's basketball team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team", "seq": "24,76", "label": "2008-09 Marquette Golden Eagles men's basketball team"}], "predicate mapping": [], "id": "0223d728dead415fa225cd560eb8ad33"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Yang_Yilin> . ?x <http://dbpedia.org/ontology/silverMedalist> ?uri  . }", "question": "Who won the silver medal when the bronze was won by Yang Yilin?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yang_Yilin", "seq": "52,61", "label": "Yang Yilin"}], "predicate mapping": [], "id": "dbd52395559b4c3cbf5446916a925b89"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "question": "List the work  edited by  Mark Stevens and directed by Joel Schumacher?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)", "seq": "26,37", "label": "Mark Stevens"}, {"uri": "http://dbpedia.org/resource/Joel_Schumacher", "seq": "55,69", "label": "Joel Schumacher"}], "predicate mapping": [], "id": "6f642ee5a00048ecaeff1c0e0412e4b6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Augustus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder with associate as Marcus Calpurnius Bibulus and has a kid named Augustus?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus", "seq": "41,65", "label": "Marcus Calpurnius Bibulus"}, {"uri": "http://dbpedia.org/resource/Augustus", "seq": "87,94", "label": "Augustus"}], "predicate mapping": [], "id": "f728bbb501354155898026a4cef7730c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Luther:_The_Calling> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "List the popular works of the author of Luther: The Calling ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luther:_The_Calling", "seq": "40,58", "label": "Luther: The Calling"}], "predicate mapping": [], "id": "41dbdb533af748c4968df7b35a1cb8ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_Randolph_of_Roanoke>  . }", "question": "Who are the predecessors of John Randolph of Roanoke?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Randolph_of_Roanoke", "seq": "28,51", "label": "John Randolph of Roanoke"}], "predicate mapping": [], "id": "3f758b0a0ad24d339835902878769609"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}", "question": "In which continent do Air 2000 and Novair International airways operate?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_2000", "seq": "22,29", "label": "Air 2000"}, {"uri": "http://dbpedia.org/resource/Novair_International_Airways", "seq": "35,62", "label": "Novair International airways"}], "predicate mapping": [], "id": "8eaed436923e4051b575c7c6b88b9797"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fox> <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> }", "question": "Is fox belong to the phylum of Chordate?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox", "seq": "3,5", "label": "fox"}, {"uri": "http://dbpedia.org/resource/Chordate", "seq": "31,38", "label": "Chordate"}], "predicate mapping": [], "id": "d4b5df324bec450b833f8f4c1145992c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "Who were the first drivers in Grand Prixes where the first team was Scuderia Ferrari?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scuderia_Ferrari", "seq": "68,83", "label": "Scuderia Ferrari"}], "predicate mapping": [], "id": "1ef735b540d24d54a41b5f259cd99fbd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Khartoum> }", "question": "Does Abdelhameed Amarri currently play for Khartoum?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abdelhameed_Amarri", "seq": "5,22", "label": "Abdelhameed Amarri"}, {"uri": "http://dbpedia.org/resource/Khartoum", "seq": "43,50", "label": "Khartoum"}], "predicate mapping": [], "id": "5fe5d9294f7a466290ef022f51f60336"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}", "question": "List the alma mater of the congressmen who attended Nashville, Tennessee ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nashville,_Tennessee", "seq": "52,71", "label": "Nashville, Tennessee"}], "predicate mapping": [], "id": "b9fce2f9e56242169dae47d4d9dbf91a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are the name of the casualties affected by shooting rampage of Eric Harris and Dylan Klebold?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold", "seq": "68,96", "label": "Eric Harris and Dylan Klebold"}], "predicate mapping": [], "id": "9b7b817753ae40aeae2859d4023cc052"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List TV shows with producer as Erik Bork and company is DreamWorks Television ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/DreamWorks_Television", "seq": "56,76", "label": "DreamWorks Television"}, {"uri": "http://dbpedia.org/resource/Erik_Bork", "seq": "31,39", "label": "Erik Bork"}], "predicate mapping": [], "id": "af7cd0b6cb6a40969a0ea593539894cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Creature_Comforts> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Name the awards that have been given to the writer made famous for Creature Comforts?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Creature_Comforts", "seq": "67,83", "label": "Creature Comforts"}], "predicate mapping": [], "id": "5ffd4aac7b004bd480d28d364aeb2aa4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Scott_Haran> <http://dbpedia.org/ontology/knownFor> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }", "question": "Who produces the tv series which made Scott Haran famous?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Scott_Haran", "seq": "38,48", "label": "Scott Haran"}], "predicate mapping": [], "id": "6e94b499964c49839c36fe479f49b5ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "List all the faiths that British Columbian politicians follow?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Columbia", "seq": "25,41", "label": "British Columbian"}], "predicate mapping": [], "id": "c0c8c5735c8c4188978cb1911173a8df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Habib_Boromand_Dashghapu> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Which sports are played in the alma mater of Habib Boromand Dashghapu?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Habib_Boromand_Dashghapu", "seq": "45,68", "label": "Habib Boromand Dashghapu"}], "predicate mapping": [], "id": "98482e0e16ea482f9030d6b2d9cb000f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Turner_Broadcasting_System> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the television shows whose network's owning company is Turner Broadcasting System?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Turner_Broadcasting_System", "seq": "60,85", "label": "Turner Broadcasting System"}], "predicate mapping": [], "id": "4aaaa78384af465b8af13b2217f0ef66"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . }", "question": "Give me a count on associates of Johnny Cash?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Johnny_Cash", "seq": "33,43", "label": "Johnny Cash"}], "predicate mapping": [], "id": "8a89ec10f625479ab78c031ce60bdb2e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Seni_Pramoj> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "What country provides a citizenship too Newin Chidchob and Seni Pramoj?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newin_Chidchob", "seq": "40,53", "label": "Newin Chidchob"}, {"uri": "http://dbpedia.org/resource/Seni_Pramoj", "seq": "59,69", "label": "Seni Pramoj"}], "predicate mapping": [], "id": "0edab4967312457b82a5c2fc9c82b662"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "question": "What are some devices made by Taiwanese companies?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "seq": "30,38", "label": "Taiwanese"}], "predicate mapping": [], "id": "6ba75b7096eb497b85706c1872a9dbdd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Salthill> <http://dbpedia.org/ontology/type> ?uri } ", "question": "What is a salthill?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Salthill", "seq": "10,17", "label": "salthill"}], "predicate mapping": [], "id": "fb24fef4bec1494480df389bd6d410c1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri } ", "question": "Who is the musician of Before I let you Go ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Before_I_Let_You_Go", "seq": "23,41", "label": "Before I let you Go"}], "predicate mapping": [], "id": "146cb6a075864ab787660a7fa34af21a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri. <http://dbpedia.org/resource/Pulau_Ujong> <http://dbpedia.org/ontology/capital> ?uri} ", "question": "Which admin center of pulau Ujong is also the largest city of Pulau Ubin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pulau_Ubin", "seq": "62,71", "label": "Pulau Ubin"}, {"uri": "http://dbpedia.org/resource/Pulau_Ujong", "seq": "22,32", "label": "pulau Ujong"}], "predicate mapping": [], "id": "26fa2c8e027f4a21a5d176e264f493db"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Port_of_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri } ", "question": "What is the Ceremonial County of Port of Tilbury ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Port_of_Tilbury", "seq": "33,47", "label": "Port of Tilbury"}], "predicate mapping": [], "id": "2bb0d338072d46e2b06b40c9f3b8f84d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)> <http://dbpedia.org/property/currentTeam> ?uri } ", "question": "What is the current team of John McGuinness (motorcycle racer) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)", "seq": "28,42", "label": "John McGuinness"}], "predicate mapping": [], "id": "9a71167ed51b4c7da57c4724f82effdf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri . }", "question": "What is the ideology of the Union of Cambodian Democrats which is also the ideology of Palang Dharma Party ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats", "seq": "28,55", "label": "Union of Cambodian Democrats"}, {"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "seq": "87,105", "label": "Palang Dharma Party"}], "predicate mapping": [], "id": "1231ff04697c489994c5fa0f61486d2e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Everything_Will_Be_OK> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What is the honorary title of the narrator of Everything Will Be OK?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Everything_Will_Be_OK", "seq": "46,66", "label": "Everything Will Be OK"}], "predicate mapping": [], "id": "72496fef2635425da6c20915c894072f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Connecticut_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/White_River_(Vermont)> }", "question": "Does the white river flow into the connecticut river{u'_id': u'97e02dcf44aa43c1b7cc7a7c155b118f',", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Connecticut_River", "seq": "35,53", "label": "connecticut river{u"}, {"uri": "http://dbpedia.org/resource/White_River_(Vermont)", "seq": "9,19", "label": "white river"}], "predicate mapping": [], "id": "9aa99d04670a49e185afbcd4d2a451f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne>  . }", "question": "Who is the famous relative of Kelly Osbourne?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelly_Osbourne", "seq": "30,43", "label": "Kelly Osbourne"}], "predicate mapping": [], "id": "d8afce1fd4aa4a2580832293b1d0d318"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Luxury_vehicle> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What are some cars similar to luxury cars?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luxury_vehicle", "seq": "30,40", "label": "luxury cars"}], "predicate mapping": [], "id": "cdd77de1c8c7471fa087116e8d6f3f19"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri }", "question": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "96,112", "label": "Mediterranean Sea"}], "predicate mapping": [], "id": "c025e34523ad4f878edcceb8291c9d56"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Radio_Sports_Network> <http://dbpedia.org/property/affiliations> ?uri } ", "question": "What is the regional radio sports network associated with?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Regional_Radio_Sports_Network", "seq": "12,40", "label": "regional radio sports network"}], "predicate mapping": [], "id": "d8830ee89d0547a7ba604e685fe17819"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Shawn_Fanning>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "List the software developed by Shawn Fanning ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shawn_Fanning", "seq": "31,43", "label": "Shawn Fanning"}], "predicate mapping": [], "id": "0ed54b0efa694946800d7e772920ffce"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Linguistics> . ?x <http://dbpedia.org/ontology/knownFor> ?uri }", "question": "Count the number of things people who know linguistics are known for ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linguistics", "seq": "43,53", "label": "linguistics"}], "predicate mapping": [], "id": "1b0d7ff1c88044248561bde3b1c452da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/J._Bennett_Johnston> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }", "question": "In which state does the ambassador who is in related with J Bennett Johnston live?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Bennett_Johnston", "seq": "58,75", "label": "J Bennett Johnston"}], "predicate mapping": [], "id": "c9d240e63ba642689eb8e646e435a6e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/property/employer> ?uri } ", "question": "Who is the employer of Michael M. Sears ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_M._Sears", "seq": "23,38", "label": "Michael M. Sears"}], "predicate mapping": [], "id": "5347e3d7e51348bb814413a5707b97f3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> <http://dbpedia.org/resource/Mumbai> }", "question": "Does mumbai manage the railway line going to the daund railway junction?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daund_Junction_railway_station", "seq": "49,70", "label": "daund railway junction"}, {"uri": "http://dbpedia.org/resource/Mumbai", "seq": "5,10", "label": "mumbai"}], "predicate mapping": [], "id": "9f9eec1d2b8b4a918048a556e1a1bda5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Whihc place of birth of the Union State is also the largest city of Union Staete ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_State", "seq": "28,38", "label": "Union State"}, {"uri": "http://dbpedia.org/resource/Nina_Vislova", "seq": "68,79", "label": "Union Staete"}], "predicate mapping": [], "id": "7f5ac3d1ae004898ac4a4452eb9f8633"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}", "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation", "seq": "59,100", "label": "Massachusetts Department of Transportation"}], "predicate mapping": [], "id": "fbd32172a29a4fa99c58fb5f6b536bff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Port_Klang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "question": "Through which counties does the road go which starts at the Port Klang?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Port_Klang", "seq": "60,69", "label": "Port Klang"}], "predicate mapping": [], "id": "921cd73c37684f80bc35975c857bc622"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Under which president did some politicians live in Kensington?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kensington,_Maryland", "seq": "51,60", "label": "Kensington"}], "predicate mapping": [], "id": "f3545d9f2444478d8c70f13b4ead6094"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chicken_Little_(1943_film)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards were given to the producer of Chicken Little?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicken_Little_(1943_film)", "seq": "42,55", "label": "Chicken Little"}], "predicate mapping": [], "id": "d966774a4f744b009b17755dbd061e11"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Justine_Omojong> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "What is the home stadium of the club coached by Justine Omojong?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Justine_Omojong", "seq": "48,62", "label": "Justine Omojong"}], "predicate mapping": [], "id": "87c34662138f4e4b911440985824435c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "To what companies is Dennis Muilenburg important?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "21,37", "label": "Dennis Muilenburg"}], "predicate mapping": [], "id": "1220a8e5611d4f3da78af05e41f06c15"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/North_Bend,_Ohio> . ?uri <http://dbpedia.org/ontology/child> ?x  . }", "question": "Whose children died in North Bend, Ohio?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Bend,_Ohio", "seq": "23,38", "label": "North Bend, Ohio"}], "predicate mapping": [], "id": "db0ceedbcf0e4e1ca708191b92dc2b59"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri } ", "question": "What is the governing body of Burro Flats Painted Cave ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave", "seq": "30,53", "label": "Burro Flats Painted Cave"}], "predicate mapping": [], "id": "732a9efd20d74796b8805987d0bcf033"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wringer_(novel)> . }", "question": "whose is famous works are Maniac Magee and Wringer ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maniac_Magee", "seq": "26,37", "label": "Maniac Magee"}, {"uri": "http://dbpedia.org/resource/Wringer_(novel)", "seq": "43,49", "label": "Wringer"}], "predicate mapping": [], "id": "2b1b78d738c7454dbc224bdc6ccf3ff2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Air_Force_Academy> <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> }", "question": "Is Lieutenant general (United States) the superintendent of United States Air Force Academy?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy", "seq": "60,90", "label": "United States Air Force Academy"}, {"uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)", "seq": "3,20", "label": "Lieutenant general"}], "predicate mapping": [], "id": "b9c19bf4a7b2452184d20d0130556a0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Minneapolis> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "Who operates the railway line which begins in Minneapolis?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Minneapolis", "seq": "46,56", "label": "Minneapolis"}], "predicate mapping": [], "id": "35a6ca70f4ec420db9bc0726e28369a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Seed_Eight> <http://dbpedia.org/property/label> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Website>}", "question": "Who is the owner of the website which has the label Seed Eight ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seed_Eight", "seq": "52,61", "label": "Seed Eight"}], "predicate mapping": [], "id": "5f0366cd125f4976a4b7362c81b098cd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/property/religion> ?uri} ", "question": "What is the venerated in of the Abraham and religion of the Saima Chowdhury", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abraham", "seq": "32,38", "label": "Abraham"}, {"uri": "http://dbpedia.org/resource/Saima_Chowdhury", "seq": "60,74", "label": "Saima Chowdhury"}], "predicate mapping": [], "id": "2c0f7eee1b634f1895cbd246bd8c6e3c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri . }", "question": "To which label did The Producers and I pray on Christmas sign up?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Producers_(2005_film)", "seq": "19,31", "label": "The Producers"}, {"uri": "http://dbpedia.org/resource/I_Pray_on_Christmas", "seq": "37,55", "label": "I pray on Christmas"}], "predicate mapping": [], "id": "6ea80116b84f49ef9ac58da5151f1fea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }", "question": "Wo which countries have the members of Ukrainian ministry of internal affairs swore their oath?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)", "seq": "49,76", "label": "ministry of internal affairs"}], "predicate mapping": [], "id": "78406ab0c12f410ea4fe01eb52998c48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Henri_Putz> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }", "question": "Where did the conflict take place in which Henri Putz fought?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri_Putz", "seq": "43,52", "label": "Henri Putz"}], "predicate mapping": [], "id": "95206ae40dfc4899ae52dc8c2629db84"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ", "question": "Which producer of  the Eristoff is also the  distributor of  Bombay Sapphire?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eristoff", "seq": "23,30", "label": "Eristoff"}, {"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "seq": "61,75", "label": "Bombay Sapphire"}], "predicate mapping": [], "id": "dc8a5681c7d44c77b2ca46dfd4f97216"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "What is the organisation whose purposes are Environmentalism and Peace?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Environmentalism", "seq": "44,59", "label": "Environmentalism"}, {"uri": "http://dbpedia.org/resource/Peace", "seq": "65,69", "label": "Peace"}], "predicate mapping": [], "id": "08b90a2d429c4706bb5362d8b58190a7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "Which sports by Polytechnic University of the Philippines Taguig is the discipline of The Chess Monthly ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Chess_Monthly", "seq": "86,102", "label": "The Chess Monthly"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "seq": "16,63", "label": "Polytechnic University of the Philippines Taguig"}], "predicate mapping": [], "id": "bac245d8e39a47c1829470a9261b80c3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth> <http://dbpedia.org/ontology/series> ?uri } ", "question": "Name the series of Doctor Who: Evacuation Earth ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth", "seq": "19,46", "label": "Doctor Who: Evacuation Earth"}], "predicate mapping": [], "id": "93c37c563c8b4f0f9b070340f1fa1630"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ", "question": "Which company of Ford Theatre is the owning organization of F0ord Kansa City Assemply Plant ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "seq": "60,90", "label": "F0ord Kansa City Assemply Plant"}, {"uri": "http://dbpedia.org/resource/Ford_Theatre", "seq": "17,28", "label": "Ford Theatre"}], "predicate mapping": [], "id": "fa0015d04c344e6cb138c160055c7bc6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)>  . }", "question": "Name a royalty whose one of the child is Augustus  and is associated with Publius Servilius Vatia Isauricus?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Augustus", "seq": "41,48", "label": "Augustus"}, {"uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)", "seq": "74,106", "label": "Publius Servilius Vatia Isauricus"}], "predicate mapping": [], "id": "daa90042f4ff4210a603ae0931b2e92d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lyndon_Bridge> <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Truss_bridge> }", "question": "Is Lyndon bridge a kind of Truss bridge?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lyndon_Bridge", "seq": "3,15", "label": "Lyndon bridge"}, {"uri": "http://dbpedia.org/resource/Truss_bridge", "seq": "27,38", "label": "Truss bridge"}], "predicate mapping": [], "id": "ff5b48cd5c5346e19a026ec964d8fc9d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lemberger_LD20b> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }", "question": "Which country gave birth to the Lemberger LD20b and Start+Flug H101 aircrafts?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lemberger_LD20b", "seq": "32,46", "label": "Lemberger LD20b"}, {"uri": "http://dbpedia.org/resource/Start_+_Flug_H-101", "seq": "52,66", "label": "Start+Flug H101"}], "predicate mapping": [], "id": "df292d030ce14f19904cf9e50c046181"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Kemijoki> } ", "question": "What water bodies have primary inflows sa Kemijoki?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kemijoki", "seq": "42,49", "label": "Kemijoki"}], "predicate mapping": [], "id": "cc83b16990044389a146f6d649f878d8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_Parliament_Building> <http://dbpedia.org/property/locationCountry> ?uri } ", "question": "Where is Ethiopian Parliament Building located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethiopian_Parliament_Building", "seq": "9,37", "label": "Ethiopian Parliament Building"}], "predicate mapping": [], "id": "07d85a1276ff4600947c0e31a1cfbdb8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}", "question": "In which nation does the league take place where C.D. Primeiro de Agosto play?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)", "seq": "49,71", "label": "C.D. Primeiro de Agosto"}], "predicate mapping": [], "id": "dcec37f25d32481aa9f9ed53d204e888"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Colin Powell was the commander of which military conflict ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colin_Powell", "seq": "0,11", "label": "Colin Powell"}], "predicate mapping": [], "id": "83382bb589c04cbcb6617f67fc123310"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ", "question": "Name the garrison of the Western Naval Command and line of the Vadodara Junction railway station ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Western_Naval_Command", "seq": "25,45", "label": "Western Naval Command"}, {"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "seq": "63,95", "label": "Vadodara Junction railway station"}], "predicate mapping": [], "id": "3f4e1777926347a99cba52bdca19ce51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . }", "question": "Enumerate the cars related to the ones assembled in Toluca?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toluca", "seq": "52,57", "label": "Toluca"}], "predicate mapping": [], "id": "390932ca27634c5d95ed6cc8e1cc22e1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ", "question": "Which cloud platform of Google cloud connect also provides services to 21Vianet ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/21Vianet", "seq": "71,78", "label": "21Vianet"}, {"uri": "http://dbpedia.org/resource/Google_Cloud_Connect", "seq": "24,43", "label": "Google cloud connect"}], "predicate mapping": [], "id": "f05f216ef164453abedf0403b3b1eedc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nextAlbum> <http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "Who wrote the album coming right before Dead Man's Chest's OST?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)", "seq": "27,55", "label": "right before Dead Man's Chest"}], "predicate mapping": [], "id": "1151e6908881444aab1d23d7ba18118b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/South_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "List all areas served by the radio station serving South carolina ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Carolina", "seq": "51,64", "label": "South carolina"}], "predicate mapping": [], "id": "b880859b1271437abc4a9eb3d7e1e368"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Highway_Authority> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Malaysian highway authority has designed bridges over what things?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Highway_Authority", "seq": "0,26", "label": "Malaysian highway authority"}], "predicate mapping": [], "id": "54a6aa13eada429ab1b9d56d49a087ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Where can I find companies which originated in Canada?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "seq": "47,52", "label": "Canada"}], "predicate mapping": [], "id": "133cd7d5f379447cba8204eebe933035"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri} ", "question": "Which school of jack mcGregor attend which was also the training center of William Anthony ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_McGregor", "seq": "16,28", "label": "jack mcGregor"}, {"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "seq": "75,89", "label": "William Anthony"}], "predicate mapping": [], "id": "bed42761fb204d2d921d29f6c2f208f9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri} ", "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erica_Frank", "seq": "32,42", "label": "Erica Frank"}, {"uri": "http://dbpedia.org/resource/Ivan_Toplak", "seq": "60,70", "label": "Ivan Toplak"}], "predicate mapping": [], "id": "3d59ca37e4b14a8cb41c75edc17b64a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "To which party do the politicians who died in Delhi belong?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Delhi", "seq": "46,50", "label": "Delhi"}], "predicate mapping": [], "id": "2777b95873e84c3fb7296d2c71c9a917"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri} ", "question": "Which appointer of William Clark is the successor of Levi Lincoln Sr ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.", "seq": "53,67", "label": "Levi Lincoln Sr"}, {"uri": "http://dbpedia.org/resource/William_Clark", "seq": "19,31", "label": "William Clark"}], "predicate mapping": [], "id": "e3b7d06679344c72ad872f44eef2b7ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Martha's_Vineyard> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }", "question": "What is the hometown of the residents of Martha's vineyards?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martha's_Vineyard", "seq": "41,58", "label": "Martha's vineyards"}], "predicate mapping": [], "id": "a1e36ed22095495ebef02d6a2bcc945b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}", "question": "Which companies have launched a rocket from Cape Canaveral Air Force station?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station", "seq": "44,75", "label": "Cape Canaveral Air Force station"}], "predicate mapping": [], "id": "76748f8d6e754610ad1d151828b63d55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/C\u0103t\u0103lin_M\u0103ru\u021b\u0103> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "What artists are associated with the members of the Catalin Maruta?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/C\u0103t\u0103lin_M\u0103ru\u021b\u0103", "seq": "52,65", "label": "Catalin Maruta"}], "predicate mapping": [], "id": "d93f15c842c845829c54b1d588a83f82"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Carolina_Highway_280> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Arden,_North_Carolina> }", "question": "Does the north carolina highway 280 end in Arden?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Carolina_Highway_280", "seq": "9,34", "label": "north carolina highway 280"}, {"uri": "http://dbpedia.org/resource/Arden,_North_Carolina", "seq": "5,22", "label": "the north carolina"}], "predicate mapping": [], "id": "4672bed413aa4edca536b02a3e76dd48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus>  . }", "question": "How many people are buried in the Mausoleum of Augustus?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus", "seq": "34,54", "label": "Mausoleum of Augustus"}], "predicate mapping": [], "id": "f3916ff99c6d498498ec98407decac8f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}", "question": "How many soccer manager have been in the Spain nation football team?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spain_national_football_team", "seq": "41,66", "label": "Spain nation football team"}], "predicate mapping": [], "id": "7f1aa7621a7b4850b65ae46159adfa1b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}", "question": "List bacteria whose order (taxonomy) is Bacillales and domain is Bacteria?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillales", "seq": "40,49", "label": "Bacillales"}, {"uri": "http://dbpedia.org/resource/Bacteria", "seq": "65,72", "label": "Bacteria"}], "predicate mapping": [], "id": "243a759bcba94cc98226ca3477da618a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn> . ?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Redding,_Connecticut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Name the writer whose one of the notable work is Adventures of Huckleberry Finn and died in Redding, Connecticut?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn", "seq": "49,78", "label": "Adventures of Huckleberry Finn"}, {"uri": "http://dbpedia.org/resource/Redding,_Connecticut", "seq": "92,111", "label": "Redding, Connecticut"}], "predicate mapping": [], "id": "64a685047e5d4bee91966f92474abfdf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/broadcastArea> ?uri } ", "question": "Name the broadcast area of ITV (Thailand) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/ITV_(Thailand)", "seq": "27,29", "label": "ITV"}], "predicate mapping": [], "id": "e6e376c1a4f14e9abe7402a8a5f35816"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Vashi> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What sports are played in schools in Vashi?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vashi", "seq": "37,41", "label": "Vashi"}], "predicate mapping": [], "id": "ef13c41037dc4f3a91ab5ec30d53ffa0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alabama> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "Who owns the radio stations in Alabama?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alabama", "seq": "31,37", "label": "Alabama"}], "predicate mapping": [], "id": "d9a4e4e556544ea0b794d7fbab357cef"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Depp> }", "question": "Was Johnny Depp a member of Skull Gang?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Skull_Gang", "seq": "28,37", "label": "Skull Gang"}, {"uri": "http://dbpedia.org/resource/Johnny_Depp", "seq": "4,14", "label": "Johnny Depp"}], "predicate mapping": [], "id": "c766098f1479492fb8d4e687ad9ea182"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}", "question": "How many sports are played at the university whose president is Emanuel de Guzman?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emanuel_de_Guzman", "seq": "64,80", "label": "Emanuel de Guzman"}], "predicate mapping": [], "id": "083343f08ded4af6b8fabe50e2600b71"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Scientists at the University of Queensland have won which awards?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Queensland", "seq": "18,41", "label": "University of Queensland"}], "predicate mapping": [], "id": "e487c6936b554e3d8395e85c17492758"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/owner> ?uri . }", "question": "Who is the owner of  Latvian Wikipedia and Wiktionary ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Latvian_Wikipedia", "seq": "21,37", "label": "Latvian Wikipedia"}, {"uri": "http://dbpedia.org/resource/Wiktionary", "seq": "43,52", "label": "Wiktionary"}], "predicate mapping": [], "id": "80c973d818ed45dfbaaaf86dd592f053"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Philadelphia_City_Council> } ", "question": "Philadelphia City Council is the governing body of which city?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philadelphia_City_Council", "seq": "0,24", "label": "Philadelphia City Council"}], "predicate mapping": [], "id": "3c55183d437f49039e6d568fb6623c8f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose Composer is Stewart Copeland?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stewart_Copeland", "seq": "48,63", "label": "Stewart Copeland"}], "predicate mapping": [], "id": "ccfbcef8a6b643ca81124ab5f600bcdd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose opening theme is Where Everybody Knows Your Name?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "seq": "51,81", "label": "Where Everybody Knows Your Name"}], "predicate mapping": [], "id": "c2faa296b9ad4e5387981be381e83c53"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/David_Miscavige> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }", "question": "Who follow religions led by David Miscavige?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Miscavige", "seq": "28,42", "label": "David Miscavige"}], "predicate mapping": [], "id": "b3cd59226f27478faeb65afb4ba0b123"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri } ", "question": "name the Glover's distributer ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glover_(video_game)", "seq": "9,14", "label": "Glover"}], "predicate mapping": [], "id": "72cc5d9d290e4955a73f49b22c0110b3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed> <http://dbpedia.org/ontology/country> ?uri . }", "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n", "seq": "41,58", "label": "Jamie Bateman Cayn"}, {"uri": "http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed", "seq": "15,32", "label": "Hornito located in"}], "predicate mapping": [], "id": "83a8ac74414c41bdb0cbf6842d12b28f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Mediolanum> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which country had the county seats as History of Trier and Mediolanum?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/History_of_Trier", "seq": "38,53", "label": "History of Trier"}, {"uri": "http://dbpedia.org/resource/Mediolanum", "seq": "59,68", "label": "Mediolanum"}], "predicate mapping": [], "id": "0d13e24003bc48eb9d6db732d5e11931"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the Sci-fi TV shows with theme music given by Ron Grainer?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Science_fiction", "seq": "9,23", "label": "Sci-fi TV shows"}, {"uri": "http://dbpedia.org/resource/Ron_Grainer", "seq": "51,61", "label": "Ron Grainer"}], "predicate mapping": [], "id": "cd9712900aa94048b9a54b08142c25f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Cartoonito> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows belong to the network one of whose sister station is Cartoonite?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cartoonito", "seq": "68,77", "label": "Cartoonite"}], "predicate mapping": [], "id": "7581b52f96f34e7cafd94f2af924760e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/England_national_under-20_football_team> } ", "question": "who are all the people who have managed the England's under 20 soccer team?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-20_football_team", "seq": "44,73", "label": "England's under 20 soccer team"}], "predicate mapping": [], "id": "fa725591411f4ce1ae2beceed79c3adb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri } ", "question": "Moscow-Kazan high speed railway starts from which station?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway", "seq": "0,30", "label": "Moscow-Kazan high speed railway"}], "predicate mapping": [], "id": "6fea069c838141f8842dd0965d1d918c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Bend,_Oregon> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}", "question": "Where are all the protected areas near Bend, Oregon?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bend,_Oregon", "seq": "39,50", "label": "Bend, Oregon"}], "predicate mapping": [], "id": "2af11bb3bb23402891e39bffb10bc960"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> }", "question": "Does the hudson river flow into the lower manhatten?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hudson_River", "seq": "9,20", "label": "hudson river"}, {"uri": "http://dbpedia.org/resource/Lower_Manhattan", "seq": "36,50", "label": "lower manhatten"}], "predicate mapping": [], "id": "ede4d3ef0e754051afede4dcc6babe40"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "In how many places did Julian Leow Beng Kim study?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim", "seq": "23,42", "label": "Julian Leow Beng Kim"}], "predicate mapping": [], "id": "229e4197d78f417ca569f31cb727d19d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Hubert_Wiggs> <http://dbpedia.org/ontology/college> ?uri} ", "question": "What is the common university iof vanderbilt Commodores and also the college of hubert Wiggs ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vanderbilt_Commodores", "seq": "34,54", "label": "vanderbilt Commodores"}, {"uri": "http://dbpedia.org/resource/Hubert_Wiggs", "seq": "80,91", "label": "hubert Wiggs"}], "predicate mapping": [], "id": "f413c412b8084c02a0a9a82589b5c916"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Which royal people are buried in Rome?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rome", "seq": "33,36", "label": "Rome"}], "predicate mapping": [], "id": "7e85b0de27ab4b60aeca0149dd793305"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Parsons_School_of_Design> . ?uri <http://dbpedia.org/ontology/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies have been directed by almunies of Parsons School of Design?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Parsons_School_of_Design", "seq": "50,73", "label": "Parsons School of Design"}], "predicate mapping": [], "id": "a9dbfce5738c47e2bb59273f4492c7b3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Give me a count on scientist who are known for garrison is Tennessee ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennessee", "seq": "59,67", "label": "Tennessee"}], "predicate mapping": [], "id": "e53671fb7bb643e7a161cbd7560e68f6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alfred_Kleiner> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Albert_Einstein> }", "question": "Was einstein a doctoral student of Alfred Kleiner?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alfred_Kleiner", "seq": "35,48", "label": "Alfred Kleiner"}, {"uri": "http://dbpedia.org/resource/Albert_Einstein", "seq": "0,11", "label": "Was einstein"}], "predicate mapping": [], "id": "f107c093f6cd4143af7f686892a28d70"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/International_Style_(architecture)> }", "question": "Is the Mount St Peter Church made in the international architectural style?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_St._Peter_Church", "seq": "7,27", "label": "Mount St Peter Church"}, {"uri": "http://dbpedia.org/resource/International_Style_(architecture)", "seq": "41,67", "label": "international architectural"}], "predicate mapping": [], "id": "36f0f09f20ba45daacd083a3e57bd8b2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Pfyl> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ", "question": "What is the state of origin of Thomas Pfyl ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Pfyl", "seq": "31,41", "label": "Thomas Pfyl"}], "predicate mapping": [], "id": "524ba88720054e1081b4086303afd9db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies have been cinematographed by Jordan Cronenweth?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "45,61", "label": "Jordan Cronenweth"}], "predicate mapping": [], "id": "e8f04ab2f1d04379945b8d384d9b4c44"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri } ", "question": "For what is Abhijit Kunte known ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abhijit_Kunte", "seq": "12,24", "label": "Abhijit Kunte"}], "predicate mapping": [], "id": "841f3a4e3ade44b1b407f7b1382dc92a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg> <http://dbpedia.org/ontology/language> ?uri } ", "question": "List the language of Kunsten Museum of moder art Aalborg ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg", "seq": "21,55", "label": "Kunsten Museum of moder art Aalborg"}], "predicate mapping": [], "id": "7d067f0ccaed45b9b5bcb80f169566cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fabio_Mercurio> <http://dbpedia.org/property/institution> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "Who owns the bank where Fabio Mercurio works?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fabio_Mercurio", "seq": "24,37", "label": "Fabio Mercurio"}], "predicate mapping": [], "id": "8da4d7ea35a54979b46ddfbfc64b1b5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Parliament> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What shows are aired on sister channels of BBC Parliaments", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Parliament", "seq": "43,57", "label": "BBC Parliaments"}], "predicate mapping": [], "id": "2f903de0d05c4f3c9eb0fcf478f43406"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Name a military unit whose command structure is United States Department of the Navy and garrison is Arlington County, Virginia?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy", "seq": "48,83", "label": "United States Department of the Navy"}, {"uri": "http://dbpedia.org/resource/Arlington_County,_Virginia", "seq": "101,126", "label": "Arlington County, Virginia"}], "predicate mapping": [], "id": "fc8842a830044f4c9bc255c1f3031969"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }", "question": "Starwood operates in which places?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide", "seq": "0,25", "label": "Starwood operates in which"}], "predicate mapping": [], "id": "00922db47d90435cb5df5903a5025450"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri } ", "question": "What are the things built by Eristoff ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eristoff", "seq": "29,36", "label": "Eristoff"}], "predicate mapping": [], "id": "4dc12f67b9bf40f1ad3ea69a7d6ddc7f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tim_Nanai-Williams> <http://dbpedia.org/ontology/relative> ?uri } ", "question": "List the relative of Tim Nanai-Williams ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tim_Nanai-Williams", "seq": "21,38", "label": "Tim Nanai-Williams"}], "predicate mapping": [], "id": "06661ab5e6804e1c8206072e2bb02395"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character portrayed by Roger barton has Padm Amidala as family ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)", "seq": "39,50", "label": "Roger barton"}, {"uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala", "seq": "56,67", "label": "Padm Amidala"}], "predicate mapping": [], "id": "f14f313e8dc0452884affe033d0a04fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Channel_3_(Thailand)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "Where is the station whose sister channel is the Channel 3 in Thailand?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Channel_3_(Thailand)", "seq": "49,57", "label": "Channel 3"}], "predicate mapping": [], "id": "b8b5452850cc482eb87779a8ed2c2159"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/origin> ?uri }", "question": "Count the  origin of the beverages which have been originated in england /", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "65,71", "label": "england"}], "predicate mapping": [], "id": "9f517b6fe6cf44339df470bcabf4069d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Houston_City_Council> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "question": "Which things have been located, where governance is Houston City Council?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston_City_Council", "seq": "52,71", "label": "Houston City Council"}], "predicate mapping": [], "id": "82f48c9c0f194d4090c22604bf2864c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Everton_Park_State_High_School> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What awards have been given to people schooled in the Everton park state high?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Everton_Park_State_High_School", "seq": "54,76", "label": "Everton park state high"}], "predicate mapping": [], "id": "832739b6967a4676b06c86e5b1426922"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marshall_Fletcher_McCallie> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri} ", "question": "What is the alma mater of the Marshall Fletcher McCallie and has affiliation with  Vanderbilt University Medical Center ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marshall_Fletcher_McCallie", "seq": "30,55", "label": "Marshall Fletcher McCallie"}, {"uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center", "seq": "83,118", "label": "Vanderbilt University Medical Center"}], "predicate mapping": [], "id": "01df09084d764ebd8875ff3b881349f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Shore_Plaza> <http://dbpedia.org/property/address> ?uri } ", "question": "Where is the south shore plaza located?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Shore_Plaza", "seq": "13,29", "label": "south shore plaza"}], "predicate mapping": [], "id": "31a8e6b4c59a4b4eac26800d28fb8078"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river that falls into North Sea and Thames Estuary?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Sea", "seq": "34,42", "label": "North Sea"}, {"uri": "http://dbpedia.org/resource/Thames_Estuary", "seq": "48,61", "label": "Thames Estuary"}], "predicate mapping": [], "id": "90876c6682394f56ba6183425f3025ba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Albertin_Montoya> <http://dbpedia.org/property/managerclubs> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "Name the university whose teams have been managed by Albertin Montoya?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Albertin_Montoya", "seq": "53,68", "label": "Albertin Montoya"}], "predicate mapping": [], "id": "9dc93749dd3e4b619cbd8fc34311f6d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "Name the newspaper owned by Schibsted and headquartered at Stockholm?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Schibsted", "seq": "28,36", "label": "Schibsted"}, {"uri": "http://dbpedia.org/resource/Stockholm", "seq": "59,67", "label": "Stockholm"}], "predicate mapping": [], "id": "6db02b173fff4b64bb309fb45500cd93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/The_GNOME_Project> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . }", "question": "What is written in a programming language developed by GNOME Project?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_GNOME_Project", "seq": "55,67", "label": "GNOME Project"}], "predicate mapping": [], "id": "8e7ec89e4ed941bf8ca2d3ac48db3969"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . }", "question": "Count all the stateless people", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Statelessness", "seq": "14,29", "label": "stateless people"}], "predicate mapping": [], "id": "35abbfdef65f48d399ea86f591412293"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/People's_Bank_(Sri_Lanka)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "State the religion of the person known for People's Bank (Sri Lanka) ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/People's_Bank_(Sri_Lanka)", "seq": "43,55", "label": "People's Bank"}], "predicate mapping": [], "id": "6ddddbe9746248c1ad7bf21a4e745094"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show distributed by Broadcast syndication and voiced by Eliza Schneider?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broadcast_syndication", "seq": "40,60", "label": "Broadcast syndication"}, {"uri": "http://dbpedia.org/resource/Eliza_Schneider", "seq": "76,90", "label": "Eliza Schneider"}], "predicate mapping": [], "id": "f296e394f71346d8835fe88f4e572782"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Justina_Machado> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/John_Englehart> <http://dbpedia.org/ontology/birthPlace> ?uri . }", "question": "Where were Justina Machado and John Englehard born?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Justina_Machado", "seq": "11,25", "label": "Justina Machado"}, {"uri": "http://dbpedia.org/resource/John_Englehart", "seq": "31,44", "label": "John Englehard"}], "predicate mapping": [], "id": "18b1a0fcbd154906ad63f1310bcb8356"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quest_Software> <http://dbpedia.org/property/successor> ?uri } ", "question": "Who is the successor of Quest Software ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quest_Software", "seq": "24,37", "label": "Quest Software"}], "predicate mapping": [], "id": "5a5f08cd19484d219d04ef85d42c4a4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show with presentator as Ryan Seacrest and theme music composer as Julian Gingell?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "48,60", "label": "Ryan Seacrest"}, {"uri": "http://dbpedia.org/resource/Julian_Gingell", "seq": "90,103", "label": "Julian Gingell"}], "predicate mapping": [], "id": "d36cd4157a5647ac96cd3a1013473247"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park> . ?x <http://dbpedia.org/ontology/state> ?uri  . }", "question": "River which flows into the eugene mahoney state park pass through which states?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park", "seq": "27,51", "label": "eugene mahoney state park"}], "predicate mapping": [], "id": "8aefda4d445e431ba18e9893471a7d0e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which scientist's academic advisor is Georg Meissner and is known for invention of Anthrax ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anthrax", "seq": "83,89", "label": "Anthrax"}, {"uri": "http://dbpedia.org/resource/Georg_Meissner", "seq": "38,51", "label": "Georg Meissner"}], "predicate mapping": [], "id": "7b37e481b5fe4b1ea46954b65bbc9fc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/David_Bowens> <http://dbpedia.org/ontology/formerTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "For how many cities's teams did David Bowens play?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Bowens", "seq": "32,43", "label": "David Bowens"}], "predicate mapping": [], "id": "e3e4596a38cd41b5925a1131d75af14f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who is the developer of the software which distributes Batman: Arkham City Lockdown ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown", "seq": "55,82", "label": "Batman: Arkham City Lockdown"}], "predicate mapping": [], "id": "ec9f7e686ab1438693a7da09f8164304"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy> } ", "question": "what are some neighboring cities of Pregny Chambsy?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "seq": "36,49", "label": "Pregny Chambsy"}], "predicate mapping": [], "id": "e0d7814a403041dfbdb60c84e19ff1b6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Australian_of_the_Year> . ?x <http://dbpedia.org/ontology/award> ?uri }", "question": "How many honorary title are there of the scientists who has  Australian of the Year award  ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australian_of_the_Year", "seq": "61,82", "label": "Australian of the Year"}], "predicate mapping": [], "id": "69eda413b32a4ef18311180654f38ad1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the total number of companies who use a language designed by Bjarne Stroustrup?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bjarne_Stroustrup", "seq": "69,85", "label": "Bjarne Stroustrup"}], "predicate mapping": [], "id": "959815b6184e4dd9a68135af4125df83"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri} ", "question": "Which job of Irving Chernev is the non-fiction subject of the Thud ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Irving_Chernev", "seq": "13,26", "label": "Irving Chernev"}, {"uri": "http://dbpedia.org/resource/Thud!", "seq": "62,65", "label": "Thud"}], "predicate mapping": [], "id": "a5e14b00bb094b6ba270285e1c075055"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "What are the musicals of the people died in California?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "44,53", "label": "California"}], "predicate mapping": [], "id": "2ee5f92bf7dd42e6aa5a5c2aa1848abd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_S._Stewart> <http://dbpedia.org/property/employer> ?uri } ", "question": "What is the workplace of Christopher S. Stewart ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_S._Stewart", "seq": "25,46", "label": "Christopher S. Stewart"}], "predicate mapping": [], "id": "3b865ce9d2c64aa2bf2eea2036094742"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jawaharlal_Nehru> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "What is the political party of the daughter of Jawaharlal Nehru ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jawaharlal_Nehru", "seq": "47,62", "label": "Jawaharlal Nehru"}], "predicate mapping": [], "id": "f7c7d94c2c7a4893a0ac5c5c40b26106"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/property/training> ?uri } ", "question": "Where was david Scherman trained ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Scherman", "seq": "10,23", "label": "david Scherman"}], "predicate mapping": [], "id": "b52d907f0f3444b1b31e1eaadb9012e3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> } ", "question": "Which units are garrisoned at Arlington County, Virginia?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_County,_Virginia", "seq": "30,55", "label": "Arlington County, Virginia"}], "predicate mapping": [], "id": "b12bebc48be04ef39ad59257df7b1387"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Sequoia_National_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "What are the mountains in the Sequoia National Park?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sequoia_National_Park", "seq": "30,50", "label": "Sequoia National Park"}], "predicate mapping": [], "id": "735485ac406a44709508e55720a723fc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/city> ?uri } ", "question": "Name the city of Duwamish River ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duwamish_River", "seq": "17,30", "label": "Duwamish River"}], "predicate mapping": [], "id": "2ba39b2193c84d1eaafccd6a537a338e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ujong> <http://dbpedia.org/ontology/capital> ?uri } ", "question": "What is the administrative headquarters of Pulau Ujong ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pulau_Ujong", "seq": "43,53", "label": "Pulau Ujong"}], "predicate mapping": [], "id": "a1526eadfd4c4d5d915dee4a3c8c1dd9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sierra_del_Merend\u00f3n> <http://dbpedia.org/ontology/country> ?uri  . }", "question": "In which country is Sierra del Merendin?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_del_Merend\u00f3n", "seq": "20,38", "label": "Sierra del Merendin"}], "predicate mapping": [], "id": "aaa9856758804b05ae5363e65a3bd2a7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Electronics_manufacturing_services> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "Give me a count of everything made by the company which offers electronical manufacturing too.", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Electronics_manufacturing_services", "seq": "63,92", "label": "electronical manufacturing too"}], "predicate mapping": [], "id": "0c63debd713445eebabef107c1f94b34"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What are the other band member of the Bands whose current members is Hynief?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hynief", "seq": "69,74", "label": "Hynief"}], "predicate mapping": [], "id": "c7330887101d408296fa00ddf2262458"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jared_Bernstein> <http://dbpedia.org/ontology/vicePresident> ?uri } ", "question": "Who is the vice president of Jared Bernstein ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jared_Bernstein", "seq": "29,43", "label": "Jared Bernstein"}], "predicate mapping": [], "id": "cc5743cc510f4eeb9cfa516a427b3d7c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What currencies are prevalent in the countries governed by the President of France?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/President_of_France", "seq": "63,81", "label": "President of France"}], "predicate mapping": [], "id": "86c4146411a441b9b7ae67962a14c5a7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Which teams have used the stadium whose architect was Populous ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Populous_(company)", "seq": "54,61", "label": "Populous"}], "predicate mapping": [], "id": "804153ef4a04420d9160d3b4da5a2545"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ludovic_Boi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Fernando_Augustin> <http://dbpedia.org/property/residence> ?uri . }", "question": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ludovic_Boi", "seq": "26,36", "label": "Ludovic Boi"}, {"uri": "http://dbpedia.org/resource/Fernando_Augustin", "seq": "69,85", "label": "Fernando Augustin"}], "predicate mapping": [], "id": "82bfaafaf5d5457190f547f5a8690190"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Ankh-Morpork_City_Watch> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri }", "question": "How many non-fiction subject are there of the books whose one of the non-fiction subject is Ankh-Morpork City Watch ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ankh-Morpork_City_Watch", "seq": "92,114", "label": "Ankh-Morpork City Watch"}], "predicate mapping": [], "id": "110683d750084bc587eb5dd36775e6ef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Bryan_Mantia> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the show whose theme composing band previously also had Bryan Mantia?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bryan_Mantia", "seq": "61,72", "label": "Bryan Mantia"}], "predicate mapping": [], "id": "c8e8897629e34648b1aeb77826873038"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Canc\u00fan> . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "How many contries surround the seas on the banks of which is the city of Cancun?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canc\u00fan", "seq": "73,78", "label": "Cancun"}], "predicate mapping": [], "id": "4b63d37cdc444e47bb79f766451d32ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Seguin,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "List all the settlements which has a part named Seguin,Texas ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seguin,_Texas", "seq": "48,59", "label": "Seguin,Texas"}], "predicate mapping": [], "id": "19f47e5edc444d50a2b75d0cffbf0bcb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Mississippi> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "question": "List all the wine regions of the grapes whose one of the wine region is Mississippi ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mississippi", "seq": "72,82", "label": "Mississippi"}], "predicate mapping": [], "id": "1655c6bb438f414f8b6a6c12f3470473"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri. <http://dbpedia.org/resource/Jimmy_Diggs> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which city was designed by saleen Pator which is also the birht location of Jimmy Diggs ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor", "seq": "27,38", "label": "saleen Pator"}, {"uri": "http://dbpedia.org/resource/Jimmy_Diggs", "seq": "76,86", "label": "Jimmy Diggs"}], "predicate mapping": [], "id": "888e5195b6724c50955a1020e553cbf6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Washington,_D.C.> . ?uri <http://dbpedia.org/property/affiliations> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university whose affiliations's foundation is in Washington, D.C.?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Washington,_D.C.", "seq": "58,72", "label": "Washington, D.C"}], "predicate mapping": [], "id": "fa48e10d45b245ad97a7c3e1691f2f85"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose theatre is Siege of Fort Recovery and belongs to Indian territory branch ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "seq": "40,61", "label": "Siege of Fort Recovery"}, {"uri": "http://dbpedia.org/resource/Indiana_Territory", "seq": "78,93", "label": "Indian territory"}], "predicate mapping": [], "id": "b7ffb05378d2452b978792c947b826e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams> <http://dbpedia.org/property/headcoach> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . }", "question": "What was the university of the rugby player who coached the Stanford rugby teams during 1906-1917?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams", "seq": "60,79", "label": "Stanford rugby teams"}], "predicate mapping": [], "id": "6aad2feaead44d8e87827dc6c1ff9a57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri . }", "question": "Which sports are played at both the Polytech uni of Bataan and Taguig?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan", "seq": "36,57", "label": "Polytech uni of Bataan"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "seq": "36,68", "label": "Polytech uni of Bataan and Taguig"}], "predicate mapping": [], "id": "235bac8ebb9049149d10aec4b92b6881"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Ozzy_Osbourne> . }", "question": "Who has Kelly Osbourne and Ozzy Osbourne as relatives?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelly_Osbourne", "seq": "8,21", "label": "Kelly Osbourne"}, {"uri": "http://dbpedia.org/resource/Ozzy_Osbourne", "seq": "27,39", "label": "Ozzy Osbourne"}], "predicate mapping": [], "id": "c29965dde83947ffa5b1a736dd8ea8bf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri } ", "question": "Who were the founders of Sea Gayle Music?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sea_Gayle_Music", "seq": "25,39", "label": "Sea Gayle Music"}], "predicate mapping": [], "id": "ee5bcfdd212b4f548f1556e3f2d442a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What layout can be found in cars similar to the Subaru Outback?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Subaru_Outback", "seq": "48,61", "label": "Subaru Outback"}], "predicate mapping": [], "id": "3de0eac5123f4e209570dffcc7b9e398"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "Name the president who has relations with Clinton family and had a lieutenant named Winston Bryant?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clinton_family", "seq": "42,55", "label": "Clinton family"}, {"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "84,97", "label": "Winston Bryant"}], "predicate mapping": [], "id": "90a0886308b64939add943ce02984650"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . }", "question": "How many organizations work for Environmentalism?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Environmentalism", "seq": "32,47", "label": "Environmentalism"}], "predicate mapping": [], "id": "a8dde84d23764e07b345f79862bd2561"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet>  . }", "question": "Which producer of Boeing F/A-18E/F Super Hornet has a key person Dennis Muilenburg ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "65,81", "label": "Dennis Muilenburg"}, {"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "seq": "18,46", "label": "Boeing F/A-18E/F Super Hornet"}], "predicate mapping": [], "id": "1876b2c28ef241b785166c94d876c850"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri . }", "question": "To which uni. did  sidney c patridge and cyril hume both once went?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge", "seq": "19,35", "label": "sidney c patridge"}, {"uri": "http://dbpedia.org/resource/Cyril_Hume", "seq": "41,50", "label": "cyril hume"}], "predicate mapping": [], "id": "f15503debeab476e92bec7104ca5599b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}", "question": "Who is the manager of the club whose homeground is the riverside stadium?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Riverside_Stadium", "seq": "55,71", "label": "riverside stadium"}], "predicate mapping": [], "id": "9bc2338edfc24fc7a0d8d7cfe88d0ccd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Dallas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "What are the organisation founded in Texas and Dallas?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "seq": "37,41", "label": "Texas"}, {"uri": "http://dbpedia.org/resource/Dallas", "seq": "47,52", "label": "Dallas"}], "predicate mapping": [], "id": "abe825df40f846beb07f2ad29ebe9e8a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri } ", "question": "List the members of Skull Gang?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Skull_Gang", "seq": "20,29", "label": "Skull Gang"}], "predicate mapping": [], "id": "3893e0c34af5499f992e3e068e2b4394"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Nandurbar> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "To which party does the politician belong, who was born in Nandurbar?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nandurbar", "seq": "59,67", "label": "Nandurbar"}], "predicate mapping": [], "id": "6ba161b8976648ed9d66e2ddb758f1f2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Danny_Elfman> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton> } ", "question": "Count the movies directed by Tim Burton and music composer Danny Elfman ?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Danny_Elfman", "seq": "59,70", "label": "Danny Elfman"}, {"uri": "http://dbpedia.org/resource/Tim_Burton", "seq": "29,38", "label": "Tim Burton"}], "predicate mapping": [], "id": "94109f8a38244b3d8a1dc4cfb6ba55b2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Jason_Maas> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "What are the american football players whose former team's coach is Jason Maas?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Maas", "seq": "68,77", "label": "Jason Maas"}], "predicate mapping": [], "id": "b6c11bc5758b40768cc7bd60cbf09fd3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri } ", "question": "Name the appointer of William Clark ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Clark", "seq": "22,34", "label": "William Clark"}], "predicate mapping": [], "id": "bae14da898b343a4a0b319d75b992c2c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/LATV> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "What is the city  of the television station whose affiliations is LATV?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/LATV", "seq": "66,69", "label": "LATV"}], "predicate mapping": [], "id": "660aad2b85ce42fdbf4dd20e86dee609"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "People who debuted from Houston Astros have played in which clubs?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston_Astros", "seq": "24,37", "label": "Houston Astros"}], "predicate mapping": [], "id": "cfcc12ca99344c948bb29580893f960e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "What sport played at Islamic azad uni employes Craig Van Tilbury?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "seq": "47,63", "label": "Craig Van Tilbury"}, {"uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch", "seq": "21,63", "label": "Islamic azad uni employes Craig Van Tilbury"}], "predicate mapping": [], "id": "0cf0d3fc76114f5bb2970fc5db230b49"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . }", "question": "Where are Solidus and Aureus used?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Solidus_(coin)", "seq": "10,16", "label": "Solidus"}, {"uri": "http://dbpedia.org/resource/Aureus", "seq": "22,27", "label": "Aureus"}], "predicate mapping": [], "id": "1a1fe17b13dd4e109fdd6073577080a4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Foxy_Brown_(rapper)> } ", "question": "Foxy Brown was associated with which band?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxy_Brown_(rapper)", "seq": "0,9", "label": "Foxy Brown"}], "predicate mapping": [], "id": "c838dc07c8ba4000a51426ddb603d08d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . }", "question": "Whose military units are VMF-218 and VMF-155?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/VMF-218", "seq": "25,31", "label": "VMF-218"}, {"uri": "http://dbpedia.org/resource/VMF-155", "seq": "37,43", "label": "VMF-155"}], "predicate mapping": [], "id": "6fb72d6e48a849faa3d1dd3d45300bf7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri } ", "question": "Name the team of Michael springer ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Springer", "seq": "17,32", "label": "Michael springer"}], "predicate mapping": [], "id": "7d875a1bbc994ad68254365c69d782e6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "question": "How many non fiction topics does Thud! deals with?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thud!", "seq": "33,37", "label": "Thud!"}], "predicate mapping": [], "id": "4a08674a7ddd496fbbc5ad26b5aed56d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vancouver_Whitecaps_FC> <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Steve_Nash> }", "question": "Is Steve Nash the chairman of Vancouver Whitecaps FC?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC", "seq": "30,51", "label": "Vancouver Whitecaps FC"}, {"uri": "http://dbpedia.org/resource/Steve_Nash", "seq": "3,12", "label": "Steve Nash"}], "predicate mapping": [], "id": "9787a89dac1648ee8bd80857d7c4060c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Todo_Romantic_Style> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/property/origin> ?uri  . }", "question": "What is the origin of the musical artist of A Todo Romantic Style ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Todo_Romantic_Style", "seq": "44,64", "label": "A Todo Romantic Style"}], "predicate mapping": [], "id": "62eee24679714722a6a54a0063088a1d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christiaan_Barnard> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_Minnesota> }", "question": "Did Christian Barnard study in the University of Minnesota?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christiaan_Barnard", "seq": "4,20", "label": "Christian Barnard"}, {"uri": "http://dbpedia.org/resource/University_of_Minnesota", "seq": "35,57", "label": "University of Minnesota"}], "predicate mapping": [], "id": "bd015efa79cc4cf6ace73ea181c96abd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/United_States_dollar> . ?x <http://dbpedia.org/ontology/product> ?uri  . }", "question": "Name all the products produced by the producer of United States dollar ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_dollar", "seq": "50,69", "label": "United States dollar"}], "predicate mapping": [], "id": "04206d63a4654e48a0f4514cbccba82f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alfred_Blalock> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }", "question": "What is the affiliation of the hospital where Alfred Blalock works?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alfred_Blalock", "seq": "46,59", "label": "Alfred Blalock"}], "predicate mapping": [], "id": "a4cb9ae6b84c4fcd846991699d10ed7f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Motherland_(anthem)> }", "question": "Is the national anthem of Mauritius motherland?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mauritius", "seq": "26,34", "label": "Mauritius"}, {"uri": "http://dbpedia.org/resource/Motherland_(anthem)", "seq": "36,45", "label": "motherland"}], "predicate mapping": [], "id": "873bd1108ced400a95d4ad3f59959e8f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Clyde_McNeal> <http://dbpedia.org/property/deathDate> ?uri} ", "question": "What is the home town of the Rolando Gomez is the DOD of the Clyde McNeal ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rolando_Gomez", "seq": "29,41", "label": "Rolando Gomez"}, {"uri": "http://dbpedia.org/resource/Clyde_McNeal", "seq": "61,72", "label": "Clyde McNeal"}], "predicate mapping": [], "id": "78242b591ed14293a5c985c9cdb0a3ab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri} ", "question": "What software is developed by GNOWSYS and is licensed by Frontaccounting?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frontaccounting", "seq": "57,71", "label": "Frontaccounting"}, {"uri": "http://dbpedia.org/resource/GNOWSYS", "seq": "30,36", "label": "GNOWSYS"}], "predicate mapping": [], "id": "f05d4dee977d4a7292b08b8fa40d165e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri . }", "question": "Who was the president at the time when both Carl Stokes and Joseph Stiglitz held a position in US political framework?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Stokes", "seq": "44,54", "label": "Carl Stokes"}, {"uri": "http://dbpedia.org/resource/Joseph_Stiglitz", "seq": "60,74", "label": "Joseph Stiglitz"}], "predicate mapping": [], "id": "b9146fbecbc9471a828508410f06ee30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri . }", "question": "What is the municipality of the Homestead Grays Bridge and Roberto Clemente Bridge?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge", "seq": "32,53", "label": "Homestead Grays Bridge"}, {"uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge", "seq": "59,81", "label": "Roberto Clemente Bridge"}], "predicate mapping": [], "id": "8827a33491654d18998e17489e221cac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/homeTown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the home town of the people who have Ontario as one of it ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "42,48", "label": "Ontario"}], "predicate mapping": [], "id": "87b748e0d7f448dfad6f4d9e657df140"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Love_How_You_Love_Me> <http://dbpedia.org/property/language> ?uri } ", "question": "Name the language of I Love How You Love Me ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/I_Love_How_You_Love_Me", "seq": "21,42", "label": "I Love How You Love Me"}], "predicate mapping": [], "id": "5d35202b7de94c2aa0a76efeb59ec38d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Pennsylvania>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "Pennsylvania has how many american football teams?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pennsylvania", "seq": "0,11", "label": "Pennsylvania"}], "predicate mapping": [], "id": "1a867d312a124069949fc1d4e7e99000"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "How many teams have someone playing at the defenceman position?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "seq": "43,52", "label": "defenceman"}], "predicate mapping": [], "id": "87139c01ff3a485e8daa2d80a4a8365f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri} ", "question": "name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice", "seq": "26,54", "label": "Jerusalem Institue of Justice"}, {"uri": "http://dbpedia.org/resource/Gaza\u2013Israel_conflict", "seq": "94,103", "label": "GazaIsrael"}], "predicate mapping": [], "id": "b2cd1f2860c74a409807a44fab5702ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Field_marshal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Count the number of different religions that field marshals have followed?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Field_marshal", "seq": "45,58", "label": "field marshals"}], "predicate mapping": [], "id": "880132cb380144518ffc1218cb9fb11e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/OSS_117:_Lost_in_Rio> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards won by the person who wrote the screen play for Lost in Rio ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/OSS_117:_Lost_in_Rio", "seq": "64,78", "label": "for Lost in Rio"}], "predicate mapping": [], "id": "fdd2ce7fef37417499ab18df58b1e86a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pizza-ghetti> <http://dbpedia.org/property/mainIngredient> ?uri } ", "question": "List the main ingredient of Pizza-ghetti ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pizza-ghetti", "seq": "28,39", "label": "Pizza-ghetti"}], "predicate mapping": [], "id": "e4e94532543f4998a1a6bd210e7ba091"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Monroe> <http://dbpedia.org/property/governingBody> ?uri } ", "question": "What is the governing body of Fort Monroe ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Monroe", "seq": "30,40", "label": "Fort Monroe"}], "predicate mapping": [], "id": "e9551dcd2cd543ddb53914df27958278"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Who wrote the singles on the Main Course?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Main_Course", "seq": "29,39", "label": "Main Course"}], "predicate mapping": [], "id": "ff272b89f0e04ea683d6f633ea223754"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Annie_Leibovitz> }", "question": "Did Annie Leibovitz do the cover of The Road Ahead?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)", "seq": "36,49", "label": "The Road Ahead"}, {"uri": "http://dbpedia.org/resource/Annie_Leibovitz", "seq": "4,18", "label": "Annie Leibovitz"}], "predicate mapping": [], "id": "f3e6a145912e4850b3f93dbc9342c2b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> ?uri } ", "question": "What is the stylistic origin of Wizard rock ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wizard_rock", "seq": "32,42", "label": "Wizard rock"}], "predicate mapping": [], "id": "d4dd2c6ad55449e2974b79ecbbf14f2c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/South_Carolina> . ?x <http://dbpedia.org/property/area> ?uri }", "question": "Count the  area of the radio stations whose serves in South Carolina ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Carolina", "seq": "54,67", "label": "South Carolina"}], "predicate mapping": [], "id": "53234a36b1e64f05834fd09948fa22bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Emmitsburg,_Maryland> . ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton> . }", "question": "Who  has these major shrines  : Emmitsburg, Maryland and Shrine of St. Elizabeth Ann Bayley Seton?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emmitsburg,_Maryland", "seq": "32,51", "label": "Emmitsburg, Maryland"}, {"uri": "http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton", "seq": "57,96", "label": "Shrine of St. Elizabeth Ann Bayley Seton"}], "predicate mapping": [], "id": "444fa4b359354a5ea47e8d33ef5d0d05"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "question": "Name a few whose live in a place where Indian English is an official language", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_English", "seq": "39,52", "label": "Indian English"}], "predicate mapping": [], "id": "000c7ab2bce24308b9e2d7886852c5ab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Santo_Versace> <http://dbpedia.org/property/constituency> ?uri } ", "question": "What is the constituency of Santo Versace?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Santo_Versace", "seq": "28,40", "label": "Santo Versace"}], "predicate mapping": [], "id": "9ad5c616c0cd4c3b93ceb93ad5150b11"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose developer is J. Michael Straczynski?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "47,68", "label": "J. Michael Straczynski"}], "predicate mapping": [], "id": "7cb26f57f9304355832fe7c4e7d30a8d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "question": "What are some Louisiana based models known for?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louisiana", "seq": "14,22", "label": "Louisiana"}], "predicate mapping": [], "id": "b1e194a22c164d3a9200e8ed3425fd1b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Fair_Lane>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person who died in Fair Lane ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fair_Lane", "seq": "28,36", "label": "Fair Lane"}], "predicate mapping": [], "id": "eae36241b9974a45a5febf554a4aac80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Aardman_Animations> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List the awards given to the important people of Aardman Animations?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aardman_Animations", "seq": "49,66", "label": "Aardman Animations"}], "predicate mapping": [], "id": "ea43482e56b84335b891f1be6326132e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryland_Jockey_Club> <http://dbpedia.org/property/keyPeople> ?uri } ", "question": "List the import people of Maryland Jockey Club ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maryland_Jockey_Club", "seq": "26,45", "label": "Maryland Jockey Club"}], "predicate mapping": [], "id": "d3075ce3184440eaaa8b1f8728a78053"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carlos_Emmons_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri } ", "question": "From what american football teams did Carlos Emmons play?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)", "seq": "38,50", "label": "Carlos Emmons"}], "predicate mapping": [], "id": "8d0f6e4862cc499e909b0bc805585305"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Graham_Yost>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show whose company is Playtone and written by Graham Yost?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "seq": "34,41", "label": "Playtone"}, {"uri": "http://dbpedia.org/resource/Graham_Yost", "seq": "58,68", "label": "Graham Yost"}], "predicate mapping": [], "id": "bb91e0c70abe4131a829b7d72b517d80"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kathimerini> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }", "question": "Where does the publisher of Kathimerini live?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kathimerini", "seq": "28,38", "label": "Kathimerini"}], "predicate mapping": [], "id": "c830276732964533b201803bc7dbe949"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who is the person whose alma mater is Harvard-Westlake School?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "38,60", "label": "Harvard-Westlake School"}], "predicate mapping": [], "id": "8db8117a78a84ce68ab1c0b38dd505fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/United_Kingdom> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "To which places do the flights go by airlines headquartered in the UK?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Kingdom", "seq": "46,65", "label": "headquartered in the"}], "predicate mapping": [], "id": "efb84d67dd2347d9b6b254799a4661c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Moses> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/veneratedIn> ?uri  . }", "question": "Relatives of Moses used to follow which religions?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moses", "seq": "13,17", "label": "Moses"}], "predicate mapping": [], "id": "1b85b83eced84ed5bac6ce3b7641fe6b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "What sports are played at institutes affiliated by the Association of Southeast Asian Institutes of Higher Learning?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning", "seq": "55,114", "label": "Association of Southeast Asian Institutes of Higher Learning"}], "predicate mapping": [], "id": "e1bf04582dd24181bedaeba350fbf86e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri } ", "question": "What is the homeport of INS Viraat (R22) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/INS_Viraat_(R22)", "seq": "24,33", "label": "INS Viraat"}], "predicate mapping": [], "id": "86be3981c7d04ea6aa8aec6949f00bc4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lagos_Preparatory_School> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/William_Garne> <http://dbpedia.org/ontology/occupation> ?uri} ", "question": "What sport amongst the one Lagos Preparatory School practices, did Willian Garne play for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lagos_Preparatory_School", "seq": "27,50", "label": "Lagos Preparatory School"}, {"uri": "http://dbpedia.org/resource/William_Garne", "seq": "67,79", "label": "Willian Garne"}], "predicate mapping": [], "id": "16c8192ee06a41f8b0849022a7a0a8d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "question": "Count the different places where the people died, who were born in England?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "67,73", "label": "England"}], "predicate mapping": [], "id": "356e419a3c3947e692e81dbbf4e09a69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Groove_Thang> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . }", "question": "With which artist did the musical artist of Groove Thang collaborated ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Groove_Thang", "seq": "44,55", "label": "Groove Thang"}], "predicate mapping": [], "id": "bb2d7162c47e46b9a5ccd94bed534a92"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Salad> . ?x <http://dbpedia.org/property/country> ?uri  . }", "question": "Where can i find salad based food?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Salad", "seq": "17,21", "label": "salad"}], "predicate mapping": [], "id": "e4e55365215047349dcabad761023fd4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the name of the television show whose company is Paramount Television and theme music composer is Gary Portnoy?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "57,76", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Gary_Portnoy", "seq": "106,117", "label": "Gary Portnoy"}], "predicate mapping": [], "id": "4e7b8e865254408aa15a2e4010eda993"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darren_Brass> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Belvin_Perry> <http://dbpedia.org/ontology/residence> ?uri . }", "question": "In which state do darren brass and belvin perry live?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darren_Brass", "seq": "18,29", "label": "darren brass"}, {"uri": "http://dbpedia.org/resource/Belvin_Perry", "seq": "35,46", "label": "belvin perry"}], "predicate mapping": [], "id": "f01521d56f7e45d38d7855d22371b453"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Feng_Zicai> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "What is the territory of the conflict whose commander is Feng Zicai?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Feng_Zicai", "seq": "57,66", "label": "Feng Zicai"}], "predicate mapping": [], "id": "f6130d29a11e4614958ebca1871f33f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri} ", "question": "Which team did wolfred McDonald is also the prospect team of Milkhail Pashnin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mikhail_Pashnin", "seq": "61,76", "label": "Milkhail Pashnin"}, {"uri": "http://dbpedia.org/resource/Wilfred_McDonald", "seq": "15,30", "label": "wolfred McDonald"}], "predicate mapping": [], "id": "9c6b233ade344cbfa7f26302aa1584cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Rodi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Andy_Wyant> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Where did Andy Wyant die and Robert Rodi was born in?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Rodi", "seq": "29,39", "label": "Robert Rodi"}, {"uri": "http://dbpedia.org/resource/Andy_Wyant", "seq": "10,19", "label": "Andy Wyant"}], "predicate mapping": [], "id": "7cedb64c402a4e7cacbcc2a3d3a3280a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }", "question": "Name a colonel whose resting place is Montpelier ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "seq": "7,13", "label": "colonel"}, {"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "seq": "38,47", "label": "Montpelier"}], "predicate mapping": [], "id": "95aa0849c5cc45f18b94c5427546188b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/influences> ?uri  . }", "question": "Who influenced the author of The Shooting of Dan McGrew ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)", "seq": "29,54", "label": "The Shooting of Dan McGrew"}], "predicate mapping": [], "id": "6a768d256a514c93b3a1e2afa6908be3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri . }", "question": "Where did the ultimate fighter: a champion will be crowned tonight and ultimate fighter: team rousey vs team tate take place?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned", "seq": "10,57", "label": "the ultimate fighter: a champion will be crowned"}, {"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate", "seq": "71,112", "label": "ultimate fighter: team rousey vs team tate"}], "predicate mapping": [], "id": "364043e289af4b249909ba7a1c28c8ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What is the parent company of the airline whose hub is in Detroit?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Detroit", "seq": "58,64", "label": "Detroit"}], "predicate mapping": [], "id": "578cf8ec42c6409aaa3c25d463a0c4e1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Dave_Hollister> } ", "question": "For which band did Dave Hollister perform in the past?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dave_Hollister", "seq": "19,32", "label": "Dave Hollister"}], "predicate mapping": [], "id": "1d30861aa35d4f9b8ece033370c4e15c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Universe_in_a_Single_Atom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }", "question": "Is The Universe in a Single Atom a book about buddhism?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Universe_in_a_Single_Atom", "seq": "3,31", "label": "The Universe in a Single Atom"}, {"uri": "http://dbpedia.org/resource/Buddhism", "seq": "46,53", "label": "buddhism"}], "predicate mapping": [], "id": "459dcf9d415e401787e5bfb3af170b9b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose voice is given by  April Stewart and theme music composer is Primus (band)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/April_Stewart", "seq": "50,62", "label": "April Stewart"}, {"uri": "http://dbpedia.org/resource/Primus_(band)", "seq": "92,97", "label": "Primus"}], "predicate mapping": [], "id": "175487b495244a41974ebc41170631a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Harriman,_New_York>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Which musician was born in Harriman, NY?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harriman,_New_York", "seq": "27,38", "label": "Harriman, NY"}], "predicate mapping": [], "id": "992095c492cf4b5ab41703a61761cbab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Toronto> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What are the famous Uni Toronto scientists known for?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Toronto", "seq": "20,30", "label": "Uni Toronto"}], "predicate mapping": [], "id": "01676793d39944c3aa2728c8e59460dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "How many veterans are buried in the US?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "22,34", "label": "buried in the"}], "predicate mapping": [], "id": "ccdd008db26a4b1bb06b083c9a25de17"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . }", "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Medal_of_Science", "seq": "54,78", "label": "National Medal of Science"}], "predicate mapping": [], "id": "d8cbe0bde1c74580876d692bc41e1096"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Count number of people who follow a religion which has an important office in Gold Base ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Base", "seq": "78,86", "label": "Gold Base"}], "predicate mapping": [], "id": "0b008d07b5aa42aeb3116f72525c05a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/property/spouse> ?uri. <http://dbpedia.org/resource/Soylent_Green> <http://dbpedia.org/ontology/starring> ?uri . }", "question": "Name the actor of Soylent Green to which Lydia Clarke is married ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lydia_Clarke", "seq": "41,52", "label": "Lydia Clarke"}, {"uri": "http://dbpedia.org/resource/Soylent_Green", "seq": "18,30", "label": "Soylent Green"}], "predicate mapping": [], "id": "94ad1de3618a4ae29fd2fa2ac111f8a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joe_Pass> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Dream_Dancing_(album)> <http://dbpedia.org/property/artist> ?uri . }", "question": "Name the artist who made Dream Dancing and is often associated with Joe Pass?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Pass", "seq": "68,75", "label": "Joe Pass"}, {"uri": "http://dbpedia.org/resource/Dream_Dancing_(album)", "seq": "25,37", "label": "Dream Dancing"}], "predicate mapping": [], "id": "9fdd8478c6d84d1291fb875beff000f6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri } ", "question": "Name the notable commanders of Army Group Oberrhein ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)", "seq": "31,50", "label": "Army Group Oberrhein"}], "predicate mapping": [], "id": "73d747e2e00649c48cc57a5f5c1594be"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri } ", "question": "What is the relegious affiliations of Katyayana ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)", "seq": "38,46", "label": "Katyayana"}], "predicate mapping": [], "id": "ac18c05943054b51a0b6a6c6483e24fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Rochers_de_Naye> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }", "question": "In which mountain range does the Rochers De Naye lie?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rochers_de_Naye", "seq": "33,47", "label": "Rochers De Naye"}], "predicate mapping": [], "id": "f717accc0ab04b15bed31ee97a11045f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Murray_Gold>  . }", "question": "Murray Gold has composed music for how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Murray_Gold", "seq": "0,10", "label": "Murray Gold"}], "predicate mapping": [], "id": "1baf73ee859f4a678e907f2e806738b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Wealth_management> . ?x <http://dbpedia.org/ontology/product> ?uri }", "question": "Count the number of other product of the banks whose one of the product is Wealth management ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wealth_management", "seq": "75,91", "label": "Wealth management"}], "predicate mapping": [], "id": "33ffcadb8ef94c4893dfca8fa2e74e43"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }", "question": "List the name of those who became famous for something garrisoned at Tennessee?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennessee", "seq": "69,77", "label": "Tennessee"}], "predicate mapping": [], "id": "ae1e012a0df44d74ab74f9890661c43e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "question": "How many people have led agencies in German occupied Europe?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/German-occupied_Europe", "seq": "37,58", "label": "German occupied Europe"}], "predicate mapping": [], "id": "7e7d19cbdc3d4fb7b2b4b7110f6aab4e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri } ", "question": "What is the citizenship of Saima Chowdhury?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saima_Chowdhury", "seq": "27,41", "label": "Saima Chowdhury"}], "predicate mapping": [], "id": "c3949eda0f05470ca1d7effadac95392"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri} ", "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "seq": "28,54", "label": "The Adventure of Tom Sawyer"}, {"uri": "http://dbpedia.org/resource/Mark_Twain_Tonight", "seq": "67,84", "label": "mark Twain Tonight"}], "predicate mapping": [], "id": "b73800c673354bf3b828496ea3a2c9d6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri } ", "question": "Who is the writer of The Sandman (Vertigo) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)", "seq": "21,31", "label": "The Sandman"}], "predicate mapping": [], "id": "c365bc2a449849d4999e1836c37e7e20"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Yokohama_National_University> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "What religion do the politicians follow, who graduated from the Yokkohama Nationaal University?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yokohama_National_University", "seq": "64,93", "label": "Yokkohama Nationaal University"}], "predicate mapping": [], "id": "dea08c4d67c84b478d0adb5e063dd3c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }", "question": "What is the subject of the book which preceded Sagan's Cosmos?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)", "seq": "55,60", "label": "Cosmos"}], "predicate mapping": [], "id": "4ef62e8a57af45229de3bc04ae17a70b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Cockroach_Labs> . ?uri <http://dbpedia.org/property/author> ?x  . }", "question": "What was developed by someone working in Cockroach Labs?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cockroach_Labs", "seq": "41,54", "label": "Cockroach Labs"}], "predicate mapping": [], "id": "cb47161368654599a123ac5ecc45c968"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Won-shik> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "Which battles were fought under the president when Chung Won Shik was the prime minister?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chung_Won-shik", "seq": "51,64", "label": "Chung Won Shik"}], "predicate mapping": [], "id": "add7e467bfd94a21bacd2d251e10ae2e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri } ", "question": "How did Letitia MacTavish Hargrave died ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave", "seq": "8,33", "label": "Letitia MacTavish Hargrave"}], "predicate mapping": [], "id": "d47969ab783e4582a2e2fb7e0f0f5e8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Dodge> . ?x <http://dbpedia.org/ontology/automobilePlatform> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which are the  automobile platform whose one of the automobile platform is Dodge ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dodge", "seq": "75,79", "label": "Dodge"}], "predicate mapping": [], "id": "4a9e53dfc73f4627925582fac0d63ad5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khalid_bin_Sultan> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Steve_Buyer> <http://dbpedia.org/ontology/battle> ?uri} ", "question": "Which battle of  Khalid bin Sultan was also the conflict of Steve Buyer ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Khalid_bin_Sultan", "seq": "17,33", "label": "Khalid bin Sultan"}, {"uri": "http://dbpedia.org/resource/Steve_Buyer", "seq": "60,70", "label": "Steve Buyer"}], "predicate mapping": [], "id": "ee822c36d62d4486b3e5bfe19c785a6d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea>} ", "question": "How many molluscas are there whose families are Buccinidae and Buccinoidea?", "sparql_id": 107, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buccinidae", "seq": "48,57", "label": "Buccinidae"}, {"uri": "http://dbpedia.org/resource/Buccinoidea", "seq": "63,73", "label": "Buccinoidea"}], "predicate mapping": [], "id": "c28b4d6ba982461894b0af6413f4dae3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }", "question": "Name the islands that belong to the archipelago whose largest city is Papeete?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Papeete", "seq": "70,76", "label": "Papeete"}], "predicate mapping": [], "id": "f8b4b4e3f56d470eaa30548567ac76bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Pattie_Mallette>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person whose parent is Pattie Mallette?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pattie_Mallette", "seq": "32,46", "label": "Pattie Mallette"}], "predicate mapping": [], "id": "d50f136d62424735841bbbaf2f071598"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Mark_Twain> }", "question": "Was Mark Twain a character of Mark Twain Tonight?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Twain_Tonight", "seq": "30,47", "label": "Mark Twain Tonight"}, {"uri": "http://dbpedia.org/resource/Mark_Twain", "seq": "30,39", "label": "Mark Twain"}], "predicate mapping": [], "id": "da7765ddd30747a8a4f9e56b2c133576"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/2015_North_American_Soccer_League_season> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "In how many different stadiums are the seasons of the 2015 NA Soccer league held?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_North_American_Soccer_League_season", "seq": "54,79", "label": "2015 NA Soccer league held"}], "predicate mapping": [], "id": "f10350d3685640838feea5fdeaf7d694"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "In which countries were the Russian volleyball team players born?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team", "seq": "28,50", "label": "Russian volleyball team"}], "predicate mapping": [], "id": "7713d7e1c178466791f85588f6e6bc0f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saint_Lucia_national_cricket_team> <http://dbpedia.org/ontology/county> ?uri } ", "question": "What is the county of Saint Lucia national cricket team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Lucia_national_cricket_team", "seq": "22,54", "label": "Saint Lucia national cricket team"}], "predicate mapping": [], "id": "f0b68ec815f04f8fbcfa6fb21869435b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river originate from limerick?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Limerick", "seq": "27,34", "label": "limerick"}], "predicate mapping": [], "id": "f01085ed6c1646a49adc3df33bf1df55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "List the destinations to which the airlines headquartered at the Gatwick Airport fly to?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gatwick_Airport", "seq": "65,79", "label": "Gatwick Airport"}], "predicate mapping": [], "id": "b69308b751094ac1abc810fdb238f53a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Solomon> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}", "question": "Name the veneration of the monarch who is the predecessor of Solomon?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Solomon", "seq": "61,67", "label": "Solomon"}], "predicate mapping": [], "id": "f53a548559d847459560227f6de16c73"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri } ", "question": "Who operates the Ganz UV?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganz_UV", "seq": "17,23", "label": "Ganz UV"}], "predicate mapping": [], "id": "7f98833cf8c94eed9fdf6fb194c481be"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide> <http://dbpedia.org/ontology/publisher> ?uri } ", "question": "Who is the publisher of The Rolling Stone Album Guide ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide", "seq": "24,52", "label": "The Rolling Stone Album Guide"}], "predicate mapping": [], "id": "738238521e7e47f79c03ba81880544ce"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri. <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri} ", "question": "In which country was GM was firt aired which is also the mouth country of Upper Neretva?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Upper_Neretva", "seq": "74,86", "label": "Upper Neretva"}, {"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "seq": "21,26", "label": "GM was"}], "predicate mapping": [], "id": "13acb5e7c9d2488ba706f3eabb8e78c0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk> . ?x <http://dbpedia.org/property/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>}", "question": "What is the hometown of the volleyball player whose club is VC Lokomotiv Novosibirsk ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk", "seq": "60,83", "label": "VC Lokomotiv Novosibirsk"}], "predicate mapping": [], "id": "8dcdd9886b0d4eb38b3a78d1d8f7bf55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What are some books whose cover illustration is designed by Marshall Arisman?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marshall_Arisman", "seq": "60,75", "label": "Marshall Arisman"}], "predicate mapping": [], "id": "0003a5d7358848dda07272e9779abb3b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mahbuba_Islam_Rakhi> <http://dbpedia.org/ontology/nationality> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What religion do people of the country of Mahbuba Islam Rakhi follow?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mahbuba_Islam_Rakhi", "seq": "42,60", "label": "Mahbuba Islam Rakhi"}], "predicate mapping": [], "id": "aef45b1c0926436fbf9066333c15dd4c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Name the people who were in a youth club managed by Luis Enrique ?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)", "seq": "52,63", "label": "Luis Enrique"}], "predicate mapping": [], "id": "7bf3155c798f4ab8976ec7b18d4a3336"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oscoda,_Michigan> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "question": "What is the state of the administrative region where Oscoda, Michigan is located?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oscoda,_Michigan", "seq": "53,68", "label": "Oscoda, Michigan"}], "predicate mapping": [], "id": "1a388e6d4b5349899a856a6c6b9c322d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Michael_Hahn> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Which  institution of the Alton Ochsner is the alma mater of the Michael Hahn ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alton_Ochsner", "seq": "26,38", "label": "Alton Ochsner"}, {"uri": "http://dbpedia.org/resource/Michael_Hahn", "seq": "65,76", "label": "Michael Hahn"}], "predicate mapping": [], "id": "e6b415fc865449c3bf841f09716c5099"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Which city's foundeer is John Forbes?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)", "seq": "25,35", "label": "John Forbes"}], "predicate mapping": [], "id": "132b8410eb304e7a89c8c7717e9ed33f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . }", "question": "How many times has Jeff Conaway been casted?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeff_Conaway", "seq": "19,30", "label": "Jeff Conaway"}], "predicate mapping": [], "id": "deb86e66bf6b4246b747867c3fd40564"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kendall_Jenner> <http://dbpedia.org/property/relatives> ?uri  . }", "question": "Kendall Jenner has how many relatives?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kendall_Jenner", "seq": "0,13", "label": "Kendall Jenner"}], "predicate mapping": [], "id": "0823c2c40ec44ed38548274caa96984d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people were drafted in the LA Clippers?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Clippers", "seq": "36,46", "label": "LA Clippers"}], "predicate mapping": [], "id": "3cd3e5a6d4944cbe8c95808f0407e8d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Refriango> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "question": "Where did the beverages sold by Refriango originate?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Refriango", "seq": "32,40", "label": "Refriango"}], "predicate mapping": [], "id": "0564d9c87b7544ec8c5ee392b68afadc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Indochina> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "In which wars did commanders born in Indochina fight?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indochina", "seq": "37,45", "label": "Indochina"}], "predicate mapping": [], "id": "3bb919a7b4894ae6afc9fc796ba76554"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia_Zero> <http://dbpedia.org/property/affiliations> ?uri } ", "question": "List the affiliations of Wikipedia Zero ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wikipedia_Zero", "seq": "25,38", "label": "Wikipedia Zero"}], "predicate mapping": [], "id": "605df0ddfb63418781e9a290359006e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stephen_L.R._McNichols> <http://dbpedia.org/property/governor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }", "question": "What is the region served by the governor of Stephen L.R. McNichols ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_L.R._McNichols", "seq": "45,66", "label": "Stephen L.R. McNichols"}], "predicate mapping": [], "id": "a121c71fd9734b5fad1cd2f9d8699b62"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/CN_Atl\u00e8tic-Barceloneta> <http://dbpedia.org/ontology/stadium> <http://dbpedia.org/resource/Barcelona> }", "question": "CN Atletic-Barceloneta has a stadium in Barcelona?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/CN_Atl\u00e8tic-Barceloneta", "seq": "0,21", "label": "CN Atletic-Barceloneta"}, {"uri": "http://dbpedia.org/resource/Barcelona", "seq": "40,48", "label": "Barcelona"}], "predicate mapping": [], "id": "858f8152827d43efa3d30f8630da9251"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Morrissey> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Smiths> }", "question": "Is morrissey in the smiths?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Morrissey", "seq": "3,11", "label": "morrissey"}, {"uri": "http://dbpedia.org/resource/The_Smiths", "seq": "16,25", "label": "the smiths"}], "predicate mapping": [], "id": "40311c537af740a8829bdfa1cfaef4b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }", "question": "In how many different wars have people graduated from the Army Command and General staff college fought?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College", "seq": "39,95", "label": "graduated from the Army Command and General staff college"}], "predicate mapping": [], "id": "59c88192a89f429c98c06556c15f3aad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Woodlane,_New_Jersey> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Woodlane,_New_Jersey", "seq": "59,78", "label": "Woodlane, New Jersey"}], "predicate mapping": [], "id": "c714added3ea49fd8d6f4ee3d6fd96f0"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Street_Dogs_of_South_Central> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }", "question": "Was the street dogs of south central narrated by Queen Latifah?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Street_Dogs_of_South_Central", "seq": "8,35", "label": "street dogs of south central"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "seq": "49,61", "label": "Queen Latifah"}], "predicate mapping": [], "id": "4f51e2f2604c49609c5b28c6d129bf7d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck> } ", "question": "What fictional character's species is American Pekin duck", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Pekin_duck", "seq": "38,56", "label": "American Pekin duck"}], "predicate mapping": [], "id": "f1deb0821db74c36b4d4e3febc19fb74"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose creator is Simon Fuller and presented by Ryan Seacrest?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "42,53", "label": "Simon Fuller"}, {"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "72,84", "label": "Ryan Seacrest"}], "predicate mapping": [], "id": "2430cb5fcc7e4de09250aa3d4cf84c00"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "How many books are there whose author's tomb is in Madrid?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Madrid", "seq": "51,56", "label": "Madrid"}], "predicate mapping": [], "id": "1ae78ac410444930afaf70da6b8c4492"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "What are the bridges whose located in California?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "38,47", "label": "California"}], "predicate mapping": [], "id": "f0a84962196f46ad8f2bff1e5ee68e33"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri . }", "question": "Name the common sports played at Polytechnic University of Philippines San Juan and Islamic Azad University?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan", "seq": "33,78", "label": "Polytechnic University of Philippines San Juan"}, {"uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch", "seq": "84,106", "label": "Islamic Azad University"}], "predicate mapping": [], "id": "da487a9e2aa64d0d900ccb99d5eb6fc5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Colin_Brake> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "question": "Who acted in the work written by Colin Brake?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colin_Brake", "seq": "33,43", "label": "Colin Brake"}], "predicate mapping": [], "id": "ffdb4d5b27464d26bc824dced4615e8c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rishang_Keishing> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Purnima_Banerjee> <http://dbpedia.org/ontology/party> ?uri} ", "question": "Purnima Banerjee and Rishang Keishing are politicians of what party ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rishang_Keishing", "seq": "21,36", "label": "Rishang Keishing"}, {"uri": "http://dbpedia.org/resource/Purnima_Banerjee", "seq": "0,15", "label": "Purnima Banerjee"}], "predicate mapping": [], "id": "ccb1cb5ab424424d952a58dae998bc1f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . }", "question": "Ryan Seacrest has been the presenter of how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "0,12", "label": "Ryan Seacrest"}], "predicate mapping": [], "id": "1c0073aa4e3142589ffd0e487b5742da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Give me a count of companies located in Texas ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "seq": "40,44", "label": "Texas"}], "predicate mapping": [], "id": "7ddbd538a02143ec8dc92396be31453e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_Way_(Israel)> <http://dbpedia.org/ontology/mergedIntoParty> <http://dbpedia.org/resource/One_Israel> }", "question": "Did the New Way party merge in the One Israel party?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Way_(Israel)", "seq": "8,14", "label": "New Way"}, {"uri": "http://dbpedia.org/resource/One_Israel", "seq": "35,44", "label": "One Israel"}], "predicate mapping": [], "id": "56f14869f43647c485fa58b23d2f9c2a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/IPhone_OS_1> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/XNU> <http://dbpedia.org/ontology/developer> ?uri . }", "question": "Name the organization which developed iPhone OS and the XNU?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/IPhone_OS_1", "seq": "38,50", "label": "iPhone OS and"}, {"uri": "http://dbpedia.org/resource/XNU", "seq": "56,58", "label": "XNU"}], "predicate mapping": [], "id": "67071d7bb6a641018f186b4bab9377f8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose network is BBC HD?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "47,52", "label": "BBC HD"}], "predicate mapping": [], "id": "2d0b48018f494c26a18b0026fdf92feb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/property/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What are the books written by authors who died in Madrid?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Madrid", "seq": "50,55", "label": "Madrid"}], "predicate mapping": [], "id": "14c91859f31f43e99bc47c8be8f02f16"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_I>  . }", "question": "Name  some ww1 veterans?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/World_War_I", "seq": "15,22", "label": "veterans"}], "predicate mapping": [], "id": "d3cc7a7f2f7b40afb2398e62b690580e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Quick_bread> . ?x <http://dbpedia.org/ontology/region> ?uri  . }", "question": "Where can one find some quick bread in the world?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quick_bread", "seq": "24,34", "label": "quick bread"}], "predicate mapping": [], "id": "b8eb36910321468d898a9e2d1db1d016"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Dimitris_Terezopoulos> . ?x <http://dbpedia.org/property/stadium> ?uri  . }", "question": "Which stadium is owned by the team whose manager is Dimitris Terezopoulos?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dimitris_Terezopoulos", "seq": "52,72", "label": "Dimitris Terezopoulos"}], "predicate mapping": [], "id": "3ca98ea2b8ae43d6b96d28fc67c8d9ff"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ren\u00e9_Romano> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Tahual> <http://dbpedia.org/property/location> ?uri} ", "question": "Where is Tahual located which is also the country of Ren Romano ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ren\u00e9_Romano", "seq": "53,62", "label": "Ren Romano"}, {"uri": "http://dbpedia.org/resource/Tahual", "seq": "9,14", "label": "Tahual"}], "predicate mapping": [], "id": "37d0eb12d3c94597911b7c985670d4c2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }", "question": "Was John Muir the first one to ascend one of the peaks in the cathedral peak?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)", "seq": "62,75", "label": "cathedral peak"}, {"uri": "http://dbpedia.org/resource/John_Muir", "seq": "4,12", "label": "John Muir"}], "predicate mapping": [], "id": "9b5143de94794385973ea90f3188b781"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose previous work is The Spirit of Christmas (short film)?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)", "seq": "51,73", "label": "The Spirit of Christmas"}], "predicate mapping": [], "id": "8ebe5072325a4339b8218b2a7943e4c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/K._W._Jeter> . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "List the series of the books whose author is K. W. Jeter.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/K._W._Jeter", "seq": "45,55", "label": "K. W. Jeter"}], "predicate mapping": [], "id": "927cae9531214d50b42aa1950baa9486"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Richard_M._Sherman> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "List the authors of the musicals whose songwriter is Richard M. Sherman.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_M._Sherman", "seq": "53,70", "label": "Richard M. Sherman"}], "predicate mapping": [], "id": "331d362a310946ae8a786c98ad75d8f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kariba_Dam> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri . }", "question": "What is the river on which the Kariba Dam and Batoka Gorge Hydroelectirc power station exist?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kariba_Dam", "seq": "31,40", "label": "Kariba Dam"}, {"uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station", "seq": "46,85", "label": "Batoka Gorge Hydroelectirc power station"}], "predicate mapping": [], "id": "f3c826d486634c9d83b4d891f9c0eb35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Colpix_Records>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What musicians are signed up with colpix records?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colpix_Records", "seq": "34,47", "label": "colpix records"}], "predicate mapping": [], "id": "27b52b633c2c44e280099149146f6a9d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "What is the name of the information appliance by sony whose predecessor is PlayStation 2?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "seq": "49,52", "label": "sony"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "seq": "75,87", "label": "PlayStation 2"}], "predicate mapping": [], "id": "070e0e36e87b4eeda426afc352710eae"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/College_Sainte-Marie> <http://dbpedia.org/property/county> <http://dbpedia.org/resource/Mauritius> }", "question": "Is the College Sainte Marie in Mauritius?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/College_Sainte-Marie", "seq": "7,26", "label": "College Sainte Marie"}, {"uri": "http://dbpedia.org/resource/Mauritius", "seq": "31,39", "label": "Mauritius"}], "predicate mapping": [], "id": "e5ba33e4f5e84baba047469c0c00fa35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Ringo_Starr> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "Who were the narrators of the albums which had Ringo Starr as one of the narrator ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ringo_Starr", "seq": "47,57", "label": "Ringo Starr"}], "predicate mapping": [], "id": "661df655b8234afdb7975e82bacf8c18"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "41,70", "label": "North-Western Province, Zambia"}, {"uri": "http://dbpedia.org/resource/Indian_Ocean", "seq": "91,102", "label": "Indian Ocean"}], "predicate mapping": [], "id": "1d0e592950334df5a65998987f995496"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Bert_S._Michell> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "question": "What awards have been given to race horses bred by Bert Michell?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bert_S._Michell", "seq": "51,62", "label": "Bert Michell"}], "predicate mapping": [], "id": "c44d40b04a6344f0b925ae5a869a162e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri } ", "question": "Danny Felice, the Gibraltarian guitarist is from which city?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Danny_Felice", "seq": "0,11", "label": "Danny Felice"}], "predicate mapping": [], "id": "1f283dc1bb87433d804608abb6d42fb9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Saint_Petersburg> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "How many things are people who died in St. Petersburg known for?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Petersburg", "seq": "39,52", "label": "St. Petersburg"}], "predicate mapping": [], "id": "9af0ed42078645f89b794641c5bf214f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ed_Podolak> <http://dbpedia.org/ontology/highschool> ?uri } ", "question": "Where did ed podolak go to high school", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ed_Podolak", "seq": "10,19", "label": "ed podolak"}], "predicate mapping": [], "id": "1088fd5c6f2948faa4ca297bf58ca3eb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri } ", "question": "Of which countries  does Viveka Babajee have citizenship?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Viveka_Babajee", "seq": "25,38", "label": "Viveka Babajee"}], "predicate mapping": [], "id": "2fe53e1ad1f348669a1f92c6c35fbb53"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Donn_Barber> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri} ", "question": "Which university attended by Donn Barber and education institute of Jack McGregor ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Donn_Barber", "seq": "29,39", "label": "Donn Barber"}, {"uri": "http://dbpedia.org/resource/Jack_McGregor", "seq": "68,80", "label": "Jack McGregor"}], "predicate mapping": [], "id": "e2897f4781764c61aa25fd8a527347dd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogobiri_House> <http://dbpedia.org/property/locationCity> ?uri } ", "question": "Where is Bogobiri House located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogobiri_House", "seq": "9,22", "label": "Bogobiri House"}], "predicate mapping": [], "id": "c6a2f3f300014efbb98edeadddbbd5f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Count all those whose youth club was managed by Luis Enrique.", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)", "seq": "48,59", "label": "Luis Enrique"}], "predicate mapping": [], "id": "c302f010d82f40b4819adce71cf9e672"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands>  . }", "question": "How many areas are led by Willem Alexander?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands", "seq": "26,41", "label": "Willem Alexander"}], "predicate mapping": [], "id": "672bf19ac1154092909bd114c425c125"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Swahili_language> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "What sports are played in schools where Swahili is the official language?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swahili_language", "seq": "55,71", "label": "official language"}], "predicate mapping": [], "id": "248fbcca0cc84ab7a183eeb56854398e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "Count the awards received by Immunologists?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Immunology", "seq": "29,41", "label": "Immunologists"}], "predicate mapping": [], "id": "68b2123a04bb4f809d1d4e74e6c6d5a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/War_Of_Attrition_(horse)> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri . }", "question": "Which famous horserace has seen both Fergie sutherland and the illustrious War of Attrition?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/War_Of_Attrition_(horse)", "seq": "75,90", "label": "War of Attrition"}, {"uri": "http://dbpedia.org/resource/Fergie_Sutherland", "seq": "37,53", "label": "Fergie sutherland"}], "predicate mapping": [], "id": "af27fd24d40c4af69bd62323f808d37f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Liang_Chow> } ", "question": "Who are in the liang chow club?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liang_Chow", "seq": "15,24", "label": "liang chow"}], "predicate mapping": [], "id": "42696b30838d4c98a18e0471fbda3572"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Iowa> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the occupation of the people who are born in Iowa?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iowa", "seq": "53,56", "label": "Iowa"}], "predicate mapping": [], "id": "1e325840e9a4488d9ab113c9cf46d4dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Seven_Springs_Mountain_Resort> . ?uri <http://dbpedia.org/property/owner> ?x  . }", "question": "Who holds shares in something famous for the Seven Spring Mountain Resort?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seven_Springs_Mountain_Resort", "seq": "45,72", "label": "Seven Spring Mountain Resort"}], "predicate mapping": [], "id": "5a343f2e17ff49d3abcce067bc9113ca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Surayud_Chulanont> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "What are the different religions followed by presidents whose prime minister was Surayud Chulanont?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Surayud_Chulanont", "seq": "81,97", "label": "Surayud Chulanont"}], "predicate mapping": [], "id": "bce6e73ad4d543ab9e13b7845aea8d94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Who all were involved in the wars fought by the commander Blue Jacket?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blue_Jacket", "seq": "58,68", "label": "Blue Jacket"}], "predicate mapping": [], "id": "fa87970fbd454ac58ae0fd59fa7f59ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are some people who are on the board of companies founded in NY?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "seq": "25,34", "label": "are on the"}], "predicate mapping": [], "id": "1b7009c254174184a4496ada2462fa8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What are some cars similar to the ones assembled at Toluca?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toluca", "seq": "52,57", "label": "Toluca"}], "predicate mapping": [], "id": "37341d4902c249d1a926afdf3ec6895d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri} ", "question": "Which governer of Winston bryant is also the president of Carl Stokes ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "18,31", "label": "Winston bryant"}, {"uri": "http://dbpedia.org/resource/Carl_Stokes", "seq": "58,68", "label": "Carl Stokes"}], "predicate mapping": [], "id": "edf2e6aeff7841b9bd3da7e23089514b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Heydar> <http://dbpedia.org/property/meaning> <http://dbpedia.org/resource/Lion> }", "question": "Does Heydar mean the same as a lion?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heydar", "seq": "5,10", "label": "Heydar"}, {"uri": "http://dbpedia.org/resource/Lion", "seq": "31,34", "label": "lion"}], "predicate mapping": [], "id": "4543bb2bca244cacb770ea3f2277fef5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri } ", "question": "List the fields of Sylvain Lvi ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "seq": "19,29", "label": "Sylvain Lvi"}], "predicate mapping": [], "id": "8f28ab18a0db420a9c7403df42c1e14f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.>  . }", "question": "How many managers have managed Middlesbrough FC?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "31,46", "label": "Middlesbrough FC"}], "predicate mapping": [], "id": "927df42625ef46c0a72657b93664568f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ", "question": "What sport is Eric Schiller known for, and employes Craig Van Tibury?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Schiller", "seq": "14,26", "label": "Eric Schiller"}, {"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "seq": "52,67", "label": "Craig Van Tibury"}], "predicate mapping": [], "id": "eca9dd9de8cf482bad043751461e8aac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri } ", "question": "Which minister was responsible for Kriminalpolizie?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kriminalpolizei", "seq": "35,49", "label": "Kriminalpolizie"}], "predicate mapping": [], "id": "eb264bdc56224986bac08332b3941a2d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "In what movies did Akira Ifukube compose the music?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akira_Ifukube", "seq": "19,31", "label": "Akira Ifukube"}], "predicate mapping": [], "id": "adb59836a217439ab637233a71390377"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Glendale,_California> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "How many awards have been awarded to people who are buried in Glendale, California?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glendale,_California", "seq": "62,81", "label": "Glendale, California"}], "predicate mapping": [], "id": "74ba4ac20ee641e9b1373420ec67138c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Dead_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river whose mouth is in deadsea?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dead_Sea", "seq": "36,42", "label": "deadsea"}], "predicate mapping": [], "id": "d2c55064c2b1442aa5d1e53946aaec43"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }", "question": "List all those whose relatives' nationality is United States.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "47,59", "label": "United States"}], "predicate mapping": [], "id": "f24f21d65b5f4fdaa1f972261523fabd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "How many people were in a youthclub which played in the Argentine Primera Division?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n", "seq": "56,81", "label": "Argentine Primera Division"}], "predicate mapping": [], "id": "90b999b08b4b48b68d0ecc7def163056"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which Stanley Kubrick's movie has music by Laurie Johnson?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "seq": "6,20", "label": "Stanley Kubrick"}, {"uri": "http://dbpedia.org/resource/Laurie_Johnson", "seq": "43,56", "label": "Laurie Johnson"}], "predicate mapping": [], "id": "e18646f7fb64400cbcaff2210d28e040"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Gredelj> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }", "question": "Where does the river flows into, which starts in Gredelj?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gredelj", "seq": "49,55", "label": "Gredelj"}], "predicate mapping": [], "id": "6a93144b4a8a49b8b9ea07d4b5392496"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Batman_Returns> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Chris_Lebenzon> }", "question": "Did chris lebenzon edit Batman returns?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Batman_Returns", "seq": "24,37", "label": "Batman returns"}, {"uri": "http://dbpedia.org/resource/Chris_Lebenzon", "seq": "4,17", "label": "chris lebenzon"}], "predicate mapping": [], "id": "6d98acc27b4e4a96ae51410061611f08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show with distributor as Broadcast syndication and has theme music composed by Primus ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Broadcast_syndication", "seq": "37,57", "label": "Broadcast syndication"}, {"uri": "http://dbpedia.org/resource/Primus_(band)", "seq": "91,96", "label": "Primus"}], "predicate mapping": [], "id": "c300cea324644ae39031003ca3d6aa2d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Which military unit garrison is Arlington County, Virginia and The Pentagon?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_County,_Virginia", "seq": "32,57", "label": "Arlington County, Virginia"}, {"uri": "http://dbpedia.org/resource/The_Pentagon", "seq": "63,74", "label": "The Pentagon"}], "predicate mapping": [], "id": "dc7c910336e842419f8645864f6156fc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Bare_Necessities> <http://dbpedia.org/ontology/artist> ?uri. <http://dbpedia.org/resource/Rock-a-Doodle> <http://dbpedia.org/ontology/starring> ?uri} ", "question": "What artist was associated closely with the bare necessities and rock a doodle?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Bare_Necessities", "seq": "40,59", "label": "the bare necessities"}, {"uri": "http://dbpedia.org/resource/Rock-a-Doodle", "seq": "65,77", "label": "rock a doodle"}], "predicate mapping": [], "id": "691beaad90c049ee8b594572b8dbc124"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Let_It_Be_(musical)> <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Ringo_Starr> }", "question": "Was Let it Be written by Ringo Starr?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Let_It_Be_(musical)", "seq": "4,12", "label": "Let it Be"}, {"uri": "http://dbpedia.org/resource/Ringo_Starr", "seq": "25,35", "label": "Ringo Starr"}], "predicate mapping": [], "id": "24ebd4641f2a4aa9a2d94e60bf9478ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }", "question": "How many artists are signed up with Celluloid Records?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Celluloid_Records", "seq": "36,52", "label": "Celluloid Records"}], "predicate mapping": [], "id": "b48a6444785e448b83e9f9120e667014"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hilda_de_Duhalde> <http://dbpedia.org/ontology/associate> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }", "question": "Which country were the associates of Hilda Duhalde from?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hilda_de_Duhalde", "seq": "37,49", "label": "Hilda Duhalde"}], "predicate mapping": [], "id": "6bd4f6e0ff164d198b28c87bbdeb06c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "In what tv shows did Jason Carter act?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "seq": "21,32", "label": "Jason Carter"}], "predicate mapping": [], "id": "cdc7afa4efc24c619aebfe90b366a6da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/property/author> ?x  . }", "question": "Name some books by Spanish speaking authors.", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_language", "seq": "19,34", "label": "Spanish speaking"}], "predicate mapping": [], "id": "47bc9fd86bf54061b9df63ac5d6789c1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Men's_singles> <http://dbpedia.org/ontology/silverMedalist> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri} ", "question": "Which  siler medalist of the Tennis at the 2012 Summer Olympics  Men's singles was also the  flagbearer of the Switzerland at the 2008 Summer Olympics", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Men's_singles", "seq": "29,77", "label": "Tennis at the 2012 Summer Olympics  Men's singles"}, {"uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics", "seq": "111,149", "label": "Switzerland at the 2008 Summer Olympics"}], "predicate mapping": [], "id": "811b775c0148423ebd8f7f213fb6fafa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television shows have been produced by Erik Bork?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Bork", "seq": "45,53", "label": "Erik Bork"}], "predicate mapping": [], "id": "6547856ca710456fbcb9872e8a03a4e2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/river> <http://dbpedia.org/resource/Pequea_Creek> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "In which states are there bridges over the Pequea Creek?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pequea_Creek", "seq": "43,54", "label": "Pequea Creek"}], "predicate mapping": [], "id": "e162c9820c6a4768bf7ffd8afc11a55b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Aubie> . ?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university with mascot as Aubie and president as jay Gogue ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aubie", "seq": "35,39", "label": "Aubie"}, {"uri": "http://dbpedia.org/resource/Jay_Gogue", "seq": "58,66", "label": "jay Gogue"}], "predicate mapping": [], "id": "35b0181dcf4d44abbc524b41da8eb11f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}", "question": "List the birthplace of the medicians who studied in Harvard.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard_Medical_School", "seq": "23,47", "label": "the medicians who studied"}], "predicate mapping": [], "id": "5313a4dd9c5a451ebf0c06bd24ed2b0a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name some Texas based companies ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "seq": "10,14", "label": "Texas"}], "predicate mapping": [], "id": "07747709891b435d84ae5c14259e92f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri} ", "question": "What is common between genre of battle chess and purpose of New Zealand Chess ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_Chess", "seq": "32,43", "label": "battle chess"}, {"uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation", "seq": "60,76", "label": "New Zealand Chess"}], "predicate mapping": [], "id": "4ae6b12b53054ad29b07c61a48527249"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> <http://dbpedia.org/resource/John_Boehner> }", "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010", "seq": "35,87", "label": "US House of Representatives elections in Ohio in 2010"}, {"uri": "http://dbpedia.org/resource/John_Boehner", "seq": "4,15", "label": "John Boehner"}], "predicate mapping": [], "id": "a1e1a70a1c92405e903356d3f058bda5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Jean-Claude_Latombe> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What is the alma mater of the scientist  whose PhD advisor is Jean-Claude Latombe ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean-Claude_Latombe", "seq": "62,80", "label": "Jean-Claude Latombe"}], "predicate mapping": [], "id": "871856be77aa4a128b9fbaaad6176bb6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Governorate_of_New_Castile> } ", "question": "who is the governer of New Castile?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Governorate_of_New_Castile", "seq": "11,33", "label": "governer of New Castile"}], "predicate mapping": [], "id": "cb24b43a6ea14f8691476c986fd94deb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "In which country is the Baku puppet Theater located which is also the birth palce of Anar Salmanov ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre", "seq": "24,42", "label": "Baku puppet Theater"}, {"uri": "http://dbpedia.org/resource/Anar_Salmanov", "seq": "85,97", "label": "Anar Salmanov"}], "predicate mapping": [], "id": "1a35a6119a4a482286916e22a00ff89f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Playboy_Mansion> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Which magazine's editor's official residence is Playboy Mansion?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playboy_Mansion", "seq": "48,62", "label": "Playboy Mansion"}], "predicate mapping": [], "id": "a869f86cad31408eb7ce2f7ec9cc6fad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Atlanta> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows telecasted on the network which has headquarters at Atlanta?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atlanta", "seq": "82,88", "label": "Atlanta"}], "predicate mapping": [], "id": "64452a48e109452f8d7c44e99d505ae8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Which military unit's  garrison is Pentagon and command structure is United States Department of Defense?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Pentagon", "seq": "35,42", "label": "Pentagon"}, {"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "seq": "69,103", "label": "United States Department of Defense"}], "predicate mapping": [], "id": "45ef969f39544740a00aabf182833319"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/St._Louis> . ?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Madison_River>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname Tulane Green Wave ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Louis", "seq": "76,86", "label": "Subdivision"}, {"uri": "http://dbpedia.org/resource/Madison_River", "seq": "6,15", "label": "university"}], "predicate mapping": [], "id": "560edd5735a04aed942d6c71d7d47f1f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bounce_TV> <http://dbpedia.org/ontology/foundedBy> ?uri } ", "question": "By whom is the broadcaster network Bounce TV founded?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bounce_TV", "seq": "35,43", "label": "Bounce TV"}], "predicate mapping": [], "id": "1fe29c8d282c43c8ba68b809c317857b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri } ", "question": "Where was William anthony trained ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "seq": "10,24", "label": "William anthony"}], "predicate mapping": [], "id": "12a72e0ad64a48f9bac59bc42cec75b8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri . }", "question": "Which countries were the first to play Gumus and Ne daj se, Nina?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "seq": "39,43", "label": "Gumus"}, {"uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina", "seq": "49,63", "label": "Ne daj se, Nina"}], "predicate mapping": [], "id": "156a0839803f4a9d9e14200615736044"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Where did the people beatified by Pope Pius X die?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Pius_X", "seq": "34,44", "label": "Pope Pius X"}], "predicate mapping": [], "id": "d5315c64d719430e9602df94b8a89c09"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Hominidae> . ?x <http://dbpedia.org/ontology/family> ?uri }", "question": "How many other family of the mammals exists  whose family is also Hominidae ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hominidae", "seq": "66,74", "label": "Hominidae"}], "predicate mapping": [], "id": "f3e83f69a08e4a5183ada408fca77850"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Name the country with currency as Aureus ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aureus", "seq": "34,39", "label": "Aureus"}], "predicate mapping": [], "id": "019a5359e534491181604839d176cdff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "Who were the pole drivers in GP when Damon hill was a first driver?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Damon_Hill", "seq": "37,46", "label": "Damon hill"}], "predicate mapping": [], "id": "0517011b2e174b5cb27a397265665cbd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Designers_for_Industry> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "How many awards have royal designers for industry awardwinners got?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Designers_for_Industry", "seq": "21,48", "label": "royal designers for industry"}], "predicate mapping": [], "id": "4ed98081a2ca43378ff4dc849b61d133"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }", "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)", "seq": "66,77", "label": "Target Field"}], "predicate mapping": [], "id": "4854b75bd8f94014ad4edb9315ad62a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gabriel_Slaughter> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "question": "List the relatives of the governor of Gabriel Slaughter?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gabriel_Slaughter", "seq": "38,54", "label": "Gabriel Slaughter"}], "predicate mapping": [], "id": "7d303bc28df742ec80b74432bd497aff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baja_California_Peninsula> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/WEPG> <http://dbpedia.org/property/city> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}", "question": "What continent of the world has Baja California peninsula and also has WEPG in one of it's cities?", "sparql_id": 316, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baja_California_Peninsula", "seq": "32,56", "label": "Baja California peninsula"}, {"uri": "http://dbpedia.org/resource/WEPG", "seq": "71,74", "label": "WEPG"}], "predicate mapping": [], "id": "1afef26545cf4f17bb7933a2939142af"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri . }", "question": "Which party won both the general electoin and the andhra pradesh election in 2004?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)", "seq": "50,80", "label": "andhra pradesh election in 2004"}, {"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "seq": "50,80", "label": "andhra pradesh election in 2004"}], "predicate mapping": [], "id": "412afcb751c4440083508ff2aa23abe8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "How many games are released for virtual consoles?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Console", "seq": "32,47", "label": "virtual consoles"}], "predicate mapping": [], "id": "876a44de32e64aaa9855928c078039df"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> } ", "question": "Which airlines fly to Gimhae International Airport?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gimhae_International_Airport", "seq": "22,49", "label": "Gimhae International Airport"}], "predicate mapping": [], "id": "5b45dc70c91a4476b7bfee1e7fcd372f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "To what political party do the politicians graduated from Somerville college, Oxford belong to?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Somerville_College,_Oxford", "seq": "58,83", "label": "Somerville college, Oxford"}], "predicate mapping": [], "id": "e3a7059770184b25a4d9b0398742786f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallace_Dollase> <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Where did Wallace Dollase die?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wallace_Dollase", "seq": "10,24", "label": "Wallace Dollase"}], "predicate mapping": [], "id": "8e08009e99dc455d922ce7a0ada9717a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . }", "question": "Where did the people canonized by John Paul II die?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_John_Paul_II", "seq": "34,45", "label": "John Paul II"}], "predicate mapping": [], "id": "b73c98e1a1cc4ebeb320c1268ec30b4e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Charlie_Mensuel> <http://dbpedia.org/property/editor> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "question": "Where did the editor of Charlie Mensuel die ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charlie_Mensuel", "seq": "24,38", "label": "Charlie Mensuel"}], "predicate mapping": [], "id": "39963beccde446c8944047f4d4cb3b84"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri } ", "question": "What is the alma mater of K. Terry Dornbush ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/K._Terry_Dornbush", "seq": "26,42", "label": "K. Terry Dornbush"}], "predicate mapping": [], "id": "05f59024c9ca4d59bc0dd7c19ebdc90c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri } ", "question": "Where is Denver Broncos located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denver_Broncos", "seq": "9,22", "label": "Denver Broncos"}], "predicate mapping": [], "id": "617982e40b1c40909cdb633c1b374e5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri . }", "question": "Which country has the Carmel Winery and the Teperberg 1870 winery ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carmel_Winery", "seq": "22,34", "label": "Carmel Winery"}, {"uri": "http://dbpedia.org/resource/Teperberg_1870", "seq": "44,57", "label": "Teperberg 1870"}], "predicate mapping": [], "id": "5cbde32223b249669ebf4fdde7f3ead9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fiq,_Ethiopia> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Adugna_Deyas> <http://dbpedia.org/property/birthPlace> ?uri . }", "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fiq,_Ethiopia", "seq": "59,72", "label": "Fiq is located"}, {"uri": "http://dbpedia.org/resource/Adugna_Deyas", "seq": "26,37", "label": "Adugna Deyas"}], "predicate mapping": [], "id": "3fab7450096d4585bd162a32f10f08f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Pilottown,_Louisiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose source is located in Itasca State Park and mouth is located in Pilottown, Louisiana?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Itasca_State_Park", "seq": "42,58", "label": "Itasca State Park"}, {"uri": "http://dbpedia.org/resource/Pilottown,_Louisiana", "seq": "84,103", "label": "Pilottown, Louisiana"}], "predicate mapping": [], "id": "aa76b402511940a2887da5d4f704c9f3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river which comes from Southend-on-Sea mountain?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Southend-on-Sea", "seq": "35,49", "label": "Southend-on-Sea"}], "predicate mapping": [], "id": "4c617796ad264521bad275ed96e3e71b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Meg_McGuffin> <http://dbpedia.org/ontology/education> ?uri } ", "question": "Where did Meg McGuffin graduated ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Meg_McGuffin", "seq": "10,21", "label": "Meg McGuffin"}], "predicate mapping": [], "id": "4c49002c50c740b69b9e310bb96d4c13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Abdel_Bouckar> <http://dbpedia.org/property/team> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "question": "Where is the team of Abdel Boucker located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abdel_Bouckar", "seq": "21,33", "label": "Abdel Boucker"}], "predicate mapping": [], "id": "dc81947e16094c54835cf356fa78365b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies for which music was given by  Geoffrey Burgon and distributed by  Cinema International Corporation?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geoffrey_Burgon", "seq": "46,60", "label": "Geoffrey Burgon"}, {"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "82,113", "label": "Cinema International Corporation"}], "predicate mapping": [], "id": "cd70ac27443f476991974aca030f0ff2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri }", "question": "Count the total number of academic discipline of the journals whose one of the academic discipline is Neuroimaging ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neuroimaging", "seq": "102,113", "label": "Neuroimaging"}], "predicate mapping": [], "id": "ee4e4eda446b49beaab2d615cfcec423"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Count the different religions practiced by people who are in the Malaysian and Chinese association.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association", "seq": "65,97", "label": "Malaysian and Chinese association"}], "predicate mapping": [], "id": "cf59b2f2f22e46d1af44c855e60632fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri . }", "question": "Name few companies where don berlin and michael sears have worked together?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Don_R._Berlin", "seq": "25,34", "label": "don berlin"}, {"uri": "http://dbpedia.org/resource/Michael_M._Sears", "seq": "40,52", "label": "michael sears"}], "predicate mapping": [], "id": "c9e971b03aac43bcba9df9779256b126"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Svetlana_Navasardyan> <http://dbpedia.org/property/origin> ?uri } ", "question": "To which country is Svetlana Navasardyan from?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Svetlana_Navasardyan", "seq": "20,39", "label": "Svetlana Navasardyan"}], "predicate mapping": [], "id": "e89c7b6d4201411dadea15fc7a9138db"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ajith_Perera> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri} ", "question": "What is the faith of the Ajith Perera and religious affiliation of the Neungin High School?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ajith_Perera", "seq": "25,36", "label": "Ajith Perera"}, {"uri": "http://dbpedia.org/resource/Neungin_High_School", "seq": "71,89", "label": "Neungin High School"}], "predicate mapping": [], "id": "4d7bec0dba5d42e0982d9832d3a78971"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Royal_Australian_Air_Force> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri . }", "question": "What is the mascot of the Royal Australian Air Force and Austin College?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Australian_Air_Force", "seq": "26,51", "label": "Royal Australian Air Force"}, {"uri": "http://dbpedia.org/resource/Austin_College", "seq": "57,70", "label": "Austin College"}], "predicate mapping": [], "id": "3fa4525f3018491aa2d9184c48896159"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.>  . }", "question": "Who managed England national under-20 football team and Middlesbrough F.C.?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-20_football_team", "seq": "12,50", "label": "England national under-20 football team"}, {"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "56,72", "label": "Middlesbrough F.C"}], "predicate mapping": [], "id": "a294972b904444408a89d3e753d73332"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Clara_Ng> <http://dbpedia.org/ontology/ethnicity> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "What is the religion of the ethnic group to which Clara Ng belongs?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clara_Ng", "seq": "50,57", "label": "Clara Ng"}], "predicate mapping": [], "id": "cfa6884352b444d8add91a623bbab10f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Saraband> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards won by the film director of Saraband ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saraband", "seq": "48,55", "label": "Saraband"}], "predicate mapping": [], "id": "973615440e0f471487e7bb99d0e2084c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Anglican_Communion> }", "question": "Was John of Damascus canonized by Anglican Communion?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_of_Damascus", "seq": "4,19", "label": "John of Damascus"}, {"uri": "http://dbpedia.org/resource/Anglican_Communion", "seq": "34,51", "label": "Anglican Communion"}], "predicate mapping": [], "id": "7ccf7bd3fd714601ac25679451fd3649"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Who owns the horses which have won the Timeform award?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timeform", "seq": "39,46", "label": "Timeform"}], "predicate mapping": [], "id": "55bc4c30a46549d99ab814a0d7c38eb0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ", "question": "Which distributer of Bombay Sapphire also makes Grewy goose ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)", "seq": "48,58", "label": "Grewy goose"}, {"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "seq": "21,35", "label": "Bombay Sapphire"}], "predicate mapping": [], "id": "8e47a69cb3824a16a86d9f02afd2a593"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/George_Cash> <http://dbpedia.org/property/parliament> <http://dbpedia.org/resource/Western_Australia> }", "question": "Was George Cash in the western australian parliament?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Cash", "seq": "4,14", "label": "George Cash"}, {"uri": "http://dbpedia.org/resource/Western_Australia", "seq": "23,40", "label": "western australian"}], "predicate mapping": [], "id": "a05ef1ad73414574abe88a1bd70f5530"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show broadcasted by Fox and presented by Ryan Seacrest ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "seq": "53,65", "label": "Ryan Seacrest"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "12,38", "label": "show broadcasted by Fox and"}], "predicate mapping": [], "id": "679e1082fff84c878024ee1d62389f0b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which university has affiliations to Graham Holdings and Kaplan, Inc.?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Holdings_Company", "seq": "37,55", "label": "Graham Holdings and"}, {"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "seq": "57,67", "label": "Kaplan, Inc"}], "predicate mapping": [], "id": "fe42aff9ce524c13950df850ed4d0737"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri } ", "question": "What are the notableworks of Russell T Davies?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "29,44", "label": "Russell T Davies"}], "predicate mapping": [], "id": "be9459f9eae64f38be49cf3573dc58c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person who was educated at Harvard-Westlake and won the Screen Actor Guild Life Achievement Award ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "36,59", "label": "Harvard-Westlake and won"}, {"uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award", "seq": "65,105", "label": "Screen Actor Guild Life Achievement Award"}], "predicate mapping": [], "id": "ec4218ce66a54c50ad5b8d8fc802f0e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_\u2013_Women's_doubles> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BadmintonPlayer>}", "question": "What is the place of birth of the badminton player who is the bronze medalist of Badminton at the 2012 Summer Olympics  Women's doubles ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_\u2013_Women's_doubles", "seq": "81,134", "label": "Badminton at the 2012 Summer Olympics  Women's doubles"}], "predicate mapping": [], "id": "18f4530b96d3413c887a761ef3de1cf0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "question": "Where do bachelor of arts live?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bachelor_of_Arts", "seq": "9,24", "label": "bachelor of arts"}], "predicate mapping": [], "id": "fc455f282c6549adaa1614637ae68991"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people live in the Beverly Hills, California?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "seq": "28,52", "label": "Beverly Hills, California"}], "predicate mapping": [], "id": "1cf3ba4382444e65880adff73f7125e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Sundridge_(horse)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Horses grandsired by Sundridge  have won which awards?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sundridge_(horse)", "seq": "21,29", "label": "Sundridge"}], "predicate mapping": [], "id": "b1f5915a9e9043c0b787d37137909a5a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Angels_Toru\u0144> <http://dbpedia.org/ontology/homeStadium> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "question": "What is the nickname of the home stadium of Angels Toru?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Angels_Toru\u0144", "seq": "44,54", "label": "Angels Toru"}], "predicate mapping": [], "id": "9f3ba1ac5940461a82d87b74d861d913"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }", "question": "What are the bands associated with the artists of My Favorite Girl  ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)", "seq": "50,65", "label": "My Favorite Girl"}], "predicate mapping": [], "id": "00eb2acadaaa4344a0fff0a57e7ff91f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Subaru_Legacy_(second_generation)> <http://dbpedia.org/ontology/layout> ?uri } ", "question": "What is the layout of Subaru Legacy (second generation) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Subaru_Legacy_(second_generation)", "seq": "22,34", "label": "Subaru Legacy"}], "predicate mapping": [], "id": "0ca28cd660a3450a9c67766dfe3ce288"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which religion do the people follow, whose constituency is Jadavpur?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)", "seq": "59,66", "label": "Jadavpur"}], "predicate mapping": [], "id": "08165fd11c3f4e49bdd932736db1e9c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Name an American football player whose debuted in Chicago Bears and former team is 1998 Baltimore Ravens season?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bears", "seq": "50,62", "label": "Chicago Bears"}, {"uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season", "seq": "83,110", "label": "1998 Baltimore Ravens season"}], "predicate mapping": [], "id": "fb89e5eaefbd45b6abc72a2de3f1a88d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Office_365> . ?x <http://dbpedia.org/property/services> ?uri  . }", "question": "What other things are provided by the producer of Office 365?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Office_365", "seq": "50,59", "label": "Office 365"}], "predicate mapping": [], "id": "cc70615cda2f4cd19a95e83f87285f3d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anatoly_Kharlampiyev> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Lyudmila_Buldakova> <http://dbpedia.org/property/deathPlace> ?uri . }", "question": "What is the deathplace of the Anatoly Kharlampiyev which is also the death place of  Lyudmila Buldakova?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anatoly_Kharlampiyev", "seq": "30,49", "label": "Anatoly Kharlampiyev"}, {"uri": "http://dbpedia.org/resource/Lyudmila_Buldakova", "seq": "85,102", "label": "Lyudmila Buldakova"}], "predicate mapping": [], "id": "2151bdd827224e77930d58070e08c1c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who are the people who died in a place architected by Jens Jensen", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)", "seq": "54,64", "label": "Jens Jensen"}], "predicate mapping": [], "id": "50ba41d267374555bc6bf5c1cf570b75"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Multilingualism> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "What are the software whose programming language are Multilingual?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Multilingualism", "seq": "53,64", "label": "Multilingual"}], "predicate mapping": [], "id": "452343f0f60b42b399b7d2cb29d6bb91"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/A._K._Singh> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the political party of the person succeeded by A.K. Singh?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/A._K._Singh", "seq": "55,64", "label": "A.K. Singh"}], "predicate mapping": [], "id": "882d32179f904be8b3678aa0b25fb3c7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)> <http://dbpedia.org/property/occupation> ?uri } ", "question": "What are the professions of Frederick Frelinghuysen (general) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)", "seq": "28,50", "label": "Frederick Frelinghuysen"}], "predicate mapping": [], "id": "8fcd17645d854494af5b6bbf9d11cc54"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What tv show is created by Brian Graden?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "seq": "27,38", "label": "Brian Graden"}], "predicate mapping": [], "id": "1b967dc18818484ba213913e39ac2215"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/T-Series> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the starring of the movies whose label is T-Series ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/T-Series", "seq": "47,54", "label": "T-Series"}], "predicate mapping": [], "id": "3d3c7cde66874980a0a5e54a7375ea1f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/G\u00e9za_Horv\u00e1th> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "Which operator of ganz UV is also the nationality of the Gza Horvth ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganz_UV", "seq": "18,24", "label": "ganz UV"}, {"uri": "http://dbpedia.org/resource/G\u00e9za_Horv\u00e1th", "seq": "57,66", "label": "Gza Horvth"}], "predicate mapping": [], "id": "2cbe6f6028204f2db497e7aa21514cae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "What was the career of some people who have committed suicide?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Suicide", "seq": "54,60", "label": "suicide"}], "predicate mapping": [], "id": "9e4c63f453514fb8b3ebf0531dfa0cd7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/Pittsburgh_Steelers> }", "question": "Is Pittsburgh Steelers the former team of Marv McFadden?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marv_McFadden", "seq": "42,54", "label": "Marv McFadden"}, {"uri": "http://dbpedia.org/resource/Pittsburgh_Steelers", "seq": "3,21", "label": "Pittsburgh Steelers"}], "predicate mapping": [], "id": "5771b7d643f54d72a32152580a3e246a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri } ", "question": "What is the ideology of Palang Dharma Party ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "seq": "24,42", "label": "Palang Dharma Party"}], "predicate mapping": [], "id": "53b5c75907db4603977bf8ecd7de7eb9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri } ", "question": "Name the institute of Alton Ochsner ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alton_Ochsner", "seq": "22,34", "label": "Alton Ochsner"}], "predicate mapping": [], "id": "4ff9b452822549048ab6fb060739559c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri} ", "question": "Name the common record label of I pray on Christmas and Next Thing ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/I_Pray_on_Christmas", "seq": "32,50", "label": "I pray on Christmas"}, {"uri": "http://dbpedia.org/resource/Next_Thing", "seq": "56,65", "label": "Next Thing"}], "predicate mapping": [], "id": "9d360f44420b41f5af982a515dfc7fa6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2009> <http://dbpedia.org/ontology/affiliation> ?uri . }", "question": "Who won the general elections in India in 2009, and had also won the AP elections in 2004 ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "seq": "4,37", "label": "won the general elections in India"}, {"uri": "http://dbpedia.org/resource/Indian_general_election,_2009", "seq": "4,37", "label": "won the general elections in India"}], "predicate mapping": [], "id": "19a01f4fb64d4746969d681e2913f645"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ", "question": "What is the common palce of study for jack McGregor and Philip W. Pillsbury ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_McGregor", "seq": "38,50", "label": "jack McGregor"}, {"uri": "http://dbpedia.org/resource/Philip_W._Pillsbury", "seq": "56,74", "label": "Philip W. Pillsbury"}], "predicate mapping": [], "id": "d0c96c44212d47e1b3ebd9752421d1f7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_\u2013_Men's_100_metre_freestyle> <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Ian_Thorpe> }", "question": "Is Ian Thorpe the bronze medalist of Swimming at the 2004 Summer Olympics  Men's 100 metre freestyle?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_\u2013_Men's_100_metre_freestyle", "seq": "37,99", "label": "Swimming at the 2004 Summer Olympics  Men's 100 metre freestyle"}, {"uri": "http://dbpedia.org/resource/Ian_Thorpe", "seq": "3,12", "label": "Ian Thorpe"}], "predicate mapping": [], "id": "c124e98b0ceb4a70a62e4f8655c08c56"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "How many cities are around the sea in which the ionian sea flows?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ionian_Sea", "seq": "48,57", "label": "ionian sea"}], "predicate mapping": [], "id": "7a21a6d6f21d47d0b60283006ff13a51"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ann_Arbor,_Michigan> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Where can I find people whose hometown is Ann Arbour in Michigan?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ann_Arbor,_Michigan", "seq": "42,63", "label": "Ann Arbour in Michigan"}], "predicate mapping": [], "id": "95b3fafcb14440d895c1336ced355494"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show's theme music composer is Gary Portnoy and subsequent work is Frasier?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gary_Portnoy", "seq": "48,59", "label": "Gary Portnoy"}, {"uri": "http://dbpedia.org/resource/Frasier", "seq": "84,90", "label": "Frasier"}], "predicate mapping": [], "id": "bb4e3f8507444b49894b8b309c5a3f0d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/licensee> <http://dbpedia.org/resource/Incorporation_(business)> . ?x <http://dbpedia.org/property/licensee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "Name the licensee of the TV station whose one of the licensee is Incorporation ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Incorporation_(business)", "seq": "65,77", "label": "Incorporation"}], "predicate mapping": [], "id": "5ad1ae78dccc48cf8191cdc793ed60b5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Noko> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/James_Maker> }", "question": "Was James maker in the band Noko?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Noko", "seq": "28,31", "label": "Noko"}, {"uri": "http://dbpedia.org/resource/James_Maker", "seq": "4,14", "label": "James maker"}], "predicate mapping": [], "id": "dd1825b14155469b8f2931245fe6c188"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Anna_Bergman> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "Which awards did the parents of Anna Bergman win ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anna_Bergman", "seq": "32,43", "label": "Anna Bergman"}], "predicate mapping": [], "id": "baf5c96273684029beba9ba7d893203e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Norman,_Oklahoma> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}", "question": "Where did the wrestler die who was billed in Norman, Oklahoma?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norman,_Oklahoma", "seq": "45,60", "label": "Norman, Oklahoma"}], "predicate mapping": [], "id": "503e2359a25a4b54a614650a40b1ab55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "question": "How many different genres of games can I find which are compatible with the Commodore 64?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Commodore_64", "seq": "76,87", "label": "Commodore 64"}], "predicate mapping": [], "id": "f30e5b31cebd42fca8e78aee5f693598"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/David_Hume> . ?x <http://dbpedia.org/property/education> ?uri  . }", "question": "Where did the relatives of David Hume study?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Hume", "seq": "27,36", "label": "David Hume"}], "predicate mapping": [], "id": "6b5ad23d383444478ce3e8e1acbbc649"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . }", "question": "Which producer of Boeing F/A has Dennis Muilenburg as an important person ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "seq": "18,38", "label": "Boeing F/A has Dennis"}, {"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "33,49", "label": "Dennis Muilenburg"}], "predicate mapping": [], "id": "1534fc10e4894ed2b6b0d699ae7dd80c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri} ", "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re", "seq": "25,40", "label": "Jonas Gahr where"}, {"uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8", "seq": "42,62", "label": "Sverre Krogh was born"}], "predicate mapping": [], "id": "f67fb0a1674440259432e6bf7019bf1a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lionel_Messi> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Argentina_national_football_team> }", "question": "Does Lionel Messi play in the Argentina National Football Team?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lionel_Messi", "seq": "5,16", "label": "Lionel Messi"}, {"uri": "http://dbpedia.org/resource/Argentina_national_football_team", "seq": "30,61", "label": "Argentina National Football Team"}], "predicate mapping": [], "id": "477fee2dbaf14427a27647739e512878"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Owyhee_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Oregon> }", "question": "Does the owyhee river flow into oregon?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Owyhee_River", "seq": "9,20", "label": "owyhee river"}, {"uri": "http://dbpedia.org/resource/Oregon", "seq": "32,37", "label": "oregon"}], "predicate mapping": [], "id": "fef9e0b2920a4196a4fb2a73724a9af3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/X_the_Unknown> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/James_Needs> }", "question": "Was X the Unknown edited by James needs?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/X_the_Unknown", "seq": "4,16", "label": "X the Unknown"}, {"uri": "http://dbpedia.org/resource/James_Needs", "seq": "28,38", "label": "James needs"}], "predicate mapping": [], "id": "959ab2e634754cfaa81e52b342c5d1c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/ontology/owningCompany> ?uri } ", "question": "Which company owns Sony bank ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Bank", "seq": "19,27", "label": "Sony bank"}], "predicate mapping": [], "id": "46ae4963123144699d4f6d11784e7bf9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment> . ?x <http://dbpedia.org/property/district> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "Martin AN/GSG-5 is a part of the building in which city?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment", "seq": "0,43", "label": "Martin AN/GSG-5 is a part of the building in"}], "predicate mapping": [], "id": "bb54180751be476bb26a39120b330d55"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/ontology/president> ?uri } ", "question": "Who is the president of United World College of Costa Rica ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica", "seq": "24,57", "label": "United World College of Costa Rica"}], "predicate mapping": [], "id": "a883dc6214124d909e2ec7f7cbd9729c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri } ", "question": "What party was in majority of Fourth Legislative Assembly of Delhi?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi", "seq": "30,65", "label": "Fourth Legislative Assembly of Delhi"}], "predicate mapping": [], "id": "b091da8838fe41e0967e92add727c27d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri } ", "question": "What is the venue of Indy PopCon ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indy_PopCon", "seq": "21,31", "label": "Indy PopCon"}], "predicate mapping": [], "id": "e0394ddbda3d42f994117e6e1ef5a131"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri. <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri} ", "question": "Which non fictional subject of Thud is the athletics of PATTS College of Aeronautics ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thud!", "seq": "31,34", "label": "Thud"}, {"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "seq": "56,83", "label": "PATTS College of Aeronautics"}], "predicate mapping": [], "id": "a2bd883db228481cb81969ed59dc68e8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ferrel_Harris> <http://dbpedia.org/property/birthplace> ?uri } ", "question": "Where is the birthplace of Ferrel Harris ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferrel_Harris", "seq": "27,39", "label": "Ferrel Harris"}], "predicate mapping": [], "id": "39562e37dcd645e8aa5d083018173381"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> } ", "question": "who was the president under whom winston bryant served as a lieutenant?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "33,46", "label": "winston bryant"}], "predicate mapping": [], "id": "0898b1c260b643f8be620cea3ccb7bbd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }", "question": "Is Essex the Ceremonial County of West Tilbury?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Tilbury", "seq": "34,45", "label": "West Tilbury"}, {"uri": "http://dbpedia.org/resource/Essex", "seq": "3,7", "label": "Essex"}], "predicate mapping": [], "id": "d30babe0e611482a8158fd9a37eabe35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What are the airlines whose hub airport is Los Angeles International Airport?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport", "seq": "43,75", "label": "Los Angeles International Airport"}], "predicate mapping": [], "id": "1635d75bc91149baba817e3b941d67db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "Count all the books written by an author buried in the Convent of Barefoot Trinitarians?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians", "seq": "55,86", "label": "Convent of Barefoot Trinitarians"}], "predicate mapping": [], "id": "9615aa0561ce4e4a960d23ede56fc21a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mojo_Priest> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/On_Deadly_Ground> <http://dbpedia.org/property/director> ?uri . }", "question": "Which director of On deadly Ground also released Mojo Priest ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mojo_Priest", "seq": "49,59", "label": "Mojo Priest"}, {"uri": "http://dbpedia.org/resource/On_Deadly_Ground", "seq": "18,33", "label": "On deadly Ground"}], "predicate mapping": [], "id": "2a96555f9e0048bbb838499c8484797b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "question": "Who were some governmental heads in Nazi Germany?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nazi_Germany", "seq": "36,47", "label": "Nazi Germany"}], "predicate mapping": [], "id": "615091ae47f447b2996f509c01cc4b6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Akwasi_Oppong_Fosu> <http://dbpedia.org/ontology/nationality> ?uri . }", "question": "Name the common nationality of Georgina Theodora Wood and akwasi Oppong Fosu ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood", "seq": "31,52", "label": "Georgina Theodora Wood"}, {"uri": "http://dbpedia.org/resource/Akwasi_Oppong_Fosu", "seq": "58,75", "label": "akwasi Oppong Fosu"}], "predicate mapping": [], "id": "0e5778a4027c4c21981d48f093bad188"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Truckee,_California> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are some TV shows whose voice actors are from Truckee, California, US?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Truckee,_California", "seq": "51,69", "label": "Truckee, California"}], "predicate mapping": [], "id": "3722e91c57c84a39bac14bfe89532583"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "What is the total number of office holders who preceded the people working under president bill clinton?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Clinton", "seq": "91,102", "label": "bill clinton"}], "predicate mapping": [], "id": "ebace02293c84cddabf5803a707d140d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dafydd_Benfras> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Jasmine_Lowson> <http://dbpedia.org/ontology/citizenship> ?uri} ", "question": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dafydd_Benfras", "seq": "35,48", "label": "Dafydd Benfras"}, {"uri": "http://dbpedia.org/resource/Jasmine_Lowson", "seq": "56,69", "label": "Jasmine Lowson"}], "predicate mapping": [], "id": "bdf590911bf74c79ab82b8964a16d3d2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters> <http://dbpedia.org/property/nickname> ?uri } ", "question": "What are the nicknames given to the characters of The Wolves of the Mercy Falls?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters", "seq": "36,78", "label": "characters of The Wolves of the Mercy Falls"}], "predicate mapping": [], "id": "f3a26b9c5fb84504821433f49a62d31c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Winchester_Cathedral>  . }", "question": "How many people are buried in the Winchester Cathedral?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winchester_Cathedral", "seq": "34,53", "label": "Winchester Cathedral"}], "predicate mapping": [], "id": "7d87576a21984b83898106db13ed5ae6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Marauder> <http://dbpedia.org/ontology/colour> ?uri } ", "question": "What is the colour of Red Marauder ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_Marauder", "seq": "22,33", "label": "Red Marauder"}], "predicate mapping": [], "id": "0ca53bf56bcb4b5f8a270a98c9c1c205"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri } ", "question": "List the territory of Tonkin Campaign ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonkin_Campaign", "seq": "22,36", "label": "Tonkin Campaign"}], "predicate mapping": [], "id": "853f4ee49ca64a6394f25dbcb0998674"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/Harry_Potter> }", "question": "Is wizard rock inspired from Harry potter?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wizard_rock", "seq": "3,13", "label": "wizard rock"}, {"uri": "http://dbpedia.org/resource/Harry_Potter", "seq": "29,40", "label": "Harry potter"}], "predicate mapping": [], "id": "4d16a08db93348988792d0efc91d6ae6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Capitol_400> <http://dbpedia.org/ontology/routeStart> ?uri } ", "question": "What is the route start of Capitol 400 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Capitol_400", "seq": "27,37", "label": "Capitol 400"}], "predicate mapping": [], "id": "2578f19d55494d34b4c2cb71b5c72674"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri . }", "question": "Who made the Y block engine and the SHO V8 engine?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Y-block_engine", "seq": "13,26", "label": "Y block engine"}, {"uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine", "seq": "36,48", "label": "SHO V8 engine"}], "predicate mapping": [], "id": "ae24568ec2e94bb3b2c5de7ef38478e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What other awards have been given to Golden Globe winners?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Golden_Globe_Award", "seq": "37,56", "label": "Golden Globe winners"}], "predicate mapping": [], "id": "df2c6434c7714725be5766e707866ba8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mind_Blowin'_(Smooth_song)> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "With which musical artist is the music group which sung Mind Blowin' related to ?  ", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mind_Blowin'_(Smooth_song)", "seq": "56,66", "label": "Mind Blowin"}], "predicate mapping": [], "id": "5c9545bdb6fa49c694b4e18b35e6bf8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "question": "How many subjects have been covered in fantasy novels?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fantasy", "seq": "39,45", "label": "fantasy"}], "predicate mapping": [], "id": "7b67e23763bd4b55a7a2c6e9ad44b195"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "List the universities with athletics NCAA Division I Football Bowl Subdivision ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision", "seq": "37,77", "label": "NCAA Division I Football Bowl Subdivision"}], "predicate mapping": [], "id": "4bc850d823374bc79417ccaedbc85cc5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri } ", "question": "In which races does Coneygree compete?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Coneygree", "seq": "20,28", "label": "Coneygree"}], "predicate mapping": [], "id": "ef89ea65fb1e475d87bfd0d41dc3df4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Madden_Football_'92> <http://dbpedia.org/property/designer> ?uri } ", "question": "Who was the designer of john madden Football '92 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Madden_Football_'92", "seq": "24,47", "label": "john madden Football '92"}], "predicate mapping": [], "id": "0e401e47838c4dba988eda6a6838e8fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which ancient country had capital as Nicomedia and History of Trier?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nicomedia", "seq": "37,45", "label": "Nicomedia"}, {"uri": "http://dbpedia.org/resource/History_of_Trier", "seq": "51,66", "label": "History of Trier"}], "predicate mapping": [], "id": "3f8912118a034abd8267bab919afc00f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri} ", "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/MasterCard_Centre", "seq": "20,36", "label": "MAsterCard center"}, {"uri": "http://dbpedia.org/resource/Antoine_Bibeau", "seq": "69,82", "label": "Antoine Bibeau"}], "predicate mapping": [], "id": "3a34f7c15c0e48bba64cbc21b231ee6b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>}", "question": "Which teams participate in the football seasons headed by Patricia Amorim?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Patr\u00edcia_Amorim", "seq": "58,72", "label": "Patricia Amorim"}], "predicate mapping": [], "id": "d5c6186b35e84d629ac4471b606ac5ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Fr._Almeida> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Which sports are played in schools founded by Fr Almeida?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Almeida", "seq": "46,55", "label": "Fr Almeida"}], "predicate mapping": [], "id": "49a721669f7342a6babb0b2875943b45"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri } ", "question": "In which wars did Percy Fitzwallace fight?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Percy_Fitzwallace", "seq": "18,34", "label": "Percy Fitzwallace"}], "predicate mapping": [], "id": "826719619f624cc08c74945255b6df1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ben_Ysursa> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }", "question": "In which state is the alma mater of Ben Ysursa located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ben_Ysursa", "seq": "36,45", "label": "Ben Ysursa"}], "predicate mapping": [], "id": "dc720b39588c4852a3086c7b106edad0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "Players from how many teams have participated in the National Hockey League?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Hockey_League", "seq": "53,74", "label": "National Hockey League"}], "predicate mapping": [], "id": "c1cec6b2504746e5b9e0a84cca31840d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }", "question": "Who are some US colonels?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "seq": "16,23", "label": "colonels"}], "predicate mapping": [], "id": "c07f906674b1433bbb4e9555d8ff28a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "How many places were ruled by Elizabeth II?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_II", "seq": "30,41", "label": "Elizabeth II"}], "predicate mapping": [], "id": "ccaaf32b5f0f46d699458212fd57221a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Kate_Spade_&_Company>  . }", "question": "Who is on the board of Kate Spade and company?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kate_Spade_&_Company", "seq": "23,44", "label": "Kate Spade and company"}], "predicate mapping": [], "id": "009195815bfe4b2da02ac6c1f612ce32"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which awards have been given to scientists that graduated from NKU athens?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens", "seq": "43,72", "label": "that graduated from NKU athens"}], "predicate mapping": [], "id": "76434a3de4eb4e23946721c8976f33eb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julius_C._Burrows> <http://dbpedia.org/property/order> ?uri } ", "question": "What is the rank of Julius C. Burrows politically?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julius_C._Burrows", "seq": "20,36", "label": "Julius C. Burrows"}], "predicate mapping": [], "id": "5a6ec3749e5e4c7ab7af6a94563ea793"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julie_Hastings> <http://dbpedia.org/ontology/club> ?uri } ", "question": "Name the club of Julie Hastings ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julie_Hastings", "seq": "17,30", "label": "Julie Hastings"}], "predicate mapping": [], "id": "8d63fe63027947458a867a5902c1c0e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hallopus> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What is the death location of the scientist who is the known authority of Hallopus ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hallopus", "seq": "74,81", "label": "Hallopus"}], "predicate mapping": [], "id": "0af37d7da2d44dad82fdc851c7e9c38f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Art_Students_League_of_New_York> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Artists trained at art students league NY are buried where?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Art_Students_League_of_New_York", "seq": "19,44", "label": "art students league NY are"}], "predicate mapping": [], "id": "5bc9919a43db4252ba6316057cf3b8e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . }", "question": "Whose creators are Jerry Seinfeld and Larry David?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Seinfeld", "seq": "19,32", "label": "Jerry Seinfeld"}, {"uri": "http://dbpedia.org/resource/Larry_David", "seq": "38,48", "label": "Larry David"}], "predicate mapping": [], "id": "536bed978e9d4db1bc5789baf5d939d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_49ers>  . }", "question": "Who are the people who played for San Francisco 49ers?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_49ers", "seq": "34,52", "label": "San Francisco 49ers"}], "predicate mapping": [], "id": "3aab103841c348e199c10879fa2b70d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeff_Hornacek> <http://dbpedia.org/property/highschool> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What is the Nickname of the school where Jeff Hornacek studied  ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeff_Hornacek", "seq": "41,53", "label": "Jeff Hornacek"}], "predicate mapping": [], "id": "bb90c58c414a4f819154ecb33586121d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Lee_Krasner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Which artist married to Lee Krasner?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lee_Krasner", "seq": "24,34", "label": "Lee Krasner"}], "predicate mapping": [], "id": "dc3403a37b77457aafadb0b90e8ed62a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monta\u00f1as_Mayas_Chiquibul> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Bernardo_Escobar> <http://dbpedia.org/property/birthPlace> ?uri . }", "question": "Which country of Montaas Mayas Chiquibul is the birth place of Jos Bernardo Escobar?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monta\u00f1as_Mayas_Chiquibul", "seq": "17,39", "label": "Montaas Mayas Chiquibul"}, {"uri": "http://dbpedia.org/resource/Jos\u00e9_Bernardo_Escobar", "seq": "63,82", "label": "Jos Bernardo Escobar"}], "predicate mapping": [], "id": "3c710b7cf9c740f1ab2af4ee8e84d4db"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Francisco_Pizarro> <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> }", "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Francisco_Pizarro", "seq": "4,20", "label": "Francisco Pizarro"}, {"uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor", "seq": "40,69", "label": "Charles 5, of the roman empire"}], "predicate mapping": [], "id": "8cd244d8962b4f808264a0ce811cf46a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name all the doctoral student of the scientist who also supervised Mary Ainsworth ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Ainsworth", "seq": "67,80", "label": "Mary Ainsworth"}], "predicate mapping": [], "id": "a2bb1b6a34864a0fa79b65de6dcbe19b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona> . ?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys> . }", "question": "Who was in youth clubs of FC Barcelona and Newell's Old Boys?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/FC_Barcelona", "seq": "26,37", "label": "FC Barcelona"}, {"uri": "http://dbpedia.org/resource/Newell's_Old_Boys", "seq": "43,59", "label": "Newell's Old Boys"}], "predicate mapping": [], "id": "5edb220b2251465ba6759abfe2fe6e4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Gulf_of_Mexico> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river's mouth is located in Gulf of Mexico and has source location as Itasca State Park ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gulf_of_Mexico", "seq": "34,47", "label": "Gulf of Mexico"}, {"uri": "http://dbpedia.org/resource/Itasca_State_Park", "seq": "76,92", "label": "Itasca State Park"}], "predicate mapping": [], "id": "288a095b6d584ca9be2d37ee510ddb4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "question": "Whose youth clubs used to participate in Argentine Primera Division?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n", "seq": "41,66", "label": "Argentine Primera Division"}], "predicate mapping": [], "id": "948bff1369c74f2e80829f55fe947179"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Murray_Gleeson> <http://dbpedia.org/ontology/appointer> ?x . ?x <http://dbpedia.org/ontology/primeMinister> ?uri  . }", "question": "Which prime ministers were served by the governor who appointed Murray Gleeson?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Murray_Gleeson", "seq": "64,77", "label": "Murray Gleeson"}], "predicate mapping": [], "id": "8a54f285292b4890929cead57276b9b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose music composer is Akira Ifukube?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akira_Ifukube", "seq": "44,56", "label": "Akira Ifukube"}], "predicate mapping": [], "id": "632fe10298ad4842bb28ca3404eec4b1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lawrence_F._Cafero> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Samuel_Keeler> <http://dbpedia.org/ontology/restingPlace> ?uri} ", "question": "Which adminstrative region of Lawrence F. Cafero is also the resting place of Samuel Keeler ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lawrence_F._Cafero", "seq": "30,47", "label": "Lawrence F. Cafero"}, {"uri": "http://dbpedia.org/resource/Samuel_Keeler", "seq": "78,90", "label": "Samuel Keeler"}], "predicate mapping": [], "id": "10e015b4b65b4de88ae622de46899157"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri . }", "question": "Who appointed both John Drayton and William Clark to their respective offices?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Drayton", "seq": "19,30", "label": "John Drayton"}, {"uri": "http://dbpedia.org/resource/William_Clark", "seq": "36,48", "label": "William Clark"}], "predicate mapping": [], "id": "51652f5c18314876bfd28f3a00e53203"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Current_River_(Missouri)> <http://dbpedia.org/ontology/mouthMountain> ?uri } ", "question": "What is the mouth mountain of Current River (Missouri) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Current_River_(Missouri)", "seq": "30,42", "label": "Current River"}], "predicate mapping": [], "id": "0e126d0d57d94ac59b74706ee95d40ef"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)> } ", "question": "Who all did their high school in Denbigh high School?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)", "seq": "33,51", "label": "Denbigh high School"}], "predicate mapping": [], "id": "dc0fc69c4c2449c4a1a5b337f699d91c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Vuelta_Mexico_Telmex> <http://dbpedia.org/property/region> ?uri . }", "question": "In which part of the world will I find Kim Sawchuk and Vuelta Mexico Telmex?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kim_Sawchuk", "seq": "39,49", "label": "Kim Sawchuk"}, {"uri": "http://dbpedia.org/resource/Vuelta_Mexico_Telmex", "seq": "55,74", "label": "Vuelta Mexico Telmex"}], "predicate mapping": [], "id": "7a206da5629442c7a1853a9b62464368"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/EXperimental_Computing_Facility> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "question": "List everything written in languages developed by EXperimental Computing Facility?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/EXperimental_Computing_Facility", "seq": "50,80", "label": "EXperimental Computing Facility"}], "predicate mapping": [], "id": "9c31f5b82f7345a08d1845c0744d8eac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Me_and_My_Arrow> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "Who is the singer of the album which has a song Me and My arrow ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Me_and_My_Arrow", "seq": "48,62", "label": "Me and My arrow"}], "predicate mapping": [], "id": "5e40045c1ab34eae8400e7bb2de5784d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> }", "question": "Is Azerbaijan the membership of European Go Federation?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Go_Federation", "seq": "32,53", "label": "European Go Federation"}, {"uri": "http://dbpedia.org/resource/Azerbaijan", "seq": "3,12", "label": "Azerbaijan"}], "predicate mapping": [], "id": "8e279a9971084cb08ecf32bc378053d2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }", "question": "Who debuted their career in a team coached by Chip Kelly?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chip_Kelly", "seq": "46,55", "label": "Chip Kelly"}], "predicate mapping": [], "id": "00a5ab1c4748474ab4f686de85c41cb9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/The_Band> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "How many albums did the maker of The Band produce?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Band", "seq": "33,40", "label": "The Band"}], "predicate mapping": [], "id": "f08d139cd5f1417a98264657c0c71637"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ", "question": "What is the religious affiliation of Hong Kong Taoist Association Tang Hin Memorial Secondary School ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School", "seq": "37,99", "label": "Hong Kong Taoist Association Tang Hin Memorial Secondary School"}], "predicate mapping": [], "id": "b846e29b2bb74db29610cdbbbc7b1740"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Joe_Namath> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Beaver_Falls_High_School> }", "question": "Did Joe Namath did his highschool in Beaver Falls High School?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Namath", "seq": "4,13", "label": "Joe Namath"}, {"uri": "http://dbpedia.org/resource/Beaver_Falls_High_School", "seq": "37,60", "label": "Beaver Falls High School"}], "predicate mapping": [], "id": "cbfdaaad592b4ef7b08d5ad4d0d0ac09"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Lars_Pearson> <http://dbpedia.org/ontology/notableWork> ?uri . }", "question": "Which work is both Neil Cross and Lars Pearson both known for ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Cross", "seq": "19,28", "label": "Neil Cross"}, {"uri": "http://dbpedia.org/resource/Lars_Pearson", "seq": "34,45", "label": "Lars Pearson"}], "predicate mapping": [], "id": "bedb3683384446c4af8fa5348c967363"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What are some non fiction subjects dealt with in fantasy novels?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fantasy", "seq": "49,55", "label": "fantasy"}], "predicate mapping": [], "id": "42fdd268b8604dadbb164492ae3450eb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PlayStation_4> <http://dbpedia.org/property/predecessor> ?uri. <http://dbpedia.org/resource/Oddworld:_Munch's_Oddysee> <http://dbpedia.org/ontology/developer> ?uri} ", "question": "Which predecessor of the PlayStation 4 is also the developer of Oddworld: Munch's Oddysee?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "seq": "25,37", "label": "PlayStation 4"}, {"uri": "http://dbpedia.org/resource/Oddworld:_Munch's_Oddysee", "seq": "64,88", "label": "Oddworld: Munch's Oddysee"}], "predicate mapping": [], "id": "9f4d4fc45aaf46dda67ad836f45ecb66"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name few movies directed by Tim Burton ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tim_Burton", "seq": "28,37", "label": "Tim Burton"}], "predicate mapping": [], "id": "d3d3ee30a3314e28bcebf4cbac9d53e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "question": "Who has fought in wars under commander Arthur St Clair?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_St._Clair", "seq": "39,53", "label": "Arthur St Clair"}], "predicate mapping": [], "id": "14ded43faabe4a51af41cfafc21363c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "Which awards have been given to immunologists?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Immunology", "seq": "32,44", "label": "immunologists"}], "predicate mapping": [], "id": "61573482fe9745b38c65109394bdc050"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Puss_in_Boots_(1922_film)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What are the awards won by the producer of Puss in Boots (film)?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Puss_in_Boots_(1922_film)", "seq": "43,55", "label": "Puss in Boots"}], "predicate mapping": [], "id": "0f04c3c74476410791c8a43465ba6918"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri} ", "question": "Name the college of the Allama Matthews which also has affiliation with  Monroe Carell Jr. Children's Hospital at Vanderbilt", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Allama_Matthews", "seq": "24,38", "label": "Allama Matthews"}, {"uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt", "seq": "73,123", "label": "Monroe Carell Jr. Children's Hospital at Vanderbilt"}], "predicate mapping": [], "id": "f0ce6eff38b647919c395acd2a7f7451"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri } ", "question": "Name the debut team of Butch Metzger ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Butch_Metzger", "seq": "23,35", "label": "Butch Metzger"}], "predicate mapping": [], "id": "02172a58699f46568edf1ba7690b144d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chinga_Chang_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri. <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri . }", "question": "Name the common distributing label of the Chinga Chang Records and StandBy Records ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chinga_Chang_Records", "seq": "42,61", "label": "Chinga Chang Records"}, {"uri": "http://dbpedia.org/resource/StandBy_Records", "seq": "67,81", "label": "StandBy Records"}], "predicate mapping": [], "id": "e91032d570294b618d1f2611d193276f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }", "question": "What are some relatives of the spouse of Uncle henry from Oz?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)", "seq": "41,51", "label": "Uncle henry"}], "predicate mapping": [], "id": "9e78a9d215f249178b9f58cab8cb0fd5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ", "question": "Which line of the Vadodara Junction railway station is the route end of Mumbai Vadodara Expressway ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway", "seq": "72,97", "label": "Mumbai Vadodara Expressway"}, {"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "seq": "18,50", "label": "Vadodara Junction railway station"}], "predicate mapping": [], "id": "784c77a5d9a64f6fbb7878e159ba6549"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . }", "question": "Foxconn makes how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxconn", "seq": "0,6", "label": "Foxconn"}], "predicate mapping": [], "id": "785671e67373470d82a70c72bbe1184d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Beasley> <http://dbpedia.org/ontology/race> ?uri. <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri . }", "question": "In which racing championships did Bobby Beasley and Martin Molony participate?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bobby_Beasley", "seq": "34,46", "label": "Bobby Beasley"}, {"uri": "http://dbpedia.org/resource/Martin_Molony", "seq": "52,64", "label": "Martin Molony"}], "predicate mapping": [], "id": "87b5dbafb34246f28c50d4db01d2f791"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Deborah_Turness> . ?uri <http://dbpedia.org/ontology/network> ?x  . }", "question": "What is telecasted on the network where Deborah Turness holds important position?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Deborah_Turness", "seq": "40,54", "label": "Deborah Turness"}], "predicate mapping": [], "id": "b46c1b706504419494f4cccf84754e62"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}", "question": "Which actors have performed in plays performed in New York?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "seq": "50,57", "label": "New York"}], "predicate mapping": [], "id": "da4845645dbf4dd5b072c54980634196"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fran\u00e7ois_Hollande> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What currencies are used in the countries which have been governed by Francois Hollande?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fran\u00e7ois_Hollande", "seq": "70,86", "label": "Francois Hollande"}], "predicate mapping": [], "id": "dcae078ebdd74499a63310fa184928ff"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Rayan_SC> <http://dbpedia.org/ontology/ground> ?uri } ", "question": "Name the ground of Al-Rayan SC ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al-Rayan_SC", "seq": "19,29", "label": "Al-Rayan SC"}], "predicate mapping": [], "id": "6119ae45be054c5b8898d10978eae65d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bloomberg_Radio> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "Who is the owner of the bank which owns Bloomberg Radio?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bloomberg_Radio", "seq": "40,54", "label": "Bloomberg Radio"}], "predicate mapping": [], "id": "9776c037c6cd401c9c3234960d164750"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Episcopal_Church_(United_States)> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Where did the office holder died who also have faith in Episcopal Church ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Episcopal_Church_(United_States)", "seq": "56,71", "label": "Episcopal Church"}], "predicate mapping": [], "id": "52e919158ffa4ce9bdb2817cebd96da5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Another_Lonely_Night_in_New_York> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Robin_Gibb> }", "question": "Is Another Lonely Night in New York by the musical band Robin Gibb?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Another_Lonely_Night_in_New_York", "seq": "3,34", "label": "Another Lonely Night in New York"}, {"uri": "http://dbpedia.org/resource/Robin_Gibb", "seq": "56,65", "label": "Robin Gibb"}], "predicate mapping": [], "id": "821d1baa1d594333a5e79d50c16efcb4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Oddworld> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "List all the developers of the Oddworld series?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oddworld", "seq": "31,38", "label": "Oddworld"}], "predicate mapping": [], "id": "e60963b2ce1644e5859606046cdd4e4a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Radhabinod_Koijam> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/party> ?uri  . }", "question": "To which political party does the successor of Radhabinod Koijam belong?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Radhabinod_Koijam", "seq": "47,63", "label": "Radhabinod Koijam"}], "predicate mapping": [], "id": "7b7798e7120d496ba5b75daea48b5038"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Andrews_Air_Base> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Akinoumi_Setsuo> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which builder of Edwin Andrews Air Base isalso place of birth of the Akinoumi Setsuo ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Andrews_Air_Base", "seq": "17,38", "label": "Edwin Andrews Air Base"}, {"uri": "http://dbpedia.org/resource/Akinoumi_Setsuo", "seq": "69,83", "label": "Akinoumi Setsuo"}], "predicate mapping": [], "id": "d9360f5cca484dbbb1187e1348211288"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/ANYway> <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Quack_(album)> }", "question": "is ANYway in the Quack album?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/ANYway", "seq": "3,8", "label": "ANYway"}, {"uri": "http://dbpedia.org/resource/Quack_(album)", "seq": "17,21", "label": "Quack"}], "predicate mapping": [], "id": "ff7902dec19b42b6b2c0de2b2ddef72c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "What are the political parties whose leaders have lived in the Prime Minister's House?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)", "seq": "63,84", "label": "Prime Minister's House"}], "predicate mapping": [], "id": "d7c709165e3246d1b9cbeb191dd2c877"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri. <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri . }", "question": "What is a common ingredient used in boyt Blodpalt and Kaszanka ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blodpalt", "seq": "41,48", "label": "Blodpalt"}, {"uri": "http://dbpedia.org/resource/Kaszanka", "seq": "54,61", "label": "Kaszanka"}], "predicate mapping": [], "id": "0225eb44cdbd4c7891e3d609bc8534cf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name a TV show judged by Jennifier Lopez and presented by Brian Dunkleman ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "seq": "25,39", "label": "Jennifier Lopez"}, {"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "seq": "58,72", "label": "Brian Dunkleman"}], "predicate mapping": [], "id": "be2a715e677a435cabaf67c8f17f8a02"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Ford_Motor_Company> }", "question": "Is the Chiva Bus by the Ford Motor Company?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chiva_bus", "seq": "7,15", "label": "Chiva Bus"}, {"uri": "http://dbpedia.org/resource/Ford_Motor_Company", "seq": "24,41", "label": "Ford Motor Company"}], "predicate mapping": [], "id": "92cd517187c04052aa28c65e8e7ba93e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Breeders'_Cup_Turf> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "From how many different places have participants of Breeders's Cup Turf come?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Breeders'_Cup_Turf", "seq": "52,70", "label": "Breeders's Cup Turf"}], "predicate mapping": [], "id": "13648ac67f4843b3ad93c7137fcb34bd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads> <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Lionel_Messi> }", "question": "Was Lionel Messi a member  of the 2009 FIFA World Cup squads?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads", "seq": "34,59", "label": "2009 FIFA World Cup squads"}, {"uri": "http://dbpedia.org/resource/Lionel_Messi", "seq": "4,15", "label": "Lionel Messi"}], "predicate mapping": [], "id": "3e2b19f37e1342c5a7856184624b9fd1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company founded by Jim Harris located in Harris County, Texas ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "seq": "28,37", "label": "Jim Harris"}, {"uri": "http://dbpedia.org/resource/Harris_County,_Texas", "seq": "50,69", "label": "Harris County, Texas"}], "predicate mapping": [], "id": "30679d014e3749319a88ec1614bdb393"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Which video game composed by Hirokazu Tanaka can be played on virtual Console ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Console", "seq": "62,76", "label": "virtual Console"}, {"uri": "http://dbpedia.org/resource/Hirokazu_Tanaka", "seq": "29,43", "label": "Hirokazu Tanaka"}], "predicate mapping": [], "id": "b9faf98cfa3b43fb928d2b9eb258ae41"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Toronto_Furies> . ?x <http://dbpedia.org/property/tenants> ?uri }", "question": "Give me the count of tenants of the stadia whose one of the tenants is Toronto Furies?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Furies", "seq": "71,84", "label": "Toronto Furies"}], "predicate mapping": [], "id": "7901e474e8734da4b709fb1cae144d23"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBIG-FM> <http://dbpedia.org/ontology/programmeFormat> ?uri } ", "question": "what kind of things play on WBIG FM?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WBIG-FM", "seq": "28,34", "label": "WBIG FM"}], "predicate mapping": [], "id": "84f0e1da1e174000b08ae2510b0bf079"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warwick_railway_station,_Perth> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ", "question": "What is the serving railway line of Warwick railway station, Perth ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warwick_railway_station,_Perth", "seq": "36,65", "label": "Warwick railway station, Perth"}], "predicate mapping": [], "id": "2da5041948fd42298c8b577eb241332c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory> . ?x <http://dbpedia.org/property/primeminister> ?uri  . }", "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory", "seq": "58,86", "label": "Derick Heathcoat Amory served"}], "predicate mapping": [], "id": "ae588c3050cf4a769d629c8c2ecc8893"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/One_Day_at_a_Time_(Em's_Version)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/writer> ?uri  . }", "question": "Who wrote the subsequent work of One Day at a Time (Em's Version) ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/One_Day_at_a_Time_(Em's_Version)", "seq": "33,49", "label": "One Day at a Time"}], "predicate mapping": [], "id": "f6576ee287fd4a29b03077da31e64c44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are the birth place of the people who are the star of Dhoondte Reh Jaaoge?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)", "seq": "59,77", "label": "Dhoondte Reh Jaaoge"}], "predicate mapping": [], "id": "bac4ecaac8954b3d83266bf1363bd5c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_House,_London> <http://dbpedia.org/property/architect> ?uri } ", "question": "Who is the architect of Red House, London ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_House,_London", "seq": "24,40", "label": "Red House, London"}], "predicate mapping": [], "id": "9464454dd9bc489387bee11d1e7cd022"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Toronto_Phantoms> . ?x <http://dbpedia.org/ontology/tenant> ?uri }", "question": "Count the number of tenants whose one of the tenant is Toronto Phantoms ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Phantoms", "seq": "55,70", "label": "Toronto Phantoms"}], "predicate mapping": [], "id": "3dcb4c11af2d4976b986ba6a9a9c1a47"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri} ", "question": "Which relative of George Madison is the appointer of John Drayton ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Drayton", "seq": "53,64", "label": "John Drayton"}, {"uri": "http://dbpedia.org/resource/George_Madison", "seq": "18,31", "label": "George Madison"}], "predicate mapping": [], "id": "7507c5dcd77b4a1f8662415059e43340"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri } ", "question": "Which company manufactured Delta III?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Delta_III", "seq": "27,35", "label": "Delta III"}], "predicate mapping": [], "id": "73d555e5b42f4fc1bb26a2e517a69e83"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geoffrey_Burgon", "seq": "70,84", "label": "Geoffrey Brugon"}, {"uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)", "seq": "26,37", "label": "Julian Doyle"}], "predicate mapping": [], "id": "0881b71d464e4be09d6650e2467d8008"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Essex> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose mouth mountain is Essex and river mouth is North Sea?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Essex", "seq": "39,43", "label": "Essex"}, {"uri": "http://dbpedia.org/resource/North_Sea", "seq": "64,72", "label": "North Sea"}], "predicate mapping": [], "id": "491d86b9710241a78858ac924c0174bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomberg_L.P.> <http://dbpedia.org/property/owner> ?uri } ", "question": "Who is the owner of Bloomberg L.P. ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bloomberg_L.P.", "seq": "20,32", "label": "Bloomberg L.P"}], "predicate mapping": [], "id": "dac617c2755144f597bf2de202f99777"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> ?uri } ", "question": "List the houses of Parliament of India ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Parliament_of_India", "seq": "19,37", "label": "Parliament of India"}], "predicate mapping": [], "id": "02d3e516190a49e19e0908eb2fa74bfe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Richard_Gant> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "question": "Richard Gant did a guest appearance on which series?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Gant", "seq": "0,11", "label": "Richard Gant"}], "predicate mapping": [], "id": "f397d4e121954f05be803892461d82f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "question": "What is the home stadium of the soccer club seasons whose chairman is Merritt Paulson?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Merritt_Paulson", "seq": "70,84", "label": "Merritt Paulson"}], "predicate mapping": [], "id": "f2231eb580854604aa08fc3651038117"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri } ", "question": "What is the government type of Kumta ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kumta", "seq": "31,35", "label": "Kumta"}], "predicate mapping": [], "id": "3379d870f89c4e929e3ac6e1ab1a1301"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What genres of games are available on the Commodore 64?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Commodore_64", "seq": "42,53", "label": "Commodore 64"}], "predicate mapping": [], "id": "692a622dfa204b6faf27d4609436b8ae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Kenya>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}", "question": "What is the protected area whose nearest city is Kenya?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenya", "seq": "49,53", "label": "Kenya"}], "predicate mapping": [], "id": "dd2d9d77fea94fe9ad8bf7478cb2bc1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies have launched their rockets from the Vandenerg Air base?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base", "seq": "56,73", "label": "Vandenerg Air base"}], "predicate mapping": [], "id": "bdf990ee5daf4f10a200bcfd984e01f6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo> }", "question": "Is Anne Hidalgo the mayor of Paris?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paris", "seq": "29,33", "label": "Paris"}, {"uri": "http://dbpedia.org/resource/Anne_Hidalgo", "seq": "3,14", "label": "Anne Hidalgo"}], "predicate mapping": [], "id": "7c64644ddbc24062b9a8133945fb5e7f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri} ", "question": "Name the driver who was at pole in 1997 Canadian Grand Prix and also 1994 Spanish Grand Prix ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix", "seq": "35,58", "label": "1997 Canadian Grand Prix"}, {"uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix", "seq": "69,91", "label": "1994 Spanish Grand Prix"}], "predicate mapping": [], "id": "0486c904f3684e70a2e91846a6e53640"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hubert_Wiggs> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri . }", "question": "Which college has been attended  by both Mr. Hubert Wiggs and Mr. Alvin Bell?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hubert_Wiggs", "seq": "45,56", "label": "Hubert Wiggs"}, {"uri": "http://dbpedia.org/resource/Alvin_Bell", "seq": "66,75", "label": "Alvin Bell"}], "predicate mapping": [], "id": "90502631e5e7485cb032ce25c7048d48"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Pittsburgh_Steelers> <http://dbpedia.org/property/city> ?uri} ", "question": "In which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations", "seq": "44,78", "label": "Congress of Inductrial Organization"}, {"uri": "http://dbpedia.org/resource/Pittsburgh_Steelers", "seq": "17,34", "label": "Pittsburg Steelers"}], "predicate mapping": [], "id": "2e984fcd973d4c79ae9ab371222218af"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri. <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri} ", "question": "What is the academic discipline of the Journal of Cerebral Blood Flow & Metabolism and also an ingredient of the Ragout fin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism", "seq": "39,81", "label": "Journal of Cerebral Blood Flow & Metabolism"}, {"uri": "http://dbpedia.org/resource/Ragout_fin", "seq": "113,122", "label": "Ragout fin"}], "predicate mapping": [], "id": "7994a53ef73c46c1bfd20f5cc8bf85c6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_SG> }", "question": "Was Duanne Allman famous for playing the Gibson SG?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duane_Allman", "seq": "4,16", "label": "Duanne Allman"}, {"uri": "http://dbpedia.org/resource/Gibson_SG", "seq": "41,49", "label": "Gibson SG"}], "predicate mapping": [], "id": "fdb525be2aca4cfda57372b41b1b6b79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Betsy's_Wedding> <http://dbpedia.org/ontology/starring> ?uri. <http://dbpedia.org/resource/Sixteen_Candles> <http://dbpedia.org/property/starring> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the people casted in Betsy's Wedding and 16 candles?", "sparql_id": 316, "entity mapping": [{"uri": "http://dbpedia.org/resource/Betsy's_Wedding", "seq": "26,40", "label": "Betsy's Wedding"}, {"uri": "http://dbpedia.org/resource/Sixteen_Candles", "seq": "49,55", "label": "candles"}], "predicate mapping": [], "id": "7d51f1bf12ac4424b780213dac02bcb2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Maldives> }", "question": "Is Maldives a member ofof South Asia Subregional Economic Cooperation?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation", "seq": "26,68", "label": "South Asia Subregional Economic Cooperation"}, {"uri": "http://dbpedia.org/resource/Maldives", "seq": "3,10", "label": "Maldives"}], "predicate mapping": [], "id": "c86cb51bad5142dab46c6951545c296d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "What are the settlements whose neighboring municipalities is Lancy?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lancy", "seq": "61,65", "label": "Lancy"}], "predicate mapping": [], "id": "42cba0deb5884d97a7585b227afb2f03"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Nebraska> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "For how many things are people famous, who were born in Nebraska?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nebraska", "seq": "56,63", "label": "Nebraska"}], "predicate mapping": [], "id": "77907c919f714ac4ac233e3c93545099"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Podgorica> . ?x <http://dbpedia.org/property/currency> ?uri  . }", "question": "What currencies are used in the country whose capital is Podgorica?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Podgorica", "seq": "57,65", "label": "Podgorica"}], "predicate mapping": [], "id": "e7f54b79284844b194bfdd2380efe154"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Satish_Kumar_Sharma> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Manthena_Venkata_Raju> <http://dbpedia.org/ontology/party> ?uri . }", "question": "What is the political party of the Satish Kumar Sharma which is also the political party of Manthena Venkata Raju?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Satish_Kumar_Sharma", "seq": "35,53", "label": "Satish Kumar Sharma"}, {"uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju", "seq": "92,112", "label": "Manthena Venkata Raju"}], "predicate mapping": [], "id": "01e2a4fa1cc04ea397cb1d14132317a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Larry_LaLonde> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows theme music is composed by a band which has Larry Lalonde in it?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Larry_LaLonde", "seq": "56,68", "label": "Larry Lalonde"}], "predicate mapping": [], "id": "3d55c35bafda4d048cec814081b7a280"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Provinces_of_Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which rivers start from the Provinces of Zambia?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Provinces_of_Zambia", "seq": "28,46", "label": "Provinces of Zambia"}], "predicate mapping": [], "id": "436413f766614075bd1ac508ff48ff64"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Barry_Voight>  . }", "question": "Name a famous relative of barry voight", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barry_Voight", "seq": "26,37", "label": "barry voight"}], "predicate mapping": [], "id": "418aec71a0ad4d5594d5667a98921501"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri . }", "question": "Which company developed both Dart and Go?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dart_(programming_language)", "seq": "29,32", "label": "Dart"}, {"uri": "http://dbpedia.org/resource/Go_(programming_language)", "seq": "38,39", "label": "Go"}], "predicate mapping": [], "id": "4f48838e3be94cb18dedb19550dae9de"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Georg Meissner was doctoral supervisor of which scientist ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Georg_Meissner", "seq": "0,13", "label": "Georg Meissner"}], "predicate mapping": [], "id": "4b6587fe43824a6385cac583915ac1cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What awards have been given to some screenwriters?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "seq": "36,48", "label": "screenwriters"}], "predicate mapping": [], "id": "9d4bc4521629455eae2f5b6be2f76dc2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jim_Brady_(quarterback)> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "Which city near Nihoa is the place of death of jim Brady ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nihoa", "seq": "16,20", "label": "Nihoa"}, {"uri": "http://dbpedia.org/resource/Jim_Brady_(quarterback)", "seq": "47,55", "label": "jim Brady"}], "predicate mapping": [], "id": "723b13ce8be84e718d521789fae00823"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "List the people who were the first one to climb a mountain in California?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "62,71", "label": "California"}], "predicate mapping": [], "id": "f581bcd6971a4e1b85ef5da858b30163"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . }", "question": "Where is the spouse of Henry Bourchier of Essex buried?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex", "seq": "23,46", "label": "Henry Bourchier of Essex"}], "predicate mapping": [], "id": "b38a612b13ec49d4b8be8365b8a0d89b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri } ", "question": "Who are the local authority of Buckhurst Hill County High School ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "seq": "31,63", "label": "Buckhurst Hill County High School"}], "predicate mapping": [], "id": "5b08973e5ea1470fb3ce5ac04de8c3d6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> } ", "question": "Which peak was first scaled by Krzysztof Wielicki?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Krzysztof_Wielicki", "seq": "31,48", "label": "Krzysztof Wielicki"}], "predicate mapping": [], "id": "ef0ebaaa120f45e8a4db2e06afd28d56"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies have a screenplay located in the States?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "42,54", "label": "in the States"}], "predicate mapping": [], "id": "20c51164ad5a4b42acd9a417f6770edc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McKechnie_Field> <http://dbpedia.org/property/architect> ?uri } ", "question": "Which companies were behind the renovation of McKechnie Field ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/McKechnie_Field", "seq": "46,60", "label": "McKechnie Field"}], "predicate mapping": [], "id": "691ab450f3054f89b7b59afe0c27f96f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Avangard_Omsk> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }", "question": "What teams have Avangard Omsk's players played for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Avangard_Omsk", "seq": "16,28", "label": "Avangard Omsk"}], "predicate mapping": [], "id": "38d02dcbf93a42ab8f3f03c2a8c8f30b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri } ", "question": "What is the location country of Teperberg 1870 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Teperberg_1870", "seq": "32,45", "label": "Teperberg 1870"}], "predicate mapping": [], "id": "16a0b3c7cec84354940128b8d6b555b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri } ", "question": "Name the rivers in the hudson highlands state parts?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park", "seq": "23,50", "label": "hudson highlands state parts"}], "predicate mapping": [], "id": "d241c139de3a4bc08b233c5dcd18e3b7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/property/formercoach> <http://dbpedia.org/resource/Ingo_Steuer> }", "question": "Is Ingo Steuer the formercoach of Stanislav Morozov?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanislav_Morozov", "seq": "34,50", "label": "Stanislav Morozov"}, {"uri": "http://dbpedia.org/resource/Ingo_Steuer", "seq": "3,13", "label": "Ingo Steuer"}], "predicate mapping": [], "id": "6e4e6be9a3bd45b187c37dd99ee4284c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . }", "question": "How many cars can I find related to the cars which have a V8 engine?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/V8_engine", "seq": "58,66", "label": "V8 engine"}], "predicate mapping": [], "id": "4c7eac160c0d49c49f815792513f1c21"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Falken_Tire> <http://dbpedia.org/ontology/locationCountry> ?uri} ", "question": "Which destinations of the Air 2000 is also the location continent of the Falken Tire ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_2000", "seq": "26,33", "label": "Air 2000"}, {"uri": "http://dbpedia.org/resource/Falken_Tire", "seq": "73,83", "label": "Falken Tire"}], "predicate mapping": [], "id": "39c73d39a7fb4e7bbf4b1b656e76ee22"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri } ", "question": "what cities are close by LoDaisKa ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/LoDaisKa_Site", "seq": "25,32", "label": "LoDaisKa"}], "predicate mapping": [], "id": "c1aabd659ada47e2b412d630a3a3814b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Sextus_Barbour> <http://dbpedia.org/property/deathCause> ?uri} ", "question": "Why did Letita McTavish Hargrave and Sextus Barbour die?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave", "seq": "8,31", "label": "Letita McTavish Hargrave"}, {"uri": "http://dbpedia.org/resource/Sextus_Barbour", "seq": "37,50", "label": "Sextus Barbour"}], "predicate mapping": [], "id": "7d39f4c231f744dfb4e0f7f5f4f15b7f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Sirius_XM_Holdings> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Sports_Radio> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What show has Sirius XM Holdings and Fox Sports Radio as channels ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sirius_XM_Holdings", "seq": "14,31", "label": "Sirius XM Holdings"}, {"uri": "http://dbpedia.org/resource/Fox_Sports_Radio", "seq": "37,52", "label": "Fox Sports Radio"}], "predicate mapping": [], "id": "b8845f4e32974bfca57abbacda4140bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Anika_Knudsen> <http://dbpedia.org/property/knownFor> ?uri . }", "question": "What are Breann McGregor and Anika Knudsen, both known for?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Breann_McGregor", "seq": "9,23", "label": "Breann McGregor"}, {"uri": "http://dbpedia.org/resource/Anika_Knudsen", "seq": "29,41", "label": "Anika Knudsen"}], "predicate mapping": [], "id": "404f0de8f6fe44649c68a7f991618244"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "33,49", "label": "Microsoft Windows"}, {"uri": "http://dbpedia.org/resource/Software_as_a_service", "seq": "70,90", "label": "Software as a service"}], "predicate mapping": [], "id": "29584b2edbec44168d3adb4cd1d3f20f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the movies produced by Michael Deeley ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "28,41", "label": "Michael Deeley"}], "predicate mapping": [], "id": "ada933daf3c04f8093383e9131a06d2f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the TV shows whose network is also known as the CW?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_CW", "seq": "53,58", "label": "the CW"}], "predicate mapping": [], "id": "a6de49d9743f440db28ce26337d15730"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are some tv shows created by Simon Fuller?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "34,45", "label": "Simon Fuller"}], "predicate mapping": [], "id": "ce328b878c624b718d5f92fe48d01626"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Basketball> . ?x <http://dbpedia.org/property/athletics> ?uri }", "question": "Count the number of sports played by the universities whose one of the sports is baketball ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Basketball", "seq": "81,89", "label": "baketball"}], "predicate mapping": [], "id": "f250fdf5363442e1a68b1575a75f7649"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1> <http://dbpedia.org/property/manufacturer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "Where was the engineer born who manufactured EP R.E.P. 1?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1", "seq": "32,55", "label": "manufactured EP R.E.P. 1"}], "predicate mapping": [], "id": "c5ad9696ccbc49d48f66061c12d9fce0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Roeslein> <http://dbpedia.org/ontology/team> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }", "question": "In which state is the team, which has John Roeslein?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Roeslein", "seq": "38,50", "label": "John Roeslein"}], "predicate mapping": [], "id": "41d0346f044a40d4b92151328c691244"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Columbia_Records> . ?x <http://dbpedia.org/ontology/employer> ?uri  . }", "question": "Where has the employee of Columbia Records  worked ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Columbia_Records", "seq": "26,41", "label": "Columbia Records"}], "predicate mapping": [], "id": "91fac607c06844458a5a93efbc30e6cb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "Which sport at Polytechnic University of the Philippines Taguig is the field of Jon speelman ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "seq": "80,91", "label": "Jon speelman"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "seq": "15,62", "label": "Polytechnic University of the Philippines Taguig"}], "predicate mapping": [], "id": "afe5031d98294f048dbf9373e03f719b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri  . }", "question": "What are the sports played by the universities who also plays taekwondo ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taekwondo", "seq": "62,70", "label": "taekwondo"}], "predicate mapping": [], "id": "574c7a40663240129e6f74a6c30fa086"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "Which senator served in military units VMF-155 and VMF-218?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/VMF-155", "seq": "39,45", "label": "VMF-155"}, {"uri": "http://dbpedia.org/resource/VMF-218", "seq": "51,57", "label": "VMF-218"}], "predicate mapping": [], "id": "8c4f8820a2574a60b70e80603a9af302"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . }", "question": "How many members are there of the organization headquartered at Amstelveen?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amstelveen", "seq": "64,73", "label": "Amstelveen"}], "predicate mapping": [], "id": "b895b7cc207c4aab8ca0c0bbf388a9a2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ontario_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Inland_Empire> }", "question": "Does the Ontario International Airport serve the Inland Empire?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario_International_Airport", "seq": "9,37", "label": "Ontario International Airport"}, {"uri": "http://dbpedia.org/resource/Inland_Empire", "seq": "49,61", "label": "Inland Empire"}], "predicate mapping": [], "id": "1ac63487cbae44b6a9aa9350ab7302de"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Under which scientist did doctoral students erban ieica and Erich Bagge study?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "seq": "44,54", "label": "erban ieica"}, {"uri": "http://dbpedia.org/resource/Erich_Bagge", "seq": "60,70", "label": "Erich Bagge"}], "predicate mapping": [], "id": "5f766cb18b93417495ec541e7749269c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter_Frampton> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . }", "question": "Who did the associated act which is a Peter Frampton production ?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Frampton", "seq": "38,51", "label": "Peter Frampton"}], "predicate mapping": [], "id": "c34a5952b1a648adbac30cc484fc4092"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }", "question": "Give me list of people who were the first to climb a peak in the Yosemite park?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yosemite_National_Park", "seq": "65,77", "label": "Yosemite park"}], "predicate mapping": [], "id": "47d731bad7474102bd95407a15b6f410"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri } ", "question": "Who is the film director of Alice's Wonderland ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alice's_Wonderland", "seq": "28,45", "label": "Alice's Wonderland"}], "predicate mapping": [], "id": "330a20b1b264498c86abcbd8608ab422"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri } ", "question": "Who is the builder of Estadio Nacional de Costa Rica (2011) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)", "seq": "22,51", "label": "Estadio Nacional de Costa Rica"}], "predicate mapping": [], "id": "dbaca158d01d472baadbee2830f573d4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Eric_Roth> <http://dbpedia.org/ontology/award> ?uri} ", "question": "What is the common award won by Charles LeMaire and Eric Roth", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_LeMaire", "seq": "32,46", "label": "Charles LeMaire"}, {"uri": "http://dbpedia.org/resource/Eric_Roth", "seq": "52,60", "label": "Eric Roth"}], "predicate mapping": [], "id": "2e30a3d7ccb84d08a52974770eae393f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Richmond_Park> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}", "question": "Where does the river end which starts in Richmond Park?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richmond_Park", "seq": "41,53", "label": "Richmond Park"}], "predicate mapping": [], "id": "6611d96f0da74bd29467f037c7bc8e9c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/poleDriver> <http://dbpedia.org/resource/Mika_H\u00e4kkinen> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>}", "question": "Count the number of first drivers in all the GPs where Mika Hakkinen was a first driver?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mika_H\u00e4kkinen", "seq": "55,67", "label": "Mika Hakkinen"}], "predicate mapping": [], "id": "10db28c2f3964aa78fae4f3291f87ec4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Kia_Sportage> }", "question": "Is the Kia Sportage similar to the Hyundai Lavita?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "seq": "35,48", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Kia_Sportage", "seq": "7,18", "label": "Kia Sportage"}], "predicate mapping": [], "id": "fc606b3fc3404643a264ed538a54c5c2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> } ", "question": "Which river has its roots in Baikal Mountains?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baikal_Mountains", "seq": "29,44", "label": "Baikal Mountains"}], "predicate mapping": [], "id": "bfffa1add5f64e0285af31cba61b8114"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "How many nations' volleyball players have played for the Russian women volleyball team?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team", "seq": "57,85", "label": "Russian women volleyball team"}], "predicate mapping": [], "id": "3778cf6328e9432b8c36e0c47ae65f85"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/East_Indies_Station> <http://dbpedia.org/ontology/garrison> ?uri} ", "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway", "seq": "63,85", "label": "Mumbai Vadodara Express"}, {"uri": "http://dbpedia.org/resource/East_Indies_Station", "seq": "18,36", "label": "East Indies Station"}], "predicate mapping": [], "id": "1db09b3583d54788bc6313956b79499f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Banlung> <http://dbpedia.org/ontology/timeZone> ?uri } ", "question": "Name the tiemzone of Banlung ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Banlung", "seq": "21,27", "label": "Banlung"}], "predicate mapping": [], "id": "ae2e45495c164835a9538dec49cb3cd3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Ford_SHO_V6_engine> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}", "question": "Who made the engine whose predecessor is the SHO V6?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_SHO_V6_engine", "seq": "9,18", "label": "the engine"}], "predicate mapping": [], "id": "fccee4f131814d4c999faf99f9c8a641"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/property/governmentType> <http://dbpedia.org/resource/Parliamentary_republic> }", "question": "Does Mauritius follow a parliamentary republic?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mauritius", "seq": "5,13", "label": "Mauritius"}, {"uri": "http://dbpedia.org/resource/Parliamentary_republic", "seq": "24,45", "label": "parliamentary republic"}], "predicate mapping": [], "id": "1d52560a0c664dd69770aed6f1cd971b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }", "question": "In how many places was the album of King Crimson recorded?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/King_Crimson", "seq": "36,47", "label": "King Crimson"}], "predicate mapping": [], "id": "a44318040305431cb237c6809f2a8e7c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Which musical artist collaborated with Tony Allen (musician) and label is Victor Entertainment?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Allen_(musician)", "seq": "39,48", "label": "Tony Allen"}, {"uri": "http://dbpedia.org/resource/Victor_Entertainment", "seq": "74,93", "label": "Victor Entertainment"}], "predicate mapping": [], "id": "e776aeb7245e4e648fb5d4c4b61dbad6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "In how many teams have people previously played who play as defencemen?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "seq": "60,69", "label": "defencemen"}], "predicate mapping": [], "id": "907d667fb8614bfdbc8a5ce883fa99bd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> . ?x <http://dbpedia.org/ontology/regionServed> ?uri }", "question": "What is the total number of regions served by the companies which also serves Australia?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia", "seq": "78,86", "label": "Australia"}], "predicate mapping": [], "id": "fbc34fb8d1464bec93cab57479d2ee9e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Fr\u00e9d\u00e9ric_Joliot-Curie> . ?uri <http://dbpedia.org/property/children> ?x  . }", "question": "Whose children are married to Fredric Joliot-Curie?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr\u00e9d\u00e9ric_Joliot-Curie", "seq": "30,49", "label": "Fredric Joliot-Curie"}], "predicate mapping": [], "id": "57f94e194bbf47d2bc8df0b967c56d74"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "Count the number of important works done by the writers of The Second Coming?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)", "seq": "59,75", "label": "The Second Coming"}], "predicate mapping": [], "id": "e2ec831eeb1f4e64a787efc386939af6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri } ", "question": "Who is the composer of Girl from the North Country ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Girl_from_the_North_Country", "seq": "23,49", "label": "Girl from the North Country"}], "predicate mapping": [], "id": "b82af01a7505419ea2a82b7f08f96650"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victoria_(ship)> <http://dbpedia.org/ontology/owner> ?uri } ", "question": "who owns the ship Victoria?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Victoria_(ship)", "seq": "18,25", "label": "Victoria"}], "predicate mapping": [], "id": "ba2effd8c834439e8eaf7dbfdf385fa5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri} ", "question": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benelux", "seq": "33,39", "label": "Benelux"}, {"uri": "http://dbpedia.org/resource/Kerguelen_Islands", "seq": "70,86", "label": "Kerguelen Islands"}], "predicate mapping": [], "id": "1c76c6e7767f4aaf90c5a8e69371517f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)>  . }", "question": "What is the name of Mary's divine child?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)", "seq": "20,23", "label": "Mary"}], "predicate mapping": [], "id": "3609e1969825458f81798bea8a86a387"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "List the places where the relatives of Mark Donaldson died ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)", "seq": "39,52", "label": "Mark Donaldson"}], "predicate mapping": [], "id": "6f35f83223854b9685bd0d658725f1a7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ", "question": "Which appointer of the Joseph Clay (Georgia) is also the  President of the William Carmichael (diplomat) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)", "seq": "23,33", "label": "Joseph Clay"}, {"uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)", "seq": "75,92", "label": "William Carmichael"}], "predicate mapping": [], "id": "69c43006a66746dcaf96ba9e7229912c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Among which sitcoms in which theme music is composed by Gary Portnoy is located in Massachusetts ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts", "seq": "83,95", "label": "Massachusetts"}, {"uri": "http://dbpedia.org/resource/Gary_Portnoy", "seq": "56,67", "label": "Gary Portnoy"}], "predicate mapping": [], "id": "44e437e237a94b7abe806fcc1f7ae2e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "Over which rivers, does a cable stayed bridge exists?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cable-stayed_bridge", "seq": "26,44", "label": "cable stayed bridge"}], "predicate mapping": [], "id": "3dd19cd66683497889c840e33ab0e00d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . }", "question": "Give me everything owned by networks which is lead by Steve Burke?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)", "seq": "54,64", "label": "Steve Burke"}], "predicate mapping": [], "id": "3dbc2bb2e2064e068bbd736158623ba3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "question": "Ontario's ice hockey players have been a part of which teams?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "0,6", "label": "Ontario"}], "predicate mapping": [], "id": "471a1edfae9f4e0b86d10cce7f064dd3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri } ", "question": "For which teams did Ryan Powell play for?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)", "seq": "20,30", "label": "Ryan Powell"}], "predicate mapping": [], "id": "a08a81d7bc32418fa69f9ee7611d119c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }", "question": "List the battles in which alumni of US Army Command and General Staff College fought?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College", "seq": "26,76", "label": "alumni of US Army Command and General Staff College"}], "predicate mapping": [], "id": "39b773349eeb4776848bd72b621b281a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Name the military units whose command structure's headquarters is The Pentagon?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Pentagon", "seq": "66,77", "label": "The Pentagon"}], "predicate mapping": [], "id": "c0f5e4506a7246bd925820748e927766"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "Name the city with leader as Esther Alder and neighboring municipality as Pregny-Chambsy?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Esther_Alder", "seq": "29,40", "label": "Esther Alder"}, {"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "seq": "74,87", "label": "Pregny-Chambsy"}], "predicate mapping": [], "id": "928515f8deaa4a1b9982acd9bd90e877"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri } ", "question": "What is the mascot of Celal Bayar University ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Celal_Bayar_University", "seq": "22,43", "label": "Celal Bayar University"}], "predicate mapping": [], "id": "05514a08a6864dee82dff5c0b774d1cb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mekong_River_Commission> <http://dbpedia.org/property/membership> ?uri } ", "question": "List all the mmebers of  Mekong River Commission?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mekong_River_Commission", "seq": "25,47", "label": "Mekong River Commission"}], "predicate mapping": [], "id": "3720fc28f3f94a57bdf95083816cdf8a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }", "question": "What are the academic interests of the advisor of Paul Demiville ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "seq": "50,63", "label": "Paul Demiville"}], "predicate mapping": [], "id": "588f69a6c10c4bfca7c6ecf3d36b73f0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Potato> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }", "question": "How many other ingredient are there in the foods whihh have one of the ingredient as Potato ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Potato", "seq": "85,90", "label": "Potato"}], "predicate mapping": [], "id": "6ded3670f2964a83a919b06c23de2ba6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TradeUnion>}", "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers", "seq": "55,103", "label": "Amalgamated Association of Iron and Steel Workers"}], "predicate mapping": [], "id": "2fe30687c5644f9096c50927e10ec2fe"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> } ", "question": "What royalties's sepulchre is Mausoleum of Augustus?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus", "seq": "30,50", "label": "Mausoleum of Augustus"}], "predicate mapping": [], "id": "c8578e413e244216a605fd070fa1096b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iskra> <http://dbpedia.org/ontology/foundedBy> ?uri } ", "question": "Who are the founders of Iskra ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iskra", "seq": "24,28", "label": "Iskra"}], "predicate mapping": [], "id": "e670b9053f4948428c08a9c6aa03f7e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Mauritius_Bank> . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "What is the location country of the bank whose successor is Mauritius Bank ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mauritius_Bank", "seq": "60,73", "label": "Mauritius Bank"}], "predicate mapping": [], "id": "67c9424bca4a4f17b443bab40503c9e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeep_Forward_Control> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "Who is the manufacturer of engine of Jeep Forward Control ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeep_Forward_Control", "seq": "37,56", "label": "Jeep Forward Control"}], "predicate mapping": [], "id": "611a7b738e4741f4af9e5b803c5e3183"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri } ", "question": "What sports are played at Vishwajyot High School?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vishwajyot_High_School", "seq": "26,47", "label": "Vishwajyot High School"}], "predicate mapping": [], "id": "be173cd13f024163b5777d971acdbe58"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who is the person whose parent is Ptolemy XII Auletes?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "seq": "34,52", "label": "Ptolemy XII Auletes"}], "predicate mapping": [], "id": "47c0b19e99344c79b588ce726af7b675"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . }", "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jefferson_North_Assembly", "seq": "55,78", "label": "Jefferson North Assembly"}], "predicate mapping": [], "id": "e2d4df3f532942f8947a0ead70798b87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Bukovica_(river)> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "question": "What does the river flow into, whose left tributary is Bukovica?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bukovica_(river)", "seq": "55,62", "label": "Bukovica"}], "predicate mapping": [], "id": "583ab0d388bd4c158b0862155dc190de"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmy_Wales> <http://dbpedia.org/ontology/board> ?uri } ", "question": "Who are in the board of Jimmy Wales ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmy_Wales", "seq": "24,34", "label": "Jimmy Wales"}], "predicate mapping": [], "id": "7804405f8cd849a4acb60cf3df9a287c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri} ", "question": "What is the leading party in Baraily which Chandra Shekhar too is associated with?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baraily", "seq": "29,35", "label": "Baraily"}, {"uri": "http://dbpedia.org/resource/Chandra_Shekhar", "seq": "43,57", "label": "Chandra Shekhar"}], "predicate mapping": [], "id": "e3b7065032d74fe2b8b5956c42315e02"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> } ", "question": "which astronaut's mission was Apollo 11?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Apollo_11", "seq": "30,38", "label": "Apollo 11"}], "predicate mapping": [], "id": "a4aaefe71b4c47fb82c079c3ec2cf474"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . }", "question": "What came before  PlayStation 4 and uses PlayStation 3 system software as OS?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "seq": "18,30", "label": "PlayStation 4"}, {"uri": "http://dbpedia.org/resource/PlayStation_3_system_software", "seq": "41,69", "label": "PlayStation 3 system software"}], "predicate mapping": [], "id": "76af8656dedf4ec2bf0348b2eddf906b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mercedes-Benz_Superdome> <http://dbpedia.org/ontology/tenant> ?uri } ", "question": "What are the tenants of Mercedes-Benz Superdome?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome", "seq": "24,46", "label": "Mercedes-Benz Superdome"}], "predicate mapping": [], "id": "a789b3608b9a427f9908d49aed80ea50"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elizabeth_Ann_Seton> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_XXIII> }", "question": "Was elizabeth ann seton beatified by Pope John XXIII?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton", "seq": "4,22", "label": "elizabeth ann seton"}, {"uri": "http://dbpedia.org/resource/Pope_John_XXIII", "seq": "37,51", "label": "Pope John XXIII"}], "predicate mapping": [], "id": "70f91098717e416c895d2d98eab6355c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . }", "question": "Give me a count of all the producers of all the movies whose music was done by James Horner?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Horner", "seq": "79,90", "label": "James Horner"}], "predicate mapping": [], "id": "1462640075fb4176a9db74b1e76bb1eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Kobalt_Label_Services>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Name the musical artists whose label is given by Kobalt Label Services?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kobalt_Label_Services", "seq": "49,69", "label": "Kobalt Label Services"}], "predicate mapping": [], "id": "316b176330564acfb5633baade63b8d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/Marine_Aircraft_Group_13> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }", "question": "Count everyone who was in the military unit which is structured like the Marine Aircraft Group 13 ?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marine_Aircraft_Group_13", "seq": "73,96", "label": "Marine Aircraft Group 13"}], "predicate mapping": [], "id": "19df3475de1a4ac0acb04e6252268f44"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/property/state> ?uri } ", "question": "Which state does Jerome B. Chaffee belong ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerome_B._Chaffee", "seq": "17,33", "label": "Jerome B. Chaffee"}], "predicate mapping": [], "id": "f848f4e81e654fe4b04988ba7a828da0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ", "question": "List the common sports played by Polytechnic University of the Philippines Bataan and Jamiatu Muslim Mindanao ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan", "seq": "33,80", "label": "Polytechnic University of the Philippines Bataan"}, {"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "86,108", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [], "id": "0f029e1473eb473db6af6662d3cb6fa4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tony_n'_Tina's_Wedding> <http://dbpedia.org/property/starring> ?uri } ", "question": "List down all the cast members of Tony n' Tina's Wedding ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_n'_Tina's_Wedding", "seq": "34,55", "label": "Tony n' Tina's Wedding"}], "predicate mapping": [], "id": "6dabffad323d44009367b7eaaf220c21"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri } ", "question": "Who is the writer of Neverwhere (radio play) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)", "seq": "21,30", "label": "Neverwhere"}], "predicate mapping": [], "id": "ec1040a967d34f71a0082b96d8a3a4a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Jos\u00e9_Luis_Narom> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "What is the musical whose music is by Jose Luis Narom,  based upon?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jos\u00e9_Luis_Narom", "seq": "38,52", "label": "Jose Luis Narom"}], "predicate mapping": [], "id": "1715062de00d44c4aefdcff294846af4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}", "question": "List the bacterias whose division is Firmicutes and domain is bacteria?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Firmicutes", "seq": "37,46", "label": "Firmicutes"}, {"uri": "http://dbpedia.org/resource/Bacteria", "seq": "62,69", "label": "bacteria"}], "predicate mapping": [], "id": "17069693f36e48c2b403ea5ec4def682"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many TV shows' networks are headquarterd in NY?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "19,26", "label": "networks"}], "predicate mapping": [], "id": "5536ce539f2548709a11af855d2ca5c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What is the university whose affiliations is Graham Holdings Company?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Holdings_Company", "seq": "45,67", "label": "Graham Holdings Company"}], "predicate mapping": [], "id": "78aa880b91524dc297c804a6d91e1682"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "What are some seas inside europe ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Europe", "seq": "26,31", "label": "europe"}], "predicate mapping": [], "id": "f8412d27be264040b18097376e40aa6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Name the basketball player who played for Phoenix Suns and Los Angeles Clippers was his draft team?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Phoenix_Suns", "seq": "42,53", "label": "Phoenix Suns"}, {"uri": "http://dbpedia.org/resource/Los_Angeles_Clippers", "seq": "59,78", "label": "Los Angeles Clippers"}], "predicate mapping": [], "id": "30c6fa7e60404d89919aadfe483c66cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FWD.us> <http://dbpedia.org/property/keyPeople> ?uri } ", "question": "Who are the key people of FWD.us?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/FWD.us", "seq": "26,31", "label": "FWD.us"}], "predicate mapping": [], "id": "50201a37de8648bb9cce96d0b4df557a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ella_T._Grasso> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "What is the birth place of the successor of Ella T. Grasso ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ella_T._Grasso", "seq": "44,57", "label": "Ella T. Grasso"}], "predicate mapping": [], "id": "6780d5fc98994413b8244e37868d361f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/John_Franklin_Miller_(senator)> <http://dbpedia.org/property/office> ?uri . }", "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blanche_Bruce", "seq": "26,38", "label": "Blanche Bruce"}, {"uri": "http://dbpedia.org/resource/John_Franklin_Miller_(senator)", "seq": "44,63", "label": "John Franklin Miller"}], "predicate mapping": [], "id": "6c76c96b0fa54b84a967935d0fa16694"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marcus_Samuelsson> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Samuel_of_Waldebba> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which country is the birth place of Marcus Samuelsson and Samuel of Waldebba ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marcus_Samuelsson", "seq": "36,52", "label": "Marcus Samuelsson"}, {"uri": "http://dbpedia.org/resource/Samuel_of_Waldebba", "seq": "58,75", "label": "Samuel of Waldebba"}], "predicate mapping": [], "id": "5bf931b59fb94b8c9cf432d2911170df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose executive producer is Steven Peterman?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Peterman", "seq": "56,70", "label": "Steven Peterman"}], "predicate mapping": [], "id": "3e1f362c96fe4cc592bfd13bfb855659"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river's source place is Gloucestershire and mouth in North Sea?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gloucestershire", "seq": "30,44", "label": "Gloucestershire"}, {"uri": "http://dbpedia.org/resource/North_Sea", "seq": "59,67", "label": "North Sea"}], "predicate mapping": [], "id": "87a4b9a543cc448e89f2ed926a6144e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gloria_Schaffer> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Newington,_Connecticut> <http://dbpedia.org/ontology/isPartOf> ?uri . }", "question": "What region was Gloria Schaffer born in, which also contains Newington?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gloria_Schaffer", "seq": "16,30", "label": "Gloria Schaffer"}, {"uri": "http://dbpedia.org/resource/Newington,_Connecticut", "seq": "61,69", "label": "Newington"}], "predicate mapping": [], "id": "f49d08f78f3a4c64a3963126cb43d7e9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claudia_Moro> <http://dbpedia.org/property/title> ?uri } ", "question": "which award has been won by Claudia Moro?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Claudia_Moro", "seq": "28,39", "label": "Claudia Moro"}], "predicate mapping": [], "id": "169a1ce1f8ac4c5ba9a92103237113c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Bison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "How many schools have a bison as their mascot?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bison", "seq": "24,28", "label": "bison"}], "predicate mapping": [], "id": "0f2e35e2a21b45d1a22ba4c50b76c832"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri } ", "question": "Where was Henri, Duke of Rohan laid to rest?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan", "seq": "10,29", "label": "Henri, Duke of Rohan"}], "predicate mapping": [], "id": "311bb63ae12d4dd999e195d827cf60d2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/John_Michael_Seabright> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Which institution of the Alton Ochsner is also the alma mater of John Michael Seabright ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alton_Ochsner", "seq": "25,37", "label": "Alton Ochsner"}, {"uri": "http://dbpedia.org/resource/John_Michael_Seabright", "seq": "65,86", "label": "John Michael Seabright"}], "predicate mapping": [], "id": "cb7ccfb1dddd4933883fb1176660d821"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Arthur_Slaght> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who did the person whose predecessor is Arthur Slaght, play for?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_Slaght", "seq": "40,52", "label": "Arthur Slaght"}], "predicate mapping": [], "id": "176d35f9dad648dea853a6c7b831c5c9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Laptev_Sea> }", "question": "Does the lena river flow into the Laptev Sea?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lena_River", "seq": "9,18", "label": "lena river"}, {"uri": "http://dbpedia.org/resource/Laptev_Sea", "seq": "34,43", "label": "Laptev Sea"}], "predicate mapping": [], "id": "363f13c9bc2242038c131f095d4c866d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "How many ideologies do the political party of Boonchu Rojanastien hold?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boonchu_Rojanastien", "seq": "46,64", "label": "Boonchu Rojanastien"}], "predicate mapping": [], "id": "1c8b342278e246f6a44fa8f398c21094"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Boston> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who owns a bridge in Boston?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston", "seq": "21,26", "label": "Boston"}], "predicate mapping": [], "id": "3227b935ac2943ed9f5433d7109f816f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Flatbread>  . }", "question": "Count the different types of Flatbread ?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Flatbread", "seq": "29,37", "label": "Flatbread"}], "predicate mapping": [], "id": "97c00c9886914a6ea5d5a811a4e1b225"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Gerard_Piqu\u00e9>  . }", "question": "Who is married to Gerard Piqu?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gerard_Piqu\u00e9", "seq": "18,28", "label": "Gerard Piqu"}], "predicate mapping": [], "id": "543d46f942c04924bcee5a4c54543c6b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which city near to Elliott Bay was the death place of George F. Moore ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elliott_Bay", "seq": "19,29", "label": "Elliott Bay"}, {"uri": "http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)", "seq": "54,68", "label": "George F. Moore"}], "predicate mapping": [], "id": "a2f49798a84244cd9bf1dd675795ccb7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/New_Orleans> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the things for which people of New Orleans are famous for?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Orleans", "seq": "36,46", "label": "New Orleans"}], "predicate mapping": [], "id": "5aa02b6827bf4e9590a49a469b64904a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)> <http://dbpedia.org/property/guests> ?uri  . }", "question": "The Other Side has hosted how many guests?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)", "seq": "0,13", "label": "The Other Side"}], "predicate mapping": [], "id": "2165408d4ec94d15a8cd6d639dffcfdc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Anton_Oliver> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "What is the deathplace of the rugby player who is the relatives of Anton Oliver ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anton_Oliver", "seq": "67,78", "label": "Anton Oliver"}], "predicate mapping": [], "id": "96c1a8fa851c4e83b2444ba219f5352b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/James_Roosevelt> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.> . }", "question": "Who have children named James Roosevelt and Franklin Delano Roosevelt, Jr.?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Roosevelt", "seq": "24,38", "label": "James Roosevelt"}, {"uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.", "seq": "44,72", "label": "Franklin Delano Roosevelt, Jr"}], "predicate mapping": [], "id": "73ba87c4b9fb40ee968f00a20022e04f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which scientist advised a doctoral student named Erban Ieica?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "seq": "49,59", "label": "Erban Ieica"}], "predicate mapping": [], "id": "9195104b821e430d93b815182ea75c44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/Jos\u00e9_Ruiz_y_Blasco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Which artist was taught by Jos Ruiz y Blasco?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jos\u00e9_Ruiz_y_Blasco", "seq": "27,43", "label": "Jos Ruiz y Blasco"}], "predicate mapping": [], "id": "64641fa005c74f08b24a64c47b15f3be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_Security_Services> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> ?uri . }", "question": "What are the houses of the Parliament Security Services and Parliament of India ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Parliament_Security_Services", "seq": "27,54", "label": "Parliament Security Services"}, {"uri": "http://dbpedia.org/resource/Parliament_of_India", "seq": "60,78", "label": "Parliament of India"}], "predicate mapping": [], "id": "c84631401cb74a8483377f954e5989cd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zachary_Taylor> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Major_general_(United_States)> }", "question": "Was Zachary taylor a major general?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zachary_Taylor", "seq": "4,17", "label": "Zachary taylor"}, {"uri": "http://dbpedia.org/resource/Major_general_(United_States)", "seq": "21,33", "label": "major general"}], "predicate mapping": [], "id": "7e2d4902f5374b70b03c59179b9e2ac1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Brian_Horwitz> <http://dbpedia.org/ontology/debutTeam> ?uri . }", "question": "For which team did both Butch Metzger and Brian Horwitz debuted ? ", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Butch_Metzger", "seq": "24,36", "label": "Butch Metzger"}, {"uri": "http://dbpedia.org/resource/Brian_Horwitz", "seq": "42,54", "label": "Brian Horwitz"}], "predicate mapping": [], "id": "2874d474d7134582be3c5ad5c4600b92"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV shows with network as NBC and company as Paramount Television ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "seq": "34,36", "label": "NBC"}, {"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "53,72", "label": "Paramount Television"}], "predicate mapping": [], "id": "7c500d33868d4336a446b69df7d357c0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Terry_Melcher> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}", "question": "Who has composed songs produced by Terry Melcher?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terry_Melcher", "seq": "35,47", "label": "Terry Melcher"}], "predicate mapping": [], "id": "5cc4f7f24686439c9c74aa24e81b5414"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri } ", "question": "List down the cinematographers of Mickey's Mellerdrammer?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer", "seq": "34,55", "label": "Mickey's Mellerdrammer"}], "predicate mapping": [], "id": "60f077d104bb416caff97689ba8b4506"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ghana_School_of_Law> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which country's people have graduated from Ghana School of Law?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ghana_School_of_Law", "seq": "43,61", "label": "Ghana School of Law"}], "predicate mapping": [], "id": "8b827358accc43048f434244318b58c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Shaun_the_Sheep> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What awards have been given to the dude who made Shaun the Sheep?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_the_Sheep", "seq": "49,63", "label": "Shaun the Sheep"}], "predicate mapping": [], "id": "37f1ac3a34a64c90ab93ffe69af727ca"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri } ", "question": "Where is  Dofinivka Estuary  located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dofinivka_Estuary", "seq": "10,26", "label": "Dofinivka Estuary"}], "predicate mapping": [], "id": "aab7be38505a4ecdb2689be99d9d9de4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Seberang_Perai> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "Bridge that starts at Seberang Perai crosses over what?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seberang_Perai", "seq": "22,35", "label": "Seberang Perai"}], "predicate mapping": [], "id": "dcb880946a53419fbc8f9ae1d09a35be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/General_Educational_Development> . ?x <http://dbpedia.org/property/bodyDiscovered> ?uri  . }", "question": "Where was the deadbody discovered of one of the alumni of General Educational Development?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/General_Educational_Development", "seq": "58,88", "label": "General Educational Development"}], "predicate mapping": [], "id": "3a4fadbc37434b5fb38032e9e21e5a9e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "To which senator did military unit VMF-155 belong?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/VMF-155", "seq": "35,41", "label": "VMF-155"}], "predicate mapping": [], "id": "cf9cd4c9f5d64639ac21b712b3ead2e4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri } ", "question": "What awards did Jos Rivera (playwright) win?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)", "seq": "16,25", "label": "Jos Rivera"}], "predicate mapping": [], "id": "b063dd30941243b2836623934589c121"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/ontology/discoverer> ?uri } ", "question": "Who discovered Callisto ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Callisto_(moon)", "seq": "15,22", "label": "Callisto"}], "predicate mapping": [], "id": "1ec578b785684d0cbde64684ee3c7fbf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Audi> }", "question": "Does Shaun Thong a member of Audi?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_Thong", "seq": "5,15", "label": "Shaun Thong"}, {"uri": "http://dbpedia.org/resource/Audi", "seq": "29,32", "label": "Audi"}], "predicate mapping": [], "id": "ef36454fc013444f981fe8a7069ceee8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/cpu> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Give me a list of computers whose CPU is in the US.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "18,32", "label": "computers whose"}], "predicate mapping": [], "id": "c6d4e596834546d09a59e92ba09dc966"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Which musical artist associated with Tony Allen has label with Celluloid Records ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Allen_(musician)", "seq": "37,46", "label": "Tony Allen"}, {"uri": "http://dbpedia.org/resource/Celluloid_Records", "seq": "63,79", "label": "Celluloid Records"}], "predicate mapping": [], "id": "fe996e9ac1574a1aa94ab07621bcc9f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . }", "question": "Whose labels are Victor Entertainment and Celluloid Records?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Victor_Entertainment", "seq": "17,36", "label": "Victor Entertainment"}, {"uri": "http://dbpedia.org/resource/Celluloid_Records", "seq": "42,58", "label": "Celluloid Records"}], "predicate mapping": [], "id": "01b888b9a2c541569160d22ed502b036"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Rakitnica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "question": "Where does the river end, into which the Rakitnica flows?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rakitnica", "seq": "41,49", "label": "Rakitnica"}], "predicate mapping": [], "id": "e65463440f1f4b59b6d0163ad10c490e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/James_Roberts_(trade_unionist)> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "question": "Where is the tombstone of the parliament members who served with James Roberts as the Vice President, US?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Roberts_(trade_unionist)", "seq": "65,77", "label": "James Roberts"}], "predicate mapping": [], "id": "1f6fd444f7bb47f3a2d9b177207bd93b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Coast_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Seattle> }", "question": "Do the west coast airlines fly to seattle?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Coast_Airlines", "seq": "7,25", "label": "west coast airlines"}, {"uri": "http://dbpedia.org/resource/Seattle", "seq": "34,40", "label": "seattle"}], "predicate mapping": [], "id": "b4b6b1d0dcab4cbb934923e070092d67"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Arlington_Heights,_Illinois> . ?x <http://dbpedia.org/property/teamName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Which school teams are there in schools of Arlington Heights, Illinois?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_Heights,_Illinois", "seq": "43,69", "label": "Arlington Heights, Illinois"}], "predicate mapping": [], "id": "333d5cd5059b45d3962c5df06c13b5a8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around> <http://dbpedia.org/ontology/silverMedalist> ?uri } ", "question": "Who was the silver medalist of Gymnastics at the 2008 Summer Olympics  Women's artistic individual all-around ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around", "seq": "31,108", "label": "Gymnastics at the 2008 Summer Olympics  Women's artistic individual all-around"}], "predicate mapping": [], "id": "ec0ca62208e240c396994de301d25f2b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine> . ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post> . }", "question": "Who  works  at the American Magazine and New York Post?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_American_Magazine", "seq": "15,35", "label": "the American Magazine"}, {"uri": "http://dbpedia.org/resource/New_York_Post", "seq": "41,53", "label": "New York Post"}], "predicate mapping": [], "id": "5c3207ee849d4e9cb44f0ee1d698b602"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ", "question": "Which past members of the The Conglomerate (American group) also sang Take Me There (Blackstreet & Ma song)?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)", "seq": "26,41", "label": "The Conglomerate"}, {"uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)", "seq": "70,82", "label": "Take Me There"}], "predicate mapping": [], "id": "5f0af10a644a420ebcd9811b94687f7d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "List the academic discipline of the journals whose publisher is SAGE Publications.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/SAGE_Publications", "seq": "64,80", "label": "SAGE Publications"}], "predicate mapping": [], "id": "829a21985c7e487794927252d84f61ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Collaborators of Demis Roussos have composed music for which movies?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Demis_Roussos", "seq": "17,29", "label": "Demis Roussos"}], "predicate mapping": [], "id": "7f55bf607c9e490aae4ff2f9f40a27e2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frampton's_Camel> <http://dbpedia.org/property/producer> ?uri } ", "question": "Who is the producer of  Frampton's Camel ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frampton's_Camel", "seq": "24,39", "label": "Frampton's Camel"}], "predicate mapping": [], "id": "66e01d57a2df4c9f85521c5217cd6e8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pittsburgh_Line> <http://dbpedia.org/ontology/routeEnd> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }", "question": "Who founded the city at the end of the Pittsburgh Line route?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburgh_Line", "seq": "39,53", "label": "Pittsburgh Line"}], "predicate mapping": [], "id": "77ff380ac54845299a3af128262d754e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "How many developers were involved in creating games whose score is composed by Gerard Marino?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gerard_Marino", "seq": "79,91", "label": "Gerard Marino"}], "predicate mapping": [], "id": "ab9baa98e6fb4a059714923fda2f04d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }", "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260", "seq": "37,50", "label": "Focke Wulf 260"}, {"uri": "http://dbpedia.org/resource/Start_+_Flug_H-101", "seq": "56,71", "label": "Start+Flug H 101"}], "predicate mapping": [], "id": "2130571cb0394b1b82ad2a8c6f4f159f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Adriatic_Sea> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which source of river Raa is the sovereign state of Adriatic sea ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ra\u0161a_(river)", "seq": "22,24", "label": "Raa"}, {"uri": "http://dbpedia.org/resource/Adriatic_Sea", "seq": "52,63", "label": "Adriatic sea"}], "predicate mapping": [], "id": "da0c3ca5edfb4bad9ef869c38119a10e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri  . }", "question": "Count the key people of the Clinton Foundation?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clinton_Foundation", "seq": "28,45", "label": "Clinton Foundation"}], "predicate mapping": [], "id": "7929405db86045639c914a7ee9838ebe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House>  . }", "question": "Give me someone on the board of trinity house?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trinity_House", "seq": "32,44", "label": "trinity house"}], "predicate mapping": [], "id": "dcf0ebac4929414587aae36086a4e6e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "Count  the journals in the field of Philosophy.", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philosophy", "seq": "36,45", "label": "Philosophy"}], "predicate mapping": [], "id": "b4c8a3b66e0e4e5f84d3b105133a1a76"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Parker_(baseball)> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Carl_Sitton> <http://dbpedia.org/property/debutteam> ?uri} ", "question": "Which former team of the Harry Parker (baseball) is the  debut team of the Carl Sitton?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Parker_(baseball)", "seq": "25,36", "label": "Harry Parker"}, {"uri": "http://dbpedia.org/resource/Carl_Sitton", "seq": "75,85", "label": "Carl Sitton"}], "predicate mapping": [], "id": "f0b3be48f76141be802e4a2acc00e427"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/crosses> <http://dbpedia.org/resource/Valaichchenai_Lagoon> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who designed the bridge over the Valaichchenai lagoon?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Valaichchenai_Lagoon", "seq": "33,52", "label": "Valaichchenai lagoon"}], "predicate mapping": [], "id": "8989b26f786b4644a8bd2c8d966c59a7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/McClain_(band)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List all the artist of the TV shows which has McClain as one of the artist ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/McClain_(band)", "seq": "46,52", "label": "McClain"}], "predicate mapping": [], "id": "a82a76ab3a4e43b4b970a48f9341fa82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character is portrayed by Roger Barton (film editor)?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)", "seq": "42,53", "label": "Roger Barton"}], "predicate mapping": [], "id": "8a6304978223453caa7f58e579290646"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kala_Pani_(1958_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Where did the film director of Kala Pani die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kala_Pani_(1958_film)", "seq": "31,39", "label": "Kala Pani"}], "predicate mapping": [], "id": "0cd31fba24c240f588c0916b021f4d63"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Buddhism> }", "question": "Does Timothy Morton study Buddhism?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timothy_Morton", "seq": "5,18", "label": "Timothy Morton"}, {"uri": "http://dbpedia.org/resource/Buddhism", "seq": "26,33", "label": "Buddhism"}], "predicate mapping": [], "id": "18e1b907a21644199bcf31fb9629f79c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "seq": "29,47", "label": "Ptolemy XII Auletes"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator", "seq": "64,92", "label": "Ptolemy XIII Theos Philopator"}], "predicate mapping": [], "id": "81ced9f9e10b4380a691a73a17095c6e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which universit's affiliation is with Kalpan, Inc. and has campus at Iowa ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "seq": "38,48", "label": "Kalpan, Inc"}, {"uri": "http://dbpedia.org/resource/Iowa", "seq": "69,72", "label": "Iowa"}], "predicate mapping": [], "id": "c3fb5965d89548719ebf83511d9e262a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Englewood,_Colorado> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}", "question": "Name the nearest city to the historic place which has Englewood, Colorado as one of them ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Englewood,_Colorado", "seq": "54,72", "label": "Englewood, Colorado"}], "predicate mapping": [], "id": "14b649e758114f038de6c1dad6027728"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Shelby_County,_Tennessee> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movies have someone on their cast from Shelby County in Tennessee?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shelby_County,_Tennessee", "seq": "45,70", "label": "Shelby County in Tennessee"}], "predicate mapping": [], "id": "b4a89e8c9b55499eaa9963fe4b9d6152"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Sakari_Suzuki> <http://dbpedia.org/property/deathPlace> ?uri} ", "question": "Which area operataed by the South Side Elevated Railroad is also the palce of death of the Sakari Suzuki ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad", "seq": "28,55", "label": "South Side Elevated Railroad"}, {"uri": "http://dbpedia.org/resource/Sakari_Suzuki", "seq": "91,103", "label": "Sakari Suzuki"}], "predicate mapping": [], "id": "91aee5e1ffe6462bac764925234764de"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/John_Roberts> . ?uri <http://dbpedia.org/property/address> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}", "question": "Which venues are located at places governed by John Roberts?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Roberts", "seq": "47,58", "label": "John Roberts"}], "predicate mapping": [], "id": "1a7b4ab5c3674875a82e577a3fcb3a55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army>  . }", "question": "How many people are in the continental army?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "seq": "27,42", "label": "continental army"}], "predicate mapping": [], "id": "7abaec31e6094f6eac72313b8dd8dc32"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerPartner> <http://dbpedia.org/resource/Andrea_Poapst> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "question": "List all the former partners of the figure skater whose one of the former partner was Andrea poapst ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrea_Poapst", "seq": "86,98", "label": "Andrea poapst"}], "predicate mapping": [], "id": "6a4481eea53441dd93ec930653e08be0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Connecticut_Lakes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What river originates in the Connecticut Lakes?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Connecticut_Lakes", "seq": "29,45", "label": "Connecticut Lakes"}], "predicate mapping": [], "id": "98ad740059cf4598828aa46f80707524"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri. <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri} ", "question": "Which band made the song Take me There, and has collaborated with Blayse in the past?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)", "seq": "25,37", "label": "Take me There"}, {"uri": "http://dbpedia.org/resource/Blayse", "seq": "66,71", "label": "Blayse"}], "predicate mapping": [], "id": "9463f20554d74722b20e3d92a0afb024"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . }", "question": "How many things are aired on BBC HD?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "29,34", "label": "BBC HD"}], "predicate mapping": [], "id": "602d5f8103c345b1bf3b59a8f4fbcb01"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> } ", "question": "How many have order (taxonomy) as Bacillales and division as Firmicutes are there?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillales", "seq": "34,43", "label": "Bacillales"}, {"uri": "http://dbpedia.org/resource/Firmicutes", "seq": "61,70", "label": "Firmicutes"}], "predicate mapping": [], "id": "b8635fcc40054be7ab13c01967f64197"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "In which countries are there banks which came after the National Commercial Bank of Mauritius?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius", "seq": "56,92", "label": "National Commercial Bank of Mauritius"}], "predicate mapping": [], "id": "010e9f9ec10d4cf5bd9455353215d507"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> } ", "question": "How many have company as Paramount Television and network as NBC are there?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "25,44", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/NBC", "seq": "61,63", "label": "NBC"}], "predicate mapping": [], "id": "f7ac133498534de782ec5fb02ef8a8f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Brian_Peddle> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "What is the birthplace of the office holder who is the predecessor of Brian Peddle ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Peddle", "seq": "70,81", "label": "Brian Peddle"}], "predicate mapping": [], "id": "d73d838df73b44d0a6ddab13ae678fc9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Speraw> <http://dbpedia.org/property/hometown> ?uri } ", "question": "What is the hometown of John Speraw ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Speraw", "seq": "24,34", "label": "John Speraw"}], "predicate mapping": [], "id": "86f65bd1385144dfb07dd940f6dc77de"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri } ", "question": "What is the affiliation of Vanderbilt University Medical Center ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center", "seq": "27,62", "label": "Vanderbilt University Medical Center"}], "predicate mapping": [], "id": "53ffec1f77474312b866a1ef550836ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michel_Hazanavicius> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri . }", "question": "Which awards has been given to both michel hazanavicius and geoffrey rush?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michel_Hazanavicius", "seq": "36,54", "label": "michel hazanavicius"}, {"uri": "http://dbpedia.org/resource/Geoffrey_Rush", "seq": "60,72", "label": "geoffrey rush"}], "predicate mapping": [], "id": "9a35da4952d244529b72c489a452b9d1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sullivan_Central_High_School> <http://dbpedia.org/property/rival> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "What is the mascot of the rival school of Sullivan Central High?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sullivan_Central_High_School", "seq": "42,62", "label": "Sullivan Central High"}], "predicate mapping": [], "id": "9f0073c478fd4bf6a6bc808734ee4d21"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which Paramount TV show was produced by Glen and Les Charles ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glen_and_Les_Charles", "seq": "40,59", "label": "Glen and Les Charles"}, {"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "6,22", "label": "Paramount TV show"}], "predicate mapping": [], "id": "5a15996c69764d78950ee50018ff8de5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "How many airlines have a hub at an airport run by LA World Airports?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports", "seq": "50,66", "label": "LA World Airports"}], "predicate mapping": [], "id": "9b92048679a944be937dd4f049c925cb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> ?uri } ", "question": "What are the main interests of Timothy Morton?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timothy_Morton", "seq": "31,44", "label": "Timothy Morton"}], "predicate mapping": [], "id": "3e2e7e2477ca4d47a63eae5961eb232f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Comcast> . ?uri <http://dbpedia.org/ontology/network> ?x  . }", "question": "Whose network's parent organisation is Comcast?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Comcast", "seq": "39,45", "label": "Comcast"}], "predicate mapping": [], "id": "2c7b634c43f94007bee6aa23f424829c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Rancho_Cucamonga,_California> . ?x <http://dbpedia.org/ontology/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "List all the locations of the companies whose are also located in Rancho Cucamonga, California ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rancho_Cucamonga,_California", "seq": "66,93", "label": "Rancho Cucamonga, California"}], "predicate mapping": [], "id": "186bdaf5fbc04890bd2dcb3041776050"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri. <http://dbpedia.org/resource/Work_(film)> <http://dbpedia.org/ontology/editing> ?uri . }", "question": "Name the common editor of Easy Street (film) and Work (film)?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Easy_Street_(film)", "seq": "26,36", "label": "Easy Street"}, {"uri": "http://dbpedia.org/resource/Work_(film)", "seq": "49,52", "label": "Work"}], "predicate mapping": [], "id": "4fc2bcb888944f50969d6131075914e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which are the television show which have been created by Donald Wilson?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)", "seq": "57,69", "label": "Donald Wilson"}], "predicate mapping": [], "id": "383f41d0dcfb442f8a4606d5de36ac08"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Robert_P._Smith> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . }", "question": "Whose successors are Robert P. Smith and Adrian A. Basora?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_P._Smith", "seq": "21,35", "label": "Robert P. Smith"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "41,56", "label": "Adrian A. Basora"}], "predicate mapping": [], "id": "5b273f2881264b6f9ad4004f1b82b9f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Zora_Singh_Maan> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }", "question": "Who is the mayor of the city under which is the constituency of Zora Singh Maan?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zora_Singh_Maan", "seq": "64,78", "label": "Zora Singh Maan"}], "predicate mapping": [], "id": "9a5eae5ceec54a8e97a3c8d7ecdb1149"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lois_Lane> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Jerry_Siegel> }", "question": "Did Jerry Siegel create Lois Lane?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lois_Lane", "seq": "24,32", "label": "Lois Lane"}, {"uri": "http://dbpedia.org/resource/Jerry_Siegel", "seq": "4,15", "label": "Jerry Siegel"}], "predicate mapping": [], "id": "b7900ed86fb84fd7a7f479831e72bfcb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Creature_Comforts> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Which awards did the writer, who is  the creator of Creature Comforts, won ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Creature_Comforts", "seq": "52,68", "label": "Creature Comforts"}], "predicate mapping": [], "id": "4b03656d18b848c5830c2015fa4a9cdd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri } ", "question": "Who is the incumbent of Al Gore presidential campaign of 2000 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000", "seq": "24,60", "label": "Al Gore presidential campaign of 2000"}], "predicate mapping": [], "id": "240ab1b4acb848ce816bdc5a4660b11b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri . }", "question": "Which team did Wilfred McDonalds and Cam Plante play for?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wilfred_McDonald", "seq": "15,31", "label": "Wilfred McDonalds"}, {"uri": "http://dbpedia.org/resource/Cam_Plante", "seq": "37,46", "label": "Cam Plante"}], "predicate mapping": [], "id": "0ea3f7d690c9488d82d9805a2e705cdc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Brynn_Carman> <http://dbpedia.org/ontology/formerPartner> ?x . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "question": "Who is the former partner of the figure skater which was the former partner of Brynn Carman ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brynn_Carman", "seq": "79,90", "label": "Brynn Carman"}], "predicate mapping": [], "id": "74c48daf3f3e40b8b2a9075494203130"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/England>  . }", "question": "England is the origin of how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "0,6", "label": "England"}], "predicate mapping": [], "id": "563b1fefc10e4618a5b680d3baa31037"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri . }", "question": "What is the common debut team of the Butch Metzger and Dan Otero?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Butch_Metzger", "seq": "37,49", "label": "Butch Metzger"}, {"uri": "http://dbpedia.org/resource/Dan_Otero", "seq": "55,63", "label": "Dan Otero"}], "predicate mapping": [], "id": "2502d9f7189e473992f6091f18a256fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Defense_Security_Command> <http://dbpedia.org/ontology/notableCommander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What religion is followed by the commander of Defense Security Command?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defense_Security_Command", "seq": "46,69", "label": "Defense Security Command"}], "predicate mapping": [], "id": "bd1de460e21d4db4bf8e5065934b8bc6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albert_P._Clark> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }", "question": "Is Albert P Clark buried in Colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Albert_P._Clark", "seq": "3,16", "label": "Albert P Clark"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "28,35", "label": "Colorado"}], "predicate mapping": [], "id": "1604b4deca8f4b089da3546474871043"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Who is  office holder of constituencies Duboce Triangle and Noe Valley ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "seq": "40,62", "label": "Duboce Triangle and Noe"}, {"uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco", "seq": "60,69", "label": "Noe Valley"}], "predicate mapping": [], "id": "c373b33ce50b4f15976673862387f06d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "For how many things are americans famous for?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "13,22", "label": "things are"}], "predicate mapping": [], "id": "a473965ed74b45298f4f8082bca57f56"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which politician was succeeded by someone who graduated from the Instituts d'tudes politiques?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques", "seq": "65,92", "label": "Instituts d'tudes politiques"}], "predicate mapping": [], "id": "ac238bf4d1e14571a3b37e506efd4240"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Muzaffar_Umar> <http://dbpedia.org/property/placeOfBurial> ?uri } ", "question": "Where was Al-Muzaffar Umar buried ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Al-Muzaffar_Umar", "seq": "10,25", "label": "Al-Muzaffar Umar"}], "predicate mapping": [], "id": "e83b9ec4abef418585e8a76f2dae15f4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/World_Series_of_Poker> <http://dbpedia.org/property/founded> ?uri } ", "question": "Who created the world series of Poker?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/World_Series_of_Poker", "seq": "16,36", "label": "world series of Poker"}], "predicate mapping": [], "id": "ebfe588dc9854e4db5a96b4bb467c612"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Ulsan> }", "question": "Is the Hyundai Lavita assembled in Ulsan?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "seq": "7,20", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Ulsan", "seq": "35,39", "label": "Ulsan"}], "predicate mapping": [], "id": "ffc8b63b6f384ab18b8f65a4d3dd31d4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri } ", "question": "Which countries came together to serve a greater purpose and founded South Asia Subregional Economic Cooperation?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation", "seq": "69,111", "label": "South Asia Subregional Economic Cooperation"}], "predicate mapping": [], "id": "e15981cdcc5a4f23935cf46e161ee0c0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Waylon_Jennings>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Which musical artists have collaborated with Waylon Jennings?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waylon_Jennings", "seq": "45,59", "label": "Waylon Jennings"}], "predicate mapping": [], "id": "004432a58e614e89a30c84e3df4164e0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri } ", "question": "where did soccer bowl take place in 76?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Soccer_Bowl_'76", "seq": "10,25", "label": "soccer bowl take"}], "predicate mapping": [], "id": "5bc7320186b842359a554f9fe14298dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Drop.io> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Sean_Parker> <http://dbpedia.org/ontology/knownFor> ?uri . }", "question": "Which owner of Drop.io made Sean Parker famous?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Drop.io", "seq": "15,21", "label": "Drop.io"}, {"uri": "http://dbpedia.org/resource/Sean_Parker", "seq": "28,38", "label": "Sean Parker"}], "predicate mapping": [], "id": "2a705d023eea446eb1e7b31a390a4146"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies were cinematographed by Jordan Cronenweth?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "40,56", "label": "Jordan Cronenweth"}], "predicate mapping": [], "id": "443a00fd2e584e189bc1bd31ac97b83f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fox_and_the_Cat> <http://dbpedia.org/property/species> ?uri. <http://dbpedia.org/resource/Seneca_Academy_and_Circle_School> <http://dbpedia.org/property/mascot> ?uri} ", "question": "Which kmascot od seneca Academy is also the species of The Fox and the Cat ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Fox_and_the_Cat", "seq": "55,73", "label": "The Fox and the Cat"}, {"uri": "http://dbpedia.org/resource/Seneca_Academy_and_Circle_School", "seq": "17,42", "label": "seneca Academy is also the"}], "predicate mapping": [], "id": "813f18d7591b4b3f89070f3f5831e627"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Money_(Pink_Floyd_song)> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }", "question": "Who is the producer of album which has the song Money?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Money_(Pink_Floyd_song)", "seq": "48,52", "label": "Money"}], "predicate mapping": [], "id": "19d1d7a22c4a4cbc8b813fc291a6142f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)", "seq": "30,52", "label": "The spirit of Christmas"}, {"uri": "http://dbpedia.org/resource/Mona_Marshall", "seq": "94,106", "label": "Mona Marshall"}], "predicate mapping": [], "id": "dd1b888f16a14a13b8be3e662804a5d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Give me a count of airlines whose hub airport is Los Angeles International Airport?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport", "seq": "49,81", "label": "Los Angeles International Airport"}], "predicate mapping": [], "id": "3d5efd9583804ec4b72267a23374e76c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> <http://dbpedia.org/resource/Moscow> }", "question": "Did Alexandre Tichonov study at the Moscow university?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexandre_Tichonov", "seq": "4,21", "label": "Alexandre Tichonov"}, {"uri": "http://dbpedia.org/resource/Moscow", "seq": "36,41", "label": "Moscow"}], "predicate mapping": [], "id": "e3a008c553da49fd876ece5a7c775750"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose source place is Gloucestershire and mouth place is Southend-on-Sea ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gloucestershire", "seq": "37,51", "label": "Gloucestershire"}, {"uri": "http://dbpedia.org/resource/Southend-on-Sea", "seq": "72,86", "label": "Southend-on-Sea"}], "predicate mapping": [], "id": "9909bc6ab5e94d539ff2c98c952e5800"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri  . }", "question": "How many members are there in the European Go Federation?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Go_Federation", "seq": "34,55", "label": "European Go Federation"}], "predicate mapping": [], "id": "1f086bdd8ed24312b65cf9f137499a64"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Momoko Kchi has acted in which movie ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Momoko_K\u014dchi", "seq": "0,10", "label": "Momoko Kchi"}], "predicate mapping": [], "id": "612fd54a14cf4ea1bd327ac4ab6a3475"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri } ", "question": "List all the notable works of  Russell T Davies?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "31,46", "label": "Russell T Davies"}], "predicate mapping": [], "id": "2380fcd83c494a80927f6825ba436c94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri . }", "question": "Jimmie Fisher and Winston Bryant were governors under which president?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher", "seq": "0,12", "label": "Jimmie Fisher"}, {"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "18,31", "label": "Winston Bryant"}], "predicate mapping": [], "id": "7320bf155b9b4a90b729bd36263698da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Phil_Collinson> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows are similar to the ones produced by Phil Collinson?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Phil_Collinson", "seq": "48,61", "label": "Phil Collinson"}], "predicate mapping": [], "id": "65de0b27d7cf414daa73bab1546dfaab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies did Michael Deeley produce?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "20,33", "label": "Michael Deeley"}], "predicate mapping": [], "id": "398001dda0f745a3a783b7916f2b2376"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/Park_Trammell> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Which college of the Luke List (golfer) is the alma mater of the Park Trammell ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Luke_List_(golfer)", "seq": "21,29", "label": "Luke List"}, {"uri": "http://dbpedia.org/resource/Park_Trammell", "seq": "65,77", "label": "Park Trammell"}], "predicate mapping": [], "id": "f06758ad9c714bf490f784dcceb3ba90"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spanish_Harlem_Incident> <http://dbpedia.org/ontology/composer> ?uri } ", "question": "Spanish harlem incident was composed by whom ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident", "seq": "0,22", "label": "Spanish harlem incident"}], "predicate mapping": [], "id": "daa582dfaf1a4472bddfa0b0a4deb1e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Dognapper>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Who is the fictional character who starred in The Dognapper?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Dognapper", "seq": "46,58", "label": "The Dognapper"}], "predicate mapping": [], "id": "65a7bbb407e44d46825ede7581db9462"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher> } ", "question": "Count the movies edited by  Mark Stevens (film editor) and were directed by Joel Schumacher?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)", "seq": "28,39", "label": "Mark Stevens"}, {"uri": "http://dbpedia.org/resource/Joel_Schumacher", "seq": "76,90", "label": "Joel Schumacher"}], "predicate mapping": [], "id": "ef08c3edfb5e4c85ba7a33a77a5f0119"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . }", "question": "Enumerate all the first teams of the GPs which were held in Watkins Glen, NY?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York", "seq": "60,75", "label": "Watkins Glen, NY"}], "predicate mapping": [], "id": "613c74a4ec09400a94fd8ede2e063e5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "question": "List some songwriters whose work has been recorded in Miami?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miami", "seq": "54,58", "label": "Miami"}], "predicate mapping": [], "id": "707d9bdd0d8e44a1bae79286521ce0fc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character portrayed by Roger barton has Darth Vader as family member ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darth_Vader", "seq": "56,66", "label": "Darth Vader"}, {"uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)", "seq": "39,50", "label": "Roger barton"}], "predicate mapping": [], "id": "d5c3a119f9f8443584725cba541904f6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Jared_Bernstein> <http://dbpedia.org/ontology/vicePresident> ?uri . }", "question": "Elizabeth Alexander and Jared Bernstein served under which Vice President?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)", "seq": "0,18", "label": "Elizabeth Alexander"}, {"uri": "http://dbpedia.org/resource/Jared_Bernstein", "seq": "24,38", "label": "Jared Bernstein"}], "predicate mapping": [], "id": "3375a4f07f5548d1ae047a3fa248dd11"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Blay> <http://dbpedia.org/property/allegiance> ?uri } ", "question": "To which country does Peter Blay owe his allegiance?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Blay", "seq": "22,31", "label": "Peter Blay"}], "predicate mapping": [], "id": "c43db2cba5e24a05bdfa5d77aa3667ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . }", "question": "Which citys mayor is anne hidalgo?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anne_Hidalgo", "seq": "21,32", "label": "anne hidalgo"}], "predicate mapping": [], "id": "ce5857e30c24478bacad831b90eb559c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> } ", "question": "Count the number of movies whose distributor is RKO Pictures and director of photography is Gregg Toland?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/RKO_Pictures", "seq": "48,59", "label": "RKO Pictures"}, {"uri": "http://dbpedia.org/resource/Gregg_Toland", "seq": "92,103", "label": "Gregg Toland"}], "predicate mapping": [], "id": "9993c21e0dba4189a4d49112ea149a76"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri } ", "question": "What is the division of Serbia national American football team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Serbia_national_American_football_team", "seq": "24,61", "label": "Serbia national American football team"}], "predicate mapping": [], "id": "90065788c32f4906aa5614759fb3917e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }", "question": "Who has allegiance is Colony of Virginia and buried in Montpelier?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colony_of_Virginia", "seq": "22,39", "label": "Colony of Virginia"}, {"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "seq": "55,64", "label": "Montpelier"}], "predicate mapping": [], "id": "5bf4a1c66058437cb656e5b1c6588eac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Full-size_car> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Give me the list of cars which are the predecessor of Full Sized Cars?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Full-size_car", "seq": "54,68", "label": "Full Sized Cars"}], "predicate mapping": [], "id": "6b40bf5e283244129850be2446ce0074"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/United_First_Parish_Church> . ?uri <http://dbpedia.org/ontology/vicePresident> ?x  . }", "question": "Who served a vice president buried in United First Parish Church?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_First_Parish_Church", "seq": "38,63", "label": "United First Parish Church"}], "predicate mapping": [], "id": "22086cbb41ac4acc823ba66b6334f11d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_York_State_Route_470> <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Cohoes,_New_York> }", "question": "Does Cohoes a junction on the NY State Route 470?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_State_Route_470", "seq": "30,47", "label": "NY State Route 470"}, {"uri": "http://dbpedia.org/resource/Cohoes,_New_York", "seq": "5,21", "label": "Cohoes a junction"}], "predicate mapping": [], "id": "9d6b44c745cc4b13a87b0664f5ba8a0b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Pacific_Ocean> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "List the regions served by the company which serves in Pacific Ocean ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pacific_Ocean", "seq": "55,67", "label": "Pacific Ocean"}], "predicate mapping": [], "id": "22b3592acd354c4d99ea51f040e1cd0f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dannielynn_Birkhead> <http://dbpedia.org/ontology/parent> ?uri } ", "question": "Who are the biological parents of Dannielynn Birkhead?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dannielynn_Birkhead", "seq": "34,52", "label": "Dannielynn Birkhead"}], "predicate mapping": [], "id": "320124cd584843c6908f36b25c0bb181"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Smiths> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Morrissey> }", "question": "Was Morrissey a member of the Smiths?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Smiths", "seq": "26,35", "label": "the Smiths"}, {"uri": "http://dbpedia.org/resource/Morrissey", "seq": "4,12", "label": "Morrissey"}], "predicate mapping": [], "id": "10c98449b32b44b2bc010f8eb7df50b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marie_Sisters> <http://dbpedia.org/property/producer> ?uri } ", "question": "Who are the producers of Marie Sisters?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marie_Sisters", "seq": "25,37", "label": "Marie Sisters"}], "predicate mapping": [], "id": "f928abbb8f11455eb05de0b4ec4c82d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Clatsop_County,_Oregon> . ?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Columbia_Lake>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river with source as Columbia Lake and river mouth is located in Clatsop Country ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clatsop_County,_Oregon", "seq": "74,88", "label": "Clatsop Country"}, {"uri": "http://dbpedia.org/resource/Columbia_Lake", "seq": "30,42", "label": "Columbia Lake"}], "predicate mapping": [], "id": "232324046fea420f9ef510ab09298d99"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Give me a count of movies whose music composer is Bernard Herrmann?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bernard_Herrmann", "seq": "50,65", "label": "Bernard Herrmann"}], "predicate mapping": [], "id": "587c7b022e6f43c58d30747018299a1f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/My_Truly,_Truly_Fair> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Mitch_Miller> }", "question": "Is my truly truly fair the band of mitch miller?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/My_Truly,_Truly_Fair", "seq": "3,21", "label": "my truly truly fair"}, {"uri": "http://dbpedia.org/resource/Mitch_Miller", "seq": "35,46", "label": "mitch miller"}], "predicate mapping": [], "id": "1dabbe38304b45038e9853ea185a6280"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri} ", "question": "What is the common product of the Apple Productivity Experience Group and services of the 21Vianet ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group", "seq": "34,68", "label": "Apple Productivity Experience Group"}, {"uri": "http://dbpedia.org/resource/21Vianet", "seq": "90,97", "label": "21Vianet"}], "predicate mapping": [], "id": "eb14dd948f6f4df8b68c0a0f036a8957"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}", "question": "List the comic characters created by Joe Shuster ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Shuster", "seq": "37,47", "label": "Joe Shuster"}], "predicate mapping": [], "id": "e1e158c4b3c5462c9f9254f77b33ebde"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallington_railway_station> <http://dbpedia.org/ontology/country> ?uri } ", "question": "Name the sovereign state of Wallington railway station ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wallington_railway_station", "seq": "28,53", "label": "Wallington railway station"}], "predicate mapping": [], "id": "09b5ed743c6440648ec7e00b30bbeb60"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Todd_Huth> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's theme was composed by a band in which Todd Huth used to perform?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Todd_Huth", "seq": "54,62", "label": "Todd Huth"}], "predicate mapping": [], "id": "295609af44de49ffadaa466cfbfbc719"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }", "question": "Count all the Colonels?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "seq": "14,21", "label": "Colonels"}], "predicate mapping": [], "id": "44f1c8f9f2544b208b2f41cb608b27ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Ronaldo> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "question": "Where is the main ground of soccer seasons whose chairman is Ronaldo?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronaldo", "seq": "61,67", "label": "Ronaldo"}], "predicate mapping": [], "id": "fb9f45d8a2c24892b3e90b56c7fe8b34"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York", "seq": "55,70", "label": "Watkins Glen, NY"}], "predicate mapping": [], "id": "95d1d72d4de845859f814f734b971bd0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri} ", "question": "Which destination of the Novair International Airway is the source origin of Spaghetti squash ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Novair_International_Airways", "seq": "25,51", "label": "Novair International Airway"}, {"uri": "http://dbpedia.org/resource/Spaghetti_squash", "seq": "77,92", "label": "Spaghetti squash"}], "predicate mapping": [], "id": "63f44ae612544346aa0fe59e52be8806"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Paul_VI> } ", "question": "Who all have been canonized by Pope Paul VI", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Paul_VI", "seq": "31,42", "label": "Pope Paul VI"}], "predicate mapping": [], "id": "86de244495ad4682bba72845f387f090"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Redding,_Connecticut> . ?x <http://dbpedia.org/ontology/parent> ?uri  . }", "question": "Who are the parent  of the people that  has POD as Redding, Connecticut ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Redding,_Connecticut", "seq": "51,70", "label": "Redding, Connecticut"}], "predicate mapping": [], "id": "f51a76363b8a4f4289af2e25cf5ae7c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}", "question": "Who produces the trains operated by the MTR?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/MTR", "seq": "40,42", "label": "MTR"}], "predicate mapping": [], "id": "7ee73bf122af4474ab57198183ee3f32"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Richie_Aprile> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What religion did the spouse of Richie Aprile follow?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richie_Aprile", "seq": "32,44", "label": "Richie Aprile"}], "predicate mapping": [], "id": "06cd798687b746528a43245de0c8ab00"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Election_Commission_of_Thailand> <http://dbpedia.org/property/agencyName> ?uri } ", "question": "Name the agency of Election Commission of Thailand ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Election_Commission_of_Thailand", "seq": "19,49", "label": "Election Commission of Thailand"}], "predicate mapping": [], "id": "8a4ee894762240cbaa743c2639734575"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dschinghis_Khan_(song)> <http://dbpedia.org/ontology/subsequentWork> ?uri } ", "question": "What is the second track list of Dschinghis Khan (song) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dschinghis_Khan_(song)", "seq": "33,47", "label": "Dschinghis Khan"}], "predicate mapping": [], "id": "f8fbc5bc7c8a4272bcfeae43342ee9b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri} ", "question": "Which writer of Tales of Suspense is also the writer of karakuri Dji Ultimo ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "seq": "16,32", "label": "Tales of Suspense"}, {"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "seq": "56,74", "label": "karakuri Dji Ultimo"}], "predicate mapping": [], "id": "afccda799b6b41138bb5203359ad1618"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Attell> <http://dbpedia.org/ontology/influencedBy> ?uri. <http://dbpedia.org/resource/Adi\u00f3s_Amigo> <http://dbpedia.org/ontology/starring> ?uri . }", "question": "Who was the influencer of Dave Attel who also starred in Adios Amigo?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dave_Attell", "seq": "26,35", "label": "Dave Attel"}, {"uri": "http://dbpedia.org/resource/Adi\u00f3s_Amigo", "seq": "57,67", "label": "Adios Amigo"}], "predicate mapping": [], "id": "a759221f4e9b4ea3a2b9d8654e1bc7cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Nice_Pair> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }", "question": "Who is the producer of the album, after which A Nice pair was released ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Nice_Pair", "seq": "46,56", "label": "A Nice pair"}], "predicate mapping": [], "id": "b270a1df7e304d6bbec623691016b511"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Cars_(film)> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Who developed games based on the Cars series?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cars_(film)", "seq": "33,36", "label": "Cars"}], "predicate mapping": [], "id": "ccd5a59625d24531920a585c93e208e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/T._S._Thakur> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "question": "Which politicians live in a city led by T.S. Thakur?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/T._S._Thakur", "seq": "40,50", "label": "T.S. Thakur"}], "predicate mapping": [], "id": "6b036672b009486aba8ca22f384a054b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "Who is the military general buried in St Mary's Church, Battersea?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea", "seq": "38,64", "label": "St Mary's Church, Battersea"}], "predicate mapping": [], "id": "c453adcc2e0940139832c62258fcdaa2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Choi_Tu-son> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Choi_Tu-son", "seq": "68,78", "label": "Choi Tu Son"}], "predicate mapping": [], "id": "4bd7ce92e5834b2b9f27c18942dd990c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Jean-Fran\u00e7ois_Cot\u00e9> . ?x <http://dbpedia.org/property/artist> ?uri }", "question": "Give me the count of artist in the company whose Artist is Jean- Fran\u00e7ois Cot\u00e9 ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean-Fran\u00e7ois_Cot\u00e9", "seq": "59,77", "label": "Jean- Fran\u00e7ois Cot\u00e9"}], "predicate mapping": [], "id": "e0d8fe804adf4feab999453c822c20e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Olemic_Thommessen> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "How many universities are located in a country led by Olemic Thommessen?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Olemic_Thommessen", "seq": "54,70", "label": "Olemic Thommessen"}], "predicate mapping": [], "id": "53137c944cee49bea72f3c3542173081"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Rock_art> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . }", "question": "Give me a list of everyone who manages the famous rock art sites?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rock_art", "seq": "50,57", "label": "rock art"}], "predicate mapping": [], "id": "6aa8a3b5ed004373b608912919fe9db9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jerry_Rice> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi> }", "question": "Did Jerry Rice study in Oktoc Mississippi?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Rice", "seq": "4,13", "label": "Jerry Rice"}, {"uri": "http://dbpedia.org/resource/Oktoc,_Mississippi", "seq": "24,40", "label": "Oktoc Mississippi"}], "predicate mapping": [], "id": "9c1ea109b00f4f5aba49d87f8fac3deb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_fox> <http://dbpedia.org/ontology/family> ?uri } ", "question": "To which family does korean fox belongs to ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Korean_fox", "seq": "21,30", "label": "korean fox"}], "predicate mapping": [], "id": "26da9117036746eaa136ee24f55908f5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "Food in which countries has shallot in it?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shallot", "seq": "28,34", "label": "shallot"}], "predicate mapping": [], "id": "77e5540b4af34b73b9c43dd62c69c556"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri. <http://dbpedia.org/resource/Peter_Thorneycroft> <http://dbpedia.org/property/primeminister> ?uri} ", "question": "Who is the compiler of British Gazette whose prime minister is also Peter Thorneycroft ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Gazette", "seq": "23,37", "label": "British Gazette"}, {"uri": "http://dbpedia.org/resource/Peter_Thorneycroft", "seq": "68,85", "label": "Peter Thorneycroft"}], "predicate mapping": [], "id": "30f137f544404a14b30465f5c542a71c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri } ", "question": "What is the route end of NorthSouth Transport Corridor ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor", "seq": "25,53", "label": "NorthSouth Transport Corridor"}], "predicate mapping": [], "id": "aaa9ab64e1524e34b7451782aca41736"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Ragnhild_J\u00f8lsen> <http://dbpedia.org/property/birthplace> ?uri} ", "question": "What is the country which lies on the European route E8, and where Ragnhild Jolson was born?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_route_E8", "seq": "38,54", "label": "European route E8"}, {"uri": "http://dbpedia.org/resource/Ragnhild_J\u00f8lsen", "seq": "67,81", "label": "Ragnhild Jolson"}], "predicate mapping": [], "id": "351b32db9d724cfd823b5948b2ced6dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose distributer is HBO?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "51,53", "label": "HBO"}], "predicate mapping": [], "id": "f5e9009261864d4a998a4815dabb3404"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Carolyn_Heinrich> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Vanderbilt_University> }", "question": "Did Carolyn Heinrich study at the Vanderbilt?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carolyn_Heinrich", "seq": "4,19", "label": "Carolyn Heinrich"}, {"uri": "http://dbpedia.org/resource/Vanderbilt_University", "seq": "34,43", "label": "Vanderbilt"}], "predicate mapping": [], "id": "b95b28576f18419c894ce4f86851e7c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }", "question": "What are the musical performances whose label is Celluloid Records?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Celluloid_Records", "seq": "49,65", "label": "Celluloid Records"}], "predicate mapping": [], "id": "3816603ac6fd4377a4f32806c3821255"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Michael_Dell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "To which company is Michael Dell a father company? ", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Dell", "seq": "20,31", "label": "Michael Dell"}], "predicate mapping": [], "id": "df9d1c5e29c84fbe86c5e6135265ba82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "How many cars succeeded the cars which were similar to Cadillac Fleetwood?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cadillac_Fleetwood", "seq": "55,72", "label": "Cadillac Fleetwood"}], "predicate mapping": [], "id": "1dc65e5b1efd45e997dab9d523cfc041"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/broadcastArea> ?uri. <http://dbpedia.org/resource/Ajahn_Thate> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "What is the common region of the braod cast area of ITV and nationality of Ajahn Thate ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/ITV_(Thailand)", "seq": "52,54", "label": "ITV"}, {"uri": "http://dbpedia.org/resource/Ajahn_Thate", "seq": "75,85", "label": "Ajahn Thate"}], "predicate mapping": [], "id": "980685643c634f59b6a8c2114e5f6b75"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which person won Screen actors Guild Life Time Achievement award and has resting palce in Palo Alto, California ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "seq": "90,110", "label": "Palo Alto, California"}, {"uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award", "seq": "17,63", "label": "Screen actors Guild Life Time Achievement award"}], "predicate mapping": [], "id": "f41a1ab1a8a64e70891750e378d66e93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "question": "Give me a list of all the people driving at pole positions in the Grand Prixes where Renault was a first team?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Renault_in_Formula_One", "seq": "85,108", "label": "Renault was a first team"}], "predicate mapping": [], "id": "900ed9da86ce4991a9cef44d4e61b24f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri} ", "question": "Which mainter of  Cheasty Boulevard South is also the county seat of the King County, Washingtonsu ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South", "seq": "18,40", "label": "Cheasty Boulevard South"}, {"uri": "http://dbpedia.org/resource/King_County,_Washington", "seq": "73,97", "label": "King County, Washingtonsu"}], "predicate mapping": [], "id": "0518e52148a646b18bab0d50998ab176"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "question": "What work has been directed by Orson Welles and distributed by  RKO Pictures?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orson_Welles", "seq": "31,42", "label": "Orson Welles"}, {"uri": "http://dbpedia.org/resource/RKO_Pictures", "seq": "64,75", "label": "RKO Pictures"}], "predicate mapping": [], "id": "0551936fa2424f109acea056733b00bf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Andy_Warhol> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Pop_art> }", "question": "Was andy warhol a part of Pop Art movement?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andy_Warhol", "seq": "4,14", "label": "andy warhol"}, {"uri": "http://dbpedia.org/resource/Pop_art", "seq": "26,32", "label": "Pop Art"}], "predicate mapping": [], "id": "3668ef04a8a54a4b8d0c17338d67b95a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Name the sea located near Europe and has a nearby city as Rostock ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostock", "seq": "58,64", "label": "Rostock"}, {"uri": "http://dbpedia.org/resource/Europe", "seq": "26,31", "label": "Europe"}], "predicate mapping": [], "id": "fbd5f953b14447ef811cb0338ee88e8e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri} ", "question": "Which nearest city of LoDaisKa Site is also the location of Oskar Blues Brewery ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/LoDaisKa_Site", "seq": "22,34", "label": "LoDaisKa Site"}, {"uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery", "seq": "60,78", "label": "Oskar Blues Brewery"}], "predicate mapping": [], "id": "8146bc4b31d649cf8c5a1f34417b8be4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Morozevich> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Dmitri_Nossov> <http://dbpedia.org/property/residence> ?uri} ", "question": "What city is the place of birth of Alexander Morozevich which is also the official residence of Dmitri Nossov ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Morozevich", "seq": "35,54", "label": "Alexander Morozevich"}, {"uri": "http://dbpedia.org/resource/Dmitri_Nossov", "seq": "96,108", "label": "Dmitri Nossov"}], "predicate mapping": [], "id": "6b924d982c704745af8ea66d7f15e044"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Which team's players have played in the national hockey league?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Hockey_League", "seq": "40,61", "label": "national hockey league"}], "predicate mapping": [], "id": "6310baf4b9d740f5a47f9ae2e0b34b5d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri. <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri} ", "question": "Which founder of European School, karlsruhe is also the jursdiction of Eurpoean Border of Coast guard ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard", "seq": "71,100", "label": "Eurpoean Border of Coast guard"}, {"uri": "http://dbpedia.org/resource/European_School,_Karlsruhe", "seq": "17,42", "label": "European School, karlsruhe"}], "predicate mapping": [], "id": "814c2cbb08a04c3ebd6aff1b47275883"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Joel_Goodman> . ?x <http://dbpedia.org/property/showName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is that show whose theme was composed by Joel Goodman?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joel_Goodman", "seq": "46,57", "label": "Joel Goodman"}], "predicate mapping": [], "id": "14307a9d57c5428a9076bc5d123a7434"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri } ", "question": "What is the academic discipline of Journal of Cerebral Blood Flow & Metabolism ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism", "seq": "35,77", "label": "Journal of Cerebral Blood Flow & Metabolism"}], "predicate mapping": [], "id": "ced7ff32a8304b9f8c8ae77c3386bdc0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Trevor Peacock has narrated in which movie?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trevor_Peacock", "seq": "0,13", "label": "Trevor Peacock"}], "predicate mapping": [], "id": "6e5cd8ecf19a490b8da0b62c0e2a9a30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Amanda_Reddin>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Gymnast>}", "question": "What are some gymnasts coached by Amanda Reddin?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amanda_Reddin", "seq": "34,46", "label": "Amanda Reddin"}], "predicate mapping": [], "id": "d33e78b19afd4676bd77c8ed990b9982"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Keller> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Jim_McMillin> <http://dbpedia.org/ontology/team> ?uri . }", "question": "What team has Sam Keller and Jim McMilin played for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sam_Keller", "seq": "14,23", "label": "Sam Keller"}, {"uri": "http://dbpedia.org/resource/Jim_McMillin", "seq": "29,39", "label": "Jim McMilin"}], "predicate mapping": [], "id": "862ee1ccae36438fa2850a2dad3471f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/ATO_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show whose theme is composed by someone signed up with ATO records?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/ATO_Records", "seq": "64,74", "label": "ATO records"}], "predicate mapping": [], "id": "b32f0ffff06741eab6c71835a504396d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/New_Taipei_City> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "Which gadgets are made by companies of New Taipei City?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Taipei_City", "seq": "39,53", "label": "New Taipei City"}], "predicate mapping": [], "id": "0467f0dd444c4584994587e88693f8e9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/Mar\u00eda_Eugenia_Rojas_Correa> <http://dbpedia.org/property/almaMater> ?uri} ", "question": "Which work institutions of the Andrew Schally is the  alma mater of the Mara Eugenia Rojas Correa ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Schally", "seq": "31,44", "label": "Andrew Schally"}, {"uri": "http://dbpedia.org/resource/Mar\u00eda_Eugenia_Rojas_Correa", "seq": "72,96", "label": "Mara Eugenia Rojas Correa"}], "predicate mapping": [], "id": "a24560d63e05412bb56c5fac0df13755"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "What religions do diplomats typically follow?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Diplomacy", "seq": "18,26", "label": "diplomats"}], "predicate mapping": [], "id": "ee3ee4db6ae94b3d9abdf399e280c592"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What are the universities where athletics is regulated by National Collegiate Athletic Association?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "58,97", "label": "National Collegiate Athletic Association"}], "predicate mapping": [], "id": "84b711ae9a0341ab8a7187c256dfcd33"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "question": "Who is the owner of Ford Motor Credit comapny which is also the builder of FORD SHO V8 engine ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company", "seq": "20,44", "label": "Ford Motor Credit comapny"}, {"uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine", "seq": "75,92", "label": "FORD SHO V8 engine"}], "predicate mapping": [], "id": "fe9e7f00884542aebb30f18c996e0f9b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Don't_Bring_Me_Down> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/West_Germany> }", "question": "Was Don't Bring Me Down recorded in West Germany?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Don't_Bring_Me_Down", "seq": "4,22", "label": "Don't Bring Me Down"}, {"uri": "http://dbpedia.org/resource/West_Germany", "seq": "36,47", "label": "West Germany"}], "predicate mapping": [], "id": "1ddd01b8170e460bb30fdd9e80c7c495"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Dee_Dee_Warwick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person whose relation is Dee Dee Warwick?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dee_Dee_Warwick", "seq": "34,48", "label": "Dee Dee Warwick"}], "predicate mapping": [], "id": "38300a71b0e74bfaa7606386e0d846b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Michigan_USA>  . }", "question": "who are some miss michigan usa?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miss_Michigan_USA", "seq": "13,29", "label": "miss michigan usa"}], "predicate mapping": [], "id": "e72c8d6ef90a427baa7e385ccb063824"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Colorectal_cancer> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the films whose atleast one cast member died due to Colorectal cancer?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorectal_cancer", "seq": "61,77", "label": "Colorectal cancer"}], "predicate mapping": [], "id": "14beb01d38c546a58565e06c61c1f773"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> . }", "question": "Give the name of the  managers of England national under-20 football team and England national under-21 football team?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-20_football_team", "seq": "34,72", "label": "England national under-20 football team"}, {"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "seq": "78,116", "label": "England national under-21 football team"}], "predicate mapping": [], "id": "aa39669014fd44328c99e0cd54b58afb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Centre_(ice_hockey)> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "question": "What is the draft team of the ice hockey players whose position is Centre ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Centre_(ice_hockey)", "seq": "67,72", "label": "Centre"}], "predicate mapping": [], "id": "943486aa334042229b3e66696250c698"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Huston> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Dick_Spalding> <http://dbpedia.org/property/debutteam> ?uri . }", "question": "Harry Huston and Dick Spalding played their first match for which team?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Huston", "seq": "0,11", "label": "Harry Huston"}, {"uri": "http://dbpedia.org/resource/Dick_Spalding", "seq": "17,29", "label": "Dick Spalding"}], "predicate mapping": [], "id": "afa75d6b6d03454f9b688dd0080985fb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "Which cport of Vishwajyot High School is also the genere of Battle chess ", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_Chess", "seq": "60,71", "label": "Battle chess"}, {"uri": "http://dbpedia.org/resource/Vishwajyot_High_School", "seq": "15,36", "label": "Vishwajyot High School"}], "predicate mapping": [], "id": "6e739eefd2bb47bb96e6386e4f9cb125"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny>  . }", "question": "What are some neighboring cities of cologny?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "seq": "36,42", "label": "cologny"}], "predicate mapping": [], "id": "cab0c79d0f10458ca8a01d1facfdbced"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aunt_Em> . }", "question": "Whose relatives are Uncle Henry (Oz) and Aunt Em?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)", "seq": "20,30", "label": "Uncle Henry"}, {"uri": "http://dbpedia.org/resource/Aunt_Em", "seq": "41,47", "label": "Aunt Em"}], "predicate mapping": [], "id": "69451801bb474b41ae95ff1273c0b4d2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Metaphysics> . ?x <http://dbpedia.org/property/mainInterests> ?uri }", "question": "Give me the count of interests of the philosopher whose primary interest is Metaphysics ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metaphysics", "seq": "76,86", "label": "Metaphysics"}], "predicate mapping": [], "id": "7aa6c46d1605414485fffc097389e224"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri} ", "question": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/East_Tilbury", "seq": "31,42", "label": "East Tilbury"}, {"uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood", "seq": "79,103", "label": "Trinity School, Brentwood"}], "predicate mapping": [], "id": "bf75ca76a0bf455abcdc7d52f38f4686"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_Knox> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Major_general_(United_States)> }", "question": "Was Henry Knox a major general?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Knox", "seq": "4,13", "label": "Henry Knox"}, {"uri": "http://dbpedia.org/resource/Major_general_(United_States)", "seq": "17,29", "label": "major general"}], "predicate mapping": [], "id": "3c01ec18928a47818e34bd8753ddd084"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Ray_(Australian_politician)> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri . }", "question": "List the common prime minister of the Robert Ray and graham richardson ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Ray_(Australian_politician)", "seq": "38,47", "label": "Robert Ray"}, {"uri": "http://dbpedia.org/resource/Graham_Richardson", "seq": "53,69", "label": "graham richardson"}], "predicate mapping": [], "id": "45920161e8044711a58a25da89962f81"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show where Mona Marshall has given voice and is distributed by Comedy Central?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mona_Marshall", "seq": "31,43", "label": "Mona Marshall"}, {"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "83,96", "label": "Comedy Central"}], "predicate mapping": [], "id": "7529473b5740452abc142ddb60132ef3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Yasmin_Khatun> <http://dbpedia.org/ontology/religion> ?uri} ", "question": "List the common relegion affiliation of khadra Haji Ismail and Yasmin khatun ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid", "seq": "40,61", "label": "khadra Haji Ismail and"}, {"uri": "http://dbpedia.org/resource/Yasmin_Khatun", "seq": "63,75", "label": "Yasmin khatun"}], "predicate mapping": [], "id": "2b275605f1424ad1853d8f7367592875"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Katima_Mulilo> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "What does the bridge go over, which is in Katima Mulilo?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katima_Mulilo", "seq": "42,54", "label": "Katima Mulilo"}], "predicate mapping": [], "id": "9d6f9d9b1c1e422e9a87fbf9f54e9197"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._International_Television> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose distributor is a division of Warner Bros. International TV?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros._International_Television", "seq": "65,93", "label": "Warner Bros. International TV"}], "predicate mapping": [], "id": "e679996aa101404d8a234c41e60c57ae"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> } ", "question": "Cleopatra V of Egypt is father to which royalty?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "seq": "0,19", "label": "Cleopatra V of Egypt"}], "predicate mapping": [], "id": "7ad74ad36f964369a61126ec8c40b05c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri. <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri} ", "question": "Which founder of sea Gayle Music is also the judge of Rising Star ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sea_Gayle_Music", "seq": "17,31", "label": "sea Gayle Music"}, {"uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)", "seq": "54,64", "label": "Rising Star"}], "predicate mapping": [], "id": "b7a431005ad44021a254dc1844b76d13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lee_Robinson_(American_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "question": "What city has the football team in which Lee Robinson debuted?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lee_Robinson_(American_football)", "seq": "41,52", "label": "Lee Robinson"}], "predicate mapping": [], "id": "f2bd28b0ae0d4238b782d5243a20d893"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Swedish_Academy> . ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Norway>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "Name the award given in Norway and presented by Swedish Academy ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_Academy", "seq": "48,62", "label": "Swedish Academy"}, {"uri": "http://dbpedia.org/resource/Norway", "seq": "24,29", "label": "Norway"}], "predicate mapping": [], "id": "f7268d056d044b5a83b553245a5e37fc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many TV show has distributor located in Burbank California ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burbank,_California", "seq": "44,61", "label": "Burbank California"}], "predicate mapping": [], "id": "700a76b55b6d42619332fe4a076f5180"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ", "question": "NAme the emplyer for whihc Manu cornet has worked and also written in Google Web Toolkit ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manu_Cornet", "seq": "27,37", "label": "Manu cornet"}, {"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "seq": "70,87", "label": "Google Web Toolkit"}], "predicate mapping": [], "id": "b1ffee719580428fa70efc72d7f54ba5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Benedict_XVI>  . }", "question": "How many people have been canonized by Pope Benedict XVI?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Benedict_XVI", "seq": "39,55", "label": "Pope Benedict XVI"}], "predicate mapping": [], "id": "31834099320540148da2f04b847413ce"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Tony_Award> . ?x <http://dbpedia.org/property/awards> ?uri }", "question": "List the total number of awards of the musicals who have won Tony Award?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Award", "seq": "61,70", "label": "Tony Award"}], "predicate mapping": [], "id": "4a746d60634147519a4030473d50732c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Falmouth_University> <http://dbpedia.org/property/chancellor> ?uri } ", "question": "Who is the chancellor of Falmouth University ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Falmouth_University", "seq": "25,43", "label": "Falmouth University"}], "predicate mapping": [], "id": "4c46eefb71c64a1ba553158813943097"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Khiladi_786> <http://dbpedia.org/property/nextAlbum> ?x . ?x <http://dbpedia.org/property/recorded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Where was the movie after Khiladi 786 recorded?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Khiladi_786", "seq": "26,36", "label": "Khiladi 786"}], "predicate mapping": [], "id": "463580ab42f54356945d1ed8c2f9b38a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ", "question": "What are the binomial authority of Menetries's warbler?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Menetries's_warbler", "seq": "35,53", "label": "Menetries's warbler"}], "predicate mapping": [], "id": "4f3bdd919e6d4880be68979047b407dc"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sonny_Bill_Williams> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs> }", "question": "Does Sonny Bill Williams belong in the Canterbury Bankstown Bulldogs club?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sonny_Bill_Williams", "seq": "5,23", "label": "Sonny Bill Williams"}, {"uri": "http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs", "seq": "39,67", "label": "Canterbury Bankstown Bulldogs"}], "predicate mapping": [], "id": "000f216ee4234a449366505231378897"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university which has Lieutenaunt general as superintendent and mascot as Gyrfalcon ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)", "seq": "30,48", "label": "Lieutenaunt general"}, {"uri": "http://dbpedia.org/resource/Gyrfalcon", "seq": "82,90", "label": "Gyrfalcon"}], "predicate mapping": [], "id": "fa6f1a62c4da4b2cb2ed09d19e30faa9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/DisneyToon_Studios> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What are the prizes awarded to the main members of DisneyToon Studios?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/DisneyToon_Studios", "seq": "51,68", "label": "DisneyToon Studios"}], "predicate mapping": [], "id": "799124b8d9d1448e8410fcc70d945f3a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Humes_High_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Humes High School is alma mater to which person?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Humes_High_School", "seq": "0,16", "label": "Humes High School"}], "predicate mapping": [], "id": "99bb100d636f41afa90e89897f1a45f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Albert_Ayler> <http://dbpedia.org/property/associatedActs> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What is the birth place of music artists which were associated with Albert Ayler ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Albert_Ayler", "seq": "68,79", "label": "Albert Ayler"}], "predicate mapping": [], "id": "8cfa18c8ce664564a067feacf22a384e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Greasy_Pop_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Festival_Records> }", "question": "Is greasy pop recording the distributor of festival records?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greasy_Pop_Records", "seq": "3,22", "label": "greasy pop recording"}, {"uri": "http://dbpedia.org/resource/Festival_Records", "seq": "43,58", "label": "festival records"}], "predicate mapping": [], "id": "95af8dab7a8b41babdeee3232cb6c644"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri } ", "question": "List all the houses of United States Congress ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Congress", "seq": "23,44", "label": "United States Congress"}], "predicate mapping": [], "id": "b03177d39e1c4d88be790e3782f841b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which sitcom is broadcasted by FOX and presented by Brian Dunkleman?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "16,37", "label": "broadcasted by FOX and"}, {"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "seq": "52,66", "label": "Brian Dunkleman"}], "predicate mapping": [], "id": "723c2b0c71d445fd9d6cf4d87006383a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Mota-Engil> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Mota Engil built bridges over which rivers?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mota-Engil", "seq": "0,9", "label": "Mota Engil"}], "predicate mapping": [], "id": "441c7a0159b046ba94bec61882574380"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show 's producer is Stephen E. Ambrose and written by Erik Jendresen?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "37,54", "label": "Stephen E. Ambrose"}, {"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "71,84", "label": "Erik Jendresen"}], "predicate mapping": [], "id": "aa4776a47306400884ee92fe3a010fed"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri } ", "question": "Which university provides license for WRVU ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WRVU", "seq": "38,41", "label": "WRVU"}], "predicate mapping": [], "id": "6912db9bbb7f4886ab6ecf4dc2bc15ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "question": "UEM group have made bridges crossing over what?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/UEM_Group", "seq": "0,8", "label": "UEM group"}], "predicate mapping": [], "id": "024337cb227f4a1395be10e9cb63c5fa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri} ", "question": "Which distributer of Glover (video game) is also the  publisher of the Super Mario Adventures ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Glover_(video_game)", "seq": "21,26", "label": "Glover"}, {"uri": "http://dbpedia.org/resource/Super_Mario_Adventures", "seq": "71,92", "label": "Super Mario Adventures"}], "predicate mapping": [], "id": "b25e6105c24d44dc8ef492e2edf0b163"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri } ", "question": "What is the area of Tar Heel Sports Network ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network", "seq": "20,42", "label": "Tar Heel Sports Network"}], "predicate mapping": [], "id": "099f8973922c4781bdf4854d70c385f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/String_theory> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What is the alma mater of the scientists  known for  String theory?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/String_theory", "seq": "53,65", "label": "String theory"}], "predicate mapping": [], "id": "92db7b7d272f443ab8aed456c783d7d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Congress_Socialist_Party> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "List the party of the office holder which also has the affiliation with Congress Socialist party ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Congress_Socialist_Party", "seq": "72,95", "label": "Congress Socialist party"}], "predicate mapping": [], "id": "a3dc84be931049af977eedf2f543e0de"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/ABC_Records> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows have voices from people signed up with ABC Records?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/ABC_Records", "seq": "51,61", "label": "ABC Records"}], "predicate mapping": [], "id": "6a18707a2ce342118ea82c357c85d158"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Franz_von_Papen> } ", "question": "Whose deputy was Franz von Papen?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Franz_von_Papen", "seq": "17,31", "label": "Franz von Papen"}], "predicate mapping": [], "id": "8e0ff8947d7541bcbd888c8a301c6565"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Claris> <http://dbpedia.org/property/products> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who is the developer of the software which is produced by Claris ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Claris", "seq": "58,63", "label": "Claris"}], "predicate mapping": [], "id": "9bf4af0a69b54d8d8e335078f111f30e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gamini_Seneviratne> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri . }", "question": "Gamini Seneviratne and Katyayana are two followers of which religion?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gamini_Seneviratne", "seq": "0,17", "label": "Gamini Seneviratne"}, {"uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)", "seq": "23,31", "label": "Katyayana"}], "predicate mapping": [], "id": "9202aee754b8461bbb83aef174429e8a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Give me some administrators of bridges over which cars can go?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "seq": "39,48", "label": "over which"}], "predicate mapping": [], "id": "c58280258efb409faf6ecfb3f56cc513"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}", "question": "Whose artworks are in Sao Paulo Museum of Art?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art", "seq": "22,44", "label": "Sao Paulo Museum of Art"}], "predicate mapping": [], "id": "a1f6a0f1f36d4e55881ef792f416db91"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "question": "Through which states does the road go, which has a junction on Keningston Maryland?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kensington,_Maryland", "seq": "63,81", "label": "Keningston Maryland"}], "predicate mapping": [], "id": "fa31ddfb133a4665a135c025a534bcb1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Coalition_Provisional_Authority>  . }", "question": "After the death of which political figure, did the Coalition Provisional Authority came into power?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Coalition_Provisional_Authority", "seq": "51,81", "label": "Coalition Provisional Authority"}], "predicate mapping": [], "id": "933bc214a7024ecaac142fef92c9edaf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri } ", "question": "Who is the music composer of Kenny Dies ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenny_Dies", "seq": "29,38", "label": "Kenny Dies"}], "predicate mapping": [], "id": "23da6d5becd34480952011dd96fec09f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist who is known for inventing Anthrax and was a member of Royal Society?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anthrax", "seq": "46,52", "label": "Anthrax"}, {"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "74,86", "label": "Royal Society"}], "predicate mapping": [], "id": "f4b7def86f6e444b8521908b40cef72c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who were the opponents of the people buried in the tower of London?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tower_of_London", "seq": "51,65", "label": "tower of London"}], "predicate mapping": [], "id": "e08cb98a10794ab59d7f5d076fadd9ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "question": "How many factions have fought when Egushawa was a commander?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Egushawa", "seq": "35,42", "label": "Egushawa"}], "predicate mapping": [], "id": "c2d46fb94f5b46d5a4324c9cf5941feb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Th\u00e9ophane_V\u00e9nard> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "Which terrotory of Tonkin campaign also the death bed of Thophane Vnard ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonkin_Campaign", "seq": "19,33", "label": "Tonkin campaign"}, {"uri": "http://dbpedia.org/resource/Th\u00e9ophane_V\u00e9nard", "seq": "57,70", "label": "Thophane Vnard"}], "predicate mapping": [], "id": "922f99ad92c9458981c4e1027b28aa47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist whose supervisor also supervised Mary Ainsworth?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Ainsworth", "seq": "52,65", "label": "Mary Ainsworth"}], "predicate mapping": [], "id": "7f9100dd95784db5aa76614d9d7d3c8b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri } ", "question": "By what style was Providence Chapel, Charlwood made?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood", "seq": "18,45", "label": "Providence Chapel, Charlwood"}], "predicate mapping": [], "id": "0f3429d03fd64266b8c2d76addb5c46c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Operation_Dragoon> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "How many titles were given to people who engaged in the Operation Dragoon?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Dragoon", "seq": "56,72", "label": "Operation Dragoon"}], "predicate mapping": [], "id": "cb3a9f4a1e8d44a1adacbd1db7b0bab9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paphos_International_Airport> <http://dbpedia.org/property/owner> ?uri } ", "question": "Who is the stockholder of Paphos International Airport ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paphos_International_Airport", "seq": "26,53", "label": "Paphos International Airport"}], "predicate mapping": [], "id": "05c509f7775f4415b2a95b4fcc959d1a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "How many other important things has the painter of Sarah Jane Adventures done?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "51,71", "label": "Sarah Jane Adventures"}], "predicate mapping": [], "id": "0aef9a11ec194002b66c6ff62f383798"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team> . ?uri <http://dbpedia.org/property/athletics> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Count all the universities who participated in the tournament won by Alabama Crimson Tides in 2015 ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team", "seq": "69,97", "label": "Alabama Crimson Tides in 2015"}], "predicate mapping": [], "id": "5c55ff44c6ac449d923b0a43437ec726"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Raymond_Picard> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Paris> }", "question": "Did Raymond Picard take birth in Paris?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Picard", "seq": "4,17", "label": "Raymond Picard"}, {"uri": "http://dbpedia.org/resource/Paris", "seq": "33,37", "label": "Paris"}], "predicate mapping": [], "id": "21531e47046946809137beeadd4af94e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/governmentType> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "question": "What is the currency of the country of Kerguelen Islands?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kerguelen_Islands", "seq": "39,55", "label": "Kerguelen Islands"}], "predicate mapping": [], "id": "951988a7d1c344dfbb421152061e3778"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lumberjack_100> <http://dbpedia.org/property/region> ?uri } ", "question": "What is the region of Lumberjack  ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lumberjack_100", "seq": "22,31", "label": "Lumberjack"}], "predicate mapping": [], "id": "5e70185ec22f408795bf28e121e68522"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}", "question": "For which country did Alexander Lippisch design airplanes?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Lippisch", "seq": "22,39", "label": "Alexander Lippisch"}], "predicate mapping": [], "id": "d5bf2f11fdfd47958b21a0ad3a2fdb90"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Langer> <http://dbpedia.org/property/order> ?uri . }", "question": "Where did george f hoar and willian langer spend the most important time of their political career?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Frisbie_Hoar", "seq": "10,22", "label": "george f hoar"}, {"uri": "http://dbpedia.org/resource/William_Langer", "seq": "28,41", "label": "willian langer"}], "predicate mapping": [], "id": "30d267130c65402ba2c0efdc2ea5691f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marcus_Floyd> <http://dbpedia.org/ontology/occupation> ?uri } ", "question": "What were the occupations of Marcus Floyd?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marcus_Floyd", "seq": "29,40", "label": "Marcus Floyd"}], "predicate mapping": [], "id": "a882c7c530ad4e7793896fce0ad1adef"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Whihc birthpalce of Svetlana Gounkina is also the largest city of Union State ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_State", "seq": "66,76", "label": "Union State"}, {"uri": "http://dbpedia.org/resource/Svetlana_Gounkina", "seq": "20,36", "label": "Svetlana Gounkina"}], "predicate mapping": [], "id": "4afdea93d75746e79aa9c8da00070b4d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Pandikar_Amin_Mulia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the country whose speaker of the Dewan Rakyat is Pandikar Amin Mulia?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pandikar_Amin_Mulia", "seq": "57,75", "label": "Pandikar Amin Mulia"}], "predicate mapping": [], "id": "d6837e9445dd4d89ba1491d92ec402cf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ", "question": "Who is the Pole driver of 1997 Canadian Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix", "seq": "26,49", "label": "1997 Canadian Grand Prix"}], "predicate mapping": [], "id": "b65176114e5942798719100f7770c922"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "question": "To which series does the book belong which came after the Blade Runner 2?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human", "seq": "58,71", "label": "Blade Runner 2"}], "predicate mapping": [], "id": "012275fbe2924170a2dc92fcdfb02849"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/ingredient> ?uri  . }", "question": "How many different things are used as ingredients in Sweden?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sweden", "seq": "53,58", "label": "Sweden"}], "predicate mapping": [], "id": "cb572a08bfb846ecb7dc9de05f273753"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Colombia> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which company's cars are assembled in Colombia?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colombia", "seq": "38,45", "label": "Colombia"}], "predicate mapping": [], "id": "afaccc78ee0944f59fe4462b00ec4324"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "In which places do companies founded in Newcastle operate?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_Newcastle", "seq": "37,48", "label": "in Newcastle"}], "predicate mapping": [], "id": "4af9ff3c965e4f76b2e60a5a204d15e2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)> <http://dbpedia.org/property/lyrics> ?uri } ", "question": "Who composed the lyrics of Holler If Ya Hear Me ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)", "seq": "27,46", "label": "Holler If Ya Hear Me"}], "predicate mapping": [], "id": "91074221bb864151921f52c9ff1a71cf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri. <http://dbpedia.org/resource/Kaitlyn_Ashley> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which ground of 2016 Fort Lauderdale Strikers season is the palce of birth of Kaitlyn Ashley ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season", "seq": "16,51", "label": "2016 Fort Lauderdale Strikers season"}, {"uri": "http://dbpedia.org/resource/Kaitlyn_Ashley", "seq": "78,91", "label": "Kaitlyn Ashley"}], "predicate mapping": [], "id": "96205a1584514add8305c933034f1eda"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Ren\u00e9_&_Angela> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Musical artists who are associated with Ren & Angela were born where ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ren\u00e9_&_Angela", "seq": "40,51", "label": "Ren & Angela"}], "predicate mapping": [], "id": "89020ed4a12841c4abf8744b5f6f84d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Loretta_Ucelli> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri . }", "question": "Under which president did Loretta Ucelli and Ann Lewis hold an office?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Loretta_Ucelli", "seq": "26,39", "label": "Loretta Ucelli"}, {"uri": "http://dbpedia.org/resource/Ann_Lewis", "seq": "45,53", "label": "Ann Lewis"}], "predicate mapping": [], "id": "31066fe6cfb246c7915377ea543a4b7c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . }", "question": "What are the things whose director of photography died in United States?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "58,70", "label": "United States"}], "predicate mapping": [], "id": "f5133efadcbd4156acea7c0709acf981"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Paul_Leonard_(writer)> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "question": "Paul Leonard's work can be divided into how many series?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Leonard_(writer)", "seq": "0,11", "label": "Paul Leonard"}], "predicate mapping": [], "id": "3baa786d346248839da91be72db9ca83"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "List the mountains of the range Sierra Nevada (U.S.) located in  California?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "seq": "32,44", "label": "Sierra Nevada"}, {"uri": "http://dbpedia.org/resource/California", "seq": "65,74", "label": "California"}], "predicate mapping": [], "id": "b6b8067555af4063906d88b2e32e1a03"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri } ", "question": "Where did Marvo originate?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mavro", "seq": "10,14", "label": "Marvo"}], "predicate mapping": [], "id": "5c2f6e3d47024e54af60dad2cf684419"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Muslim_Brotherhood", "seq": "90,107", "label": "Muslim Brotherhood"}], "predicate mapping": [], "id": "c721ef1e42924f8e9f9e185cbc00b5ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . }", "question": "Whose predecessor had Jenny Macklin as a deputy ?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jenny_Macklin", "seq": "22,34", "label": "Jenny Macklin"}], "predicate mapping": [], "id": "cbfd34299d434bea9171dd85e9dd79b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bomis> <http://dbpedia.org/ontology/foundedBy> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }", "question": "In which company's boards does the founder of Bomis sit?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bomis", "seq": "46,50", "label": "Bomis"}], "predicate mapping": [], "id": "0d987dfafc054e8db252832df3e4a7ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Harry_Nilsson> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "Who narrated the albums in which Harry Nilsson performed?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Nilsson", "seq": "33,45", "label": "Harry Nilsson"}], "predicate mapping": [], "id": "a568918506ad48f08dc9ea2bcf4f9d47"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Royal_Thai_Army> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many religion's commanders have served in the Royal Thai Army?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "seq": "50,64", "label": "Royal Thai Army"}], "predicate mapping": [], "id": "39704553a7904c329400eabe0c954ebc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri . }", "question": "What do craig Van tilbury and karen Grigorian do for a living?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karen_Grigorian", "seq": "30,44", "label": "karen Grigorian"}, {"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "seq": "8,24", "label": "craig Van tilbury"}], "predicate mapping": [], "id": "86a47aa322204efb92fe728b58696cf5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wan_Air> <http://dbpedia.org/property/hubs> ?uri } ", "question": "What is the hub of Wan Air ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wan_Air", "seq": "19,25", "label": "Wan Air"}], "predicate mapping": [], "id": "eac2d5332100483581f13b166ac29e94"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_O'Malley> <http://dbpedia.org/property/debutteam> ?uri } ", "question": "What is the debut team of Tom O'Malley ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tom_O'Malley", "seq": "26,37", "label": "Tom O'Malley"}], "predicate mapping": [], "id": "573d48cf77f14483b1eb9fc6e0f73e90"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ", "question": "Name  the Pole driver of 1994 Spanish Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix", "seq": "25,47", "label": "1994 Spanish Grand Prix"}], "predicate mapping": [], "id": "c9b163789f6749b0b14437f707eff6da"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ", "question": "Who was the First Driver of 1999 San Marino Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix", "seq": "28,53", "label": "1999 San Marino Grand Prix"}], "predicate mapping": [], "id": "0f0cefdb4c2e422bbbd46144cb44942e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Colorado> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Denver> }", "question": "Is Denver the largest city of Colorado?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorado", "seq": "30,37", "label": "Colorado"}, {"uri": "http://dbpedia.org/resource/Denver", "seq": "3,8", "label": "Denver"}], "predicate mapping": [], "id": "fc528bb6de814b2ea1eac7c6438d3c57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Norwegian_language> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "List the universities from a country where Norwegian language is officially accepted.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norwegian_language", "seq": "43,60", "label": "Norwegian language"}], "predicate mapping": [], "id": "1d4631ca121d427a83c91e0ec29ad410"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri } ", "question": "Which is the largest city of Union State ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_State", "seq": "29,39", "label": "Union State"}], "predicate mapping": [], "id": "d374ddbebf124204be7f3f2b11d9e633"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/BNSF_Railway> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayTunnel>}", "question": "Where is the tunnel, which is operated by BNSF railways?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/BNSF_Railway", "seq": "42,54", "label": "BNSF railways"}], "predicate mapping": [], "id": "affd9d6f1cf44d159c675e5b8252c440"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ronald_Wilson> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "What is the mascot of the military unit in which Ronald Wilson served?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronald_Wilson", "seq": "49,61", "label": "Ronald Wilson"}], "predicate mapping": [], "id": "4a54d07f42fc46d0b4b5125be3c636b4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barony_of_Caux> <http://dbpedia.org/ontology/capital> ?uri } ", "question": "Name the capital of Barony of Caux ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barony_of_Caux", "seq": "20,33", "label": "Barony of Caux"}], "predicate mapping": [], "id": "6a33225c11054b9d90e85013e5e3fc02"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Who battled under commander Egushawa in a conflict?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Egushawa", "seq": "28,35", "label": "Egushawa"}], "predicate mapping": [], "id": "b6d318523b79426193d35e5a97ecda5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro> . ?x <http://dbpedia.org/property/country> ?uri  . }", "question": "In which country is Bocas del toro a capital of some region?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro", "seq": "17,33", "label": "is Bocas del toro"}], "predicate mapping": [], "id": "aabec43f1b95480f9b3904dddc7e81e9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26> . ?x <http://dbpedia.org/ontology/launchSite> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}", "question": "List the launch site of the rockets whose one of the launch site has been Cape Canaveral Air Force Station Launch Complex 26 ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26", "seq": "74,123", "label": "Cape Canaveral Air Force Station Launch Complex 26"}], "predicate mapping": [], "id": "f42232f5745444f2b59bd33f072d1b72"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What products are made by Tehran based companies?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tehran", "seq": "26,31", "label": "Tehran"}], "predicate mapping": [], "id": "0ad9954f309c496ab4dfbd8056a58187"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/European_Americans> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "What are some causes of death of European Americans?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Americans", "seq": "33,50", "label": "European Americans"}], "predicate mapping": [], "id": "f78a415ef99f429ea50169b5a64d9fa0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akiva_Goldsman", "seq": "38,51", "label": "Akiva Goldsman"}, {"uri": "http://dbpedia.org/resource/Joel_Schumacher", "seq": "69,83", "label": "Joel Schumacher"}], "predicate mapping": [], "id": "238c66a5b9f240c4810f764cc8ec134b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri } ", "question": "List the writers of Tales of Suspense ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "seq": "20,36", "label": "Tales of Suspense"}], "predicate mapping": [], "id": "af23ab128db046daa4567549a7470c27"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "Which settlement's neighboring municipalities are Cologny and Pregny-Chambsy?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "seq": "50,56", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "seq": "62,75", "label": "Pregny-Chambsy"}], "predicate mapping": [], "id": "bf7af8752a1748b9ab92c8690ddf65f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }", "question": "In how many nations can I find people related to the feminist movement?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Feminism", "seq": "53,60", "label": "feminist"}], "predicate mapping": [], "id": "3ad9afca7d394e1fbf9ff22d4f90c9f0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ", "question": "Name the home ground of  2015 Fort Lauderdale Strikers season ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season", "seq": "25,60", "label": "2015 Fort Lauderdale Strikers season"}], "predicate mapping": [], "id": "deecfa268f4c4b99b10f15c85fea67b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Baltimore_Ravens> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "What kind of things are on the radio stations affiliated with the Baltimore Ravens?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baltimore_Ravens", "seq": "66,81", "label": "Baltimore Ravens"}], "predicate mapping": [], "id": "2a1303ce259f4ddd8c63cb28a9edf458"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "Count the awards won by the people who graduated from the National and Kapodistrian University of Athens.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens", "seq": "58,103", "label": "National and Kapodistrian University of Athens"}], "predicate mapping": [], "id": "f4c678a394b842b18ef8ecce047526e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri. <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri} ", "question": "Which current member of Insect vs Robots is also the music composer of Kenny Dies ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Insects_vs_Robots", "seq": "24,39", "label": "Insect vs Robots"}, {"uri": "http://dbpedia.org/resource/Kenny_Dies", "seq": "71,80", "label": "Kenny Dies"}], "predicate mapping": [], "id": "339fba01bf374193aaa038e896284b65"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> } ", "question": "who was the president under which Joe Purcell is a lieutenant?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Purcell", "seq": "34,44", "label": "Joe Purcell"}], "predicate mapping": [], "id": "357dc6f5b3b84bf398fe8ef62344373d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Thicke> . ?x <http://dbpedia.org/property/narrated> ?uri  . }", "question": "Name the narrators of the album which has been narrated by Alan Thicke ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alan_Thicke", "seq": "59,69", "label": "Alan Thicke"}], "predicate mapping": [], "id": "f04972321b83404b87e4d7cf5de5c5a6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georges_Wolinski> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri} ", "question": "Where did Georges Wolinski and Judson Huss die/", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Georges_Wolinski", "seq": "10,25", "label": "Georges Wolinski"}, {"uri": "http://dbpedia.org/resource/Judson_Huss", "seq": "31,41", "label": "Judson Huss"}], "predicate mapping": [], "id": "5953c1ca741b4952bfa7231396751599"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/Western_Pennsylvania_Hospital> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which city is known for the people working in the western penn hospital?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Western_Pennsylvania_Hospital", "seq": "50,70", "label": "western penn hospital"}], "predicate mapping": [], "id": "c1cdd524499641ec80f02549a8991821"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1989_Portuguese_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri} ", "question": "Which pole driver of 1989 Portuguese Grand Prix was also the first driver of 1993 European Grand Prix ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/1993_European_Grand_Prix", "seq": "77,100", "label": "1993 European Grand Prix"}, {"uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix", "seq": "21,46", "label": "1989 Portuguese Grand Prix"}], "predicate mapping": [], "id": "a92bf834ce444970965064755aec2e3e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Football_League> <http://dbpedia.org/property/champion> ?uri } ", "question": "Which team won the American Football League?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Football_League", "seq": "19,42", "label": "American Football League"}], "predicate mapping": [], "id": "205217dd61614f7b9dff96c1b2f7202c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Golan_Heights> }", "question": "Does the Jordan River start in the Golan Heights?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_River", "seq": "9,20", "label": "Jordan River"}, {"uri": "http://dbpedia.org/resource/Golan_Heights", "seq": "35,47", "label": "Golan Heights"}], "predicate mapping": [], "id": "216518a4ffe546ce91c5e430549b0037"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Give me all office holders who finally retired in Montpelier, Orange, Virgina?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "seq": "50,59", "label": "Montpelier"}], "predicate mapping": [], "id": "8e346529106147e896a3f2e56bf87969"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juan_Dalmau_Ram\u00edrez> <http://dbpedia.org/property/headquarters> ?uri } ", "question": "what is the headquarters of Juan Dalmau Ramerez?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Juan_Dalmau_Ram\u00edrez", "seq": "28,46", "label": "Juan Dalmau Ramerez"}], "predicate mapping": [], "id": "e5f9dd5ab9324d1ebbdf61c7e4403c15"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri } ", "question": "Name the wine regions of Bogdanua ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogdanu\u0161a", "seq": "25,32", "label": "Bogdanua"}], "predicate mapping": [], "id": "fcf5f996614b4543a14a5ec5eaa362a1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner> } ", "question": "In which company is Raymond Conner at an important position?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "seq": "20,33", "label": "Raymond Conner"}], "predicate mapping": [], "id": "2f9e649669aa4782919424b5cf845cf3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/district> <http://dbpedia.org/resource/Mumbai_Suburban_district> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "In which city are the schools whose district is Mumbai Suburban?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mumbai_Suburban_district", "seq": "48,62", "label": "Mumbai Suburban"}], "predicate mapping": [], "id": "494baea1d2104b42a7e47d508d08648e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "Which military people served their allegiance to Union (American Civil War)?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_(American_Civil_War)", "seq": "49,53", "label": "Union"}], "predicate mapping": [], "id": "a542749bd8ce457aa58ef76df55d1102"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)> <http://dbpedia.org/property/series> ?x . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the actors of the TV show which has an episode named The Five ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)", "seq": "58,65", "label": "The Five"}], "predicate mapping": [], "id": "aa025dbe97974996bdee7ea712d6fcd2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "Where are the National Academy Museum and School awardwinners buried?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School", "seq": "14,47", "label": "National Academy Museum and School"}], "predicate mapping": [], "id": "9814a502d6344b8684c3ef7c53257f8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Give me a count of movies whose film editor is Anthony Harvey?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anthony_Harvey", "seq": "47,60", "label": "Anthony Harvey"}], "predicate mapping": [], "id": "6f8df171b716419ba1bcf20b5e90e4b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/species> ?uri  . }", "question": "Which species' members are there in the animal kingdom?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Animal", "seq": "40,45", "label": "animal"}], "predicate mapping": [], "id": "d2bdea95e8cb4e0ba89f46a1ac662d0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex> <http://dbpedia.org/property/placeOfBurial> ?uri . }", "question": "What is the common location of  tomb of the Elizabeth of Rhuddlan and Isabel of Cambridge?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan", "seq": "44,64", "label": "Elizabeth of Rhuddlan"}, {"uri": "http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex", "seq": "70,88", "label": "Isabel of Cambridge"}], "predicate mapping": [], "id": "7a39f5fc355c464eb024ab21d1b43e89"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Camel> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }", "question": "Is camel  of the chordate phylum?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Camel", "seq": "3,7", "label": "camel"}, {"uri": "http://dbpedia.org/resource/Chordate", "seq": "17,24", "label": "chordate"}], "predicate mapping": [], "id": "835e3bc3c8764022b3555cb4b8175d3b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "Which company had built the rockets launched at the Cape Canaveral Air Force Station Space Launch Complex 17?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17", "seq": "52,107", "label": "Cape Canaveral Air Force Station Space Launch Complex 17"}], "predicate mapping": [], "id": "2c061f3427d347acaf1d538fba4ea75e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allgemeine_SS> <http://dbpedia.org/ontology/leader> ?uri } ", "question": "Who is the leader of Allgemeine SS ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Allgemeine_SS", "seq": "21,33", "label": "Allgemeine SS"}], "predicate mapping": [], "id": "19bac1217f0341eaa5cdfa082347f6b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "How many important works have been done by Russel Davies?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "43,55", "label": "Russel Davies"}], "predicate mapping": [], "id": "0dbbb933294f48bcab3c33d1298ef7e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Tackle_(gridiron_football_position)> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "What are the former team of the american football players who played at gridiron football position ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tackle_(gridiron_football_position)", "seq": "81,88", "label": "football"}], "predicate mapping": [], "id": "04215c1446384126b9c2ac65d0431a1a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Putri_Raemawasti> <http://dbpedia.org/property/birthName> ?uri } ", "question": "What is the birth name  of Putri Raemawasti ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Putri_Raemawasti", "seq": "27,42", "label": "Putri Raemawasti"}], "predicate mapping": [], "id": "3accaa813d154ec19e1d62b48eb60314"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)> <http://dbpedia.org/ontology/type> ?uri} ", "question": "What  is the meaning of the Isa (name) which is also a relegion of Sacred Heart Convent School (Bangkok) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Isa_(name)", "seq": "28,30", "label": "Isa"}, {"uri": "http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)", "seq": "67,93", "label": "Sacred Heart Convent School"}], "predicate mapping": [], "id": "225d5bcff9274ce3bbf7c2527939ee7b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_Football_League_Championship> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . }", "question": "Who are the managers of clubs participating in the 2014-2015 Football League Championship?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Football_League_Championship", "seq": "51,88", "label": "2014-2015 Football League Championship"}], "predicate mapping": [], "id": "7717547eedc44d92a881117189824621"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?uri } ", "question": "From where does the river Upper Neretva start flowing?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Upper_Neretva", "seq": "26,38", "label": "Upper Neretva"}], "predicate mapping": [], "id": "91305aeb7cf3416f855db6b604974650"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Nikos_Pateras> <http://dbpedia.org/ontology/residence> ?uri} ", "question": "Which official residence of Nikos Pateras is also the stadium of anionios G.S.S. season 2014-15 ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season", "seq": "65,86", "label": "anionios G.S.S. season"}, {"uri": "http://dbpedia.org/resource/Nikos_Pateras", "seq": "28,40", "label": "Nikos Pateras"}], "predicate mapping": [], "id": "f4ff42e2419941e88bca179599c2ea22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}", "question": "Joe Shuster has created how many comics character ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Shuster", "seq": "0,10", "label": "Joe Shuster"}], "predicate mapping": [], "id": "d5eec8fa9c454d71af0be385eb6d2193"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri . }", "question": "In which part of the world can i find Xynisteri and Mavro?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Xynisteri", "seq": "38,46", "label": "Xynisteri"}, {"uri": "http://dbpedia.org/resource/Mavro", "seq": "52,56", "label": "Mavro"}], "predicate mapping": [], "id": "0309871f7c564e6bbce3d3b481300bd8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Daniel_Bergman> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards won by the parent of Daniel Bergmans?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Bergman", "seq": "41,55", "label": "Daniel Bergmans"}], "predicate mapping": [], "id": "84bc7466ff1a47cf86ed7bc090ba96b3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Cobra_(missile)> <http://dbpedia.org/ontology/origin> ?uri . }", "question": "What is the country of the Hirth Acrostar and the Cobra missile?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hirth_Acrostar", "seq": "27,40", "label": "Hirth Acrostar"}, {"uri": "http://dbpedia.org/resource/Cobra_(missile)", "seq": "50,54", "label": "Cobra"}], "predicate mapping": [], "id": "6772f2e11d834d0dabc10d05d6a4ab72"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Stevens_T._Mason> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "What did Steven T Mason's father die from?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stevens_T._Mason", "seq": "9,22", "label": "Steven T Mason"}], "predicate mapping": [], "id": "5fc0f9b047174d33bd4225a3d24e5f30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "question": "Collect and return a list of things in the area where Spanish language is used?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_language", "seq": "54,69", "label": "Spanish language"}], "predicate mapping": [], "id": "0ebb619e771642908242969b42bbf642"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri . }", "question": "What made jo garcia and merritt cabal both famous?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jo_Garcia", "seq": "10,18", "label": "jo garcia"}, {"uri": "http://dbpedia.org/resource/Merritt_Cabal", "seq": "24,36", "label": "merritt cabal"}], "predicate mapping": [], "id": "62e9fa82eea7498790e2d5ca5a664a60"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> }", "question": "Is GIMP written in C?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/GIMP", "seq": "3,6", "label": "GIMP"}, {"uri": "http://dbpedia.org/resource/C_(programming_language)", "seq": "19,18", "label": ""}], "predicate mapping": [], "id": "6db524c4b72a43a788d1622f07782c39"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Tuna_salad> . ?x <http://dbpedia.org/property/country> ?uri  . }", "question": "What are all the countires where food related to tuna salad is consumed ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tuna_salad", "seq": "49,58", "label": "tuna salad"}], "predicate mapping": [], "id": "9465a9187c3f42a9b64cc0da135c6784"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri } ", "question": "Who is the founder of Pittsburgh ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburgh", "seq": "22,31", "label": "Pittsburgh"}], "predicate mapping": [], "id": "df77a0a57a254a339759da5845ded0cf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "question": "How many different genres led to other genres where drums are important?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Drum_kit", "seq": "52,60", "label": "drums are"}], "predicate mapping": [], "id": "312c5bacb7c14ea1b41c0e219107c417"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }", "question": "How many people have played for the NBA?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "seq": "16,38", "label": "have played for the NBA"}], "predicate mapping": [], "id": "9b1fb4f02cfb4023bb3596310cad80bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Nevado_Mismi> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river  whose source location is Nevado Mismi and region is Arequipa Region?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nevado_Mismi", "seq": "41,52", "label": "Nevado Mismi"}, {"uri": "http://dbpedia.org/resource/Arequipa_Region", "seq": "68,82", "label": "Arequipa Region"}], "predicate mapping": [], "id": "516925179add4b768fc74c74f434222a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Go-To_card> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}", "question": "Where is the headquarters of the public transit system which operators Go-to-card ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Go-To_card", "seq": "71,80", "label": "Go-to-card"}], "predicate mapping": [], "id": "4dc32ad3dae4429d963b5b4282c18767"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys>  . }", "question": "How many people played for Newell's Old Boys?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Newell's_Old_Boys", "seq": "27,43", "label": "Newell's Old Boys"}], "predicate mapping": [], "id": "0e0a2a498e574ec6925f6cb31cd3c729"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ren\u00e9_Romano> <http://dbpedia.org/property/citizenship> ?uri } ", "question": "What is the citizenship of Ren Romano ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ren\u00e9_Romano", "seq": "27,36", "label": "Ren Romano"}], "predicate mapping": [], "id": "fb19f3dd1d7640a0b47e3dea68b42bb9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harihar_Airport> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Where was the company who is the operator of Harihar Airport founded ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harihar_Airport", "seq": "45,59", "label": "Harihar Airport"}], "predicate mapping": [], "id": "2e8a9d01f6f54a03ab23c1741dc25aa1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/Burnet_R._Maybank> <http://dbpedia.org/property/branch> ?uri} ", "question": "Which architect of the Marine Corps Air Station Kaneohe Bay is the branch of the Burnet R. Maybank?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay", "seq": "23,58", "label": "Marine Corps Air Station Kaneohe Bay"}, {"uri": "http://dbpedia.org/resource/Burnet_R._Maybank", "seq": "81,97", "label": "Burnet R. Maybank"}], "predicate mapping": [], "id": "ffe030d0d0234e8498265e9d4826ab1b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Field> <http://dbpedia.org/property/tenants> ?uri } ", "question": "To which american football teams does the Heinz Field serve as home stadium?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heinz_Field", "seq": "42,52", "label": "Heinz Field"}], "predicate mapping": [], "id": "ada05be944104948987543e9a09aa581"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colorado_wine> <http://dbpedia.org/property/officialName> ?uri } ", "question": "What is the official name of Colorado wine ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorado_wine", "seq": "29,41", "label": "Colorado wine"}], "predicate mapping": [], "id": "a9c0a13767d7483590305e3413152c50"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_United_States_Steel_Hour> <http://dbpedia.org/ontology/writer> ?uri } ", "question": "Who wrote the US steel hour?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour", "seq": "10,26", "label": "the US steel hour"}], "predicate mapping": [], "id": "244b1c2f6e3e4c57b2532ec5e4d15329"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "What is the occupation of the band members of The Shirelles?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Shirelles", "seq": "46,58", "label": "The Shirelles"}], "predicate mapping": [], "id": "6feb76adf49746a2a18f9d21a1d22306"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which tv series have a score composed by judy hard angelo?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judy_Hart_Angelo", "seq": "41,56", "label": "judy hard angelo"}], "predicate mapping": [], "id": "cd190de039534a6d91abee2ac3dd411c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Joey_McIntyre> . ?x <http://dbpedia.org/property/starring> ?uri }", "question": "Count the total number of cast member of the television shows whose actress is Joey McIntyre?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joey_McIntyre", "seq": "79,91", "label": "Joey McIntyre"}], "predicate mapping": [], "id": "7472a240a44b44a69fecf3305677e72e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "seq": "29,46", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "seq": "64,75", "label": "Jason Carter"}], "predicate mapping": [], "id": "48ed9662c9d34e7bb7ff13ec8d02c81f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentPartner> <http://dbpedia.org/resource/Alexa_Scimeca> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "question": "What is the former partner of the figure skaters whose current partner is Alexa Scimeca?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexa_Scimeca", "seq": "74,86", "label": "Alexa Scimeca"}], "predicate mapping": [], "id": "0c0ff7a433a646868818f8629d5a0134"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "seq": "70,79", "label": "Lori Black"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "41,55", "label": "Adrian A Basora"}], "predicate mapping": [], "id": "ca12347dfd3541a5a313ae988767ca9f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Rodrigues> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "Name all the broadcast area of the TV stations which has Rodrigues as one of the broadcast area ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rodrigues", "seq": "57,65", "label": "Rodrigues"}], "predicate mapping": [], "id": "a188179d04e740928d43dc584501c365"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn> . ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What band has Joe Hahn and Chester Bennington?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Hahn", "seq": "14,21", "label": "Joe Hahn"}, {"uri": "http://dbpedia.org/resource/Chester_Bennington", "seq": "27,44", "label": "Chester Bennington"}], "predicate mapping": [], "id": "fb88bbd86d0d4401951bf15cad3dc0ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Matt_Snorton> <http://dbpedia.org/property/pastteams> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "In which cities are there american football teams where Matt Snorton played?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Matt_Snorton", "seq": "56,67", "label": "Matt Snorton"}], "predicate mapping": [], "id": "a7f115fe1444401b808019eec0ae4008"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "With which musical artist is the producer of Spotlight associated ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)", "seq": "45,53", "label": "Spotlight"}], "predicate mapping": [], "id": "95f0c14ef2194c5cb7fb4fafa947da6a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose constituency is Noe Valley, San Francisco and belongs to military unit USS Kittiwake (ASR-13)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco", "seq": "45,69", "label": "Noe Valley, San Francisco"}, {"uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)", "seq": "100,112", "label": "USS Kittiwake"}], "predicate mapping": [], "id": "3c149a4bfbfd4fcdb7f24af562373951"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "How many awards have the french people received?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_people", "seq": "25,37", "label": "french people"}], "predicate mapping": [], "id": "b96656337c6747a381cea7ab41528178"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Frederick_Cooke_(socialist)> <http://dbpedia.org/ontology/vicePresident> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "Where is the VP buried, which was served by Frederick Cooke?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frederick_Cooke_(socialist)", "seq": "44,58", "label": "Frederick Cooke"}], "predicate mapping": [], "id": "06dc963aaf6f4541912707a69c9c48e9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Turku> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "What is the sea connected to Oulu and Turku?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oulu", "seq": "29,32", "label": "Oulu"}, {"uri": "http://dbpedia.org/resource/Turku", "seq": "38,42", "label": "Turku"}], "predicate mapping": [], "id": "501bbfe69c3a4fcd88d284639842d8dc"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> }", "question": "does the US navy have the structure of command of us department of defence?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Navy", "seq": "9,15", "label": "US navy"}, {"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "seq": "39,73", "label": "command of us department of defence"}], "predicate mapping": [], "id": "9d4afc6a5c164d81bbeb24a1bc568c3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/William_Ofori_Atta> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }", "question": "What country did the successor of William Ofori Atta swear his oath to?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Ofori_Atta", "seq": "34,51", "label": "William Ofori Atta"}], "predicate mapping": [], "id": "f8dc5dd3cf8c4e4daf406be6479ac498"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Through which label has Katy B released her singles?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katy_B", "seq": "24,29", "label": "Katy B"}], "predicate mapping": [], "id": "c9d5a274b50f454986740fdfafd327cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are some awards given to the french people?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_people", "seq": "34,46", "label": "french people"}], "predicate mapping": [], "id": "ab1274d78df1402ca6ccf7ba5642f936"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri } ", "question": "What is the route end of Birmingham and Oxford Junction Railway ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway", "seq": "25,62", "label": "Birmingham and Oxford Junction Railway"}], "predicate mapping": [], "id": "659e0f9700964082b127b839ca27f172"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lao_Plaza_Hotel> <http://dbpedia.org/property/developer> ?uri } ", "question": "Where is Lao Plaza Hotel located?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lao_Plaza_Hotel", "seq": "9,23", "label": "Lao Plaza Hotel"}], "predicate mapping": [], "id": "57e96d0a037f4c088d5a09944c314b58"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ", "question": "What is the municipality of Homestead Grays Bridge ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge", "seq": "28,49", "label": "Homestead Grays Bridge"}], "predicate mapping": [], "id": "a1a358a3439f4fcbbc39fa25718b2ad6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Rhaetian_Railway> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In how many nations does Rhaetian Railways own train stations?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rhaetian_Railway", "seq": "25,41", "label": "Rhaetian Railways"}], "predicate mapping": [], "id": "1a67a8c314f94af3bbb0cac98461b913"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers> <http://dbpedia.org/property/restingplace> ?uri . }", "question": "Where are the burial grounds of Willem Cornelis Janse van Rensburg and Thomas Franois Burgers?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg", "seq": "32,65", "label": "Willem Cornelis Janse van Rensburg"}, {"uri": "http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers", "seq": "71,92", "label": "Thomas Franois Burgers"}], "predicate mapping": [], "id": "fe825b7ea80045f19a498f490eb78420"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Friedman", "seq": "38,51", "label": "Josh Friedmann"}, {"uri": "http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines", "seq": "70,81", "label": "Terminator 3"}], "predicate mapping": [], "id": "7c11228a01e24c0b81378d51b50efe43"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstra\u00dfe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "question": "Who had headed the governmental agencies whose admin HQ was in Niederkirchnerstrasse?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Niederkirchnerstra\u00dfe", "seq": "63,83", "label": "Niederkirchnerstrasse"}], "predicate mapping": [], "id": "6edbb617d6a3485c8a8a32e78e14cf0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Grasim_Bhiwani_Textiles> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "In which city was the company founded , which owns Grasim Bhiwani Textiles?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grasim_Bhiwani_Textiles", "seq": "51,73", "label": "Grasim Bhiwani Textiles"}], "predicate mapping": [], "id": "4ee990f7399a4511950f55ae69196980"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri} ", "question": "Which region of Bannock is the origin od Spaghetti squash ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spaghetti_squash", "seq": "41,56", "label": "Spaghetti squash"}, {"uri": "http://dbpedia.org/resource/Bannock_(food)", "seq": "16,22", "label": "Bannock"}], "predicate mapping": [], "id": "b38e47f868494aad92a0886611fb76eb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/opponent> ?uri } ", "question": "Who is the opponent of United States House of Representatives elections in Ohio, 2010 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010", "seq": "23,84", "label": "United States House of Representatives elections in Ohio, 2010"}], "predicate mapping": [], "id": "8d4da6021bd04b108db6150288326476"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Kamaloohua> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which district of Robert William Wilcox os the place of birth of Kamaloohua ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_William_Wilcox", "seq": "18,38", "label": "Robert William Wilcox"}, {"uri": "http://dbpedia.org/resource/Kamaloohua", "seq": "65,74", "label": "Kamaloohua"}], "predicate mapping": [], "id": "8f807aa1160a43f18fb9f1b9b304c86b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri } ", "question": "Name the commander of Battle of the Thames ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_the_Thames", "seq": "22,41", "label": "Battle of the Thames"}], "predicate mapping": [], "id": "c1fbd40e9d774b85994b633e277b297b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Georgia_(U.S._state)> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}", "question": "Name the states which have been billed by the wrestlers who has also billed Georgia ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Georgia_(U.S._state)", "seq": "76,82", "label": "Georgia"}], "predicate mapping": [], "id": "739ec9202cac42dcb1c76c274d183b8c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/property/outflow> ?uri. <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri} ", "question": "Which country has outflow of  Lake Uniamsi and  inflows of the Cahora Bassa?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si", "seq": "30,41", "label": "Lake Uniamsi"}, {"uri": "http://dbpedia.org/resource/Cahora_Bassa", "seq": "63,74", "label": "Cahora Bassa"}], "predicate mapping": [], "id": "40d15e549b0f4899acb00cf469105b8d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Association_football> . ?x <http://dbpedia.org/ontology/sport> ?uri }", "question": "Count the number of  sport played by the school which also plays Association football ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Association_football", "seq": "65,84", "label": "Association football"}], "predicate mapping": [], "id": "01cd1e78b6be40e98f1e8db6d8b64385"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "Which city's neighboring municipalities are Lancy and  Pregny-Chambsy?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lancy", "seq": "44,48", "label": "Lancy"}, {"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "seq": "55,68", "label": "Pregny-Chambsy"}], "predicate mapping": [], "id": "9a80906c6ddb4ce1ae6405210f073325"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Michael_Cristofer> . ?x <http://dbpedia.org/property/guests> ?uri }", "question": "Give me the total number of Guests of the television episodes whose one of the  Guests is Michael Cristofer?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Cristofer", "seq": "90,106", "label": "Michael Cristofer"}], "predicate mapping": [], "id": "0158182c73724ee685ea4dc4dae2b647"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1995_South_Pacific_Games> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Tahiti> }", "question": "Were the 1995 south pacific games hosted in tahiti?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/1995_South_Pacific_Games", "seq": "9,32", "label": "1995 south pacific games"}, {"uri": "http://dbpedia.org/resource/Tahiti", "seq": "44,49", "label": "tahiti"}], "predicate mapping": [], "id": "0eeefb46088442158a96ecb63d79ef4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Runewaker_Entertainment> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/property/destinations> ?uri} ", "question": "Which division of the Runewaker Entertainment is also the  destinations of the Airtours International Airways?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Runewaker_Entertainment", "seq": "22,44", "label": "Runewaker Entertainment"}, {"uri": "http://dbpedia.org/resource/Airtours_International_Airways", "seq": "79,108", "label": "Airtours International Airways"}], "predicate mapping": [], "id": "a3f1e2963c0c465d966469f42cdb94a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HorseRace>}", "question": "Give me an estimate number of races where horses grandsired by the Wild Risk have raced in?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wild_Risk", "seq": "67,75", "label": "Wild Risk"}], "predicate mapping": [], "id": "c6eee71ddd2745a6a35018dfa232f4bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List the awards won by the cinematographer of Mickey's Mellerdrammer?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer", "seq": "46,67", "label": "Mickey's Mellerdrammer"}], "predicate mapping": [], "id": "53bf3aeac4064196845be56ed236a7f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri } ", "question": "Where is the garrison of Western Naval Command ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Western_Naval_Command", "seq": "25,45", "label": "Western Naval Command"}], "predicate mapping": [], "id": "53b2519492344f22a93ce9bef25dd3a5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcal\u00e1_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "Count the number of books whose author's were born in Alcal de Henares ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alcal\u00e1_de_Henares", "seq": "54,69", "label": "Alcal de Henares"}], "predicate mapping": [], "id": "e698401405e74eb89c41b846351f1ff9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Harvey_Rosenstock> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the film starring of the movies whose editor is Harvey  Rosenstock ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvey_Rosenstock", "seq": "53,70", "label": "Harvey  Rosenstock"}], "predicate mapping": [], "id": "c64b64f2cf244f4dbe7002a393771eb6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Dionne_Warwick> . ?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gary_Garland> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the name of the person who has relations with Dionne Warwick and Gary Garland?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dionne_Warwick", "seq": "54,67", "label": "Dionne Warwick"}, {"uri": "http://dbpedia.org/resource/Gary_Garland", "seq": "73,84", "label": "Gary Garland"}], "predicate mapping": [], "id": "981c2203e0974c06abfc3fa94b23caac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Which military battles are associated with Israel?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Israel", "seq": "43,48", "label": "Israel"}], "predicate mapping": [], "id": "6f21a2501af44a8d9c2678f2e61a2207"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri } ", "question": "Which city has it's landmark as Cheasty Boulevard South?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South", "seq": "32,54", "label": "Cheasty Boulevard South"}], "predicate mapping": [], "id": "724442cd9501404cbafe30105de16e01"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/English_Americans> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Brent_Darby> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which region of English American is also the palce of Death of Brent Darby ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/English_Americans", "seq": "16,31", "label": "English American"}, {"uri": "http://dbpedia.org/resource/Brent_Darby", "seq": "63,73", "label": "Brent Darby"}], "predicate mapping": [], "id": "694000fa26c74b33aa7095c7738f7179"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri  . }", "question": "Who are the architect of the stadium whose one of the architect is louis D. Astorino ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_D._Astorino", "seq": "67,83", "label": "louis D. Astorino"}], "predicate mapping": [], "id": "3a46f9dd0ff14411b6184bbc26d354d9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Short_story> } ", "question": "What are some short story kind of Books?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Short_story", "seq": "14,24", "label": "short story"}], "predicate mapping": [], "id": "c593b3d2dd42455e9a67d0aa2e905027"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eliza_Schneider", "seq": "26,40", "label": "Eliza Schneider"}, {"uri": "http://dbpedia.org/resource/Isaac_Hayes", "seq": "46,56", "label": "Isaac Hayes"}], "predicate mapping": [], "id": "da876b5724b64e209959a34efc201d5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Who is the fictional character whose family member is Padme Amidala?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala", "seq": "54,66", "label": "Padme Amidala"}], "predicate mapping": [], "id": "7152d19cc09847a59273b9425bba8dfe"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ", "question": "Which notable series of Russell T Davies is also the series of Short Trips: A day in the life ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life", "seq": "63,92", "label": "Short Trips: A day in the life"}, {"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "24,39", "label": "Russell T Davies"}], "predicate mapping": [], "id": "9111a28178e8420b88b3124f0b714e72"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?x <http://dbpedia.org/property/employer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who employed the person famous for the Boeing fa18ef Super Hornet?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "seq": "39,64", "label": "Boeing fa18ef Super Hornet"}], "predicate mapping": [], "id": "d0db4cd9f5624de8a9bf3c8d4b104695"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clay_Aiken>  . }", "question": "List the relatives of clay Aiken ?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clay_Aiken", "seq": "22,31", "label": "clay Aiken"}], "predicate mapping": [], "id": "f9b31b5201064d76b7f841959920c37f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the resting place of the people who served in Norwalk Trainband.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norwalk_Trainband", "seq": "51,67", "label": "Norwalk Trainband"}], "predicate mapping": [], "id": "ad0c25ffff314adc8360b09d8bfeed66"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Tukwila,_Washington> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which are the cities on the river which also flows in Tukwila, Washington ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tukwila,_Washington", "seq": "54,72", "label": "Tukwila, Washington"}], "predicate mapping": [], "id": "f11a115d1c814158bf1464c31ccbdba7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Barzman> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "List all the narrator of the albums which had Alan Barzman as one of the narrator ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alan_Barzman", "seq": "46,57", "label": "Alan Barzman"}], "predicate mapping": [], "id": "cad124dc6dd849f8aa03d47598e6abbb"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Islam> }", "question": "Mazhar Ul Haq High School, Beerwah is affiliated to Islamic Religion", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah", "seq": "0,33", "label": "Mazhar Ul Haq High School, Beerwah"}, {"uri": "http://dbpedia.org/resource/Islam", "seq": "52,58", "label": "Islamic"}], "predicate mapping": [], "id": "565549d096324c1ca053e79d2d314691"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mateusz_Morawiecki> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "In which state does the university which is the alma mater of Mateusz Morawiecki lie?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mateusz_Morawiecki", "seq": "62,79", "label": "Mateusz Morawiecki"}], "predicate mapping": [], "id": "a8f9d6667ed44a89b9be3cf80a8d24c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Give me all tv shows which are based in boston and massachusetts?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston", "seq": "40,45", "label": "boston"}, {"uri": "http://dbpedia.org/resource/Massachusetts", "seq": "51,63", "label": "massachusetts"}], "predicate mapping": [], "id": "f5389602a5104bc0b3691a6dc0b6aed4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Louisiana_USA> . ?uri <http://dbpedia.org/property/spouse> ?x  . }", "question": "Who is married to a Miss Louisiana, USA?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miss_Louisiana_USA", "seq": "20,38", "label": "Miss Louisiana, USA"}], "predicate mapping": [], "id": "1f8f6352c2c54ce3b53aba360323d3ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Who has produced movies that have a James Horner score?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Horner", "seq": "36,47", "label": "James Horner"}], "predicate mapping": [], "id": "26c1a1fbf2d44a43b2365a9bc2ac9c5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Vostok_programme> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "question": "What is the birth place of the astronaut whose mission was the Vostok programmer?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vostok_programme", "seq": "63,79", "label": "Vostok programmer"}], "predicate mapping": [], "id": "26745f9ea116424bb5a1ed1ac3faa8cf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Fleisher_Yarn> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "What team did the players start their careers with, who right now play for Fleisher Yarn?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fleisher_Yarn", "seq": "75,87", "label": "Fleisher Yarn"}], "predicate mapping": [], "id": "cd54a705b06443df8c1be672abe15815"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Government_Building,_Kiev> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}", "question": "List the significant buildings of the arch. whose one of the important work is Government Building, Kiev ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Government_Building,_Kiev", "seq": "79,103", "label": "Government Building, Kiev"}], "predicate mapping": [], "id": "2408eccc056c49ec8d1d6eb57ccc6b3c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fikret_Orman> <http://dbpedia.org/property/almaMater> ?uri } ", "question": "What is the alma mater of Fikret Orman?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fikret_Orman", "seq": "26,37", "label": "Fikret Orman"}], "predicate mapping": [], "id": "7383239e8ece464a80a8d5422d4ed3bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company which produces both  Boeing F/A-18 E/F Hornet nad CH-46 Chinook ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "seq": "38,61", "label": "Boeing F/A-18 E/F Hornet"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "seq": "67,79", "label": "CH-46 Chinook"}], "predicate mapping": [], "id": "2d4e39d0c0784adfb281198a892d3894"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "Count all the awards which were presented by something located in California.", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "66,75", "label": "California"}], "predicate mapping": [], "id": "83ca3f4edad24d93a575b23842e8e6e2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/England_national_football_team> } ", "question": "what are some players of England national football team?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_football_team", "seq": "25,54", "label": "England national football team"}], "predicate mapping": [], "id": "627b135b1339420abd87fd83a60ba519"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Maria_Ludwika_Krasi\u0144ska> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Where did the aristocrats die whose mother was Maria Ludwika Krasiska?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maria_Ludwika_Krasi\u0144ska", "seq": "47,68", "label": "Maria Ludwika Krasiska"}], "predicate mapping": [], "id": "5af32623f2d747d88f0b3fe7df64b489"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }", "question": "What are the other notable work of the executive producer of The Runaway Bride episode of Doctor Who?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)", "seq": "61,77", "label": "The Runaway Bride"}], "predicate mapping": [], "id": "13b91edef6f247998a11991c20d82c12"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Prodigal_Son_(play)> <http://dbpedia.org/property/subject> ?uri } ", "question": "What is the subject of The Prodigal son ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)", "seq": "23,38", "label": "The Prodigal son"}], "predicate mapping": [], "id": "92cabb6122e7449fb885581d7b8e5127"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Helsinki>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater>}", "question": "What water bodies are nearest to Helsinki city?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Helsinki", "seq": "33,40", "label": "Helsinki"}], "predicate mapping": [], "id": "a1bd0e085010417ba43241a478f7df55"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Agaricus_bisporus> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }", "question": "Find the total number of  ingredient of the recepies whose ingredient is common Mushroom ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Agaricus_bisporus", "seq": "59,71", "label": "ingredient is"}], "predicate mapping": [], "id": "a8d7c64d096f49249d1bbdba54ea0dab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri } ", "question": "Who is the meaning of Isa  ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Isa_(name)", "seq": "22,24", "label": "Isa"}], "predicate mapping": [], "id": "ee7db84a309448d5abf22c529f3c8d35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi", "seq": "25,41", "label": "Fusajiro Yamauchi"}, {"uri": "http://dbpedia.org/resource/Nintendo_eShop", "seq": "69,82", "label": "Nintendo eShop"}], "predicate mapping": [], "id": "a590bd766cad404b831d5cbb85a244b8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ", "question": "What is the official language of Ladonia, which is the target area of Probus Journal?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ladonia_(micronation)", "seq": "33,39", "label": "Ladonia"}, {"uri": "http://dbpedia.org/resource/Probus_(journal)", "seq": "70,75", "label": "Probus"}], "predicate mapping": [], "id": "9a7c1e18a60b45f5842fffdec31b087a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Hockey_Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }", "question": "How many teams have used the stadiums which have been rented by the Canadian Hockey team?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hockey_Canada", "seq": "77,87", "label": "Hockey team"}], "predicate mapping": [], "id": "ea10d95104514ba8bca12c1165e2f397"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akiva_Goldsman", "seq": "37,50", "label": "Akiva Goldsman"}, {"uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)", "seq": "69,80", "label": "Mark Stevens"}], "predicate mapping": [], "id": "f468633c3d9d42d6b5460e08fd7527ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Fantasy_television> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many TV shows are similar to the ones belonging to fantasy genre?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fantasy_television", "seq": "55,67", "label": "fantasy genre"}], "predicate mapping": [], "id": "55b536c2b837474d8aa722a73037bd49"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/property/companyType> <http://dbpedia.org/resource/Public_company> }", "question": "Is facebook a public company?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Facebook", "seq": "3,10", "label": "facebook"}, {"uri": "http://dbpedia.org/resource/Public_company", "seq": "14,27", "label": "public company"}], "predicate mapping": [], "id": "8663feba2e3b48de998772ddb3283b0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What religions are followed by economists?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Economist", "seq": "31,40", "label": "economists"}], "predicate mapping": [], "id": "7410520bca4c45bbab391b31101a6df3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> <http://dbpedia.org/resource/Rajya_Sabha> }", "question": "Is Rajya Sabha a house of parliament in India?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Parliament_of_India", "seq": "26,44", "label": "parliament in India"}, {"uri": "http://dbpedia.org/resource/Rajya_Sabha", "seq": "3,13", "label": "Rajya Sabha"}], "predicate mapping": [], "id": "e60d4439142244d0b14d8650ba3ccbcd"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/X_the_Unknown> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)> }", "question": "Was Gerald Gibbs the cinematographer of X the unknown?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/X_the_Unknown", "seq": "40,52", "label": "X the unknown"}, {"uri": "http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)", "seq": "4,15", "label": "Gerald Gibbs"}], "predicate mapping": [], "id": "efcc04cf1e59487e9a5018d7fd3412e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Philip_Webb> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "List the architect of the buildings whose one of the  architect is Philip Webb?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philip_Webb", "seq": "67,77", "label": "Philip Webb"}], "predicate mapping": [], "id": "b70eb1cf6bbc449e8c384f3cc7c888bd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shinya_Aoki> <http://dbpedia.org/ontology/trainer> ?uri } ", "question": "List the trainers of Shinya Aoki ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shinya_Aoki", "seq": "21,31", "label": "Shinya Aoki"}], "predicate mapping": [], "id": "ef57d1c17ccf4f40847f6c51c1183441"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "How many software run on operating system is Microsoft Windows?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "45,61", "label": "Microsoft Windows"}], "predicate mapping": [], "id": "02863512b8c141d8919dad7863c3b44e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }", "question": "How many teams have rented stadiums in Canada?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "seq": "39,44", "label": "Canada"}], "predicate mapping": [], "id": "159f695fd9f34609bd09d41a97aacb40"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Babita> <http://dbpedia.org/property/birthplace> ?uri } ", "question": "Where was Babita born ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Babita", "seq": "10,15", "label": "Babita"}], "predicate mapping": [], "id": "aca36b0993ba45edb0f0fc957c97ce23"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stewart_Bovell> <http://dbpedia.org/ontology/militaryBranch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Give me the mascot of the military unit in which Stewart Bovell served?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stewart_Bovell", "seq": "49,62", "label": "Stewart Bovell"}], "predicate mapping": [], "id": "6c19a51322bb489f9b4cb12531a09d13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Orange,_Virginia> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name some politicians buried in a place near Orange Virginia?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orange,_Virginia", "seq": "45,59", "label": "Orange Virginia"}], "predicate mapping": [], "id": "b0dd4c5ad51349f1946188f22d7fa899"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "What is the sea whose cities are Gdask and Oulu?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gda\u0144sk", "seq": "33,37", "label": "Gdask"}, {"uri": "http://dbpedia.org/resource/Oulu", "seq": "43,46", "label": "Oulu"}], "predicate mapping": [], "id": "514539c7a7854fb8a29b7c24dc730dbf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/property/parent> ?uri} ", "question": "Which manufacturer of  Ford Y-block engine is the parent of  Ford Air Transport Service ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Y-block_engine", "seq": "23,41", "label": "Ford Y-block engine"}, {"uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service", "seq": "61,86", "label": "Ford Air Transport Service"}], "predicate mapping": [], "id": "9ea1f28bd342417b8859d96f88a7f775"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "How many games have a composer who worked for the Creatures?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Creatures_(company)", "seq": "50,58", "label": "Creatures"}], "predicate mapping": [], "id": "2fd401510ca849388e708a6f0b1f2137"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }", "question": "How many awards have been given to the participants of the Lawrence Realization Stakes?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes", "seq": "59,85", "label": "Lawrence Realization Stakes"}], "predicate mapping": [], "id": "610e75c938944f818e964d8858da9836"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Detroit_Pistons> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "Total number of places where people drafted in the detroit pistons have died?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Detroit_Pistons", "seq": "51,65", "label": "detroit pistons"}], "predicate mapping": [], "id": "4efbed07c60a47e3a9ef884a3f08f25c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Jones_(American_football)> <http://dbpedia.org/property/highschool> ?uri } ", "question": "Where did Paul Jones do his highschool?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Jones_(American_football)", "seq": "10,19", "label": "Paul Jones"}], "predicate mapping": [], "id": "2704d889b6c741ef8e45357f8e71bbdb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong> <http://dbpedia.org/ontology/birthPlace> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "Which state is the birth location of Ann Monroe Gilchrist Strong? ", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong", "seq": "37,63", "label": "Ann Monroe Gilchrist Strong"}], "predicate mapping": [], "id": "02704dedd802497dbd1e9e9abcd3e0da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Bud_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "Bud Adams owns which american football team?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bud_Adams", "seq": "0,8", "label": "Bud Adams"}], "predicate mapping": [], "id": "a1e40cc27cbe4b48b7f3d40e75c71479"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EXXV-TV> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri . }", "question": "Which licensee of EXXV-TV is also the licensee of WXXV-DT2 ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/EXXV-TV", "seq": "18,24", "label": "EXXV-TV"}, {"uri": "http://dbpedia.org/resource/WXXV-DT2", "seq": "50,57", "label": "WXXV-DT2"}], "predicate mapping": [], "id": "f2e2230636684b6ab20dbd0f1c6e1a03"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Joe_Schilling>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MartialArtist>}", "question": "Give me all martial artists trained by Joe Schilling.", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Schilling", "seq": "39,51", "label": "Joe Schilling"}], "predicate mapping": [], "id": "2581702c56f24e0498481ea703252cc9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allal> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Peter_Bergman_(comedian)> <http://dbpedia.org/ontology/employer> ?uri} ", "question": "What magazine published Allal and is the employer of Peter Bergman?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Allal", "seq": "24,28", "label": "Allal"}, {"uri": "http://dbpedia.org/resource/Peter_Bergman_(comedian)", "seq": "53,65", "label": "Peter Bergman"}], "predicate mapping": [], "id": "713d533b1d2a4dc08c7ccfe24d7dd58b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Ludwig_Drums> . ?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "List few musical artist whose notable instruments are Ludwig Drums and  Remo?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ludwig_Drums", "seq": "54,65", "label": "Ludwig Drums"}, {"uri": "http://dbpedia.org/resource/Remo", "seq": "72,75", "label": "Remo"}], "predicate mapping": [], "id": "bf11268a275f4ca090b23db4888f1ec3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Douglass_North> <http://dbpedia.org/ontology/institution> ?uri . }", "question": "Name the common institution of the Erica Frank and Douglass North?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erica_Frank", "seq": "35,45", "label": "Erica Frank"}, {"uri": "http://dbpedia.org/resource/Douglass_North", "seq": "51,64", "label": "Douglass North"}], "predicate mapping": [], "id": "c1cdd10d876d429ba602f0b60fc91f53"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Invasion_of_Buwat> <http://dbpedia.org/property/commander> ?uri. <http://dbpedia.org/resource/Fatimah_bint_Sa'd> <http://dbpedia.org/ontology/knownFor> ?uri . }", "question": "Who commanded the invasion of Buwat and made Fatima bint Sa'd famous?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Invasion_of_Buwat", "seq": "18,34", "label": "invasion of Buwat"}, {"uri": "http://dbpedia.org/resource/Fatimah_bint_Sa'd", "seq": "45,60", "label": "Fatima bint Sa'd"}], "predicate mapping": [], "id": "0134077a418246169b05e5390e035b00"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Failon> <http://dbpedia.org/ontology/ethnicity> ?uri } ", "question": "What is the ethicity of Ted Falon?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Failon", "seq": "24,32", "label": "Ted Falon"}], "predicate mapping": [], "id": "f742b26c254f48ada294bbb8649d15c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "question": "Who are the astronauts associated with NASA?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/NASA", "seq": "39,42", "label": "NASA"}], "predicate mapping": [], "id": "c73fef8ef82040cdb4ef06b267d8b45d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Cedella_Booker> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person whose mother name is Cedella Booker and has a son named Sharon Marley?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cedella_Booker", "seq": "37,50", "label": "Cedella Booker"}, {"uri": "http://dbpedia.org/resource/Sharon_Marley", "seq": "72,84", "label": "Sharon Marley"}], "predicate mapping": [], "id": "fa685bca2d1949fd9aa9c98cb2200dfe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "Which kind of buildings are found in England?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "37,43", "label": "England"}], "predicate mapping": [], "id": "aa855f60d8464cb291efa723306a8f74"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow_Governorate> <http://dbpedia.org/ontology/capital> ?uri } ", "question": "What is the county seat of Moscow Governorate ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moscow_Governorate", "seq": "27,44", "label": "Moscow Governorate"}], "predicate mapping": [], "id": "5cbf98e72bf24912a1efb6418b082b96"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/ARM_architecture>  . }", "question": "ARM Architecture acts as a game platform for how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/ARM_architecture", "seq": "0,15", "label": "ARM Architecture"}], "predicate mapping": [], "id": "6e9fc24127eb42e2b5580784c12b6587"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Jerry_Siegel> } ", "question": "What all has been created by Jerry Siegel?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Siegel", "seq": "29,40", "label": "Jerry Siegel"}], "predicate mapping": [], "id": "11efb4f1e7bb4a4991a7d52f98ce78ac"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Clegg> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/David_Cameron> }", "question": "Is David Cameron the prime minister of Nick Clegg?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nick_Clegg", "seq": "39,48", "label": "Nick Clegg"}, {"uri": "http://dbpedia.org/resource/David_Cameron", "seq": "3,15", "label": "David Cameron"}], "predicate mapping": [], "id": "a33859aa5439488798b80ada5172ff2b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }", "question": "Cricket is played by which countries' citizens?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cricket", "seq": "0,6", "label": "Cricket"}], "predicate mapping": [], "id": "1cb5a6736cd044c798948ca8e81ad7fb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . }", "question": "What things have founded place as United States and New Mexico?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "34,46", "label": "United States"}, {"uri": "http://dbpedia.org/resource/New_Mexico", "seq": "52,61", "label": "New Mexico"}], "predicate mapping": [], "id": "24be016341344144a6a482ef013bd669"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saneh_Lungkeaw> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Thailand> }", "question": "Does Saneh Lungkeaw play for the Thailand's national team?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saneh_Lungkeaw", "seq": "5,18", "label": "Saneh Lungkeaw"}, {"uri": "http://dbpedia.org/resource/Thailand", "seq": "33,40", "label": "Thailand"}], "predicate mapping": [], "id": "5a87e57658014b01807840c74c342a12"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Who all have been presenters on shows by the NBC?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "seq": "45,47", "label": "NBC"}], "predicate mapping": [], "id": "2ac17e74901841a48f166336033061b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What tv shows were born out of a collaboration of playtone and dreamworks?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "seq": "50,57", "label": "playtone"}, {"uri": "http://dbpedia.org/resource/DreamWorks_Television", "seq": "63,72", "label": "dreamworks"}], "predicate mapping": [], "id": "768ceadf1cfc424f98c61ac9892e985a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}", "question": "Who all have written songs that were then recorded in the Criteria Studios?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Criteria_Studios", "seq": "58,73", "label": "Criteria Studios"}], "predicate mapping": [], "id": "ee96d704c0094e77b6002d5894aa2765"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Attorneys_in_Sri_Lanka> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What are all the religions that have been followed by the Sir Lankan attorneys?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Attorneys_in_Sri_Lanka", "seq": "54,67", "label": "the Sir Lankan"}], "predicate mapping": [], "id": "9636268ee7834242905069b017dfdce7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Spy_Kids_(franchise)>  . }", "question": "What are the central characters in spy kids series?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spy_Kids_(franchise)", "seq": "35,42", "label": "spy kids"}], "predicate mapping": [], "id": "94e0f81983644e299c03baa26e68409f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Carlos_Emmons_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri} ", "question": "Name the common former team of Marv mcFadden and Carlos Emmons ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marv_McFadden", "seq": "31,43", "label": "Marv mcFadden"}, {"uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)", "seq": "49,61", "label": "Carlos Emmons"}], "predicate mapping": [], "id": "137b3f2da4c048b282d2f6b03106d881"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }", "question": "Through how many labels has Katy B released her singles?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katy_B", "seq": "28,33", "label": "Katy B"}], "predicate mapping": [], "id": "eebefa6c5abc4c53ac2067ca0bed237d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . }", "question": "Which newspaper is owned by people living in Oslo?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oslo", "seq": "45,48", "label": "Oslo"}], "predicate mapping": [], "id": "1511c21130fd42db8503ef152de463ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }", "question": "How many people have written for Gangan Comics?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gangan_Comics", "seq": "33,45", "label": "Gangan Comics"}], "predicate mapping": [], "id": "18c0cfe0eeb245e5be6ccbe05f916c12"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/William_H._Blanchard> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }", "question": "Is William H Blanchard buried in Colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_H._Blanchard", "seq": "3,21", "label": "William H Blanchard"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "33,40", "label": "Colorado"}], "predicate mapping": [], "id": "c279410514bf4a78804985526c37251c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name a company with key person as Dennis Muilenburg and Raymond Conner ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "34,50", "label": "Dennis Muilenburg"}, {"uri": "http://dbpedia.org/resource/Raymond_Conner", "seq": "56,69", "label": "Raymond Conner"}], "predicate mapping": [], "id": "3a5a1af6d3f14416be651b162e0f62a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri . }", "question": "Name the common institute of Robert hall and Erica Frank ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Hall_(economist)", "seq": "29,39", "label": "Robert hall"}, {"uri": "http://dbpedia.org/resource/Erica_Frank", "seq": "45,55", "label": "Erica Frank"}], "predicate mapping": [], "id": "60deb84874954198b4c9b6cc5c85e747"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Angelina_Jolie> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What award was won by the father of Angelina Jolie?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Angelina_Jolie", "seq": "36,49", "label": "Angelina Jolie"}], "predicate mapping": [], "id": "6b9c942fcd1c48aba22c20b5693b249f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri . }", "question": "What were robert sarvis and JAck Ryan nominated for ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Sarvis", "seq": "10,22", "label": "robert sarvis"}, {"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "seq": "28,36", "label": "JAck Ryan"}], "predicate mapping": [], "id": "42477bee3a644a5cbe1bbca800206582"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . }", "question": "List the ideologies of the party of Boonchu Rojanastien?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boonchu_Rojanastien", "seq": "36,54", "label": "Boonchu Rojanastien"}], "predicate mapping": [], "id": "d9b4914b46a14c7392226eb411c3c6da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "question": "How many other important work has been done by the writers of Sarah Jane Adventures?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "62,82", "label": "Sarah Jane Adventures"}], "predicate mapping": [], "id": "c527bb01402d4d4db53562c4b0cc5862"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PLUS_Expressways> <http://dbpedia.org/property/hubs> ?uri } ", "question": "What are the hubs of PLUS Helicopter Services, a highway helicopter unit of PLUS Expressways?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/PLUS_Expressways", "seq": "76,91", "label": "PLUS Expressways"}], "predicate mapping": [], "id": "d5068e915d334851ae6309f58ccc82cf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+> }", "question": "Is GIMP written in GTK+?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/GIMP", "seq": "3,6", "label": "GIMP"}, {"uri": "http://dbpedia.org/resource/GTK+", "seq": "19,22", "label": "GTK+"}], "predicate mapping": [], "id": "b60be328eefd4fc994895d7e2c04b7e6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri} ", "question": "What is the common place where USS Camp DE-251 was built, and is one of the destinations of Emerald Air?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)", "seq": "31,38", "label": "USS Camp"}, {"uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)", "seq": "92,102", "label": "Emerald Air"}], "predicate mapping": [], "id": "085348492566421ba7cade102bb4e127"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . }", "question": "Whose families are Buccinoidea and Buccinidae?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buccinoidea", "seq": "19,29", "label": "Buccinoidea"}, {"uri": "http://dbpedia.org/resource/Buccinidae", "seq": "35,44", "label": "Buccinidae"}], "predicate mapping": [], "id": "e43ae08acd6c4d84a6f9e6c5bcb3cae6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Connecticut_Colony> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many places are the tombs of people who died in Connecticut Colony?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Connecticut_Colony", "seq": "55,72", "label": "Connecticut Colony"}], "predicate mapping": [], "id": "29e146d8bbb745018652a1a3c634a737"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Steve_Holland_(footballer)> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }", "question": "Who are the shareholder of the soccer club for whom Steve Holland plays?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Holland_(footballer)", "seq": "52,64", "label": "Steve Holland"}], "predicate mapping": [], "id": "02dde80bffd545f687faafd47c7e5afd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows are aired on Comedy Central?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "28,41", "label": "Comedy Central"}], "predicate mapping": [], "id": "e3fa455d918040598237f76a011b287b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Les_Claypool> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }", "question": "Whose theme music is composed by the band one of whose member is Les Claypool?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Les_Claypool", "seq": "65,76", "label": "Les Claypool"}], "predicate mapping": [], "id": "6434d90c34d141a38701354bbfbcb9ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }", "question": "Where does the river flow into which begins in Lebrsnik?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lebr\u0161nik", "seq": "47,54", "label": "Lebrsnik"}], "predicate mapping": [], "id": "6fcdd77ecd8d48df85988971b5efa3ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Liu_Mingchuan> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }", "question": "Where did the conflict take place where Liu Mingchuan fought?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liu_Mingchuan", "seq": "40,52", "label": "Liu Mingchuan"}], "predicate mapping": [], "id": "51ba46fe1c4e481f899d93f44dfae6d9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xocolatlite> <http://dbpedia.org/ontology/colour> ?uri } ", "question": "What is the colour of Xocolatlite ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Xocolatlite", "seq": "22,32", "label": "Xocolatlite"}], "predicate mapping": [], "id": "4a602d8ca5624552a796ccfefbaf8a1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Dolores_del_R\u00edo> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies are directed by the spouse of Dolores del Ro?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolores_del_R\u00edo", "seq": "46,59", "label": "Dolores del Ro"}], "predicate mapping": [], "id": "a43a3581442948429aaefa12283d9aa5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lekh_Castle> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri} ", "question": "Name the loocation of Lekh Castle which is also the location of SamurAbsheron channel ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lekh_Castle", "seq": "22,32", "label": "Lekh Castle"}, {"uri": "http://dbpedia.org/resource/Samur\u2013Absheron_channel", "seq": "64,84", "label": "SamurAbsheron channel"}], "predicate mapping": [], "id": "4f77489b44f4444fb99edd7e387255a6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}", "question": "Which planet was first discovered by Johann Gottfried Galle?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle", "seq": "37,58", "label": "Johann Gottfried Galle"}], "predicate mapping": [], "id": "e84421422b534cdb8726c1863cb03f18"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)>  . }", "question": "what mountains are in sierra nevada?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "seq": "22,34", "label": "sierra nevada"}], "predicate mapping": [], "id": "32aa2b3044e940e094b154d53dedd106"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/True_Grit_(novel)> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Western_(genre)> }", "question": "Was True Grit a novel of the western genre?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/True_Grit_(novel)", "seq": "4,12", "label": "True Grit"}, {"uri": "http://dbpedia.org/resource/Western_(genre)", "seq": "29,35", "label": "western"}], "predicate mapping": [], "id": "da9c3c6ffbf24f4e9335cf131e3f0907"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri } ", "question": "Who is the nominee of Jack Ryan ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "seq": "22,30", "label": "Jack Ryan"}], "predicate mapping": [], "id": "f3713cd348ac4ddf884634f3a7672b0a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baco_noir> <http://dbpedia.org/ontology/wineRegion> ?uri } ", "question": "Name the wine regions of Baco noir?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baco_noir", "seq": "25,33", "label": "Baco noir"}], "predicate mapping": [], "id": "a0ea55269f83451faef0afb3122b0bf3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chea_Sim> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Which religion is followed by the PM who was served by Chea Sim?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chea_Sim", "seq": "55,62", "label": "Chea Sim"}], "predicate mapping": [], "id": "67978a98005d4f27897894daf8f8feeb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Geneva> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows of a company headquartered in Geneva?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "seq": "60,65", "label": "Geneva"}], "predicate mapping": [], "id": "a8ff069915554ce8b52b95787f1e84ce"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri } ", "question": "Name the president of Wyche Fowler ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wyche_Fowler", "seq": "22,33", "label": "Wyche Fowler"}], "predicate mapping": [], "id": "9bea6db7df12415083f728032f9327a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/New_Braunfels,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "Name the parts of the settlements which has New Braunfels as one of the parts ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Braunfels,_Texas", "seq": "44,59", "label": "New Braunfels as"}], "predicate mapping": [], "id": "dbac6210102246678872e25416ced6dc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri }", "question": "How many party are there of the office holders whose one of the party is Janata Dal ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Janata_Dal", "seq": "73,82", "label": "Janata Dal"}], "predicate mapping": [], "id": "6d9643fb5f044ea2b9b9c29f1cc443c2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ", "question": "Who is the headcoach of 2014-15 Virginia Tech Hokies men's basketball team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team", "seq": "24,73", "label": "2014-15 Virginia Tech Hokies men's basketball team"}], "predicate mapping": [], "id": "8324de1b412b4b4a827a1a102c028585"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri } ", "question": "name the home stadium of FC Spartak Moscow season 2011-12", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season", "seq": "25,48", "label": "FC Spartak Moscow season"}], "predicate mapping": [], "id": "32830f79373c474abbf24909919f630e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "How many causes of death have been associated with American citizens?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "46,58", "label": "with American"}], "predicate mapping": [], "id": "d4e20aa278bc4c0daee027c3c77b2377"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Pablo_Records> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }", "question": "Give me a list of everyone who married the musicians signed up with Pablo Records?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pablo_Records", "seq": "68,80", "label": "Pablo Records"}], "predicate mapping": [], "id": "8d0baff96ff24540ad867eca41eeb113"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Miss_Potential> <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Bluebird> }", "question": "Is Bluebird the grandsire of Miss Potential?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miss_Potential", "seq": "29,42", "label": "Miss Potential"}, {"uri": "http://dbpedia.org/resource/Bluebird", "seq": "3,10", "label": "Bluebird"}], "predicate mapping": [], "id": "93986b8aaf5c4a2c9d3b656860306d2a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ", "question": "Which interest of Philip Novak is the relegion of Vesak ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philip_Novak", "seq": "18,29", "label": "Philip Novak"}, {"uri": "http://dbpedia.org/resource/Vesak", "seq": "50,54", "label": "Vesak"}], "predicate mapping": [], "id": "91be6e04144043e78dc8164ea13e0aac"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Iran> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> }", "question": "Is semnani one of the languages spoken in Iran?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iran", "seq": "42,45", "label": "Iran"}, {"uri": "http://dbpedia.org/resource/Semnani_languages", "seq": "18,30", "label": "the languages"}], "predicate mapping": [], "id": "9360bc93c0e246c4a7bc4ac32f5f86c9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . }", "question": "List everyone who got their training in the city of California?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "52,61", "label": "California"}], "predicate mapping": [], "id": "2f0f958ee8884f229d32a6f90c3cb34f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movies's screenplay is written by Akiva Goldsman", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akiva_Goldsman", "seq": "40,53", "label": "Akiva Goldsman"}], "predicate mapping": [], "id": "899f6fb23f3148599baf961c74ad532d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Who made the singles on the famous album Aida?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida", "seq": "24,44", "label": "the famous album Aida"}], "predicate mapping": [], "id": "e96e350f71e64985b52abd2ed25349a1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri } ", "question": "Who is the associate of Thomas Bryan Martin ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin", "seq": "24,42", "label": "Thomas Bryan Martin"}], "predicate mapping": [], "id": "8a3172ebec544494a91ab3f49a5376e6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Advocate_Nasiruddin> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "What sport played in Polytechnic uni of San Juan has also made advocate nasiruddin famous?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Advocate_Nasiruddin", "seq": "63,81", "label": "advocate nasiruddin"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan", "seq": "21,47", "label": "Polytechnic uni of San Juan"}], "predicate mapping": [], "id": "54adeba4e7da49f286068bdbf39d26d8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/last> <http://dbpedia.org/resource/The_Avengers_(1998_film)> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Where is the fictional character from, whose last appearance was in the Avengers, 1998?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Avengers_(1998_film)", "seq": "68,79", "label": "the Avengers"}], "predicate mapping": [], "id": "7e43e5b0e86d44889fb270fb7665e52b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "List the academic discipline of the journals whose one of the discipline is neuro imaging ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neuroimaging", "seq": "76,88", "label": "neuro imaging"}], "predicate mapping": [], "id": "0de77adbc13b469fb9d23dec23d37f13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which countries were led by Pietro Parolin?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pietro_Parolin", "seq": "28,41", "label": "Pietro Parolin"}], "predicate mapping": [], "id": "70ff4d76a1bd447eb931dd8fdcdb1fc2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }", "question": "was the first national bank and trust building architectured by Chicago?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)", "seq": "8,45", "label": "first national bank and trust building"}, {"uri": "http://dbpedia.org/resource/Chicago", "seq": "64,70", "label": "Chicago"}], "predicate mapping": [], "id": "db1ffdbdbf064f84a06c61655ccb183a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Madison,_Wisconsin> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "question": "Where does the road starting from Madison, Wisconsin end?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Madison,_Wisconsin", "seq": "34,51", "label": "Madison, Wisconsin"}], "predicate mapping": [], "id": "bce5c81618704a358d4db3d4d5497dc3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies with Daniel Waters as screenwriter?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)", "seq": "25,37", "label": "Daniel Waters"}], "predicate mapping": [], "id": "782f901d32c14d0bb32eb413e439eb02"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Capital_region> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "What sports are played in schools in the capital region?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Capital_region", "seq": "41,54", "label": "capital region"}], "predicate mapping": [], "id": "7847a3288f5a482388944047d3b9e4ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "Where are the tombs of alumni of ational academy museum and school?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School", "seq": "33,65", "label": "ational academy museum and school"}], "predicate mapping": [], "id": "c1d9d01c89334b408616693a39652284"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Ferrero_SpA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "What beverage was launched by Ferrero SpA?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferrero_SpA", "seq": "30,40", "label": "Ferrero SpA"}], "predicate mapping": [], "id": "c462b0293c354f19b0a5dee22d388534"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Nick_Castle>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies written by Nick Castle?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nick_Castle", "seq": "31,41", "label": "Nick Castle"}], "predicate mapping": [], "id": "b313e3a99d844bfca33d9b8c30f75a34"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV show with Simon Fuller as artist and Fox as the channel ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "22,33", "label": "Simon Fuller"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "49,66", "label": "Fox as the channel"}], "predicate mapping": [], "id": "0f40e662368f43ac9aaa550638105eee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Birmingham>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "How many bands began in Birmingham?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Birmingham", "seq": "24,33", "label": "Birmingham"}], "predicate mapping": [], "id": "5e85a463cae048ce8b509e5c2d31f902"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/property/athletics> ?uri  . }", "question": "How many athletic associations are there in all of the private universities?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Private_university", "seq": "55,74", "label": "private universities"}], "predicate mapping": [], "id": "c4dc2cdbdbc34b52a791cf49139f4a8f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/Todd_J._Campbell> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Which licensee of the WRVU is also the alma mater of the Todd J. Campbell ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/WRVU", "seq": "22,25", "label": "WRVU"}, {"uri": "http://dbpedia.org/resource/Todd_J._Campbell", "seq": "57,72", "label": "Todd J. Campbell"}], "predicate mapping": [], "id": "0cf8b22d4530493c952e2a62d734586c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)> <http://dbpedia.org/property/currency> ?uri} ", "question": "Which currency of Republic of Montenegro is also the currency of the French Southern and Antarctic Lands ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands", "seq": "69,103", "label": "French Southern and Antarctic Lands"}, {"uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)", "seq": "18,39", "label": "Republic of Montenegro"}], "predicate mapping": [], "id": "4ad9c07443804ff09a9ee80a5d61dcac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Marve> <http://dbpedia.org/ontology/school> ?uri } ", "question": "Name the Chris Marve's school ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris_Marve", "seq": "9,19", "label": "Chris Marve"}], "predicate mapping": [], "id": "7acd068884a6483199c2fd7bdd37c988"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which set of researchers won the Gold Medal of the Royal Astronomical Society award?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society", "seq": "33,76", "label": "Gold Medal of the Royal Astronomical Society"}], "predicate mapping": [], "id": "598a034edc2b4ba7b7f9eacf0fad1fb2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/North_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many areas do the networks broadcast, which also broadcasts in North Carolina?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Carolina", "seq": "70,83", "label": "North Carolina"}], "predicate mapping": [], "id": "26d0b20b5e3f4b3bb897f363daa6261f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie whose director of photography is Gregg Toland and Bernard Herrmann was the music composer?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregg_Toland", "seq": "48,59", "label": "Gregg Toland"}, {"uri": "http://dbpedia.org/resource/Bernard_Herrmann", "seq": "65,80", "label": "Bernard Herrmann"}], "predicate mapping": [], "id": "8236caff2da947d6a6cf88099c134f23"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mishal_Raheja> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/New_India_Assurance> <http://dbpedia.org/property/location> ?uri . }", "question": "What city gave birth to Mishal Raheja and also houses New India Assurance?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mishal_Raheja", "seq": "24,36", "label": "Mishal Raheja"}, {"uri": "http://dbpedia.org/resource/New_India_Assurance", "seq": "54,72", "label": "New India Assurance"}], "predicate mapping": [], "id": "38e4c90868ed468b94cb549c579f9b57"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri } ", "question": "What are the awrds won by Laemmle Theatres ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "seq": "26,41", "label": "Laemmle Theatres"}], "predicate mapping": [], "id": "f91b91df9ef746ababdcfebcf269d810"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Kalutara_Electoral_District> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "question": "People of which religion have been the members of parliament, and are from the Kalutara Electoral district?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kalutara_Electoral_District", "seq": "79,105", "label": "Kalutara Electoral district"}], "predicate mapping": [], "id": "d857c581856d4696a3df4d5cff4b538c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name a company with one of the key person as Edwin Catmull and produces RenderMan?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Catmull", "seq": "45,57", "label": "Edwin Catmull"}, {"uri": "http://dbpedia.org/resource/RenderMan_(software)", "seq": "72,80", "label": "RenderMan"}], "predicate mapping": [], "id": "20b709002c9a451f81ac30e30697d54e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.>  . }", "question": "Give me a count of movies distributed by Warner Bros?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros.", "seq": "41,51", "label": "Warner Bros"}], "predicate mapping": [], "id": "7467291024494dcd878d0a375b75d0a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the Fox TV show judged by Rand Jackson ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Randy_Jackson", "seq": "31,42", "label": "Rand Jackson"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "36,42", "label": "Jackson"}], "predicate mapping": [], "id": "89559a4c09794d45b60a14f288fc5403"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "question": "Who owns the broadcast network founded by CNN?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/CNN", "seq": "42,44", "label": "CNN"}], "predicate mapping": [], "id": "1466144570d843389c2cc9e911698213"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "From how many different cities have people gone to the Illinois Fighting Illini men's basketball?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball", "seq": "55,95", "label": "Illinois Fighting Illini men's basketball"}], "predicate mapping": [], "id": "dead53b77d7b4ae3abf6f4198edb05e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Marc-Antoine_Charpentier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show with opening theme as Te Deum and is composed by Marc-Antoine Charpentier?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)", "seq": "47,53", "label": "Te Deum"}, {"uri": "http://dbpedia.org/resource/Marc-Antoine_Charpentier", "seq": "74,97", "label": "Marc-Antoine Charpentier"}], "predicate mapping": [], "id": "d17b83f85f7c433e9f2c91eab0577727"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the name of the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mozambique", "seq": "53,62", "label": "Mozambique"}, {"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "85,114", "label": "North-Western Province, Zambia"}], "predicate mapping": [], "id": "ab1dd6e665cc4025b061eb4a3e83e59f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_215> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Series_30+> }", "question": "Did nokia 215 has the series 30+ OS?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nokia_215", "seq": "4,12", "label": "nokia 215"}, {"uri": "http://dbpedia.org/resource/Series_30+", "seq": "22,31", "label": "series 30+"}], "predicate mapping": [], "id": "d809177595bc45df9d37b6e201e2516a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sampson_Cudjoe> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Ghana> }", "question": "Sampson Cudjoe plays for the Ghana national team?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sampson_Cudjoe", "seq": "0,13", "label": "Sampson Cudjoe"}, {"uri": "http://dbpedia.org/resource/Ghana", "seq": "29,33", "label": "Ghana"}], "predicate mapping": [], "id": "c1a557197361403b93c245a8252279ca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_Premier_League> . ?x <http://dbpedia.org/property/owner> ?uri  . }", "question": "How many owners owned the clubs participating in the Premier leagues of '14?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Premier_League", "seq": "53,67", "label": "Premier leagues"}], "predicate mapping": [], "id": "046dd4f4ca7741639c230165ac321a53"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/CBBC_(TV_channel)> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the producer of the television shows whose channel is CBBC?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/CBBC_(TV_channel)", "seq": "62,65", "label": "CBBC"}], "predicate mapping": [], "id": "09cdda0da032441592256ac3ea5b7206"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "List the interest of the scientists whose one of the field is Chinese poetry ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chinese_poetry", "seq": "62,75", "label": "Chinese poetry"}], "predicate mapping": [], "id": "c9675b3e25a74a45b74ce591e393e65c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri. <http://dbpedia.org/resource/A_Literary_Nightmare> <http://dbpedia.org/ontology/author> ?uri} ", "question": "Which writer of A literary Nightmare also extended the work of The Apple tree ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Apple_Tree", "seq": "63,76", "label": "The Apple tree"}, {"uri": "http://dbpedia.org/resource/A_Literary_Nightmare", "seq": "16,35", "label": "A literary Nightmare"}], "predicate mapping": [], "id": "e1bec9b2a77e46689d40931d5c9ecd63"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joshua_A._Siegel> <http://dbpedia.org/property/education> ?uri } ", "question": "Whihc uni did Joshua A. Siegel attend ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joshua_A._Siegel", "seq": "14,29", "label": "Joshua A. Siegel"}], "predicate mapping": [], "id": "2d2934c87b0e4eefa554db84e9abe251"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/property/licensee> ?uri  . }", "question": "How many licensee are there, of the radio stations whose area is Nashville, Tennessee ?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nashville,_Tennessee", "seq": "65,84", "label": "Nashville, Tennessee"}], "predicate mapping": [], "id": "e6047de588e14bb9881a1af25801803c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . }", "question": "Who has a  child named Lori Black and is resting place as Palo Alto, California?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "seq": "23,32", "label": "Lori Black"}, {"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "seq": "58,78", "label": "Palo Alto, California"}], "predicate mapping": [], "id": "cf382df024a340a4876a4c3651d44937"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/I_Can't_Change_the_World> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }", "question": "Who is the artist of the album which has the song I Can't Change the World ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/I_Can't_Change_the_World", "seq": "50,73", "label": "I Can't Change the World"}], "predicate mapping": [], "id": "62d3a91ca55d4dadbd13109a663caf4b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Point_Blank_Records> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose cast members are signed up with Point Blank Records?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Point_Blank_Records", "seq": "58,76", "label": "Point Blank Records"}], "predicate mapping": [], "id": "8771e72d14ca4063839d6058b825dcde"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4>  . }", "question": "What is the successor of PlayStation 4", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "seq": "25,37", "label": "PlayStation 4"}], "predicate mapping": [], "id": "f71102a3f26440088bc3bb2f7cb2a423"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people are in the band with Juelz Santana?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Juelz_Santana", "seq": "37,49", "label": "Juelz Santana"}], "predicate mapping": [], "id": "cd6d4ee1269f45e89677ac5f6cb06cf3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri } ", "question": "To which series does Lost special belong to ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Lost_Special", "seq": "21,32", "label": "Lost special"}], "predicate mapping": [], "id": "936e49d38fb344b8a243aafc31b75630"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u0110u\u1ed1ng_River> <http://dbpedia.org/ontology/sourceCountry> ?uri  . }", "question": "In which country is the Duong river?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u0110u\u1ed1ng_River", "seq": "24,34", "label": "Duong river"}], "predicate mapping": [], "id": "a39215c00d904d629a2ea30d237281e9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chicken_Run> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List the awards won by the film director of Chicken Run?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicken_Run", "seq": "44,54", "label": "Chicken Run"}], "predicate mapping": [], "id": "1d5d1578a88e4fbcb0dcac66ec5eaac5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Elton_John> }", "question": "Was Elton John a chairman of a Watford FC Season?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season", "seq": "31,47", "label": "Watford FC Season"}, {"uri": "http://dbpedia.org/resource/Elton_John", "seq": "4,13", "label": "Elton John"}], "predicate mapping": [], "id": "bb3db88e042a45719a508ffcb4e0cae4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "Which band's past member are Joe Jonas and Nick Jonas?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Jonas", "seq": "29,37", "label": "Joe Jonas"}, {"uri": "http://dbpedia.org/resource/Nick_Jonas", "seq": "43,52", "label": "Nick Jonas"}], "predicate mapping": [], "id": "f1a9ded56bf842f4bed9125161a8de0b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ", "question": "What is the religious affiliation of Neungin High School?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neungin_High_School", "seq": "37,55", "label": "Neungin High School"}], "predicate mapping": [], "id": "e8726e19e919406eba5bbec57e2e6471"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Empire_of_Atlantium> <http://dbpedia.org/ontology/officialLanguage> ?uri . }", "question": "List the common official language of the ladonia and Empire of Atlantium ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ladonia_(micronation)", "seq": "41,47", "label": "ladonia"}, {"uri": "http://dbpedia.org/resource/Empire_of_Atlantium", "seq": "53,71", "label": "Empire of Atlantium"}], "predicate mapping": [], "id": "66b48fe8be2c4bf3b2ffb8e72ab4b3ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "What is the name of the characters created by Frank Miller?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Miller_(comics)", "seq": "46,57", "label": "Frank Miller"}], "predicate mapping": [], "id": "ae769d3fce084866a06c22f70221aaa8"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Plena> <http://dbpedia.org/property/stylisticOrigins> <http://dbpedia.org/resource/Caribbean> }", "question": "Does the stylistic origins of Plena lie in the Caribbean?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plena", "seq": "30,34", "label": "Plena"}, {"uri": "http://dbpedia.org/resource/Caribbean", "seq": "47,55", "label": "Caribbean"}], "predicate mapping": [], "id": "574ac42d309a4676893b0f1e4f291a36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "question": "From which genres of music did those genres emerge where drums are important?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Drum_kit", "seq": "57,65", "label": "drums are"}], "predicate mapping": [], "id": "52e9a4a2f69e419aa527cd4b5658c783"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri} ", "question": "What is the service of the Laemmle Theatres and is also the award of the Jos Rivera (playwright)?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "seq": "27,42", "label": "Laemmle Theatres"}, {"uri": "http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)", "seq": "73,82", "label": "Jos Rivera"}], "predicate mapping": [], "id": "afda8a6127814c5f8b979c0859dbd3ae"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri} ", "question": "Whci co founder of Sea gayle Music is also the artist of Brad Paisley Discography /", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brad_Paisley_discography", "seq": "57,80", "label": "Brad Paisley Discography"}, {"uri": "http://dbpedia.org/resource/Sea_Gayle_Music", "seq": "19,33", "label": "Sea gayle Music"}], "predicate mapping": [], "id": "ea72af60227b4132a3a71b2eefe30314"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Haiti_I_Am_Sorry> <http://dbpedia.org/ontology/album> ?uri } ", "question": "Whose album is Haiti, I am sorry?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Haiti_I_Am_Sorry", "seq": "15,31", "label": "Haiti, I am sorry"}], "predicate mapping": [], "id": "34b9dabc67ac415fab309f50d5b45687"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }", "question": "In which other places are there companies which are in Ontario, too?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "55,61", "label": "Ontario"}], "predicate mapping": [], "id": "232e6c0e8d57443a9ef659cad042b6d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Kansas_City,_Missouri> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballLeague>}", "question": "What is the american football league whose champion is from Kansas City, Missouri?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kansas_City,_Missouri", "seq": "60,80", "label": "Kansas City, Missouri"}], "predicate mapping": [], "id": "b4b796c110644d17980fe538847023e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }", "question": "Where did the music genre of Harry and the Potters originate?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)", "seq": "29,49", "label": "Harry and the Potters"}], "predicate mapping": [], "id": "0a1b829f8e814abdb18dac4b1b010740"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Boston_Bruins> . ?x <http://dbpedia.org/property/playedFor> ?uri  . }", "question": "For which other teams have the past Boston Bruins members played?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston_Bruins", "seq": "36,48", "label": "Boston Bruins"}], "predicate mapping": [], "id": "3a91f21a1ee04fa5a47b2f2b97a707ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri } ", "question": "Who directed The Haunted House ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "seq": "13,29", "label": "The Haunted House"}], "predicate mapping": [], "id": "246a4b432f5c4660a33367cb504c70d8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "For how many movies are there whose musicians home town is in Volos ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Volos", "seq": "62,66", "label": "Volos"}], "predicate mapping": [], "id": "194f4e5619af43f0a4200140d98ede3b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Laureano_Ibarra> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "question": "Who used to skate with the pupils of Laureano Ibarra?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laureano_Ibarra", "seq": "37,51", "label": "Laureano Ibarra"}], "predicate mapping": [], "id": "ea4ea30b9c3940988dd74494c7903da2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Sarathchandra_Rajakaruna> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "question": "What is the religion of the member of parliament who is a relative of Sarathchandra Rajakaruna?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sarathchandra_Rajakaruna", "seq": "70,93", "label": "Sarathchandra Rajakaruna"}], "predicate mapping": [], "id": "286e3b7df05248f9bcaf081f3a5bfae7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Peter_Dewey> <http://dbpedia.org/ontology/award> ?uri } ", "question": "what awards have been given to A. Peter Dewey?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/A._Peter_Dewey", "seq": "31,44", "label": "A. Peter Dewey"}], "predicate mapping": [], "id": "d0da6ce614904c6f90c0c441e04f16b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What television show is magistrated by Harry Connick, Jr.?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "seq": "39,55", "label": "Harry Connick, Jr"}], "predicate mapping": [], "id": "bd5737093bad479e8cc07b908e5189da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which Texas based company  was founded by Jim Harris ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "seq": "6,10", "label": "Texas"}, {"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "seq": "42,51", "label": "Jim Harris"}], "predicate mapping": [], "id": "5145b69c134f441b869b6d2ae0252731"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/usedInWar> <http://dbpedia.org/resource/American_Indian_Wars> . ?x <http://dbpedia.org/property/origin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "From how many different places did the weapons used in the American Indian wars originate?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Indian_Wars", "seq": "59,78", "label": "American Indian wars"}], "predicate mapping": [], "id": "37572c57bb164aba982b23993acc3b34"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Conowingo_Dam> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "From where does the river start, which flows into the Conowingo dam?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Conowingo_Dam", "seq": "54,66", "label": "Conowingo dam"}], "predicate mapping": [], "id": "f0acd22286c047eabc35b04de1c0c47b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Great_Missenden> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "List all the parents of writers coming from the Great Missenden ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Great_Missenden", "seq": "48,62", "label": "Great Missenden"}], "predicate mapping": [], "id": "df4a8bee85f04e6f8e60dd62c65e104b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/B._J._Crombeen> <http://dbpedia.org/ontology/birthPlace> ?uri . }", "question": "What state has a Brideun School for Exception Children and is the birthplace  of B J Crombeen?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children", "seq": "17,53", "label": "Brideun School for Exception Children"}, {"uri": "http://dbpedia.org/resource/B._J._Crombeen", "seq": "81,92", "label": "B J Crombeen"}], "predicate mapping": [], "id": "6c62c5bf4c4d43f69f7a5d6cdef2cfae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "What is the total number of politicians whose predecessor's deputy is Jenny Macklin?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jenny_Macklin", "seq": "70,82", "label": "Jenny Macklin"}], "predicate mapping": [], "id": "e28b8d50dec442e4afe8782558fdc00f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Oysterhead> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Count all the shows whose music composers are in Oysterhead.", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oysterhead", "seq": "49,58", "label": "Oysterhead"}], "predicate mapping": [], "id": "2712e77ee9714f4e9dc75aee139c947d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri } ", "question": "Which awards have Ingmar Bergman won?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ingmar_Bergman", "seq": "18,31", "label": "Ingmar Bergman"}], "predicate mapping": [], "id": "f107cdaf5a3b4793ad0a9ba36ca5c01c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khok_Kwang> <http://dbpedia.org/ontology/timeZone> ?uri } ", "question": "In which timezone does Khok Kwang lie?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Khok_Kwang", "seq": "23,32", "label": "Khok Kwang"}], "predicate mapping": [], "id": "db74d95d147e42748b823e8d8359a97a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What is the scientist whose PhD students are Erich Bagge and erban ieica?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erich_Bagge", "seq": "45,55", "label": "Erich Bagge"}, {"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "seq": "61,71", "label": "erban ieica"}], "predicate mapping": [], "id": "9f558fd14dc54992bc18d9ff843c24df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "How many bands have members currently playing the Fender Stratocaster?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fender_Stratocaster", "seq": "50,68", "label": "Fender Stratocaster"}], "predicate mapping": [], "id": "ea618d18100f4888910364d1044fe633"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Karu_Jayasuriya> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Ranil_Wickremesinghe> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which country has leaders  Karu Jayasuriya and Ranil Wickremesinghe?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karu_Jayasuriya", "seq": "27,41", "label": "Karu Jayasuriya"}, {"uri": "http://dbpedia.org/resource/Ranil_Wickremesinghe", "seq": "47,66", "label": "Ranil Wickremesinghe"}], "predicate mapping": [], "id": "7f16b2da9f984b398e80a3bf82fdb761"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "List the software which uses Microsoft Windows as their operating system ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "29,45", "label": "Microsoft Windows"}], "predicate mapping": [], "id": "3ebcace84e5747f29673314099a70674"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the deathplace of people who have worked in Ethics?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethics", "seq": "52,57", "label": "Ethics"}], "predicate mapping": [], "id": "2c1770e2d3984893a620a66a628bed5b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many religions have the relatives of waxiangs followed?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waxiang_people", "seq": "41,57", "label": "waxiangs followed"}], "predicate mapping": [], "id": "cdc182cb1086444ba6609878786447ff"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Louis_Chevrolet> <http://dbpedia.org/property/deathPlace> ?uri } ", "question": "Where did Louis chevrolet die ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_Chevrolet", "seq": "10,24", "label": "Louis chevrolet"}], "predicate mapping": [], "id": "32d100aad346478bbb68b3ce1b5a8520"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Crystal_Harris>  . }", "question": "who married crystal harris?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Crystal_Harris", "seq": "12,25", "label": "crystal harris"}], "predicate mapping": [], "id": "13fab3852bd645ef8d7c43e3d10a9d2b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What kind of games does Blizzard games develop?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blizzard_Entertainment", "seq": "24,37", "label": "Blizzard games"}], "predicate mapping": [], "id": "7e638a07671f4e0dbd9a400eac8f5de4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.>  . }", "question": "Who is the parent of FD Roosevelt JR?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.", "seq": "21,35", "label": "FD Roosevelt JR"}], "predicate mapping": [], "id": "7f7c3328eb5b44fd9119c85b39285fbf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri. <http://dbpedia.org/resource/Jeyhun_Abiyev> <http://dbpedia.org/ontology/nationality> ?uri} ", "question": "Which expertise of the Menetries's warbler is the  nationality of the Jeyhun Abiyev ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Menetries's_warbler", "seq": "23,41", "label": "Menetries's warbler"}, {"uri": "http://dbpedia.org/resource/Jeyhun_Abiyev", "seq": "70,82", "label": "Jeyhun Abiyev"}], "predicate mapping": [], "id": "c46c233ae0c14807825928b38649d37e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . }", "question": "In how many places can I find wine made of Vitis vinifera grapes?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "seq": "43,56", "label": "Vitis vinifera"}], "predicate mapping": [], "id": "7c24a58761f249839782415660523ba4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "question": "What have been made in the state whose capital is Boston?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston", "seq": "50,55", "label": "Boston"}], "predicate mapping": [], "id": "e19a8a1f620d417887fabd403a34298e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Name the royalty whose spouse was Cleopatra V of Egypt and one of his parent was Ptolemy XII Auletes?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "seq": "34,53", "label": "Cleopatra V of Egypt"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "seq": "81,99", "label": "Ptolemy XII Auletes"}], "predicate mapping": [], "id": "ae7bd0ded6804ceead902c06ec9b71e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "What is the information appliance whose successor is PlayStation 4 and maker is Foxconn?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "seq": "53,65", "label": "PlayStation 4"}, {"uri": "http://dbpedia.org/resource/Foxconn", "seq": "80,86", "label": "Foxconn"}], "predicate mapping": [], "id": "b7b4af490fc749c39bb8f1aebd991ebd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Guy_(band)> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }", "question": "List all the bands which have members of the band Guy in them?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guy_(band)", "seq": "50,52", "label": "Guy"}], "predicate mapping": [], "id": "f7360f8ebf504cb5977b2fe626623fb6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus", "seq": "79,92", "label": "Marcus Bibulus"}, {"uri": "http://dbpedia.org/resource/Augustus", "seq": "43,50", "label": "Augustus"}], "predicate mapping": [], "id": "6aae7a52e81c4a26b80f5c17943b7857"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhode_Island_Route_15> <http://dbpedia.org/ontology/routeJunction> ?uri. <http://dbpedia.org/resource/Michael_Poulin> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which route junction of the Rhode Island Route 15 is the place of birth of the Michael Poulin?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rhode_Island_Route_15", "seq": "28,48", "label": "Rhode Island Route 15"}, {"uri": "http://dbpedia.org/resource/Michael_Poulin", "seq": "79,92", "label": "Michael Poulin"}], "predicate mapping": [], "id": "98d2e418f14f4bf3ad8a396f172f6166"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name a fictional character whose relative is Uncle Henry and species is Human?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)", "seq": "45,55", "label": "Uncle Henry"}, {"uri": "http://dbpedia.org/resource/Human", "seq": "72,76", "label": "Human"}], "predicate mapping": [], "id": "3e991adbec6041f0a8ff29cbff44f27d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/MapleMusic_Recordings> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which show's theme music composer's label is MapleMusic Recordings?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/MapleMusic_Recordings", "seq": "45,65", "label": "MapleMusic Recordings"}], "predicate mapping": [], "id": "b7cb450c48fe451eb780f8d368eeaab9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "List down the schools whose mascot is an animal from the order of Even toed Ungulates?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bjarne_Stroustrup", "seq": "66,84", "label": "Even toed Ungulates"}], "predicate mapping": [], "id": "0954b94157bc4c35a1bcb0ec0107cb74"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri } ", "question": "What is the draft team of Dale Mitchell (ice hockey) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)", "seq": "26,38", "label": "Dale Mitchell"}], "predicate mapping": [], "id": "8f151cb3f067464695a3b7bb410d7636"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }", "question": "Was the skeleton dance animated by Walt Disney?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "4,21", "label": "the skeleton dance"}, {"uri": "http://dbpedia.org/resource/Walt_Disney", "seq": "35,45", "label": "Walt Disney"}], "predicate mapping": [], "id": "a407d3e2f82d4a51b9e93485af1f0f4f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Leslie_Sanchez> <http://dbpedia.org/ontology/education> ?uri } ", "question": "To which educational institutions did Lesli Sanchez go for her studies?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Leslie_Sanchez", "seq": "38,50", "label": "Lesli Sanchez"}], "predicate mapping": [], "id": "8533f08f0f2e439792341591e3b8d82e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1972_Oakland_Raiders_season> <http://dbpedia.org/ontology/coach> ?uri } ", "question": "Who was the coach of 1972 Oakland Raiders season ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1972_Oakland_Raiders_season", "seq": "21,47", "label": "1972 Oakland Raiders season"}], "predicate mapping": [], "id": "fe62a0c11f31451991b7023a4fd71fae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "What are Jerry Bock's musicals based upon?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Bock", "seq": "9,18", "label": "Jerry Bock"}], "predicate mapping": [], "id": "2e462e329e0c4e94aae619104e268274"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Lee_Hyun-jae> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lee_Hyun-jae", "seq": "37,48", "label": "Lee Hyun Jae"}], "predicate mapping": [], "id": "a4c071295df54e628add12c26e1551d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "How many developers make softwares for Unix like operating systems?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Unix-like", "seq": "39,47", "label": "Unix like"}], "predicate mapping": [], "id": "24bea3e02aac4576a8340dc9d4e933dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the rive whose mouth is located in Limerick and location is Dowra?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Limerick", "seq": "40,47", "label": "Limerick"}, {"uri": "http://dbpedia.org/resource/Dowra", "seq": "65,69", "label": "Dowra"}], "predicate mapping": [], "id": "442be0d7fdb3489890f69cc2e0046f6c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roshan_Ranasinghe> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Nhiek_Tioulong> <http://dbpedia.org/ontology/religion> ?uri} ", "question": "What religion does roshan ranasinghe and nhiek tioulong follow?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roshan_Ranasinghe", "seq": "19,35", "label": "roshan ranasinghe"}, {"uri": "http://dbpedia.org/resource/Nhiek_Tioulong", "seq": "41,54", "label": "nhiek tioulong"}], "predicate mapping": [], "id": "09da33e36b464a00852d478e1a46581d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist who become the part of Royal Society and had academic advisor as Karl Ewald Hasse?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "42,54", "label": "Royal Society"}, {"uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse", "seq": "84,99", "label": "Karl Ewald Hasse"}], "predicate mapping": [], "id": "20ece59a1aa9487bbe525dcba5247d38"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Jean-Marc_Germain> . ?uri <http://dbpedia.org/ontology/mayor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "What is the place where the mayor's wife is Jean-Marc Germain?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean-Marc_Germain", "seq": "44,60", "label": "Jean-Marc Germain"}], "predicate mapping": [], "id": "43d23927b3204b4c9c076cb77e98994a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the religion of the ones in the Kampuchean Union of Salvation?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation", "seq": "40,68", "label": "Kampuchean Union of Salvation"}], "predicate mapping": [], "id": "b71a96db56e8414aba5648ec5935ecf9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "List the employments of people who died in Tampa, Florida.", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tampa,_Florida", "seq": "43,56", "label": "Tampa, Florida"}], "predicate mapping": [], "id": "9e676dc4d1474a5681415891d46a9c4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ", "question": "Which parent organization of GetTV is also the label of next thing ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Next_Thing", "seq": "56,65", "label": "next thing"}, {"uri": "http://dbpedia.org/resource/GetTV", "seq": "29,33", "label": "GetTV"}], "predicate mapping": [], "id": "b17be3d3611b49f3aca5fa4337a2315b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri } ", "question": "List the destination of Novair International Airways ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Novair_International_Airways", "seq": "24,51", "label": "Novair International Airways"}], "predicate mapping": [], "id": "f8a314a604de4c88b0f8ed83a5bfb2b4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Basketball_Association> <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "How many states are in the Mediterranean Basketball Association?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Basketball_Association", "seq": "27,62", "label": "Mediterranean Basketball Association"}], "predicate mapping": [], "id": "90be0811add84e5aa9984db40fcee9db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the ethnicity of the people working for the Philippines house of representatives?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines", "seq": "64,87", "label": "house of representatives"}], "predicate mapping": [], "id": "d6802f1090fc42088479f3a1897fa6f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/United_States_Department_of_the_Interior> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name some people who are buried in a place governed by the US Department of the Interior?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Interior", "seq": "43,87", "label": "governed by the US Department of the Interior"}], "predicate mapping": [], "id": "b18bcd6d7ea84ac59cb76d3a3683c33e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose subsequent work is Frasier and opening theme is Where Everybody Knows Your Name?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "seq": "50,56", "label": "Frasier"}, {"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "seq": "79,109", "label": "Where Everybody Knows Your Name"}], "predicate mapping": [], "id": "a91c0aba4eef49c387ca0f4df2ce1ae2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri} ", "question": "What things canonized John of Damascus and and also venerated the Edwin of Northumbria ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_of_Damascus", "seq": "22,37", "label": "John of Damascus"}, {"uri": "http://dbpedia.org/resource/Edwin_of_Northumbria", "seq": "66,85", "label": "Edwin of Northumbria"}], "predicate mapping": [], "id": "78468cadef404a5682645a749efce5c7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Josh_Bell_(gridiron_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "question": "Where is the football team located in which Josh Bell did his debut?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Bell_(gridiron_football)", "seq": "44,52", "label": "Josh Bell"}], "predicate mapping": [], "id": "aef9c51a69964e5596910348107d8ba5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . }", "question": "Who was engaged in wars of Fort Gadsden and Fort Barrancas?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Gadsden", "seq": "27,38", "label": "Fort Gadsden"}, {"uri": "http://dbpedia.org/resource/Fort_Barrancas", "seq": "44,57", "label": "Fort Barrancas"}], "predicate mapping": [], "id": "d100a042da084c23a4942886d7281e88"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Royal_Thai_Army> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "List the religions of the commanders of Royal Thai Army.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "seq": "40,54", "label": "Royal Thai Army"}], "predicate mapping": [], "id": "a8f0871a3d594450b08d3676964a27ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Haqqi_al-Azm> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "question": "The president served by Haqqi al-Azm died where?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Haqqi_al-Azm", "seq": "24,35", "label": "Haqqi al-Azm"}], "predicate mapping": [], "id": "13eb5beca6db42d2a2351fbc774d97f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are some awards given to people who were born in sweden?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sweden", "seq": "54,59", "label": "sweden"}], "predicate mapping": [], "id": "e87064d2456145b1b5a0bfc1703d439c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder who was married to Dolley Madison and has resting palce as Montpelier ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "42,55", "label": "Dolley Madison"}, {"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "seq": "82,91", "label": "Montpelier"}], "predicate mapping": [], "id": "39a0e27d0c5e43f9816a5cea3a37ea80"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hard_Candy_Fitness> <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Moscow> }", "question": "Is Hard Candy Fitness one of the divisions of Moscow?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hard_Candy_Fitness", "seq": "3,20", "label": "Hard Candy Fitness"}, {"uri": "http://dbpedia.org/resource/Moscow", "seq": "46,51", "label": "Moscow"}], "predicate mapping": [], "id": "1abffd197c8c4787bef810c59eec010f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Latania_verschaffeltii> <http://dbpedia.org/property/binomialAuthority> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are the awards won by the person who is an authority of Latania verschaffeltii ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Latania_verschaffeltii", "seq": "61,82", "label": "Latania verschaffeltii"}], "predicate mapping": [], "id": "6ac4a7bdfb6c4d5fb1e936da0dd3818f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_Lumia_830> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_Phone_8.1> }", "question": "Is WP 8.1 the OS on Lumia 830?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nokia_Lumia_830", "seq": "17,28", "label": "on Lumia 830"}, {"uri": "http://dbpedia.org/resource/Windows_Phone_8.1", "seq": "0,8", "label": "Is WP 8.1"}], "predicate mapping": [], "id": "cdc804731f0b4931b6ee149e92fc807f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ", "question": "Which parent comapny of hypnotize Minds is the label of the Producers , a 2005 film ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hypnotize_Minds", "seq": "24,38", "label": "hypnotize Minds"}, {"uri": "http://dbpedia.org/resource/The_Producers_(2005_film)", "seq": "56,68", "label": "the Producers"}], "predicate mapping": [], "id": "136a14b3127e45c89da289d979fa67a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which companies make cars with a front engine, rear wheel drive layout?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout", "seq": "33,69", "label": "front engine, rear wheel drive layout"}], "predicate mapping": [], "id": "4930ac422c3a46878641b26e4911c9fd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Name the software whose operating system is Mac OS and programming language is C++ ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "44,49", "label": "Mac OS"}, {"uri": "http://dbpedia.org/resource/C++", "seq": "79,81", "label": "C++"}], "predicate mapping": [], "id": "fc12f11fa89b4928bf724ad752ba67f7"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Polet_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Moscow> }", "question": "Do the polet airlines fly to moscow?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Polet_Airlines", "seq": "7,20", "label": "polet airlines"}, {"uri": "http://dbpedia.org/resource/Moscow", "seq": "29,34", "label": "moscow"}], "predicate mapping": [], "id": "3f46fda15bf14f0fab5297341e258dce"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fred_Claus> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> }", "question": "Is Trevor Peacock the narrator of Fred Claus?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fred_Claus", "seq": "34,43", "label": "Fred Claus"}, {"uri": "http://dbpedia.org/resource/Trevor_Peacock", "seq": "3,16", "label": "Trevor Peacock"}], "predicate mapping": [], "id": "6d534a6445c944a68ed033f2e18b64a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jan_Paulsen> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }", "question": "In which state is the alma matter of Jan Paulsen located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jan_Paulsen", "seq": "37,47", "label": "Jan Paulsen"}], "predicate mapping": [], "id": "7043c42bf9fc41418bf7fce82a3ed8f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "question": "Name some islands in a pacific archipelago?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pacific_Ocean", "seq": "23,41", "label": "pacific archipelago"}], "predicate mapping": [], "id": "498b80ad7a3e404aa8127f73d757f44d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Saint_Petersburg>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "List few authors whose education took place in Saint Petersburg ?   ", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Petersburg", "seq": "47,62", "label": "Saint Petersburg"}], "predicate mapping": [], "id": "4512ce93850d4a7d9ab2ade188c279c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> } ", "question": "What all are written in the C programming language?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/C_(programming_language)", "seq": "28,27", "label": ""}], "predicate mapping": [], "id": "c08136b5c371483aa23d66de3825c01e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the producer of the TV shows whose company is HBO.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "51,53", "label": "HBO"}], "predicate mapping": [], "id": "e8ac868bdcc144fdaf15f23486f90d11"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Warren_Magnuson> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "What is the alma mater of the senator who is the successor of Warren Magnuson ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warren_Magnuson", "seq": "62,76", "label": "Warren Magnuson"}], "predicate mapping": [], "id": "e768b113972d46d2bdb465a06d6051cc"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Million_Dollar_Traders> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Andrew_Lincoln> }", "question": "Is Andrew Lincoln the narrator of Million Dollar Traders?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Million_Dollar_Traders", "seq": "34,55", "label": "Million Dollar Traders"}, {"uri": "http://dbpedia.org/resource/Andrew_Lincoln", "seq": "3,16", "label": "Andrew Lincoln"}], "predicate mapping": [], "id": "2087fc4decb740e28f5e56190e001c68"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blytheville_High_School> <http://dbpedia.org/property/mascot> ?uri } ", "question": "What is the mascot of Blytheville High School ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blytheville_High_School", "seq": "22,44", "label": "Blytheville High School"}], "predicate mapping": [], "id": "9aa8b71692cb45da98f3100dd56685da"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Budapest> . ?x <http://dbpedia.org/ontology/operator> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}", "question": "List all the operators of the train who operates in Budapest ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Budapest", "seq": "52,59", "label": "Budapest"}], "predicate mapping": [], "id": "89063b059c9e4f5cb713b5e0ef36cbae"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A", "seq": "60,92", "label": "2012 Campeonato Brasileiro Srie A"}], "predicate mapping": [], "id": "4ae8d48e900b4769ada16d476c81dd95"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alan_Jouban> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Eddie_Bravo> }", "question": "Is Eddie Bravo the trainer of Alan Jouban", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alan_Jouban", "seq": "30,40", "label": "Alan Jouban"}, {"uri": "http://dbpedia.org/resource/Eddie_Bravo", "seq": "3,13", "label": "Eddie Bravo"}], "predicate mapping": [], "id": "bdb4b59b7f0f4610ada06b93495ffab9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri } ", "question": "What is the content licence of MSX BASIC ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/MSX_BASIC", "seq": "31,39", "label": "MSX BASIC"}], "predicate mapping": [], "id": "7c77b492d45c40f48e4c4c0ffeaac619"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/ingredient> ?uri  . }", "question": "What are some common ingredients used in Swedish dishes?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sweden", "seq": "41,47", "label": "Swedish"}], "predicate mapping": [], "id": "9e3cdcb6a0ab41209cdec09a9cecab0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }", "question": "Where did the genres originate, which were in the Harry and the Potters album?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)", "seq": "50,70", "label": "Harry and the Potters"}], "predicate mapping": [], "id": "3f3d04c8667041c0a30da802ecd4cd40"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/property/outflow> ?uri } ", "question": "Into which water bodies does Lake Uniamsi outflow?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si", "seq": "29,40", "label": "Lake Uniamsi"}], "predicate mapping": [], "id": "694ed5abdd6e48908b2a1eadf548813c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Peter_Cosgrove> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "What is the mascot of the army unit whose commander is Peter Cosgrove ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Cosgrove", "seq": "55,68", "label": "Peter Cosgrove"}], "predicate mapping": [], "id": "3a6065b0d3374ad382b91a31b16c0214"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . }", "question": "Whose former teams are Indianapolis Colts and Carolina Panthers?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indianapolis_Colts", "seq": "23,40", "label": "Indianapolis Colts"}, {"uri": "http://dbpedia.org/resource/Carolina_Panthers", "seq": "46,62", "label": "Carolina Panthers"}], "predicate mapping": [], "id": "ee9a79ff6f624c548c57639e0b00a2ba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river with mouth palce Essex and source place as Gloucestershire ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Essex", "seq": "32,36", "label": "Essex"}, {"uri": "http://dbpedia.org/resource/Gloucestershire", "seq": "58,72", "label": "Gloucestershire"}], "predicate mapping": [], "id": "42720fe503074225907ca0ab400f8ef7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/John_Douglas_(conductor)> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Who was the narrator of the show who's music is composed by John Douglas?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Douglas_(conductor)", "seq": "60,71", "label": "John Douglas"}], "predicate mapping": [], "id": "47a9d2054379462e850aecdccb4a114c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Egyptian_Open> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "Where was the current champion of Egyptian Open born ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Egyptian_Open", "seq": "34,46", "label": "Egyptian Open"}], "predicate mapping": [], "id": "53d26ee8082c40af9e43661837f30042"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }", "question": "Was Castillo discovered by Galileo?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Callisto_(moon)", "seq": "27,33", "label": "Galileo"}, {"uri": "http://dbpedia.org/resource/Galileo_Galilei", "seq": "27,33", "label": "Galileo"}], "predicate mapping": [], "id": "390bec142f5a4354a4a0d47a64474646"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Paul_Hausser> . ?x <http://dbpedia.org/property/notableCommanders> ?uri  . }", "question": "What are the notable commanders of the army  whose one of the notable commanders is Paul Hausser?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Hausser", "seq": "84,95", "label": "Paul Hausser"}], "predicate mapping": [], "id": "f2c55f3eb1904df9badfcabff21ca4df"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Plymouth_University> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Who are the chancellors of universities which is affiliated with Plymouth University?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_University", "seq": "65,83", "label": "Plymouth University"}], "predicate mapping": [], "id": "7877e775ed9e4c52a16d8b95104db714"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri} ", "question": "What common relegion affiliation exists for udit Raj and Wickramabahu Central College ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Udit_Raj", "seq": "44,51", "label": "udit Raj"}, {"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "seq": "57,84", "label": "Wickramabahu Central College"}], "predicate mapping": [], "id": "99518f87aadb4ffdbc84a7b46b300383"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Name the console whose successor is PlayStation 4 and predecessor is PlayStation 2?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "seq": "36,48", "label": "PlayStation 4"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "seq": "69,81", "label": "PlayStation 2"}], "predicate mapping": [], "id": "ac50f52a09154c0483346c70133cd0e4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ", "question": "What are the common sports played by jamiatu Muslim mindanao and Polytechnic University of Philippines Taguig ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "37,59", "label": "jamiatu Muslim mindanao"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "seq": "65,108", "label": "Polytechnic University of Philippines Taguig"}], "predicate mapping": [], "id": "a8c90d3cb9594f2f9b76123cc4272062"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Among the countries using Aureus as currency which had Nicomedia as an important place ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nicomedia", "seq": "55,63", "label": "Nicomedia"}, {"uri": "http://dbpedia.org/resource/Aureus", "seq": "26,31", "label": "Aureus"}], "predicate mapping": [], "id": "7521f2b548c742bc847175d5bb599556"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "British people have edited which movies?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Kingdom", "seq": "20,38", "label": "edited which movies"}], "predicate mapping": [], "id": "d19c3af9ab8340149565596d32439a0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rudolf_Kirchschl\u00e4ger> <http://dbpedia.org/property/chancellor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Where did chancellor served by Rudolf Kirchschlger die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rudolf_Kirchschl\u00e4ger", "seq": "31,49", "label": "Rudolf Kirchschlger"}], "predicate mapping": [], "id": "fa1d8082a8614af189cc4ca0b03b8375"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Candice_Michelle> <http://dbpedia.org/ontology/trainer> ?uri } ", "question": "Who are the trainersof Candice Michelle?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Candice_Michelle", "seq": "23,38", "label": "Candice Michelle"}], "predicate mapping": [], "id": "1f783e93f3d8452c965e50e42f038ada"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Sony> }", "question": "Does StandBy records distribute via Sony?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/StandBy_Records", "seq": "5,19", "label": "StandBy records"}, {"uri": "http://dbpedia.org/resource/Sony", "seq": "36,39", "label": "Sony"}], "predicate mapping": [], "id": "936c843de8c64610be0e8c6e2bbfce06"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Jessi_Colter> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Name the music artist which collaborated with the spouse of Jessi Colter?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jessi_Colter", "seq": "60,71", "label": "Jessi Colter"}], "predicate mapping": [], "id": "de9a66a3c88149bf89b74795d1fb60b8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri. <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri} ", "question": "Which notable commanders of the Army Group Oberrhein (Germany) is the  leader of the Kriminalpolizei?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)", "seq": "32,51", "label": "Army Group Oberrhein"}, {"uri": "http://dbpedia.org/resource/Kriminalpolizei", "seq": "85,99", "label": "Kriminalpolizei"}], "predicate mapping": [], "id": "5c71304648b546e691fb6b41fbe5fa5d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }", "question": "Who is the prime minister of the successor of Kingsley Wood?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingsley_Wood", "seq": "46,58", "label": "Kingsley Wood"}], "predicate mapping": [], "id": "5b0935d4611b417b8cf6c43cffce6ccc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Roger_Waters> } ", "question": "which band was Roger waters in?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roger_Waters", "seq": "15,26", "label": "Roger waters"}], "predicate mapping": [], "id": "b3398e30fff34e49a28ba477ae3090e9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/USS_Marmora_(IX-189)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }", "question": "Is Seattle the Ship builder of USS Marmora (IX-189)?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/USS_Marmora_(IX-189)", "seq": "31,41", "label": "USS Marmora"}, {"uri": "http://dbpedia.org/resource/Seattle", "seq": "3,9", "label": "Seattle"}], "predicate mapping": [], "id": "882175c3e40a4de0a704ef91c54d2371"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri } ", "question": "What is the region of Kim Sawchuk ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kim_Sawchuk", "seq": "22,32", "label": "Kim Sawchuk"}], "predicate mapping": [], "id": "ad99cf1513714c3ebe054b74c3f26900"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Grand_National> . ?x <http://dbpedia.org/ontology/colour> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "question": "Which colored race horses have won the Grand National?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grand_National", "seq": "39,52", "label": "Grand National"}], "predicate mapping": [], "id": "ba5a1a29c5a042d39b6d9df1fd0da2b2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Amanda_Reddin> }", "question": "Was Beth Tweddle primarily coached by Amanda Reddin?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beth_Tweddle", "seq": "4,15", "label": "Beth Tweddle"}, {"uri": "http://dbpedia.org/resource/Amanda_Reddin", "seq": "38,50", "label": "Amanda Reddin"}], "predicate mapping": [], "id": "ecbf7d5515694a71a3cf386bf6863cef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the television show whose judges is Randy Jackson?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Randy_Jackson", "seq": "44,56", "label": "Randy Jackson"}], "predicate mapping": [], "id": "9093d0d6f2a342f4933ca945615cc566"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Middleton> } ", "question": "What is the Band whose band member is Mark Middleton?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Middleton", "seq": "38,51", "label": "Mark Middleton"}], "predicate mapping": [], "id": "5c476257c7ae4f8c8fb4b061667cb773"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Mark_Twain> }", "question": "Was the cover of The adventures of Tom Sawyer designed by Mark Twain?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "seq": "17,44", "label": "The adventures of Tom Sawyer"}, {"uri": "http://dbpedia.org/resource/Mark_Twain", "seq": "58,67", "label": "Mark Twain"}], "predicate mapping": [], "id": "a47cf69b01104a72acb249b101f2746a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/William_Eustis> <http://dbpedia.org/property/president> ?uri} ", "question": "Which president of William Eustus also married to Dolley Madison ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "50,63", "label": "Dolley Madison"}, {"uri": "http://dbpedia.org/resource/William_Eustis", "seq": "19,32", "label": "William Eustus"}], "predicate mapping": [], "id": "67893530f30a49dd87e36373d1642717"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Chadwick> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> }", "question": "Is Charles Drummond Ellis a doctoral student of James Chadwick?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Chadwick", "seq": "48,61", "label": "James Chadwick"}, {"uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis", "seq": "3,24", "label": "Charles Drummond Ellis"}], "predicate mapping": [], "id": "fd60b1d920e4435cbfbbe74a8631fde0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Arabian_Peninsula>  . }", "question": "How many kings and queens have died in the Arabian Peninsula?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arabian_Peninsula", "seq": "43,59", "label": "Arabian Peninsula"}], "predicate mapping": [], "id": "7d16db5ff7dc4f1d820159cb7b83bff8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name a movie with actor as Momoko Kchi and music by Akira Ifukube?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Momoko_K\u014dchi", "seq": "27,37", "label": "Momoko Kchi"}, {"uri": "http://dbpedia.org/resource/Akira_Ifukube", "seq": "52,64", "label": "Akira Ifukube"}], "predicate mapping": [], "id": "253d1d8095684756951584ec0a0a37f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . }", "question": "Who are relatives of Ozzy Osbourne and Kelly Osbourne?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ozzy_Osbourne", "seq": "21,33", "label": "Ozzy Osbourne"}, {"uri": "http://dbpedia.org/resource/Kelly_Osbourne", "seq": "39,52", "label": "Kelly Osbourne"}], "predicate mapping": [], "id": "6cb6c4470ec840f9990494c4ecebca5f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri } ", "question": "What is the purpose of New Zealand Chess Federation ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation", "seq": "23,50", "label": "New Zealand Chess Federation"}], "predicate mapping": [], "id": "090ae66d24e0419186f917e055d026fd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Normal_Park_branch_(CTA)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . }", "question": "Who manages the operator of Norman Park Branch, CTA?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Normal_Park_branch_(CTA)", "seq": "28,45", "label": "Norman Park Branch"}], "predicate mapping": [], "id": "182f0bed84d84af2a38a3d2bf40a2c8f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the HBO TV show written by Erik jendresen  ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "9,11", "label": "HBO"}, {"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "32,45", "label": "Erik jendresen"}], "predicate mapping": [], "id": "1e202ff4ce8c40f18dcb98e39e8c43ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eddie_Anderson_(safety)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Joe_Porter_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri . }", "question": "What team did Joe Porter and Eddie Anderson play for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eddie_Anderson_(safety)", "seq": "29,42", "label": "Eddie Anderson"}, {"uri": "http://dbpedia.org/resource/Joe_Porter_(American_football)", "seq": "14,23", "label": "Joe Porter"}], "predicate mapping": [], "id": "69daf7da0c5a44ba8f6817c0af2e11d5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri} ", "question": "Whay common comic is written by Karakuri Dji Ultimo and narrated by The Incredible Hulk ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "seq": "32,50", "label": "Karakuri Dji Ultimo"}, {"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "seq": "68,86", "label": "The Incredible Hulk"}], "predicate mapping": [], "id": "b08465bc7133422a9c0a2a1e3ee38e99"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose director of photography is Jordan Cronenweth?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "53,69", "label": "Jordan Cronenweth"}], "predicate mapping": [], "id": "eb7991936f3c4df097078005049ad9ba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }", "question": "Under which presidents have politicians from the Continental army served?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "seq": "49,64", "label": "Continental army"}], "predicate mapping": [], "id": "6d387f343a844da58776ae70a4a4f621"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/format> <http://dbpedia.org/resource/Religion> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "Which city has radio stations which are Religious ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Religion", "seq": "40,48", "label": "Religious"}], "predicate mapping": [], "id": "309643fac5534e289bcc36c1b3e52d85"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Mississippi> . ?uri <http://dbpedia.org/ontology/producer> ?x  . }", "question": "Producers of what have died in Mississippi?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mississippi", "seq": "31,41", "label": "Mississippi"}], "predicate mapping": [], "id": "774e4d5e2f154ce18749dbfff09b87aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Fort_Lauderdale,_Florida> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "question": "Those seasons which have been played in Fort Lauderdale Florida now host their games where?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Lauderdale,_Florida", "seq": "40,62", "label": "Fort Lauderdale Florida"}], "predicate mapping": [], "id": "8f8b8d845595448aad675853ecea23b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "How many universities are there whose country's capital is Oslo?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oslo", "seq": "59,62", "label": "Oslo"}], "predicate mapping": [], "id": "f9e263fc8d484333938c1f47c1e37aef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Name some sports played in institutions of Maharashtra?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra", "seq": "43,53", "label": "Maharashtra"}], "predicate mapping": [], "id": "2d2f1781e9df41a58d97a8ebce31bb6b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Colorado_Avalanche> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "Current players of Colorado Avalanche have previously played for how many different teams?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorado_Avalanche", "seq": "19,36", "label": "Colorado Avalanche"}], "predicate mapping": [], "id": "05e132cfe14a4f008e5be637c21deb07"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2658_Gingerich> <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Harvard_College> }", "question": "Was 2658 Gingerich invented in Harvard?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/2658_Gingerich", "seq": "4,17", "label": "2658 Gingerich"}, {"uri": "http://dbpedia.org/resource/Harvard_College", "seq": "31,37", "label": "Harvard"}], "predicate mapping": [], "id": "2c39c59a5b3d4c15844b34930828326b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many other people are in a band with Robert de Niro?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_De_Niro", "seq": "41,54", "label": "Robert de Niro"}], "predicate mapping": [], "id": "778761d04bb14ee8b90d1cbf954322e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Boston_Red_Sox> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who created the stadiums who have been rented by the Boston Red Sox?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston_Red_Sox", "seq": "53,66", "label": "Boston Red Sox"}], "predicate mapping": [], "id": "44c72a38f8a2482989ab8b73f5f9977c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Canberra> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "What is the mascot of the unit whose garrison is Canberra ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canberra", "seq": "49,56", "label": "Canberra"}], "predicate mapping": [], "id": "c432ff2350b742d69c0e43d801ee643a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Karinga_Bay> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "Horses sired by Karinga Bay have participated in which races?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karinga_Bay", "seq": "16,26", "label": "Karinga Bay"}], "predicate mapping": [], "id": "c5daa94158494f458cac5372dfc1da23"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Think_(journal)> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Philosophy> }", "question": "Is Philosophy the academic discipline of Think (journal)?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Think_(journal)", "seq": "41,45", "label": "Think"}, {"uri": "http://dbpedia.org/resource/Philosophy", "seq": "3,12", "label": "Philosophy"}], "predicate mapping": [], "id": "232b47d723104bf9af52c6a454123647"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Robert_Morris_Colonials_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "What is the highschool of the american football player who joined the Robert Morris Colonials program?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Morris_Colonials_football", "seq": "70,100", "label": "Robert Morris Colonials program"}], "predicate mapping": [], "id": "a3a7404dd7e4412aa9a0da42b4e489a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/La_Liga> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "Which clubs play in the La Liga?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/La_Liga", "seq": "24,30", "label": "La Liga"}], "predicate mapping": [], "id": "a28559e7c5e648058bc88bb93a29336b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Buckinghamshire> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Who are the parents of writers born and bred in Buckinghamshire?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Buckinghamshire", "seq": "48,62", "label": "Buckinghamshire"}], "predicate mapping": [], "id": "ea111f49ee134bee8e906c9bab84430f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Timoteo_Jeffries> . ?x <http://dbpedia.org/property/format> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioProgram>}", "question": "What is the radio show created by Timoteo Jeffries, about?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timoteo_Jeffries", "seq": "34,49", "label": "Timoteo Jeffries"}], "predicate mapping": [], "id": "a656fb53970e4e36b7c254c35ee31be6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Who is associated  with the musical artists from Africa '70 (band) and Tony Allen ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Africa_'70_(band)", "seq": "49,58", "label": "Africa '70"}, {"uri": "http://dbpedia.org/resource/Tony_Allen_(musician)", "seq": "71,80", "label": "Tony Allen"}], "predicate mapping": [], "id": "6b86496784934d179425226207e28786"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "How many religions are followed by the group whose architectural style can be seen on Sanggar Agung?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanggar_Agung", "seq": "86,98", "label": "Sanggar Agung"}], "predicate mapping": [], "id": "bdf0f42af4d0461c8f39f953143086ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Nick_Williams> . ?x <http://dbpedia.org/ontology/relative> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}", "question": "What are the relatives of the rugby player one of whose relatives is Nick Williams?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nick_Williams", "seq": "69,81", "label": "Nick Williams"}], "predicate mapping": [], "id": "ff16998e9b6149ce8df83c8403a1295b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Michigan> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "question": "Name the other wine region of the grapes whose one of the wine region is Michigan?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan", "seq": "73,80", "label": "Michigan"}], "predicate mapping": [], "id": "133932cb0d5041d89b82a8f25c8ac2fd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/If_We_Were_a_Movie> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows' opening themes was used to make If We Were a Movie?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/If_We_Were_a_Movie", "seq": "45,62", "label": "If We Were a Movie"}], "predicate mapping": [], "id": "db7bce6fd45745b7833bc9aa702dc2f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/History_of_Penny_Arcade_Expo> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/property/address> ?uri  . }", "question": "Where is the venue of the History of Penny Arcade Expo located?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/History_of_Penny_Arcade_Expo", "seq": "26,53", "label": "History of Penny Arcade Expo"}], "predicate mapping": [], "id": "8f2e16d375b7408da4f7f573d9c76b79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which European Broadcasting Union's TV show has opening theme as Te Deum ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Broadcasting_Union", "seq": "6,32", "label": "European Broadcasting Union"}, {"uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)", "seq": "65,71", "label": "Te Deum"}], "predicate mapping": [], "id": "fa67ea0509064e84a85b05bc03108e02"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Karachi> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which companies makes cars assembled in Karachi, Pakistan?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karachi", "seq": "40,46", "label": "Karachi"}], "predicate mapping": [], "id": "4790db09b5954a87831e282bd16265df"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri} ", "question": "Who is the president of Carl Stokes nad Wyche Fowler ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Stokes", "seq": "24,34", "label": "Carl Stokes"}, {"uri": "http://dbpedia.org/resource/Wyche_Fowler", "seq": "40,51", "label": "Wyche Fowler"}], "predicate mapping": [], "id": "70bd3dd28bb14512abce694bb6240c86"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GeneWeb> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> }", "question": "Does GeneWeb have the GPL license?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/GeneWeb", "seq": "5,11", "label": "GeneWeb"}, {"uri": "http://dbpedia.org/resource/GNU_General_Public_License", "seq": "22,32", "label": "GPL license"}], "predicate mapping": [], "id": "97e02dcf44aa43c1b7cc7a7c155b118f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_B\u00fchler> <http://dbpedia.org/ontology/occupation> ?uri } ", "question": "Josef Bhler belongs to which political party?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josef_B\u00fchler", "seq": "0,10", "label": "Josef Bhler"}], "predicate mapping": [], "id": "e91a205c78b6436ca52191e1516ec883"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations>  . }", "question": "Name the famous employee of open society foundations ?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Open_Society_Foundations", "seq": "28,51", "label": "open society foundations"}], "predicate mapping": [], "id": "dc5442f9638d4d3a877e6926914c08db"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sigma_TV> <http://dbpedia.org/property/headquarters> ?uri } ", "question": "Where is the headquarters of Sigma TV", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sigma_TV", "seq": "29,36", "label": "Sigma TV"}], "predicate mapping": [], "id": "5fa7af236eac494f8047e5fd87a4c812"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lumbini_Bauddha_University> <http://dbpedia.org/property/affiliation> ?uri } ", "question": "What is the affiliation of Lumbini Bauddha University ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lumbini_Bauddha_University", "seq": "27,52", "label": "Lumbini Bauddha University"}], "predicate mapping": [], "id": "0bac079708b34f219b751ade453305f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Red_hair> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "question": "What are the death place of the models whose hair color was Red?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_hair", "seq": "39,48", "label": "whose hair"}], "predicate mapping": [], "id": "ca0e18eaf79141309cd329cbfcbe0c99"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Boundary_Dam> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which city amongst the one which belongs to Boundary Dam was the palce for Soccer Bowl '76 ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Soccer_Bowl_'76", "seq": "75,89", "label": "Soccer Bowl '76"}, {"uri": "http://dbpedia.org/resource/Boundary_Dam", "seq": "44,55", "label": "Boundary Dam"}], "predicate mapping": [], "id": "32ca4c843ccc459ab2750036206e7aa0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England> } ", "question": "What are the beverages whose origin is England?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "39,45", "label": "England"}], "predicate mapping": [], "id": "9f6c919d926a4f7d953fbb687036e0df"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Stilwell> <http://dbpedia.org/ontology/opponent> ?uri } ", "question": "List down the opponents of Frank Stilwell?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Stilwell", "seq": "27,40", "label": "Frank Stilwell"}], "predicate mapping": [], "id": "581ca8f786c64d5a986ef8d22049dc1f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri } ", "question": "What is the label of I Pray on Christmas ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/I_Pray_on_Christmas", "seq": "21,39", "label": "I Pray on Christmas"}], "predicate mapping": [], "id": "97e6ac7f9f4e4ae4851eb5a188d00241"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri . }", "question": "Which company owns GetTV and Hypnotize minds ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/GetTV", "seq": "19,23", "label": "GetTV"}, {"uri": "http://dbpedia.org/resource/Hypnotize_Minds", "seq": "29,43", "label": "Hypnotize minds"}], "predicate mapping": [], "id": "3d239bb3a5c14dd59a0f32a7623929e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "question": "How many subjects are covered in the publications of Doubleday?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doubleday_(publisher)", "seq": "53,61", "label": "Doubleday"}], "predicate mapping": [], "id": "557e9d5fa7a8436e80e24ed1e0e80825"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "Miguel de Cervantes wrote the musical extended from which book?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miguel_de_Cervantes", "seq": "0,18", "label": "Miguel de Cervantes"}], "predicate mapping": [], "id": "39eeccfe288b4fc78a5dcd44386e7255"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Olyokma_River> }", "question": "Is Olyokma River the right tributary of Lena River?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lena_River", "seq": "40,49", "label": "Lena River"}, {"uri": "http://dbpedia.org/resource/Olyokma_River", "seq": "3,15", "label": "Olyokma River"}], "predicate mapping": [], "id": "1e980d04cc974b8bb501dffbdfd46d82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/UCLA_Bruins_football> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GridironFootballPlayer>}", "question": "What is the debut team of the football player whose college is UCLA Bruins football?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/UCLA_Bruins_football", "seq": "63,82", "label": "UCLA Bruins football"}], "predicate mapping": [], "id": "1d66893d65934df1a71cb539b5a178c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Park_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}", "question": "What is the capital of the region which maintains the South Park Bridge ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Park_Bridge", "seq": "54,70", "label": "South Park Bridge"}], "predicate mapping": [], "id": "ba0406c42bb74f8994649087db84bd7f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Colonial_troops> . ?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> . }", "question": "Who has military branches are Colonial troops and Continental Army?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonial_troops", "seq": "30,44", "label": "Colonial troops"}, {"uri": "http://dbpedia.org/resource/Continental_Army", "seq": "50,65", "label": "Continental Army"}], "predicate mapping": [], "id": "ed50cb6eb3d440e1a68c9f8eb6137382"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri  . }", "question": "In how many places has Don R. Berlin worked?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Don_R._Berlin", "seq": "23,35", "label": "Don R. Berlin"}], "predicate mapping": [], "id": "dc505bf849494cc0881eef0dc15f5ab4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Heinrich_Himmler> }", "question": "Was Heinrich Himmler ever a commanders of Army Group Oberrhein?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)", "seq": "42,61", "label": "Army Group Oberrhein"}, {"uri": "http://dbpedia.org/resource/Heinrich_Himmler", "seq": "4,19", "label": "Heinrich Himmler"}], "predicate mapping": [], "id": "cda67731753944ec9a75a63be0f893a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the company whose one of the key person is Dennis Muilenburg and produces Boeing CH-47 Chinook ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "seq": "51,67", "label": "Dennis Muilenburg"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "seq": "82,101", "label": "Boeing CH-47 Chinook"}], "predicate mapping": [], "id": "6ab4e15a8b7248ebb8cb2c41358e0f2a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri } ", "question": "Name the cause of death of Martino Martini ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martino_Martini", "seq": "27,41", "label": "Martino Martini"}], "predicate mapping": [], "id": "278a4dae43ef4c9b888aaf3f0516d0a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "question": "What is the stylistic origin of the music genres where the Bass guitar is important?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bass_guitar", "seq": "59,69", "label": "Bass guitar"}], "predicate mapping": [], "id": "d107d84c4eaf43c4bb51b0825ae31b0c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri } ", "question": "What is the label of Next Thing ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Next_Thing", "seq": "21,30", "label": "Next Thing"}], "predicate mapping": [], "id": "c577d7b031fc49db89aed6ce9019e62b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/John_Bowlby> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Name the scientist whose doctoral supervisor's doctoral student is John Bowlby?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Bowlby", "seq": "67,77", "label": "John Bowlby"}], "predicate mapping": [], "id": "cb2064da897547b2abcb8b409bdd0817"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Marco_Aurelio_Robles> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Where did the office holder  who is predecessor to Marco Aurelio Robles died ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marco_Aurelio_Robles", "seq": "51,70", "label": "Marco Aurelio Robles"}], "predicate mapping": [], "id": "bfbf00221cf04ca7b6a2b27c0f0b66d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Marvin_Bush> . ?x <http://dbpedia.org/property/children> ?uri  . }", "question": "What are some other children of the father of Marvin Bush?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marvin_Bush", "seq": "46,56", "label": "Marvin Bush"}], "predicate mapping": [], "id": "7fbcd4b51ed446329ea96a577f9cd906"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Mother_Mary_Alphonsa> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Julian_Hawthorne> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Which  writer has childrens named Mother Mary Alphonsa and Julian Hawthorne?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mother_Mary_Alphonsa", "seq": "34,53", "label": "Mother Mary Alphonsa"}, {"uri": "http://dbpedia.org/resource/Julian_Hawthorne", "seq": "59,74", "label": "Julian Hawthorne"}], "predicate mapping": [], "id": "62dd4ce12cbb45e781aca55e4b3b29bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Pietermaritzburg> . ?x <http://dbpedia.org/property/school> ?uri  . }", "question": "List all the schools of the rugby player whose went to school named Pietermaritzburg ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pietermaritzburg", "seq": "68,83", "label": "Pietermaritzburg"}], "predicate mapping": [], "id": "d71aec977ff14634a62b74d34fb64ae1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Postbanken> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "What are some other products of the banks which makes Postbanken?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Postbanken", "seq": "54,63", "label": "Postbanken"}], "predicate mapping": [], "id": "b331453bfb4641c399c599377904e4a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Time_Warner> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cartoon>}", "question": "What are some cartoons distributed by a subsidiary of Time Warner?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Time_Warner", "seq": "54,64", "label": "Time Warner"}], "predicate mapping": [], "id": "841b87f5ad0d4f0397e61ab5f19dfd26"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Eutheria> . ?uri <http://dbpedia.org/property/mascot> ?x  . }", "question": "What are the things whose mascots are from the class Eutheria?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eutheria", "seq": "53,60", "label": "Eutheria"}], "predicate mapping": [], "id": "1c337899653549fb8c5f5765a394b9bb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Greg_Daniels> . ?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)> } ", "question": "What is the total number of fictional characters whose created by  Greg Daniels and series is The Office (U.S. TV series)?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greg_Daniels", "seq": "67,78", "label": "Greg Daniels"}, {"uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)", "seq": "94,103", "label": "The Office"}], "predicate mapping": [], "id": "b06e3b9df6474551b29eda51267fbaca"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Name the are where South side Elevated Railroad operate and has place of birth as Arthur A. Ross ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad", "seq": "19,46", "label": "South side Elevated Railroad"}, {"uri": "http://dbpedia.org/resource/Arthur_A._Ross", "seq": "82,95", "label": "Arthur A. Ross"}], "predicate mapping": [], "id": "277ae34827a94a64bfda52a29b80431f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairfield,_Connecticut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Fairfield, Connecticut is hometown to which persons?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fairfield,_Connecticut", "seq": "0,21", "label": "Fairfield, Connecticut"}], "predicate mapping": [], "id": "d9c86b00d0404514a18fd6635d8b893d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ", "question": "Which borough of the Corringham railway station is also the local authority of Buckhurst Hill County High School ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Corringham_railway_station", "seq": "21,46", "label": "Corringham railway station"}, {"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "seq": "79,111", "label": "Buckhurst Hill County High School"}], "predicate mapping": [], "id": "3b75c4aabe0748088571682a0168ab4e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri } ", "question": "Where is the tombstone of Johannes Gerhardus Strijdom?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom", "seq": "26,52", "label": "Johannes Gerhardus Strijdom"}], "predicate mapping": [], "id": "7c5f3af257f34d6fa8ea63202db67648"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Sukhumbhand_Paribatra> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Rama_I>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "question": "Which administrative region leader is Sukhumbhand Paribatra and was founded by  Rama I?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra", "seq": "38,58", "label": "Sukhumbhand Paribatra"}, {"uri": "http://dbpedia.org/resource/Rama_I", "seq": "80,85", "label": "Rama I"}], "predicate mapping": [], "id": "70a95d95a68742c9b70b365d5d2d2fa9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/crosses> <http://dbpedia.org/resource/Orange_Line_(MBTA)> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who owns the bridge which crosses the Orange Line of MBTA?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orange_Line_(MBTA)", "seq": "38,48", "label": "Orange Line"}], "predicate mapping": [], "id": "009f2e39c91d49f1b6d9410b3fb2b5da"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oddamavadi_Bridge> <http://dbpedia.org/property/designer> ?uri } ", "question": "Who designed Oddamavadi Bridge?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oddamavadi_Bridge", "seq": "13,29", "label": "Oddamavadi Bridge"}], "predicate mapping": [], "id": "cc67a19255ce4bf6938888a64e0c3b19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose company is European Broadcasting Union?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Broadcasting_Union", "seq": "47,73", "label": "European Broadcasting Union"}], "predicate mapping": [], "id": "026eb82f924542c5be524f0aee58ff2f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Venice> <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Luigi_Brugnaro> }", "question": "Is Luigi Brugnaro the mayor of Venice?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Venice", "seq": "31,36", "label": "Venice"}, {"uri": "http://dbpedia.org/resource/Luigi_Brugnaro", "seq": "3,16", "label": "Luigi Brugnaro"}], "predicate mapping": [], "id": "4046f69e116b4d889fcf739e394d42a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}", "question": "List all important people of the non profit organization which has Hilary Clinton as a key person ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hillary_Clinton", "seq": "67,80", "label": "Hilary Clinton"}], "predicate mapping": [], "id": "8bcda51415224909b0c127abbc00da92"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri } ", "question": "Where did Allama Matthews study?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Allama_Matthews", "seq": "10,24", "label": "Allama Matthews"}], "predicate mapping": [], "id": "ab3b3833bcba4004a128604125a5d633"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Bangalore> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "question": "Politicians born in Bangalore are now in which parties?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangalore", "seq": "20,28", "label": "Bangalore"}], "predicate mapping": [], "id": "54b17242bd0b451ea66624da5aee1f7e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Michael_Mayr> <http://dbpedia.org/ontology/deputy> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Chancellor>}", "question": "What is the nationality of the chancellor who was served by Michael Mayr?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Mayr", "seq": "60,71", "label": "Michael Mayr"}], "predicate mapping": [], "id": "002025caf73746c88b16cc4f2bf21525"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chicago_Blackhawks> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> }", "question": "Is joel quenneville the main coach of Chicago Blackhawks?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Blackhawks", "seq": "38,55", "label": "Chicago Blackhawks"}, {"uri": "http://dbpedia.org/resource/Joel_Quenneville", "seq": "3,18", "label": "joel quenneville"}], "predicate mapping": [], "id": "2abf11e1cda543c4af0fb7aae25e6563"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Quebec> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "question": "Quebec born ice hockey players have stopped playing for which teams?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quebec", "seq": "0,5", "label": "Quebec"}], "predicate mapping": [], "id": "0cc6db94bbc44a198411909a855a2d2a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "question": "How many genres gave birth to other genres which emphasize Bass Guitars?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bass_guitar", "seq": "59,70", "label": "Bass Guitars"}], "predicate mapping": [], "id": "17ff67b500a04c5193fed5a413a9a9ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Which info. appliance is manufactured by Asus and is the predecessor of PS 2?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_2", "seq": "12,20", "label": "appliance"}, {"uri": "http://dbpedia.org/resource/Asus", "seq": "41,44", "label": "Asus"}], "predicate mapping": [], "id": "e5147d9405b647ccba833c959572483d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Detroit_Red_Wings> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "question": "Where do employees of Deroit Red Wings live?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Detroit_Red_Wings", "seq": "22,37", "label": "Deroit Red Wings"}], "predicate mapping": [], "id": "d1d052fa4410465f98e14f968dcd449c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Macintosh_Quadra_660AV> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Who developed the software for the operating system of Macintosh Quadra 660AV ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Macintosh_Quadra_660AV", "seq": "55,76", "label": "Macintosh Quadra 660AV"}], "predicate mapping": [], "id": "d50016797b5a4629bbadbde2ff37db36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn> . ?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Who is the writer with notable works like Adventures of Huckleberry Finn and The Adventures of Tom Sawyer?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn", "seq": "42,71", "label": "Adventures of Huckleberry Finn"}, {"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "seq": "77,104", "label": "The Adventures of Tom Sawyer"}], "predicate mapping": [], "id": "7cf3cea4cd174416bb524f55c19cdcf9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }", "question": "How many politicians are there from the city of Ganges?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganges", "seq": "48,53", "label": "Ganges"}], "predicate mapping": [], "id": "3ea9b079d22b43dcb2ff7969eb24f3cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "question": "What genre's softwares are released with a GNU GPL license?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/GNU_General_Public_License", "seq": "43,57", "label": "GNU GPL license"}], "predicate mapping": [], "id": "eb2d086a990849edbedf1e67a5489fc7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many shows are made by Playtone?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "seq": "27,34", "label": "Playtone"}], "predicate mapping": [], "id": "742fc3c32535483d84f660a50956fc0c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/L\u00fc_Buwei> <http://dbpedia.org/ontology/monarch> ?uri } ", "question": "Name the monarch of L Buwei ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/L\u00fc_Buwei", "seq": "20,26", "label": "L Buwei"}], "predicate mapping": [], "id": "c3f02e6afc5c4437933fc26320fd4915"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/Liga_Divisi_Utama> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "Which soccer clubs are in the Liga Divisi Utama?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liga_Divisi_Utama", "seq": "30,46", "label": "Liga Divisi Utama"}], "predicate mapping": [], "id": "e3178cfe799a4542bc1c07f4d8fa0891"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sandusky_County,_Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>}", "question": "Who were the commanders during the events which took place in Sandusky County, Ohio?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sandusky_County,_Ohio", "seq": "62,82", "label": "Sandusky County, Ohio"}], "predicate mapping": [], "id": "d59ce804d5d8423f926b5278793e6750"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asians_in_Hong_Kong> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Hirunika_Premachandra> <http://dbpedia.org/property/religion> ?uri . }", "question": "What religion is practiced by Hirunika Premachandra, and many others south asians in Hong Kong?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Asians_in_Hong_Kong", "seq": "69,93", "label": "south asians in Hong Kong"}, {"uri": "http://dbpedia.org/resource/Hirunika_Premachandra", "seq": "30,50", "label": "Hirunika Premachandra"}], "predicate mapping": [], "id": "032d3755146e42a3be21305ce7766f9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Westwood,_Los_Angeles> . ?uri <http://dbpedia.org/ontology/editing> ?x  . }", "question": "What are the movies whose editor died in Westwood, Los Angeles?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Westwood,_Los_Angeles", "seq": "41,61", "label": "Westwood, Los Angeles"}], "predicate mapping": [], "id": "35bf7919ccd9471fb67f5bd38ff7fbc7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/property/distributor> ?uri } ", "question": "Who is the distributer of Rev ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rev_(drink)", "seq": "26,28", "label": "Rev"}], "predicate mapping": [], "id": "83a20f11faf04a29a327446573eef42a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)> <http://dbpedia.org/property/architecture> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }", "question": "In how many places can I find people who were the architects of the Dundas Castle?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)", "seq": "68,80", "label": "Dundas Castle"}], "predicate mapping": [], "id": "7380ef507d0a4475822c823d403e5033"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TNT show has Christopher Franke as artist?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "seq": "19,36", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "seq": "6,8", "label": "TNT"}], "predicate mapping": [], "id": "0a39dc60f7d4418592e0d1d5426c7c5a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri } ", "question": "List all that flows into the north sea?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Sea", "seq": "29,37", "label": "north sea"}], "predicate mapping": [], "id": "f6e3042fcf724895aafc057cd69770c5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyubov_Dostoyevskaya> <http://dbpedia.org/property/relatives> ?uri } ", "question": "List the relatives of Lyubov Dostoyevskaya ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya", "seq": "22,41", "label": "Lyubov Dostoyevskaya"}], "predicate mapping": [], "id": "359b620b592a44929007db93e8aecd72"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Mudbloods> <http://dbpedia.org/property/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }", "question": "Where did the genres originate which can found in The Mudbloods?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Mudbloods", "seq": "50,62", "label": "The Mudbloods"}], "predicate mapping": [], "id": "7bd1752d4a3843d1b75a99a3c4131114"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Zune> . ?x <http://dbpedia.org/property/distributor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}", "question": "List all the record label distributed by the distributor of Zune ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zune", "seq": "60,63", "label": "Zune"}], "predicate mapping": [], "id": "9fe4e52ceac346d898b87b58552de0de"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Count the movies in Swedish language?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "seq": "20,35", "label": "Swedish language"}], "predicate mapping": [], "id": "6bd942c2f0cd4533bdc21957bc6bd75f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri } ", "question": "Name the artist of Brad Paisley discography ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brad_Paisley_discography", "seq": "19,42", "label": "Brad Paisley discography"}], "predicate mapping": [], "id": "814cd09a47ce48cea2ad776e1e753a16"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }", "question": "From how many works is the musical derived, whose lyrics are written by Sheldon Harnick?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sheldon_Harnick", "seq": "72,86", "label": "Sheldon Harnick"}], "predicate mapping": [], "id": "0d4bdac144b6458296c5c93ebacb1789"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/\u00c9douard_Chavannes> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "question": "In which fields are pupils of Edouard Chavannes working?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c9douard_Chavannes", "seq": "30,46", "label": "Edouard Chavannes"}], "predicate mapping": [], "id": "0b977445d3f142d3a514eb59c55000fd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri} ", "question": "Name the  borough of the Bordesley railway station which is also the route end of the Birmingham and Oxford Junction Railway?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bordesley_railway_station", "seq": "25,49", "label": "Bordesley railway station"}, {"uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway", "seq": "86,123", "label": "Birmingham and Oxford Junction Railway"}], "predicate mapping": [], "id": "b0da89aed7ff4c92808e7fc7e914f868"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Cerebral_blood_flow> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "question": "List all discipline of the journals whose one of the discipline is Cerebral blood flow ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cerebral_blood_flow", "seq": "67,85", "label": "Cerebral blood flow"}], "predicate mapping": [], "id": "017a115aacc2455e86ab1e3924f75e23"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/India>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "How many politicians live in India?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/India", "seq": "29,33", "label": "India"}], "predicate mapping": [], "id": "be045d0165ce481b9924bae470be2f0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Matthew_Kane_(actor)> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Park_Rankin> <http://dbpedia.org/ontology/citizenship> ?uri . }", "question": "Matthew kane and Park rankin are citizens of which country?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Matthew_Kane_(actor)", "seq": "0,11", "label": "Matthew kane"}, {"uri": "http://dbpedia.org/resource/Park_Rankin", "seq": "17,27", "label": "Park rankin"}], "predicate mapping": [], "id": "24dffcdf54ea418ca45309b87e1089d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many places can I find people whose alma mater was in bachelor of arts?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bachelor_of_Arts", "seq": "61,76", "label": "bachelor of arts"}], "predicate mapping": [], "id": "24ee24bf221e4289bf99c0ed742a27fe"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri} ", "question": "Which maintainer of Cheasty Boulevard South is also the city of Soccer Bowl' 76 ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Soccer_Bowl_'76", "seq": "64,78", "label": "Soccer Bowl' 76"}, {"uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South", "seq": "20,42", "label": "Cheasty Boulevard South"}], "predicate mapping": [], "id": "6ef5a08456594a85bc7216c671ad1076"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . }", "question": "Whose associate is Publius Servilius Vatia Isauricus and has predecessor as Lucius Cornelius Lentulus Crus?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)", "seq": "19,51", "label": "Publius Servilius Vatia Isauricus"}, {"uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus", "seq": "76,105", "label": "Lucius Cornelius Lentulus Crus"}], "predicate mapping": [], "id": "1f3c3fc3666b4644bccdab14b6502a1c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Now_TV_(UK)> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "Who is the producer of the device which is the operating system of Now TV  ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Now_TV_(UK)", "seq": "67,72", "label": "Now TV"}], "predicate mapping": [], "id": "544710c8a2214cd9acd7c3d8f6426535"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri } ", "question": "What was the stadium of Panionios G.S.S. in 2014-15 season ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season", "seq": "24,42", "label": "Panionios G.S.S. in"}], "predicate mapping": [], "id": "e36eb17b3221405197c89bc804df06cb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Shaquil_Barrett> <http://dbpedia.org/property/debutteam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "question": "Where is the debut team of Shaquil Barrett located?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaquil_Barrett", "seq": "27,41", "label": "Shaquil Barrett"}], "predicate mapping": [], "id": "12126746eda842aa8fcca0253a6905bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "What are the musicals based on, whose lyricist was Shelon Harnick?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sheldon_Harnick", "seq": "51,64", "label": "Shelon Harnick"}], "predicate mapping": [], "id": "55e5eb722be04ed0818176f887603e97"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/A_Rose_for_Emily>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Who wrote a rose for emily?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Rose_for_Emily", "seq": "10,25", "label": "a rose for emily"}], "predicate mapping": [], "id": "6aa2c0fad7224aab875e00964e242d8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Natural_philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}", "question": "Which were the philosophers whose primary interest was Natural philosophy?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Natural_philosophy", "seq": "55,72", "label": "Natural philosophy"}], "predicate mapping": [], "id": "12be635cc767416c9654991d6847a5a9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ", "question": "Which animator of Tommy Ticker's Tooth is also the director of The Haunted house ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "18,37", "label": "Tommy Ticker's Tooth"}, {"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "seq": "63,79", "label": "The Haunted house"}], "predicate mapping": [], "id": "a7fe79af1995496f9ee76331f0d5ebb5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Bergen-Belsen_concentration_camp> . ?x <http://dbpedia.org/ontology/relative> ?uri  . }", "question": "Who is relative of the people died in Bergen-Belsen concentration camp ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bergen-Belsen_concentration_camp", "seq": "38,69", "label": "Bergen-Belsen concentration camp"}], "predicate mapping": [], "id": "fdc1a6168b3544c294fcb5c5d4bd3de5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "How many games are played at universities affiliated with the Association of Southeast Asian Institutions of Higher Learning?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning", "seq": "62,123", "label": "Association of Southeast Asian Institutions of Higher Learning"}], "predicate mapping": [], "id": "de9f7d4ab7234f029fe2a69b1fb26c8e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Mauritius_Bank> <http://dbpedia.org/property/locationCountry> ?uri . }", "question": "From which country did the Mauritius bank and the national commerce bank emerge?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius", "seq": "50,78", "label": "national commerce bank emerge"}, {"uri": "http://dbpedia.org/resource/Mauritius_Bank", "seq": "27,40", "label": "Mauritius bank"}], "predicate mapping": [], "id": "1386583d5c3243a7a2eef959681226b1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lotuspool_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Napster> }", "question": "Was the Lotuspool Records distributed by Napster?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lotuspool_Records", "seq": "8,24", "label": "Lotuspool Records"}, {"uri": "http://dbpedia.org/resource/Napster", "seq": "41,47", "label": "Napster"}], "predicate mapping": [], "id": "0b0f5461ad2f46cca3c708ffefeac368"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_Kozmeniuk> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "List all the artist of albums which have been produced by Stephen Kozmeniuk ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_Kozmeniuk", "seq": "58,74", "label": "Stephen Kozmeniuk"}], "predicate mapping": [], "id": "07124083be6249ff961e6ea104195239"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }", "question": "Count the tenants of the stadiums designed by Populous?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Populous_(company)", "seq": "46,53", "label": "Populous"}], "predicate mapping": [], "id": "95cbbbabb49c4cf6a010c6ea3c230633"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Seewoosagur_Ramgoolam> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "question": "Where does the network cofounded by Seewoosagur Ramgoolam air its shows?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seewoosagur_Ramgoolam", "seq": "36,56", "label": "Seewoosagur Ramgoolam"}], "predicate mapping": [], "id": "5e96bbf76e3e40b2a62b009a2c1e48ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which sports exist in the universities whose president is Emanuel de Guzman?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emanuel_de_Guzman", "seq": "58,74", "label": "Emanuel de Guzman"}], "predicate mapping": [], "id": "d3ecdd7378e84976bf9901e34d96544d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . }", "question": "Count the different number of academic areas covered by publications of SAGE?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/SAGE_Publications", "seq": "56,67", "label": "publications"}], "predicate mapping": [], "id": "9ddba4eb7a16400f906e88d1c0390a79"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri. <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri} ", "question": "Which memeber of South Asia SubRegional Economic cooperation is also the nationality of Aishath saffa ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation", "seq": "17,59", "label": "South Asia SubRegional Economic cooperation"}, {"uri": "http://dbpedia.org/resource/Aishath_Saffa", "seq": "88,100", "label": "Aishath saffa"}], "predicate mapping": [], "id": "abcce0946b3a4c748fd0c8a9f5cf1030"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Meadow_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What faiths are followed by the relatives of Meadow Soprano?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Meadow_Soprano", "seq": "45,58", "label": "Meadow Soprano"}], "predicate mapping": [], "id": "6ede8437feee4a37a3076b1deb866abd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri } ", "question": "What is the purpose of Maharashtra Chess Association ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association", "seq": "23,51", "label": "Maharashtra Chess Association"}], "predicate mapping": [], "id": "1b61bd94b11c4641a1bb7d0601c0fdb5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)> <http://dbpedia.org/property/address> ?uri } ", "question": "What is the address of Federal Reserve Bank Building?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)", "seq": "23,51", "label": "Federal Reserve Bank Building"}], "predicate mapping": [], "id": "b9b3fd57293c4776b2e52370d4d5c3be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Leonard_Lerman> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Leonard_Lerman", "seq": "70,83", "label": "Leonard Lerman"}], "predicate mapping": [], "id": "85bb3f36d96d48e4aa43e98a78de40a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lezlee_Westine> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Arnold_W._Braswell> <http://dbpedia.org/property/residence> ?uri . }", "question": "What is the common official residence of Lezlee Westine and Arnold W. Braswell?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lezlee_Westine", "seq": "41,54", "label": "Lezlee Westine"}, {"uri": "http://dbpedia.org/resource/Arnold_W._Braswell", "seq": "60,77", "label": "Arnold W. Braswell"}], "predicate mapping": [], "id": "2d38fec5592147719347d2df292f9cc2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Louis_Dunbar>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "question": "Louis Dunbar is the coach of which basketball team ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_Dunbar", "seq": "0,11", "label": "Louis Dunbar"}], "predicate mapping": [], "id": "d6eb5633d2524379863ad29551cf0089"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/White_Plains_Road> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }", "question": "Do the White Plains Road lie in the Bronx county?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/White_Plains_Road", "seq": "7,23", "label": "White Plains Road"}, {"uri": "http://dbpedia.org/resource/The_Bronx", "seq": "32,40", "label": "the Bronx"}], "predicate mapping": [], "id": "dd780a7e6bf64bb79d2fa4c410ffed93"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri. <http://dbpedia.org/resource/Troy,_New_York> <http://dbpedia.org/ontology/river> ?uri} ", "question": "Which river flows through Hudson Highlands State park and also through Troy, New york ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park", "seq": "26,52", "label": "Hudson Highlands State park"}, {"uri": "http://dbpedia.org/resource/Troy,_New_York", "seq": "71,84", "label": "Troy, New york"}], "predicate mapping": [], "id": "126d01b992474e93bfe3b2d990e937a9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> }", "question": "Is US Navy garrisoned at Arlington County, Virginia?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Navy", "seq": "0,9", "label": "Is US Navy"}, {"uri": "http://dbpedia.org/resource/Arlington_County,_Virginia", "seq": "25,50", "label": "Arlington County, Virginia"}], "predicate mapping": [], "id": "fab4c2ac4f1446c4a58ec053f26940c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patty_Lin> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri} ", "question": "Which university attended by Franklin W. Olin was also the alma mater of Patty Lin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Patty_Lin", "seq": "73,81", "label": "Patty Lin"}, {"uri": "http://dbpedia.org/resource/Franklin_W._Olin", "seq": "29,44", "label": "Franklin W. Olin"}], "predicate mapping": [], "id": "9bc8183073c74276b2a202d642cd74d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What river is it whose source is Dowra?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dowra", "seq": "33,37", "label": "Dowra"}], "predicate mapping": [], "id": "342858bf3dc442ba9b8a65d63c8ece94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri. <http://dbpedia.org/resource/Kimihiro_Watanuki> <http://dbpedia.org/ontology/voice> ?uri . }", "question": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Allen_Walker", "seq": "27,38", "label": "allen walker"}, {"uri": "http://dbpedia.org/resource/Kimihiro_Watanuki", "seq": "59,75", "label": "kimihiro watanuki"}], "predicate mapping": [], "id": "4e89ed7d56bd4a77bb72e76dbb6feb5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Skai_Group> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }", "question": "What is the country of origin of the president of Skai group?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Skai_Group", "seq": "50,59", "label": "Skai group"}], "predicate mapping": [], "id": "d36b821cc4c947d19cf3ec17ad87e9c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company who owns HBO division?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "26,28", "label": "HBO"}], "predicate mapping": [], "id": "811423e6b0814c93a5bb6474579e9557"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aquarius_(rocket)> <http://dbpedia.org/ontology/launchSite> ?uri } ", "question": "What is the launch site of Aquarius (rocket) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aquarius_(rocket)", "seq": "27,34", "label": "Aquarius"}], "predicate mapping": [], "id": "78fb0be825cc4440b068e0a54c769e23"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movies distributed by Cinema International Corporation and edited by Hulian Doyle ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "31,62", "label": "Cinema International Corporation"}, {"uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)", "seq": "78,89", "label": "Hulian Doyle"}], "predicate mapping": [], "id": "9a8d8cab24774d4eb9fe49d063f80906"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Saint_Petersburg> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lyubov_Dostoyevskaya>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Name a writer who was educated in Saint Petersburg and had a son named Lyubov Dostoyevskaya ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Petersburg", "seq": "34,49", "label": "Saint Petersburg"}, {"uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya", "seq": "71,90", "label": "Lyubov Dostoyevskaya"}], "predicate mapping": [], "id": "6624d8c2fb524ee1ac7268162e60b577"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thornton_Creek> <http://dbpedia.org/property/sourceLocation> ?uri } ", "question": "What is the source location of Thornton Creek ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thornton_Creek", "seq": "31,44", "label": "Thornton Creek"}], "predicate mapping": [], "id": "6714d1031ae14213adee9f44469e2854"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are shows whose theme music composer's home town is New York?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "57,64", "label": "New York"}], "predicate mapping": [], "id": "c1c5e91af8da4014b4bcf17b0918ff88"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Guru_Purnima> <http://dbpedia.org/ontology/country> ?uri} ", "question": "What is the common relegion of Miao people  and the country where Guru Purnima is celebrated ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miao_people", "seq": "31,41", "label": "Miao people"}, {"uri": "http://dbpedia.org/resource/Guru_Purnima", "seq": "66,77", "label": "Guru Purnima"}], "predicate mapping": [], "id": "629e52550fd146e191ec02ae20114735"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "Where did the relatives of Gustavo Rojas Pinilla study?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla", "seq": "27,47", "label": "Gustavo Rojas Pinilla"}], "predicate mapping": [], "id": "bd4cb94b69084d79b0d1feb1fc8b014d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Playboy_Enterprises>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "List the magazines published by Playbow Enterprises ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playboy_Enterprises", "seq": "32,50", "label": "Playbow Enterprises"}], "predicate mapping": [], "id": "a1ee8ce5878d45029ef38e6d7fbb5483"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)> }", "question": "Is the song Killing is Out, School is in belong in the The Next Step?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In", "seq": "12,39", "label": "Killing is Out, School is in"}, {"uri": "http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)", "seq": "55,67", "label": "The Next Step"}], "predicate mapping": [], "id": "c19fedddfc0041919699b9a01eb5cbd1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Flour> . ?uri <http://dbpedia.org/ontology/type> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "What are some dishes from the family of dishes which primarily use flour?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Flour", "seq": "67,71", "label": "flour"}], "predicate mapping": [], "id": "5916bbcd6e894955885d10526c5bd306"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/ontology/author> ?uri} ", "question": "Who is the author of Heroman is also the author of Karakuri Dji Ultimo ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heroman", "seq": "21,27", "label": "Heroman"}, {"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "seq": "51,69", "label": "Karakuri Dji Ultimo"}], "predicate mapping": [], "id": "7788c912b6fb4457b27be58ee6f63052"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Which appliance's CPU is Cell (microprocessor) and predecessor is PlayStation 2?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cell_(microprocessor)", "seq": "25,28", "label": "Cell"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "seq": "66,78", "label": "PlayStation 2"}], "predicate mapping": [], "id": "87c2b3cad3274c52bfc6f11ef62b71dc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show which was developed by Brian Graden and distributed by Comedy Central?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "seq": "48,59", "label": "Brian Graden"}, {"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "80,93", "label": "Comedy Central"}], "predicate mapping": [], "id": "38c76f79fd67475680c99f38f3808b86"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blade_Runner> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> }", "question": "Was Blade Runner cinematographed by JordanCronenweth?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blade_Runner", "seq": "4,15", "label": "Blade Runner"}, {"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "seq": "36,51", "label": "JordanCronenweth"}], "predicate mapping": [], "id": "4b3b5256bbe842d685027d2c18454d38"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_Throneberry> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Curt_Coleman> <http://dbpedia.org/ontology/debutTeam> ?uri} ", "question": "What team had the debut of Marv Throneberry and Curt Coleman?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marv_Throneberry", "seq": "27,42", "label": "Marv Throneberry"}, {"uri": "http://dbpedia.org/resource/Curt_Coleman", "seq": "48,59", "label": "Curt Coleman"}], "predicate mapping": [], "id": "32b2c4d11f454f249137145bca18e285"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>} ", "question": "Count the number of software which runs on Microsoft Windows and mac OS ?", "sparql_id": 107, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "43,59", "label": "Microsoft Windows"}, {"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "65,70", "label": "mac OS"}], "predicate mapping": [], "id": "ff4d3c67a6884976a4f27a81882a97cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "What has Carl Sagan written his books about?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Sagan", "seq": "9,18", "label": "Carl Sagan"}], "predicate mapping": [], "id": "68843601f12e4f76a157d8e77cdd18b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "How many characters are there in The Office?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)", "seq": "33,42", "label": "The Office"}], "predicate mapping": [], "id": "af581de0b01f4908a95d361a6416a13c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Frank_Steunenberg> <http://dbpedia.org/property/lieutenant> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "question": "What is the place of death of the lieutenant of Frank Steunenberg?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Steunenberg", "seq": "48,64", "label": "Frank Steunenberg"}], "predicate mapping": [], "id": "7f714f3175684adbb9eabea7b621ab24"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/World_of_Tomorrow_(film)> <http://dbpedia.org/ontology/editing> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What are the awards won by the film editor of World of Tomorrow ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/World_of_Tomorrow_(film)", "seq": "46,62", "label": "World of Tomorrow"}], "predicate mapping": [], "id": "c7127b97150141d8843721bc8b9fdc6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": " Giuseppe Bertello and Pietro Parolin are leaders of which place ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Giuseppe_Bertello", "seq": "1,17", "label": "Giuseppe Bertello"}, {"uri": "http://dbpedia.org/resource/Pietro_Parolin", "seq": "23,36", "label": "Pietro Parolin"}], "predicate mapping": [], "id": "2f402439bfbf4bb3b37b919d64f80a13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Susie_Liggat> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are some TV shows similar to the one produced by Susie Liggat?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Susie_Liggat", "seq": "54,65", "label": "Susie Liggat"}], "predicate mapping": [], "id": "8b2570a474e64d91bdf32a893692ac55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "How did the child of Stevens T. Mason die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)", "seq": "21,36", "label": "Stevens T. Mason"}], "predicate mapping": [], "id": "f18825b526744c29b18f7b0a6dc10b80"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kwai_Chang_Caine> <http://dbpedia.org/ontology/religion> ?uri } ", "question": "What is the faith of Kwai Chang Caine ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kwai_Chang_Caine", "seq": "21,36", "label": "Kwai Chang Caine"}], "predicate mapping": [], "id": "c66a34d84ddc42f89d6642978c5f9b1c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "question": "Which soccer players are currently playing for NYC FC?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_FC", "seq": "47,52", "label": "NYC FC"}], "predicate mapping": [], "id": "3624137271954fb984aa700614ac0115"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mazabuka> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Where does the river end which starts in Mazabuka?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mazabuka", "seq": "41,48", "label": "Mazabuka"}], "predicate mapping": [], "id": "2c7911e408ae48659b766c22f01fa785"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . }", "question": "How many things are located in Ridgewood, New Jersey?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey", "seq": "31,51", "label": "Ridgewood, New Jersey"}], "predicate mapping": [], "id": "ff0272acb02c43028e695cdae056b647"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "Name the mountain located in California and has parent peak as Nevado de Toluca ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "29,38", "label": "California"}, {"uri": "http://dbpedia.org/resource/Nevado_de_Toluca", "seq": "63,78", "label": "Nevado de Toluca"}], "predicate mapping": [], "id": "5939910c8f974ca1bf12a412dd886263"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roy_Walker_(production_designer)> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Walt_Disney> <http://dbpedia.org/ontology/award> ?uri . }", "question": "What award has been given to Roy Walker as well as Walt Disney?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Roy_Walker_(production_designer)", "seq": "29,38", "label": "Roy Walker"}, {"uri": "http://dbpedia.org/resource/Walt_Disney", "seq": "51,61", "label": "Walt Disney"}], "predicate mapping": [], "id": "705980cbb32844d780617bc238043841"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carroll_E._Lanier> <http://dbpedia.org/property/branch> ?uri } ", "question": "Name the branch of Carroll E. Lanier ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carroll_E._Lanier", "seq": "19,35", "label": "Carroll E. Lanier"}], "predicate mapping": [], "id": "785b260edcfd41099d8633106521b324"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "List the settlements area whose province is Metropolitan City of Venice ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice", "seq": "44,70", "label": "Metropolitan City of Venice"}], "predicate mapping": [], "id": "a8e55935b3614b769945d3b60945948d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show's company is Paramount Television and is located in Boston?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "35,54", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Boston", "seq": "74,79", "label": "Boston"}], "predicate mapping": [], "id": "a9bd73968852449abc9875ea0e72a3f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Jann_Wenner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Which magazines were founded by ann Wenner ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jann_Wenner", "seq": "32,41", "label": "ann Wenner"}], "predicate mapping": [], "id": "fe3de671ec2f4322995f78f9bb33d11a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/area> ?uri } ", "question": "What is the area of ITV (Thailand) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/ITV_(Thailand)", "seq": "20,22", "label": "ITV"}], "predicate mapping": [], "id": "fa99333a084949f3b66f826593bd2652"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shirley_Temple's_Storybook> <http://dbpedia.org/property/presenter> ?uri } ", "question": "Name the presenter of Shirley Temple's Storybook ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shirley_Temple's_Storybook", "seq": "22,47", "label": "Shirley Temple's Storybook"}], "predicate mapping": [], "id": "1c12f743208140c4899ab63ce958d5c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Java_Gold> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "Where was the trainer of Java Gold born?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Java_Gold", "seq": "25,33", "label": "Java Gold"}], "predicate mapping": [], "id": "f67831f30b7c4fcdb7f825ca4a09c5cf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ministry_of_Railways_(India)> }", "question": "Is the Vadodara railway junction onwed by Indian Railway Ministry?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "seq": "7,31", "label": "Vadodara railway junction"}, {"uri": "http://dbpedia.org/resource/Ministry_of_Railways_(India)", "seq": "42,55", "label": "Indian Railway"}], "predicate mapping": [], "id": "5545373a672f44b68c675c0fa2a9b8ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri. <http://dbpedia.org/resource/Bret_Simon> <http://dbpedia.org/ontology/managerClub> ?uri . }", "question": "Name the common managing club of the Ivan Toplak and Bret Simon?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivan_Toplak", "seq": "37,47", "label": "Ivan Toplak"}, {"uri": "http://dbpedia.org/resource/Bret_Simon", "seq": "53,62", "label": "Bret Simon"}], "predicate mapping": [], "id": "965b4a0d6fcd45448babd3cd1a9d1850"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Robert_Wise>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose editor is Robert Wise?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Wise", "seq": "36,46", "label": "Robert Wise"}], "predicate mapping": [], "id": "f4dfd8294d264888896ddcc6e971ef4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri } ", "question": "Name the river on Batoka Gorge Hydroelectric Power Station ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station", "seq": "18,57", "label": "Batoka Gorge Hydroelectric Power Station"}], "predicate mapping": [], "id": "1f82c3f52b32474d9b2a5871e9d6bab7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "question": "Race horses whose grandsire is Wild  Risk have taken part in which races?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wild_Risk", "seq": "31,40", "label": "Wild  Risk"}], "predicate mapping": [], "id": "06363edf0f81486685ac0173e6b02850"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neptune> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> }", "question": "Did Johann Gottfried Galle invent Neptune?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neptune", "seq": "34,40", "label": "Neptune"}, {"uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle", "seq": "4,25", "label": "Johann Gottfried Galle"}], "predicate mapping": [], "id": "ddec2336ee0e4356a255236006bca1fc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore> <http://dbpedia.org/ontology/denomination> ?uri } ", "question": "Where is the T.I. Ahmadiyya Girls Senior High School?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore", "seq": "13,51", "label": "T.I. Ahmadiyya Girls Senior High School"}], "predicate mapping": [], "id": "4b468d8b196546ddaa7555d1afa4c1c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "How many information appliance are manufactured by companies located in Taiwan?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "seq": "72,77", "label": "Taiwan"}], "predicate mapping": [], "id": "1fe3b3d58f8e432d9b1f3b09d5f74c6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's military unit is USS Kittiwake  and constituency is Castro District, San Francisco ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)", "seq": "39,51", "label": "USS Kittiwake"}, {"uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco", "seq": "74,103", "label": "Castro District, San Francisco"}], "predicate mapping": [], "id": "a2eca13767804df089a65b86bf65310d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ", "question": "Which driver came first in the 1993 European Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1993_European_Grand_Prix", "seq": "31,54", "label": "1993 European Grand Prix"}], "predicate mapping": [], "id": "34fd78d2a8624f3fb9db8f301269df58"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri } ", "question": "Who is the writer of mark twain Tonight ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Twain_Tonight", "seq": "21,38", "label": "mark twain Tonight"}], "predicate mapping": [], "id": "0b508a68bf6f41969a26b3a4de2c0af7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> . ?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's  military branch is Continental Army and vice president is John Adams?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "seq": "42,57", "label": "Continental Army"}, {"uri": "http://dbpedia.org/resource/John_Adams", "seq": "81,90", "label": "John Adams"}], "predicate mapping": [], "id": "0f420e164c264763bf883eb8a2892256"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> } ", "question": "Into what military organizations is the United States Department of Defense divided?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "seq": "40,74", "label": "United States Department of Defense"}], "predicate mapping": [], "id": "7bf4c6d437c849c79fbda07a1c39272a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}", "question": "Who have been the manager of national team of Spain?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spain_national_football_team", "seq": "29,41", "label": "national team"}], "predicate mapping": [], "id": "efa1f08196ee4717bf2dc3636d758b21"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_McClure_(table_tennis)> <http://dbpedia.org/property/birthPlace> ?uri } ", "question": "Where was James McClure born ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_McClure_(table_tennis)", "seq": "10,22", "label": "James McClure"}], "predicate mapping": [], "id": "ec741fb853924061b547cb81d63e2b94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Miley_Cyrus> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name all sitcoms whose theme music is made by Miley Cyrus?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miley_Cyrus", "seq": "46,56", "label": "Miley Cyrus"}], "predicate mapping": [], "id": "6f6810ed49a548939905cf6abbe9bccf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toyota_Verossa> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine_design>  . }", "question": "Does the Toyota Verossa have the front engine design platform?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toyota_Verossa", "seq": "9,22", "label": "Toyota Verossa"}, {"uri": "http://dbpedia.org/resource/Front-engine_design", "seq": "33,51", "label": "front engine design"}], "predicate mapping": [], "id": "af1ad3ef33784711bf9ecd13301e524d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sukhumbhand_Paribatra> <http://dbpedia.org/property/residence> ?uri } ", "question": "The official residence of Sukhumbhand paribatra ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra", "seq": "26,46", "label": "Sukhumbhand paribatra"}], "predicate mapping": [], "id": "a767b3fba00d497caf4ce4a2d62a9152"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vargas_(state)> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }", "question": "What is the debut team of people born in Vargas?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vargas_(state)", "seq": "41,46", "label": "Vargas"}], "predicate mapping": [], "id": "eb1852e8e379430ea29fa15c1588859e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Kumho_Asiana_Group> } ", "question": "Which companies have Kumho Asiana Group as their parent company?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kumho_Asiana_Group", "seq": "21,38", "label": "Kumho Asiana Group"}], "predicate mapping": [], "id": "4141231625cc43c8bc490ad565328359"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> }", "question": "Was Neil Armstrong on the Gemini 8 mission?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Armstrong", "seq": "4,17", "label": "Neil Armstrong"}, {"uri": "http://dbpedia.org/resource/Gemini_8", "seq": "26,33", "label": "Gemini 8"}], "predicate mapping": [], "id": "6ac8c31d60b54b13b8e5241fd7e4b741"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Herbert_Pell> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/profession> ?uri  . }", "question": "What is the profession of the children of Herbert Pell ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Herbert_Pell", "seq": "42,53", "label": "Herbert Pell"}], "predicate mapping": [], "id": "affc959256ac4bc191e5dd85460f6a12"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the sitcom with theme music composer as Julian Gingell and channel as Fox Broadcasting Company?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "seq": "45,58", "label": "Julian Gingell"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "75,98", "label": "Fox Broadcasting Company"}], "predicate mapping": [], "id": "710a55e3696846ab95695ee383a1fa25"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Lords> <http://dbpedia.org/property/international> ?uri } ", "question": "Which nationalist group was responsible for foundation of Young Lords?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Young_Lords", "seq": "58,68", "label": "Young Lords"}], "predicate mapping": [], "id": "2c6bf82629164b92ae31c438f24e169e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . }", "question": "What product is made by Sony and Foxconn togather?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "seq": "24,27", "label": "Sony"}, {"uri": "http://dbpedia.org/resource/Foxconn", "seq": "33,39", "label": "Foxconn"}], "predicate mapping": [], "id": "84c4f92bbfb04638a0a619683dea1349"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri } ", "question": "Name the death location of Judson Huss ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judson_Huss", "seq": "27,37", "label": "Judson Huss"}], "predicate mapping": [], "id": "9f44883aeb3c401c89e1465ab2006426"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Valentina_Matviyenko>  . }", "question": "What is the country whose leader was once Valentina Matviyenko?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Valentina_Matviyenko", "seq": "42,61", "label": "Valentina Matviyenko"}], "predicate mapping": [], "id": "6be45071f4db47d7850293932bbedfef"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Samuel_Moreno_Rojas> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "Give me all the alma mater of the relatives of Samuek Moreno Rojas ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas", "seq": "47,65", "label": "Samuek Moreno Rojas"}], "predicate mapping": [], "id": "261be9eb5d11448d9fc941edd2cf2524"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kate_Lundy> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Julia_Gillard> }", "question": "Is Julia Gillard the prime minister of Kate Lundy?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kate_Lundy", "seq": "39,48", "label": "Kate Lundy"}, {"uri": "http://dbpedia.org/resource/Julia_Gillard", "seq": "3,15", "label": "Julia Gillard"}], "predicate mapping": [], "id": "459b9e3d7b684b5d9b5c423be3a4eb3f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Truman_McGill_Hobbs> <http://dbpedia.org/property/residence> ?uri } ", "question": "Where does Truman McGill Hobbs, United States District Judge live?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Truman_McGill_Hobbs", "seq": "11,29", "label": "Truman McGill Hobbs"}], "predicate mapping": [], "id": "e7c2c4d667f343a58a587ef74bcc6bff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/G\u00e9rard_Larcher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the country whose leader name is Grard Larcher?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00e9rard_Larcher", "seq": "41,53", "label": "Grard Larcher"}], "predicate mapping": [], "id": "8931ff63c84b4c50b5a1b9c4be64f74b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television program voiced by Isaac Hayes and aired on Comedy Central?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Isaac_Hayes", "seq": "38,48", "label": "Isaac Hayes"}, {"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "63,76", "label": "Comedy Central"}], "predicate mapping": [], "id": "6c1c0ca2a98141f3a9687634493adc68"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Opel_Karl> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Which company manufactures cars like the Opel Karl ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Opel_Karl", "seq": "41,49", "label": "Opel Karl"}], "predicate mapping": [], "id": "9147a259a1bf43e0bdad21cf341abc26"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "question": "How many people have fought wars where Arthur St. Clair was a commander?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_St._Clair", "seq": "39,54", "label": "Arthur St. Clair"}], "predicate mapping": [], "id": "2aaac4193bd2408399d5d3c8640c90ec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "Name the mammals which are primate and belongs to family of ape ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Primate", "seq": "27,33", "label": "primate"}, {"uri": "http://dbpedia.org/resource/Ape", "seq": "60,62", "label": "ape"}], "predicate mapping": [], "id": "8a5c47c1f5544bed9201bf2e6d45ba64"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Mangalore> . ?x <http://dbpedia.org/property/party> ?uri  . }", "question": "What are some parties which have people from Mangalore as a member?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mangalore", "seq": "45,53", "label": "Mangalore"}], "predicate mapping": [], "id": "adabfc9d8bab4686b6e3fc7b97893c7b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri  . }", "question": "How many guests have been there on broadway?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/On_Broadway_(Smash)", "seq": "32,42", "label": "on broadway"}], "predicate mapping": [], "id": "e97f754148fd4c2f811c6bf0b04685ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }", "question": "What is the county seat of the county which has an Evergreen High School?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)", "seq": "51,71", "label": "Evergreen High School"}], "predicate mapping": [], "id": "a090fde75999468690fbe088df7369b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What countries used Solidus as currency?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Solidus_(coin)", "seq": "20,26", "label": "Solidus"}], "predicate mapping": [], "id": "07df56459b9046fa95b983ee02c029e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "question": "In which areas can I find wine made of Vitis vinifera grapes?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "seq": "39,52", "label": "Vitis vinifera"}], "predicate mapping": [], "id": "3230a08d90af4614ae2510d4feb9382f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "In how many different teams have all those who have played as a defenceman been?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "seq": "64,73", "label": "defenceman"}], "predicate mapping": [], "id": "0d511229c1004f4b8405d2c90496fd03"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Europa_(moon)> <http://dbpedia.org/property/discoverer> ?uri. <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/ontology/discoverer> ?uri} ", "question": "Who discovered Europa and Callisto?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Europa_(moon)", "seq": "15,20", "label": "Europa"}, {"uri": "http://dbpedia.org/resource/Callisto_(moon)", "seq": "26,33", "label": "Callisto"}], "predicate mapping": [], "id": "a57646db0f4f42b08f80995ffb60e186"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}", "question": "List  bacterias whose orde is Bacillales and division is Firmicutes?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillales", "seq": "30,39", "label": "Bacillales"}, {"uri": "http://dbpedia.org/resource/Firmicutes", "seq": "57,66", "label": "Firmicutes"}], "predicate mapping": [], "id": "d65addb351934f16855a39cec5e7e20a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ", "question": "Which ceremonial County of the East Tilbury is also the local authority of the Buckhurst Hill County High School ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/East_Tilbury", "seq": "31,42", "label": "East Tilbury"}, {"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "seq": "79,111", "label": "Buckhurst Hill County High School"}], "predicate mapping": [], "id": "7c7114c2dd014b12b2a19352d908b472"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "What are some other destinations covered by the airlines whose flights go to the Mediterranean sea?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "seq": "81,97", "label": "Mediterranean sea"}], "predicate mapping": [], "id": "53bb18b2b179439ea955d4300cf133ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec> . ?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . }", "question": "Who was buried at St. Mary's Church and fought the battle of  Benedict Arnold's expedition to Quebec ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec", "seq": "62,99", "label": "Benedict Arnold's expedition to Quebec"}, {"uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea", "seq": "18,45", "label": "St. Mary's Church and fought"}], "predicate mapping": [], "id": "84e3b4c63caa4cc6a76221a3f87025f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "How many companies have developed cross platformed softwares?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cross-platform", "seq": "34,49", "label": "cross platformed"}], "predicate mapping": [], "id": "3115a0dfde724a49a564f755192dd1ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pontiac_G8> <http://dbpedia.org/ontology/relatedMeanOfTransportation> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "How many cars are the predecessor of cars similar to the Pontiac G8?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pontiac_G8", "seq": "57,66", "label": "Pontiac G8"}], "predicate mapping": [], "id": "36c9a6650fdd4fadb4be1d77eabc6198"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Karl_Marx> <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Class_conflict> }", "question": "Was Class Conflict an interest of Karl Marx?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karl_Marx", "seq": "34,42", "label": "Karl Marx"}, {"uri": "http://dbpedia.org/resource/Class_conflict", "seq": "4,17", "label": "Class Conflict"}], "predicate mapping": [], "id": "6ed720fd412748de934db0272ae0affd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What are some famous artists who rocked a Les Paul?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibson_Les_Paul", "seq": "42,49", "label": "Les Paul"}], "predicate mapping": [], "id": "ede3db931b55452880393aec59f27131"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atlantic_Seaboard_fall_line> <http://dbpedia.org/ontology/part> ?uri. <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri} ", "question": "Whichi office of Walter Evnas Edge is also the part of Atlantic seaboard fall lines ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atlantic_Seaboard_fall_line", "seq": "55,82", "label": "Atlantic seaboard fall lines"}, {"uri": "http://dbpedia.org/resource/Walter_Evans_Edge", "seq": "17,33", "label": "Walter Evnas Edge"}], "predicate mapping": [], "id": "2f376df9dd00440698f42178c7677b57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which new Mexico based company produces Surface ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "seq": "6,15", "label": "new Mexico"}, {"uri": "http://dbpedia.org/resource/Microsoft_Surface", "seq": "31,46", "label": "produces Surface"}], "predicate mapping": [], "id": "77345fdf42cd4d2f8474d7eccb309bd9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Justin_Zackham> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What is the casting of the movie directed by Justin Zackham ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Justin_Zackham", "seq": "45,58", "label": "Justin Zackham"}], "predicate mapping": [], "id": "af5b6ee8ccc1462dabeac10e39245823"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/San_Diego_Comic-Con_International> <http://dbpedia.org/property/venue> ?uri } ", "question": "What is the venue of San Diego Comic-Con International ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Diego_Comic-Con_International", "seq": "21,53", "label": "San Diego Comic-Con International"}], "predicate mapping": [], "id": "3fca4e987668497a98a4313a90ef9cbc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are some countries where companies headquartered in the Klang Valley operate?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Klang_Valley", "seq": "61,72", "label": "Klang Valley"}], "predicate mapping": [], "id": "1010a7a0c5f44e9d94d2ad67d025ee32"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "How many different organizations own the railway lines which are a part of Norfolk Southern Railway?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway", "seq": "75,98", "label": "Norfolk Southern Railway"}], "predicate mapping": [], "id": "09ea36c583254aaab5a74fa304945343"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Arceneaux,_Jr.> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri} ", "question": "What is the job of the George Arceneaux, Jr. which is also the office of the Blanche Bruce", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr.", "seq": "23,42", "label": "George Arceneaux, Jr"}, {"uri": "http://dbpedia.org/resource/Blanche_Bruce", "seq": "77,89", "label": "Blanche Bruce"}], "predicate mapping": [], "id": "fb3983a237514a2fae742694295ce1a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Chaudhary_Devi_Lal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "What are the party of the politicians whose deputy was Chaudhary Devi Lal?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chaudhary_Devi_Lal", "seq": "55,72", "label": "Chaudhary Devi Lal"}], "predicate mapping": [], "id": "564815b5f32d4020a3d65768cc5404c5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhodes-Haverty_Building> <http://dbpedia.org/property/address> ?uri } ", "question": "Name the street address of Rhodes-Haverty Building ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rhodes-Haverty_Building", "seq": "27,49", "label": "Rhodes-Haverty Building"}], "predicate mapping": [], "id": "c62aacfc9d4d436780b225eacce046cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Which royalty's spouse is Ptolemy XIV of Egypt?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt", "seq": "26,45", "label": "Ptolemy XIV of Egypt"}], "predicate mapping": [], "id": "f399c7a1da5e48e29810f8606fdfe5ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Best_Mate> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri} ", "question": "Which race is the  Best Mate is also the race of the Martin Molony?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Best_Mate", "seq": "19,27", "label": "Best Mate"}, {"uri": "http://dbpedia.org/resource/Martin_Molony", "seq": "53,65", "label": "Martin Molony"}], "predicate mapping": [], "id": "549aff6f90b442e49ad5fb036aa2907c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greater_San_Antonio> <http://dbpedia.org/ontology/part> ?uri } ", "question": "List the parts of Greater San Antonio?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_San_Antonio", "seq": "18,36", "label": "Greater San Antonio"}], "predicate mapping": [], "id": "01e5f18baef64f089b9aeff2a5672188"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Butters'_Very_Own_Episode> . ?x <http://dbpedia.org/ontology/musicComposer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}", "question": "Who composed the episode after which came Butter's Very own Episode?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Butters'_Very_Own_Episode", "seq": "42,66", "label": "Butter's Very own Episode"}], "predicate mapping": [], "id": "d9e490fde9154a129b189fd66c1a8223"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Il-kwon> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "What are some wars fought when Chung Il Kwon as the country's prime minister?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chung_Il-kwon", "seq": "31,43", "label": "Chung Il Kwon"}], "predicate mapping": [], "id": "ee5255e0079449ae9103f3cf1c059fbd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Catcher> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "List down all the baseball teams whose team manager was a Catcher?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Catcher", "seq": "58,64", "label": "Catcher"}], "predicate mapping": [], "id": "0be0815b6d7946da97888b0cc3bf85c0"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elsie_Paroubek> <http://dbpedia.org/ontology/bodyDiscovered> <http://dbpedia.org/resource/Chicago> }", "question": "Was the body of Elsie Paroubek discovered in Chicago?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elsie_Paroubek", "seq": "16,29", "label": "Elsie Paroubek"}, {"uri": "http://dbpedia.org/resource/Chicago", "seq": "45,51", "label": "Chicago"}], "predicate mapping": [], "id": "7753f3eb8e344fac86edce3630848439"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri } ", "question": "who operates the south side elevated railroad?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad", "seq": "17,44", "label": "south side elevated railroad"}], "predicate mapping": [], "id": "9b51ba0b970d479dbc0c54c8830fcddb"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Dean_Wurzberger> <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/Santa_Clara_University> }", "question": "Did Dean Wurzberger manage a club at the santa clara university?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dean_Wurzberger", "seq": "4,18", "label": "Dean Wurzberger"}, {"uri": "http://dbpedia.org/resource/Santa_Clara_University", "seq": "41,62", "label": "santa clara university"}], "predicate mapping": [], "id": "2e9acabbe693475ea85bed543e1ebef7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Blanche_DuBois> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}", "question": "Who wrote the play in which Blanche DuBois is a character?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blanche_DuBois", "seq": "28,41", "label": "Blanche DuBois"}], "predicate mapping": [], "id": "530da5683a824177a5b7b23c2d8447d1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Americans_Bank> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri} ", "question": "Which founding cities of Young Americans Bank is also the location of Denver Broncos ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Young_Americans_Bank", "seq": "25,44", "label": "Young Americans Bank"}, {"uri": "http://dbpedia.org/resource/Denver_Broncos", "seq": "70,83", "label": "Denver Broncos"}], "predicate mapping": [], "id": "ea51be89c95a4b4d91b32d48835ded65"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Ausean_Evans> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Kyle_Fuller_(basketball)> <http://dbpedia.org/property/college> ?uri} ", "question": "What is the college of Malik Ausean which is also the college of Kyle Fuller ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malik_Ausean_Evans", "seq": "23,40", "label": "Malik Ausean which"}, {"uri": "http://dbpedia.org/resource/Kyle_Fuller_(basketball)", "seq": "65,75", "label": "Kyle Fuller"}], "predicate mapping": [], "id": "edd475c6742c46fab9cff4f03715fdc2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university with affiliations as Graham Holdings Company and campus at Indiana?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Holdings_Company", "seq": "41,63", "label": "Graham Holdings Company"}, {"uri": "http://dbpedia.org/resource/Indiana", "seq": "79,85", "label": "Indiana"}], "predicate mapping": [], "id": "1c819292a65d48ba82b5936d9d22a161"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have worked for teams chaired by Patricia Amorim?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Patr\u00edcia_Amorim", "seq": "49,63", "label": "Patricia Amorim"}], "predicate mapping": [], "id": "2ca97f86a97a48c6884ef73475245fd2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Hyundai_Elantra> }", "question": "Is the hyundai elantra related to hyundai lavita?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "seq": "34,47", "label": "hyundai lavita"}, {"uri": "http://dbpedia.org/resource/Hyundai_Elantra", "seq": "7,21", "label": "hyundai elantra"}], "predicate mapping": [], "id": "1747800b6c1342b592699c28f06154c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who designed the stadiums which have been rented by Oakland athletics?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oakland_Athletics", "seq": "52,68", "label": "Oakland athletics"}], "predicate mapping": [], "id": "4fdfe129a9b94ef396a19e5882da3915"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri . }", "question": "Which team did Michael and Ryan Powell play for?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)", "seq": "27,37", "label": "Ryan Powell"}, {"uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)", "seq": "27,37", "label": "Ryan Powell"}], "predicate mapping": [], "id": "92f13c33f9394efe8c790385a7e907f6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }", "question": "How many different people have been in any political seat in places which are under the Indian Standard timezone?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Standard_Time", "seq": "88,111", "label": "Indian Standard timezone"}], "predicate mapping": [], "id": "b890d5585137439888d5cb80a9160f6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Space_Shuttle> <http://dbpedia.org/ontology/manufacturer> ?uri . }", "question": "Who manufactured the Delta III and the Space Shuttle?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Delta_III", "seq": "21,29", "label": "Delta III"}, {"uri": "http://dbpedia.org/resource/Space_Shuttle", "seq": "39,51", "label": "Space Shuttle"}], "predicate mapping": [], "id": "40fb3a262e9b4b3ab35c33f0f8bd883e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTA_Tour_Championships> <http://dbpedia.org/property/country> ?uri } ", "question": "Which nation hosts the WTA Tour Championships?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/WTA_Tour_Championships", "seq": "23,44", "label": "WTA Tour Championships"}], "predicate mapping": [], "id": "2e7611c3b8994e6dbc15b40e020f1b9c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/Anthony_Raymond_Ceresko> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which broadcast area of CFRX is also the palce of birth of Anthony Raymond ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/CFRX", "seq": "24,27", "label": "CFRX"}, {"uri": "http://dbpedia.org/resource/Anthony_Raymond_Ceresko", "seq": "59,73", "label": "Anthony Raymond"}], "predicate mapping": [], "id": "7b6793a8d8a24f5da233b3f76475f5f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Wrought_iron> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Bridges over which rivers are made of Wrought Iron?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wrought_iron", "seq": "38,49", "label": "Wrought Iron"}], "predicate mapping": [], "id": "a3c5a2eed28d4fce829b32d43b36eedc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Metro-North_Railroad> . ?x <http://dbpedia.org/property/owner> ?uri }", "question": "Give me the total number of lines owned by owner of Mwtro-Noth Railroad ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro-North_Railroad", "seq": "52,70", "label": "Mwtro-Noth Railroad"}], "predicate mapping": [], "id": "f77b70866d3f440ab0e94f8839a02e38"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri } ", "question": "Where was Liliya Lobanova born?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liliya_Lobanova", "seq": "10,24", "label": "Liliya Lobanova"}], "predicate mapping": [], "id": "5ed77f5b5ec94a8ebe4f29dad560565e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Argentina> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "question": "Count the different genres of music made by Argentinian bands?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Argentina", "seq": "44,54", "label": "Argentinian"}], "predicate mapping": [], "id": "b60070566739496cbb32be93d3aa6d21"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "For how many PMs did the politician work, whose successor was Kingsley Wood?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingsley_Wood", "seq": "62,74", "label": "Kingsley Wood"}], "predicate mapping": [], "id": "295ec11bef8e4bf380b41c35e2142bfa"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Laozi> } ", "question": "Laozi authored which book?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laozi", "seq": "0,4", "label": "Laozi"}], "predicate mapping": [], "id": "4991e293a5df4dacb638b36ffa363faa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "question": "How many head of agencies were there in Nazi Germany?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nazi_Germany", "seq": "40,51", "label": "Nazi Germany"}], "predicate mapping": [], "id": "76611f72d25b4984b1511e6309e78e68"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ", "question": "Which nickname of Lyons Township JHigh school is also the mascot of Galatasaray Handball Team ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team", "seq": "68,92", "label": "Galatasaray Handball Team"}, {"uri": "http://dbpedia.org/resource/Lyons_Township_High_School", "seq": "18,44", "label": "Lyons Township JHigh school"}], "predicate mapping": [], "id": "4a5f5dcc47134e9d84939b7e3118a114"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Stella_Kowalski> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}", "question": "Who wrote the play in which a character called Stella Kowalski exists?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stella_Kowalski", "seq": "47,61", "label": "Stella Kowalski"}], "predicate mapping": [], "id": "ba5faf932d46419e98e625fe00202062"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Downtown_Athletic_Club>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "Which award is presented by Downtown Athletic Club?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Downtown_Athletic_Club", "seq": "28,49", "label": "Downtown Athletic Club"}], "predicate mapping": [], "id": "eb60a056d11940db85207b6c2d7dba3e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/TranStar_Airlines> <http://dbpedia.org/ontology/destination> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }", "question": "What are the largest cities in each of the destinations of TranStar Airlines?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/TranStar_Airlines", "seq": "59,75", "label": "TranStar Airlines"}], "predicate mapping": [], "id": "9e28d32cb50c430abb9b65aa6808dbb3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Love_Hurts> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Short_Cut_Draw_Blood> }", "question": "Was Love Hurts in Short Cut Draw Blood?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Love_Hurts", "seq": "4,13", "label": "Love Hurts"}, {"uri": "http://dbpedia.org/resource/Short_Cut_Draw_Blood", "seq": "18,37", "label": "Short Cut Draw Blood"}], "predicate mapping": [], "id": "4d4161d0fcd14e16adcc00f8793191bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Greater_Antilles> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "question": "What islands are there on the Greater Antilles archipelago?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_Antilles", "seq": "30,45", "label": "Greater Antilles"}], "predicate mapping": [], "id": "b2c4a68e8a9948a0b430733a99af03b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . }", "question": "How many things belong to phylum of Chordate?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chordate", "seq": "36,43", "label": "Chordate"}], "predicate mapping": [], "id": "40370fe27b3a4ec29366818da40b692d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "What units are garrisoned in the Pentagon?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Pentagon", "seq": "29,40", "label": "the Pentagon"}], "predicate mapping": [], "id": "737d63b84ad04faf9d88e0ea08e6d2a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which Tv series led to Frasier?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "seq": "23,29", "label": "Frasier"}], "predicate mapping": [], "id": "24323c55c5084725bbdb07997dfec006"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Andrew_Jackson> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }", "question": "Count the number of people became famous for when Andrew Jackson was a commander ?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Jackson", "seq": "50,63", "label": "Andrew Jackson"}], "predicate mapping": [], "id": "3d6bf4caec37493199f249d4af63860c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York> . ?x <http://dbpedia.org/property/writer> ?uri  . }", "question": "Count the writers whose work has been played in NY?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "24,27", "label": "work"}], "predicate mapping": [], "id": "2e7ea1d1a22640afb763ba50120b3917"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Jitney_Elopement> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Charlie_Chaplin> }", "question": "Was A Jitney Elopement edited by Charlie Chaplin?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Jitney_Elopement", "seq": "4,21", "label": "A Jitney Elopement"}, {"uri": "http://dbpedia.org/resource/Charlie_Chaplin", "seq": "33,47", "label": "Charlie Chaplin"}], "predicate mapping": [], "id": "2d35b5fc3d04477aad9ca12f1abfdc9c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> } ", "question": "Which rivers flow into the lower manhatten?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lower_Manhattan", "seq": "27,41", "label": "lower manhatten"}], "predicate mapping": [], "id": "6da0886adf5c4684b48c56ce0fd54b69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Smerinthus_saliceti> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Entomologist>}", "question": "What is the nationality of the entomologist who is a renowned authority of Smerinthus saliceti ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Smerinthus_saliceti", "seq": "75,93", "label": "Smerinthus saliceti"}], "predicate mapping": [], "id": "94f2d3a65f0a4e228e6ea8f5ff7a54b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Give me the home town of all musical artists who uses Guitar as instrument ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guitar", "seq": "54,59", "label": "Guitar"}], "predicate mapping": [], "id": "cce1fd93712c40fca3adc66926bf15f6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Midfielder> }", "question": "Does Walson Augustin play as a midfielder?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Walson_Augustin", "seq": "5,19", "label": "Walson Augustin"}, {"uri": "http://dbpedia.org/resource/Midfielder", "seq": "31,40", "label": "midfielder"}], "predicate mapping": [], "id": "3c09aa3e2b3849638009db8e6cb205ea"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri } ", "question": "What are the airline hubs of Cascade Airways?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats", "seq": "21,43", "label": "hubs of Cascade Airways"}], "predicate mapping": [], "id": "e6fda0418bd341adb1e7444c4d8d5d19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Alive_Naturalsound_Records> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "List the home town of the bands whose label is Alive Naturalsound Records ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alive_Naturalsound_Records", "seq": "47,72", "label": "Alive Naturalsound Records"}], "predicate mapping": [], "id": "50b720c354cd4b49b16d4a0335fb3b51"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri} ", "question": "What is the draft team of the Antoine Bibeau and also has player named Nathan Dempsey ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Antoine_Bibeau", "seq": "30,43", "label": "Antoine Bibeau"}, {"uri": "http://dbpedia.org/resource/Nathan_Dempsey", "seq": "71,84", "label": "Nathan Dempsey"}], "predicate mapping": [], "id": "60a1f302d38442018cd7792bbeefef8a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri } ", "question": "What is the draft team of Antoine Bibeau ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Antoine_Bibeau", "seq": "26,39", "label": "Antoine Bibeau"}], "predicate mapping": [], "id": "3cd70345b5cd4e35992ea594bd44a98d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burnside_Distribution_Corporation> <http://dbpedia.org/ontology/locationCity> ?uri } ", "question": "What is the location city of Burnside Distribution Corporation ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burnside_Distribution_Corporation", "seq": "29,61", "label": "Burnside Distribution Corporation"}], "predicate mapping": [], "id": "27755507bd1f447995393a4420bd86b2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies have their music signed up with Sony Music Entertainment.", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "seq": "48,71", "label": "Sony Music Entertainment"}], "predicate mapping": [], "id": "80de2acb61b74b10b7a95a24dc32f5dc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri } ", "question": "Name the place of Qaqun ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Qaqun", "seq": "18,22", "label": "Qaqun"}], "predicate mapping": [], "id": "1f68b53e47e149d09907454d2b07ef22"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/American_Psycho> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman> }", "question": "Was Marshall Arisman the cover artist in american psycho?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Psycho", "seq": "41,55", "label": "american psycho"}, {"uri": "http://dbpedia.org/resource/Marshall_Arisman", "seq": "4,19", "label": "Marshall Arisman"}], "predicate mapping": [], "id": "8bbfc3dedcd44adda33c6da9cd9eb427"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri } ", "question": "What is the publisher of Lucifer's Hammer ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucifer's_Hammer", "seq": "25,40", "label": "Lucifer's Hammer"}], "predicate mapping": [], "id": "1cb857cf079c4860a7e33220a4e6ff29"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Isaac_Newton> }", "question": "The Information: A History, a Theory, a Flood is a work of Isaac Newton?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood", "seq": "0,44", "label": "The Information: A History, a Theory, a Flood"}, {"uri": "http://dbpedia.org/resource/Isaac_Newton", "seq": "59,70", "label": "Isaac Newton"}], "predicate mapping": [], "id": "11122ef7a8fb46d89a3d6b4d6757b990"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri } ", "question": "To which branch Edwin F. Hunter  belong ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_F._Hunter", "seq": "16,30", "label": "Edwin F. Hunter"}], "predicate mapping": [], "id": "a5f4396627fd49da96fd3f5a294e9ec2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Frank_Rogers_(record_producer)> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}", "question": "Who are some cofounders of record labels with Frank Rogers?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)", "seq": "46,57", "label": "Frank Rogers"}], "predicate mapping": [], "id": "83dd6b5f5814451baa118379ef1bed54"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . }", "question": "Which river's mouth location is Laptev Sea and also Arctic Ocean?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laptev_Sea", "seq": "32,41", "label": "Laptev Sea"}, {"uri": "http://dbpedia.org/resource/Arctic_Ocean", "seq": "52,63", "label": "Arctic Ocean"}], "predicate mapping": [], "id": "65c328879d034ec780147a99b1bc4f61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "question": "What are some devices whose manufacturers are in taiwan?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "seq": "49,54", "label": "taiwan"}], "predicate mapping": [], "id": "5f43897b70a74a828e834f53ae65fb95"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "People in the royal Thai army follow which religion?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "seq": "14,28", "label": "royal Thai army"}], "predicate mapping": [], "id": "018ff49cdfa0414f8e55961b5a7022b1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Watt> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mechanical_engineering> }", "question": "was james watt a mechanical engineer?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Watt", "seq": "4,13", "label": "james watt"}, {"uri": "http://dbpedia.org/resource/Mechanical_engineering", "seq": "17,35", "label": "mechanical engineer"}], "predicate mapping": [], "id": "d94cdcd8ddea4f6ca38ef78a76aeb4f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Battle_of_the_Thames> . ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/War_of_1812> . }", "question": "Who is known for are Battle of the Thames and War of 1812?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_the_Thames", "seq": "21,40", "label": "Battle of the Thames"}, {"uri": "http://dbpedia.org/resource/War_of_1812", "seq": "46,56", "label": "War of 1812"}], "predicate mapping": [], "id": "dd867c518f7546ee9a9f242d25058cb5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/English_language>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "question": "How many groups speak the English Language?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/English_language", "seq": "26,41", "label": "English Language"}], "predicate mapping": [], "id": "977b6f4153b04d6bada78a4b6fb29965"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/South_Station> . ?x <http://dbpedia.org/property/owner> ?uri  . }", "question": "How many owners are there of lines starting at the South Station?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Station", "seq": "51,63", "label": "South Station"}], "predicate mapping": [], "id": "e1f3b680b0e145f894360fb4fde18286"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri } ", "question": "which person created the women in the garden?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Women_in_the_Garden", "seq": "25,43", "label": "women in the garden"}], "predicate mapping": [], "id": "eb7076ae122e4f3bbb01b33be971ffc2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Name the basketball players drafted by Los Angeles Clippers ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Clippers", "seq": "39,58", "label": "Los Angeles Clippers"}], "predicate mapping": [], "id": "f9d09b029bdf4189b301584f3e75101c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }", "question": "What city is located on the mouth of Duwamish River?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duwamish_River", "seq": "37,50", "label": "Duwamish River"}], "predicate mapping": [], "id": "07b9884b55c94fbe84f471475935e466"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Bjelimi\u0107ka_Rijeka> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "question": "Where is the mouth of the river whose tributary is Bjelimi\u0107ka  Rijeka ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bjelimi\u0107ka_Rijeka", "seq": "51,68", "label": "Bjelimi\u0107ka  Rijeka"}], "predicate mapping": [], "id": "61bd46182b1447fdba130dd495c98b61"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri } ", "question": "Who is the artist of Time Radio hour ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour", "seq": "11,35", "label": "artist of Time Radio hour"}], "predicate mapping": [], "id": "626266625dc54af58709a5c0381b7aa6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Duncan_Sandys> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }", "question": "How many prime ministers did the predecessor of Duncan Sandys  serve?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duncan_Sandys", "seq": "48,60", "label": "Duncan Sandys"}], "predicate mapping": [], "id": "d0c72dbed0ac4f5ea394427d5a60df4a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Election>}", "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy", "seq": "35,56", "label": "Y.S. Rajasekhara Reddy"}], "predicate mapping": [], "id": "caedfc75bd384fe7bcb3aa45a68f9dc5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri } ", "question": "Which river flows through Central Washington?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Central_Washington", "seq": "26,43", "label": "Central Washington"}], "predicate mapping": [], "id": "10234f4efd8b4dd087898060000c073b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Franz_Brentano>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Who is the scientist whose academic advisor is Franz Brentano?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Franz_Brentano", "seq": "47,60", "label": "Franz Brentano"}], "predicate mapping": [], "id": "b2b282ef2cd14876880434680aa25fa4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Politics> }", "question": "Is Henry David Thoreau interested in Politics?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_David_Thoreau", "seq": "3,21", "label": "Henry David Thoreau"}, {"uri": "http://dbpedia.org/resource/Politics", "seq": "37,44", "label": "Politics"}], "predicate mapping": [], "id": "2c9741b69a754c32a0977065261b1b01"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> } ", "question": "Tandem Computers is the subsidiary of which company?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tandem_Computers", "seq": "0,15", "label": "Tandem Computers"}], "predicate mapping": [], "id": "8b5c756e4b4d417bb041434770f85a38"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "question": "Which settelment area is the home town of the Danny Felice and Cline Buckens?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Danny_Felice", "seq": "46,57", "label": "Danny Felice"}, {"uri": "http://dbpedia.org/resource/C\u00e9line_Buckens", "seq": "63,75", "label": "Cline Buckens"}], "predicate mapping": [], "id": "6563a461daf1415ab915fc5dfc0eb0be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder who has a child named Lori Black and resting place is Alta Mesa Memorial Park?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "seq": "45,54", "label": "Lori Black"}, {"uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park", "seq": "77,99", "label": "Alta Mesa Memorial Park"}], "predicate mapping": [], "id": "e362bbac4bf646538ffec9b1af997937"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thomas_Bee> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }", "question": "Who appointed the successor of Thomas Bee?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Bee", "seq": "31,40", "label": "Thomas Bee"}], "predicate mapping": [], "id": "5662a9fee12a46c9a92783e3e54161e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sammy_Hagar_&_Friends> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What is the home town of the Band which is the previous work of Sammy Hagar & Friends ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sammy_Hagar_&_Friends", "seq": "64,84", "label": "Sammy Hagar & Friends"}], "predicate mapping": [], "id": "e8bec3414aec434f985546fa26880eff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/VP-8> <http://dbpedia.org/ontology/commandStructure> ?uri. <http://dbpedia.org/resource/VP-10> <http://dbpedia.org/ontology/commandStructure> ?uri . }", "question": "VP-8 and VP-10 shares which command structure ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/VP-8", "seq": "0,3", "label": "VP-8"}, {"uri": "http://dbpedia.org/resource/VP-10", "seq": "9,13", "label": "VP-10"}], "predicate mapping": [], "id": "5b6e06c40cae4a26af7b0d745c9ace62"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which person constituency is Duboce Triangle, San Francisco and military unit is USS Kittiwake (ASR-13)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "seq": "29,58", "label": "Duboce Triangle, San Francisco"}, {"uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)", "seq": "81,93", "label": "USS Kittiwake"}], "predicate mapping": [], "id": "cdcc5bd84e7145dabfc4849ac69af063"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut> } ", "question": "List the people residing in Wilton, Connecticut?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wilton,_Connecticut", "seq": "28,46", "label": "Wilton, Connecticut"}], "predicate mapping": [], "id": "c2a0f7c7f5f54180bbca4cd712cbfc97"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> }", "question": "Is Ethics the main interests of Henry David Thoreau?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_David_Thoreau", "seq": "32,50", "label": "Henry David Thoreau"}, {"uri": "http://dbpedia.org/resource/Ethics", "seq": "3,8", "label": "Ethics"}], "predicate mapping": [], "id": "cce9e73a34874a43a8eec33a74970392"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri } ", "question": "Name the other party of Chandra Shekhar ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chandra_Shekhar", "seq": "24,38", "label": "Chandra Shekhar"}], "predicate mapping": [], "id": "610c262711204bef968971cfcdf19b3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery>  . }", "question": "How many people are buried in Arlington National Cemetery?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_National_Cemetery", "seq": "30,56", "label": "Arlington National Cemetery"}], "predicate mapping": [], "id": "87c465fa859b45d78b3a51868b1d1375"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fa'a'\u0101_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Tahiti> }", "question": "Does Fa'a' International Airport serve tahiti too?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fa'a'\u0101_International_Airport", "seq": "5,31", "label": "Fa'a' International Airport"}, {"uri": "http://dbpedia.org/resource/Tahiti", "seq": "39,44", "label": "tahiti"}], "predicate mapping": [], "id": "17b2beca1aea4de591ccbcb84821c1a2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ", "question": "Which animator of Tommy Tucker's Tooth is also the film director of Alice's Wonderland ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alice's_Wonderland", "seq": "68,85", "label": "Alice's Wonderland"}, {"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "18,37", "label": "Tommy Tucker's Tooth"}], "predicate mapping": [], "id": "d23e68c01b574ddc9271799a3081aec1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . }", "question": "What was created by Larry David and Jerry Seinfeld?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Larry_David", "seq": "20,30", "label": "Larry David"}, {"uri": "http://dbpedia.org/resource/Jerry_Seinfeld", "seq": "36,49", "label": "Jerry Seinfeld"}], "predicate mapping": [], "id": "67455a7a7dde4d828284efb85a8ab936"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri} ", "question": "Which license of the Microsoft Office Picture Manager is also the  product of the Apple Productivity Experience Group ", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager", "seq": "21,52", "label": "Microsoft Office Picture Manager"}, {"uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group", "seq": "82,116", "label": "Apple Productivity Experience Group"}], "predicate mapping": [], "id": "e647f8a4abe9470d911a1b8e08445ef3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri } ", "question": "Who does Cam PLante plays for ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cam_Plante", "seq": "9,18", "label": "Cam PLante"}], "predicate mapping": [], "id": "57c6b07e37134052a728a3def6121f55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Paris> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "question": "For everyone who died in paris, count their different fields of work.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paris", "seq": "25,29", "label": "paris"}], "predicate mapping": [], "id": "587b373a04ab48eeb4fd4cdba4abc95d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caterpillar_797F> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }", "question": "Is the Caterpullar 797F assembled in North America?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Caterpillar_797F", "seq": "7,22", "label": "Caterpullar 797F"}, {"uri": "http://dbpedia.org/resource/North_America", "seq": "37,49", "label": "North America"}], "predicate mapping": [], "id": "d8f88e1d32024fa5bfff232c9286e30a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley>  . }", "question": "Michael Deeley produce how many movies?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "0,13", "label": "Michael Deeley"}], "predicate mapping": [], "id": "74bea979df0f49f0aafba5f2d1be9297"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Outlawz> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Tupac_Shakur> }", "question": "Was tupac a member of Outlawz?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Outlawz", "seq": "22,28", "label": "Outlawz"}, {"uri": "http://dbpedia.org/resource/Tupac_Shakur", "seq": "4,17", "label": "tupac a member"}], "predicate mapping": [], "id": "55dc98a69d7e46bc9d0d587c20083de5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Dan_River_(Middle_East)> }", "question": "Does Dan River flow into the Jordan Valley?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_River", "seq": "5,13", "label": "Dan River"}, {"uri": "http://dbpedia.org/resource/Dan_River_(Middle_East)", "seq": "5,13", "label": "Dan River"}], "predicate mapping": [], "id": "1233074e435847cb89d45254f080d56f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club> }", "question": "Does Beth Tweddle play for the City of Liverpool gymnast club?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beth_Tweddle", "seq": "5,16", "label": "Beth Tweddle"}, {"uri": "http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club", "seq": "31,60", "label": "City of Liverpool gymnast club"}], "predicate mapping": [], "id": "bc66c5524237472895f7631eb4e962e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Subang,_Indonesia> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "List all the hubs of the airline whose one of the hub is Subang, Indonesia ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Subang,_Indonesia", "seq": "57,73", "label": "Subang, Indonesia"}], "predicate mapping": [], "id": "1c29ceb7c9044f359907d2b49a487e25"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . }", "question": "Music of how many things has been given by Akira Ifukube?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akira_Ifukube", "seq": "43,55", "label": "Akira Ifukube"}], "predicate mapping": [], "id": "fa117cae2bc74153aff9272ca43d4cf1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_Avenue> <http://dbpedia.org/property/counties> ?uri. <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri . }", "question": "To which counties do Jerome avenue and Tremont avenue belong?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerome_Avenue", "seq": "21,33", "label": "Jerome avenue"}, {"uri": "http://dbpedia.org/resource/Tremont_Avenue", "seq": "39,52", "label": "Tremont avenue"}], "predicate mapping": [], "id": "df64ee27d66345969b11885dcb0f0d32"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> }", "question": "Was Krzystof Wielicki the first person that ascended the mt everest?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Everest", "seq": "57,66", "label": "mt everest"}, {"uri": "http://dbpedia.org/resource/Krzysztof_Wielicki", "seq": "4,20", "label": "Krzystof Wielicki"}], "predicate mapping": [], "id": "7e064438df204412a9e513d66ee3cc5e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "List the sports played in private universities.", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Private_university", "seq": "26,45", "label": "private universities"}], "predicate mapping": [], "id": "220dbedddb3a4970b6b74f1fa2282d6b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d'Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri } ", "question": "Pointe d'Aveneyre belongs to which mountain range?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pointe_d'Aveneyre", "seq": "0,16", "label": "Pointe d'Aveneyre"}], "predicate mapping": [], "id": "1d1199ba017a424983574e26ac9cc2bb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Way_to_Your_Heart> <http://dbpedia.org/ontology/recordLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . }", "question": "Which currency is used by the record label of the Way to Your Heart?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Way_to_Your_Heart", "seq": "46,66", "label": "the Way to Your Heart"}], "predicate mapping": [], "id": "dd559ff6b26c4bb5b8fbcc642135b6f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Monticello>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Who is the office holder whose resting place is Monticello?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monticello", "seq": "48,57", "label": "Monticello"}], "predicate mapping": [], "id": "2516a91470b8418cb05fc66aaf9f2d9e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "Name the president whose had relatives in Clinton family and lieutenant named Joe Purcell?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clinton_family", "seq": "42,55", "label": "Clinton family"}, {"uri": "http://dbpedia.org/resource/Joe_Purcell", "seq": "78,88", "label": "Joe Purcell"}], "predicate mapping": [], "id": "287e9d5624e64fa3a256084cbc7a853c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Edward_O._Wolcott> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "Where is the tombstone of the successor of Edward Wolcott?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edward_O._Wolcott", "seq": "43,56", "label": "Edward Wolcott"}], "predicate mapping": [], "id": "221d800881d44522a1fbc7d81300bcb8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carolyn_Dennis> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri } ", "question": "Who are the associated musical artist of Carolyn Dennis?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carolyn_Dennis", "seq": "41,54", "label": "Carolyn Dennis"}], "predicate mapping": [], "id": "bfea3fef8cd04b65b6f6dcf3078461ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ", "question": "Who oarent organization of Get TV is also the label provider of I Pray on CHristmas ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/I_Pray_on_Christmas", "seq": "64,82", "label": "I Pray on CHristmas"}, {"uri": "http://dbpedia.org/resource/GetTV", "seq": "27,32", "label": "Get TV"}], "predicate mapping": [], "id": "6dd6deaa7cd2434fb62beb47d4ae9ff9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Plaza_on_DeWitt> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "What is the resting place of the engineer who was the architect of Plaza on DeWitt?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plaza_on_DeWitt", "seq": "67,81", "label": "Plaza on DeWitt"}], "predicate mapping": [], "id": "81672c09f09c4704b6188617b549a4c1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Caucasian_Emirate> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Islam> }", "question": "Is north caucasian emirate have an islamic government?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Caucasian_Emirate", "seq": "3,25", "label": "north caucasian emirate"}, {"uri": "http://dbpedia.org/resource/Islam", "seq": "35,41", "label": "islamic"}], "predicate mapping": [], "id": "139890f04c654406a0930193ff1b4264"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Game>}", "question": "What is the game whose genre is Mind sport?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mind_sport", "seq": "32,41", "label": "Mind sport"}], "predicate mapping": [], "id": "a5503f4d85444a1bbe8edc89a85b5984"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "How many awards have graduates from the University of Queensland earned?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Queensland", "seq": "40,63", "label": "University of Queensland"}], "predicate mapping": [], "id": "2befeb95c8a64b9e882868baec3055f9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Stanford_White> . ?x <http://dbpedia.org/ontology/architect> ?uri }", "question": "How many other architect are there of the historic places whose architect is also Stanford White ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanford_White", "seq": "82,95", "label": "Stanford White"}], "predicate mapping": [], "id": "25e3cd095c5a460e818600f9908859d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}", "question": "In how many states can one find Burr Tuss kind of bridges?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Burr_Truss", "seq": "32,40", "label": "Burr Tuss"}], "predicate mapping": [], "id": "63cb9ee6aac848bfab4e1474f02fa6cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose theme music is composed by Julian Gingell and broadcasted on FOX ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "seq": "58,71", "label": "Julian Gingell"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "77,90", "label": "broadcasted on"}], "predicate mapping": [], "id": "c547ee5efa2249c4a8e652d7c3822fed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Lake_Mead> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}", "question": "What cities are around the valley bordering Lake Mead?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Mead", "seq": "44,52", "label": "Lake Mead"}], "predicate mapping": [], "id": "85b8568d9aef45bab5f160d0fd9ad8f9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_House_Not_Meant_to_Stand> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/Akale> <http://dbpedia.org/ontology/writer> ?uri} ", "question": "Who wrote A house not meant to stand and Akale?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_House_Not_Meant_to_Stand", "seq": "10,35", "label": "A house not meant to stand"}, {"uri": "http://dbpedia.org/resource/Akale", "seq": "41,45", "label": "Akale"}], "predicate mapping": [], "id": "e4faeda0920e4c5ba42aed906478d386"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Green_River_(Duwamish_River)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Through which important cities the does the river originating from the Duwamish, flow?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Green_River_(Duwamish_River)", "seq": "40,48", "label": "the river"}], "predicate mapping": [], "id": "03c8435f984a413f9bdbfe9927c33086"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fugitive_Kind> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Notebook_of_Trigorin> <http://dbpedia.org/ontology/author> ?uri . }", "question": "The fugitive Kind and the Notebook of Trigorin is written by what author?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Fugitive_Kind", "seq": "0,16", "label": "The fugitive Kind"}, {"uri": "http://dbpedia.org/resource/The_Notebook_of_Trigorin", "seq": "22,45", "label": "the Notebook of Trigorin"}], "predicate mapping": [], "id": "835d9ccd780342e6a7509b3ca855b1d1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Viacom_(original)> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose company is owned by Viacom?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Viacom_(original)", "seq": "56,61", "label": "Viacom"}], "predicate mapping": [], "id": "bfb53a96bd9c48b28e143f608fb4f1f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Metairie_Cemetery> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which politicians son is buried in Metairie Cementery?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metairie_Cemetery", "seq": "35,52", "label": "Metairie Cementery"}], "predicate mapping": [], "id": "4dc617be22b34ffdb330e545e12a8ad9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AT&T_Park> <http://dbpedia.org/property/operator> ?uri } ", "question": "Who is the operator of AT&T Park ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/AT&T_Park", "seq": "23,31", "label": "AT&T Park"}], "predicate mapping": [], "id": "df298794f4bc4b8bad182adc7794db3a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri } ", "question": "What is the origin of Xynisteri?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Xynisteri", "seq": "22,30", "label": "Xynisteri"}], "predicate mapping": [], "id": "f703a972a86f40aa9788b9324760cfa2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/9_to_5_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ", "question": "Who gave the musical score  of 9 to 5 (musical) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/9_to_5_(musical)", "seq": "31,36", "label": "9 to 5"}], "predicate mapping": [], "id": "65165521d68f40e7a5aa5bcd34fd39b3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }", "question": "To which students did Ernest Rutherford advised to?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "seq": "22,38", "label": "Ernest Rutherford"}], "predicate mapping": [], "id": "d039c214abca4acb95ebefed1ec4aee3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }", "question": "Give me the number of home stadiums of teams managed by John Spencer.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)", "seq": "56,67", "label": "John Spencer"}], "predicate mapping": [], "id": "7cd0eadad948412c89a6e72b70ef5624"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri. <http://dbpedia.org/resource/Martin_Suji> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "What is the Home Stadium of the Kenya national under-20 football team where Matin Suji was also born ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team", "seq": "32,68", "label": "Kenya national under-20 football team"}, {"uri": "http://dbpedia.org/resource/Martin_Suji", "seq": "76,85", "label": "Matin Suji"}], "predicate mapping": [], "id": "f2f9462195254f19ac762ee377426f3f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Jerzy_J\u00f3zef_Potocki> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "What foundation palce of Temenos Group is the death palce of jerzy Jzef Poocki ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Temenos_Group", "seq": "25,37", "label": "Temenos Group"}, {"uri": "http://dbpedia.org/resource/Jerzy_J\u00f3zef_Potocki", "seq": "61,77", "label": "jerzy Jzef Poocki"}], "predicate mapping": [], "id": "f3e69f0433d44011900bd5304b4d5c31"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/property/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Which company owns the airlines whose hub is in Dubai?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Detroit", "seq": "48,52", "label": "Dubai"}], "predicate mapping": [], "id": "09419b9d207043bc80903f773b894b62"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have parterned with the person choroegraphed by Catarina Lindgren in the past?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Catarina_Lindgren", "seq": "64,80", "label": "Catarina Lindgren"}], "predicate mapping": [], "id": "f6f3a47cf61449bdac6126a01ad39c30"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bertalan_Szemere> <http://dbpedia.org/ontology/monarch> ?uri } ", "question": "Who is the monarch of Bertalan Szemere ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bertalan_Szemere", "seq": "22,37", "label": "Bertalan Szemere"}], "predicate mapping": [], "id": "b565b9a72721499f8857765c8003b017"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "question": "In which city was the film star of Singhasan Battisi born ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)", "seq": "35,51", "label": "Singhasan Battisi"}], "predicate mapping": [], "id": "9a26ec1acb5a49ebb1c6f3430eaf3aec"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/John_Derek> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Who all are starring in the  movies where director of photography is John Derek ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Derek", "seq": "69,78", "label": "John Derek"}], "predicate mapping": [], "id": "e9e11aac69384f7ea4b8193f5237bb97"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "Which awards did the children of Erik Bergman won ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)", "seq": "33,44", "label": "Erik Bergman"}], "predicate mapping": [], "id": "db5d49f80c774b80beb208bc62050aca"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Zachary_Taylor> }", "question": "Was Zachary Taylor a commander of the sixth infantry regiment of US?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)", "seq": "38,60", "label": "sixth infantry regiment"}, {"uri": "http://dbpedia.org/resource/Zachary_Taylor", "seq": "4,17", "label": "Zachary Taylor"}], "predicate mapping": [], "id": "ff4af6d5452c41b6824723db767008d2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Name a basketball player with teams as Chicago Bulls and Phoenix Suns?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "seq": "39,51", "label": "Chicago Bulls"}, {"uri": "http://dbpedia.org/resource/Phoenix_Suns", "seq": "57,68", "label": "Phoenix Suns"}], "predicate mapping": [], "id": "93eaea9dda124dfd85c775d17d677854"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . }", "question": "Who all were venerated in Islam?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Islam", "seq": "26,30", "label": "Islam"}], "predicate mapping": [], "id": "8ca57812f631476bade8b48c874f0758"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timothy_J._Roemer> <http://dbpedia.org/property/state> ?uri } ", "question": "Name the state of Timothy J. Roemer ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Timothy_J._Roemer", "seq": "18,34", "label": "Timothy J. Roemer"}], "predicate mapping": [], "id": "4ad334fedc644b27b70be5eb63ee7379"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What other awards have Becket fund for religious liberty winners received?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty", "seq": "23,55", "label": "Becket fund for religious liberty"}], "predicate mapping": [], "id": "8e746dc2d0ca43a5bb2b3ed8dde3da88"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tornado_(web_server)> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/owner> ?uri  . }", "question": "List the websites which the authors of Tornado own ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tornado_(web_server)", "seq": "39,45", "label": "Tornado"}], "predicate mapping": [], "id": "c8685c50587445548f0ea1f4e315dab0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Henri_Maspero> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }", "question": "What is the field of interest of the advisor of Henri Maspero ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri_Maspero", "seq": "48,60", "label": "Henri Maspero"}], "predicate mapping": [], "id": "937f389062f442449e18135bef47f3eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Name some software as a service?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Software_as_a_service", "seq": "10,30", "label": "software as a service"}], "predicate mapping": [], "id": "644aaef215cc484f9b712c5bc532d4b8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Remote_Desktop_Protocol> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are some other things developed by the company who made the remote desktop protocol?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Remote_Desktop_Protocol", "seq": "65,87", "label": "remote desktop protocol"}], "predicate mapping": [], "id": "179d3cc2b7f440ed93b9efb89aa4ff9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . }", "question": "Who has his resting place at  Plymouth, Vermont and office at Massachusetts House of Representatives?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth,_Vermont", "seq": "30,46", "label": "Plymouth, Vermont"}, {"uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives", "seq": "62,99", "label": "Massachusetts House of Representatives"}], "predicate mapping": [], "id": "fe0d90f8a0604403896d62bdec7384a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's predecessor is  Lucius Cornelius and his associate is Marcus Calpurnius Bibulus?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus", "seq": "38,71", "label": "Lucius Cornelius and his associate"}, {"uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus", "seq": "76,100", "label": "Marcus Calpurnius Bibulus"}], "predicate mapping": [], "id": "a21a8d3f8da84d2aa14502672faa0091"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dad's_Root_Beer> <http://dbpedia.org/property/locationCity> ?uri } ", "question": "What is the location of Dad's Root Beer on Google maps?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dad's_Root_Beer", "seq": "24,38", "label": "Dad's Root Beer"}], "predicate mapping": [], "id": "9e6adf11753c4b9aaf5b447c279a2806"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Jones_(judge)> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Allen_Boyd> <http://dbpedia.org/property/battles> ?uri} ", "question": "Which battle is Jim Jones associated with to which Allen Boyd is also associated ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Jones_(judge)", "seq": "16,24", "label": "Jim Jones"}, {"uri": "http://dbpedia.org/resource/Allen_Boyd", "seq": "51,60", "label": "Allen Boyd"}], "predicate mapping": [], "id": "6ec30fe0b36547bcb0729a3ebbe32668"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Czech_Extraliga> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }", "question": "For how many teams have the league players of Czech Extraliga, previously played?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Czech_Extraliga", "seq": "46,60", "label": "Czech Extraliga"}], "predicate mapping": [], "id": "a7c87f40069e4564932474884de6f858"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the people educated at Harvard-Westlake School and has resting place as Palo Alto, California?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "28,50", "label": "Harvard-Westlake School"}, {"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "seq": "77,97", "label": "Palo Alto, California"}], "predicate mapping": [], "id": "7f370a0e523a45c1a3b23489c96c5c88"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "What is the band with previous members  Kevin Jonas and Joe Jonas?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kevin_Jonas", "seq": "40,50", "label": "Kevin Jonas"}, {"uri": "http://dbpedia.org/resource/Joe_Jonas", "seq": "56,64", "label": "Joe Jonas"}], "predicate mapping": [], "id": "8a6a91af36574b0f862aec730fbae99a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . }", "question": "Who offers the services of OneDrive and Outlook.com?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "seq": "27,34", "label": "OneDrive"}, {"uri": "http://dbpedia.org/resource/Outlook.com", "seq": "40,50", "label": "Outlook.com"}], "predicate mapping": [], "id": "5123bf218806473e8b8cb4decac4c5c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "What did other artists associated with the Shirelles make?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Shirelles", "seq": "39,51", "label": "the Shirelles"}], "predicate mapping": [], "id": "ebe0a1b44e2c4bb081fc827147037d26"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Mario_Garc\u00eda_Menocal> <http://dbpedia.org/ontology/almaMater> ?uri} ", "question": "Which parent company of the Cornell University Press is also the alma mater of the Mario Garca Menocal?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cornell_University_Press", "seq": "28,51", "label": "Cornell University Press"}, {"uri": "http://dbpedia.org/resource/Mario_Garc\u00eda_Menocal", "seq": "83,101", "label": "Mario Garca Menocal"}], "predicate mapping": [], "id": "0a735fe654c440d3aa2c9dcdb4aaf390"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Count the band members of Skull Gang?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Skull_Gang", "seq": "26,35", "label": "Skull Gang"}], "predicate mapping": [], "id": "faf06a2c20664530a15b7b7d5b272fdc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri } ", "question": "Name the nearest city to David W. Brown House ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_W._Brown_House", "seq": "25,44", "label": "David W. Brown House"}], "predicate mapping": [], "id": "9d219753a5dd4445828a1191d8654d63"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nutting> <http://dbpedia.org/ontology/knownFor> ?uri } ", "question": "What is the political party to which Purnima Banerjee is a member of?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Nutting", "seq": "59,67", "label": "member of"}], "predicate mapping": [], "id": "f01315d63b924a25a46e91aae29457bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/John_Hospers> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . }", "question": "Who was the president during the time the opponent of John Hospers was in the office?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Hospers", "seq": "54,65", "label": "John Hospers"}], "predicate mapping": [], "id": "7c3c9d3e96c54807847b7a2b14049933"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/CitiTrends_(radio_show)> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Whcih land of Citi Trends is also the constituency of Malik Al-Hassan Yakubu ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu", "seq": "54,75", "label": "Malik Al-Hassan Yakubu"}, {"uri": "http://dbpedia.org/resource/CitiTrends_(radio_show)", "seq": "14,24", "label": "Citi Trends"}], "predicate mapping": [], "id": "7adccf6358744d82b563e59f30b482fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Panos_Ioannides> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}", "question": "In which country does the publishing house exist which was cofounded by Panos Loannides?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Panos_Ioannides", "seq": "72,86", "label": "Panos Loannides"}], "predicate mapping": [], "id": "4bd70a53db094071a29c3e999f05bee9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/SIGGRAPH> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List all the awards won by the artist who has won SIGGRAPH ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/SIGGRAPH", "seq": "50,57", "label": "SIGGRAPH"}], "predicate mapping": [], "id": "03d1aac45ffe4ba0a49144fd00b0c7b1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri } ", "question": "Name the work institutions of Andrew Schally?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Schally", "seq": "30,43", "label": "Andrew Schally"}], "predicate mapping": [], "id": "133aa4a4648d4bb3b3f15ed06a0566cd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/property/cities> ?uri } ", "question": "To which settlement does Elliot Bay belong to?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elliott_Bay", "seq": "25,34", "label": "Elliot Bay"}], "predicate mapping": [], "id": "48faaecba3194be8a5d4216c2e5bbe29"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}", "question": "What are the important buildings of the architect whose one of the significant building is Krasnye Vorota?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)", "seq": "91,104", "label": "Krasnye Vorota"}], "predicate mapping": [], "id": "ab45c23c549d43d290b260f9930c647e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Baco_noir> <http://dbpedia.org/ontology/wineRegion> ?uri  . }", "question": "In how many regions is the Baco Noir made?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baco_noir", "seq": "27,35", "label": "Baco Noir"}], "predicate mapping": [], "id": "ae46bb43a8ad4337abd5a034defa5266"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/RCA_Records> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movies have their music composed by someone that signed up with RCA Records?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/RCA_Records", "seq": "70,80", "label": "RCA Records"}], "predicate mapping": [], "id": "59739c63c5ec4c2d8d42e0dfefe5565a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri } ", "question": "Where does the jurisdiction of European Border and Coast Guard fall?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard", "seq": "31,61", "label": "European Border and Coast Guard"}], "predicate mapping": [], "id": "4d4d5eb4e4af459bb778d50006a9fc0b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Aida_(musical)> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}", "question": "Which band produced the album Aida?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aida_(musical)", "seq": "30,33", "label": "Aida"}], "predicate mapping": [], "id": "ccc04aa37c9b42178de44ab219cf6834"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies have been directed by Orson Welles ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orson_Welles", "seq": "38,49", "label": "Orson Welles"}], "predicate mapping": [], "id": "8f627e41b2a9414c9787d98739f906f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Ministry_of_Finance_(Norway)> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "What do the banks owned by Norwegian ministry of finance produce?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ministry_of_Finance_(Norway)", "seq": "37,55", "label": "ministry of finance"}], "predicate mapping": [], "id": "5a074df3521141adb1aefaec144c1510"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trishna_(yacht)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri . }", "question": "Name the common home port of the Trishna (yacht) and INS Viraat (R22)?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trishna_(yacht)", "seq": "33,39", "label": "Trishna"}, {"uri": "http://dbpedia.org/resource/INS_Viraat_(R22)", "seq": "53,62", "label": "INS Viraat"}], "predicate mapping": [], "id": "2ac31aab8ba340e8947ddfab3797c6d5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philadelphia_Rage> <http://dbpedia.org/ontology/stadium> ?uri } ", "question": "Where is the stadium of Philadelphia Rage ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philadelphia_Rage", "seq": "24,40", "label": "Philadelphia Rage"}], "predicate mapping": [], "id": "9fbc4d9d9b2b46fab68cb8a4b910c7e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose network's successor is BBC Two?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Two", "seq": "59,65", "label": "BBC Two"}], "predicate mapping": [], "id": "f9e9a9d4684b4c4cbc193ca30cb7b7b6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial> . ?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's resting place is William Henry Harrison Tomb State Memorial and has governor named Charles Willing Byrd?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial", "seq": "39,80", "label": "William Henry Harrison Tomb State Memorial"}, {"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "seq": "105,124", "label": "Charles Willing Byrd"}], "predicate mapping": [], "id": "0899883477a746c38524653386c91724"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri } ", "question": "What organisation regulates and controls the New Sanno Hotel?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Sanno_Hotel", "seq": "45,59", "label": "New Sanno Hotel"}], "predicate mapping": [], "id": "97da8d0de1584a23a8560ea19c285153"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/species> <http://dbpedia.org/resource/Minbari> . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "In which series do I find Minbari species' characters?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Minbari", "seq": "26,32", "label": "Minbari"}], "predicate mapping": [], "id": "909f5544b90d4c97b7f4ae5e5c24b2e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri  . }", "question": "Who designed the language integrated query?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Language_Integrated_Query", "seq": "17,41", "label": "language integrated query"}], "predicate mapping": [], "id": "13dbeaf27a1e47de9803518e1c666298"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Motown> . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "List the associates of bands which have a label by Motown ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motown", "seq": "51,56", "label": "Motown"}], "predicate mapping": [], "id": "38ca63fc474a462fafe6fec5ad06b1e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Thom_Evans> . ?x <http://dbpedia.org/ontology/partner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "question": "Name the partners of the models whose one of the partner is Thom Evans ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thom_Evans", "seq": "60,69", "label": "Thom Evans"}], "predicate mapping": [], "id": "eca396c7779e4ee7b71db8d671efb974"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beyond_the_Sixth_Seal> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Greg_Weeks> }", "question": "Is Greg Weeks the band member of Beyond the Sixth Seal?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beyond_the_Sixth_Seal", "seq": "33,53", "label": "Beyond the Sixth Seal"}, {"uri": "http://dbpedia.org/resource/Greg_Weeks", "seq": "3,12", "label": "Greg Weeks"}], "predicate mapping": [], "id": "0b2cdf195c3d45109c78f3171835c056"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)> <http://dbpedia.org/ontology/vicePresident> ?uri  . }", "question": "Who was the vice president under which elizabeth alexander served?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)", "seq": "39,57", "label": "elizabeth alexander"}], "predicate mapping": [], "id": "8815d1ddfc484214b7b55c86c2793625"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show voiced by April Stewart and Eliza Schneider?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/April_Stewart", "seq": "35,47", "label": "April Stewart"}, {"uri": "http://dbpedia.org/resource/Eliza_Schneider", "seq": "53,67", "label": "Eliza Schneider"}], "predicate mapping": [], "id": "fecf2980af9448768aa17425d8c48dec"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oh!_Darling> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Robin_Gibb> }", "question": "Is Robin Gibb the singer of Oh! Darling?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oh!_Darling", "seq": "28,38", "label": "Oh! Darling"}, {"uri": "http://dbpedia.org/resource/Robin_Gibb", "seq": "3,12", "label": "Robin Gibb"}], "predicate mapping": [], "id": "ee5fc86d6ea147f0b4ab317a186d2083"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/ETC_(TV_channel)> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "question": "Where do networks affiliated with ETC broadcast?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/ETC_(TV_channel)", "seq": "34,36", "label": "ETC"}], "predicate mapping": [], "id": "ff08a87358c14e6a98db33b34547c5b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duddeston_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri . }", "question": "Which borough is common for Duddeston and Bordesley railway station ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duddeston_railway_station", "seq": "42,66", "label": "Bordesley railway station"}, {"uri": "http://dbpedia.org/resource/Bordesley_railway_station", "seq": "42,66", "label": "Bordesley railway station"}], "predicate mapping": [], "id": "62e1ac6a48374811b387c936277abf3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "seq": "79,100", "label": "Siege of fort recovery"}, {"uri": "http://dbpedia.org/resource/North_Bend,_Ohio", "seq": "52,69", "label": "North Bend and was"}], "predicate mapping": [], "id": "ae35cc3329ac40a08ebe49385e806d35"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goose_Lake_Valley> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Lava_River_Cave> <http://dbpedia.org/ontology/location> ?uri} ", "question": "In which state is Goose Lake Valle, which is also part of Lava River Cave ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Goose_Lake_Valley", "seq": "18,33", "label": "Goose Lake Valle"}, {"uri": "http://dbpedia.org/resource/Lava_River_Cave", "seq": "58,72", "label": "Lava River Cave"}], "predicate mapping": [], "id": "19aa6a8901924e0998a44283eaa9aef4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Lausanne> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "question": "In which fields have people born in Lausanne worked?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lausanne", "seq": "36,43", "label": "Lausanne"}], "predicate mapping": [], "id": "75b80b3f8a524509a21451d9a7acc46e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ", "question": "Name the musician who gave the music in Tonight's the night and is also wedded to Alana Stewart ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)", "seq": "40,58", "label": "Tonight's the night"}, {"uri": "http://dbpedia.org/resource/Alana_Stewart", "seq": "82,94", "label": "Alana Stewart"}], "predicate mapping": [], "id": "2275055777524db1a78e0856a6e2cc1b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Donald_Brooks> <http://dbpedia.org/property/education> ?uri} ", "question": "For whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Springer", "seq": "13,28", "label": "Michael Springer"}, {"uri": "http://dbpedia.org/resource/Donald_Brooks", "seq": "82,94", "label": "Donald Brooks"}], "predicate mapping": [], "id": "86888920922147cfbbe21f09a0e2c077"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> <http://dbpedia.org/resource/Roger_Federer> }", "question": "Is Roger Federer the flagbearer of Switzerland at the 2004 Summer Olympics?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics", "seq": "35,73", "label": "Switzerland at the 2004 Summer Olympics"}, {"uri": "http://dbpedia.org/resource/Roger_Federer", "seq": "3,15", "label": "Roger Federer"}], "predicate mapping": [], "id": "9a61bb81243145d9a21abaa26c33e519"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "How many artists have collaborated with famous guitar players?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guitar", "seq": "47,52", "label": "guitar"}], "predicate mapping": [], "id": "8fb26b1d97b449afb64a79c4c66ada90"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Biscayne_Bay> <http://dbpedia.org/property/cities> ?uri . }", "question": "Which US city can be said to be a part of american mediterranean sea and the biscayne bay?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "seq": "42,67", "label": "american mediterranean sea"}, {"uri": "http://dbpedia.org/resource/Biscayne_Bay", "seq": "77,88", "label": "biscayne bay"}], "predicate mapping": [], "id": "b7df21da53144aef8f0ee3bb6dbc9e31"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/United_States_Coast_Guard> . ?x <http://dbpedia.org/ontology/profession> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "List the profession of senate whose one of the profession is United States Coast Guard ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Coast_Guard", "seq": "61,85", "label": "United States Coast Guard"}], "predicate mapping": [], "id": "30605f74aa054fabbb707ab5e85247fe"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri } ", "question": "What is the broadcast area of CFRX ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/CFRX", "seq": "30,33", "label": "CFRX"}], "predicate mapping": [], "id": "9a955de401c24f42860fa3e6615c803a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "What have some US citizens died of?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "18,30", "label": "citizens died"}], "predicate mapping": [], "id": "3d8f7450e4e84935b8f482bf336f0843"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Veterinary_physician> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "question": "What are some famous veterinary physicians known for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Veterinary_physician", "seq": "21,41", "label": "veterinary physicians"}], "predicate mapping": [], "id": "60f9b1b1c6234d06881d6c6c2211192a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Platte_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Colorado> }", "question": "Does the platte river originate in Colorado?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Platte_River", "seq": "9,20", "label": "platte river"}, {"uri": "http://dbpedia.org/resource/Colorado", "seq": "35,42", "label": "Colorado"}], "predicate mapping": [], "id": "da022345367d441484d1fdcb8582c86b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri } ", "question": "What is the venerated in of Edwin of Northumbria ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_of_Northumbria", "seq": "28,47", "label": "Edwin of Northumbria"}], "predicate mapping": [], "id": "a09f56627a1f4c2b81bc88acfcd1d276"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Kulim> }", "question": "Is the Hyundai Lavita assembled in Kulim?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "seq": "7,20", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Kulim", "seq": "35,39", "label": "Kulim"}], "predicate mapping": [], "id": "1045a9b2aa9742818b6c4fc9ba72c399"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}", "question": "Which labels have published songs written by Harry Connick Jr?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "seq": "45,60", "label": "Harry Connick Jr"}], "predicate mapping": [], "id": "02fc143c1e0e4cdfb5594f43eb88137c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Sea_of_Marmara> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "What cities are around the sea which flows into Marmara?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sea_of_Marmara", "seq": "43,54", "label": "into Marmara"}], "predicate mapping": [], "id": "2eb3f8a41e454021a4af658ede9f06ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the city on the shore ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaliningrad", "seq": "53,63", "label": "Kaliningrad"}, {"uri": "http://dbpedia.org/resource/Danish_straits", "seq": "24,37", "label": "Danish Straits"}], "predicate mapping": [], "id": "f53a890c59d2460590398aa51119216e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/The_Palace_of_Auburn_Hills>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "What sports team's arena is The Palace of Auburn Hills", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills", "seq": "28,53", "label": "The Palace of Auburn Hills"}], "predicate mapping": [], "id": "20805a9d262743e789ad75cd118f889a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/ITV_(TV_network)>  . }", "question": "ITV employes how many people?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/ITV_(TV_network)", "seq": "0,2", "label": "ITV"}], "predicate mapping": [], "id": "e163314e98334f77af0d98ad0c754fc7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Herbert_Bautista> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "What is the mascot of the military unit whose commander is Herbert Bautista ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Herbert_Bautista", "seq": "59,74", "label": "Herbert Bautista"}], "predicate mapping": [], "id": "b75560b2e765458984a0419ab35147c9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri} ", "question": "Whihc associate of THomas Bryan Martin is also the founder of Pittsburgh ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin", "seq": "19,37", "label": "THomas Bryan Martin"}, {"uri": "http://dbpedia.org/resource/Pittsburgh", "seq": "62,71", "label": "Pittsburgh"}], "predicate mapping": [], "id": "128fa3e3924b4f7f8f3960d994deda55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Search_(2014_film)> <http://dbpedia.org/ontology/editing> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What are the awards won by the film editor of The Search?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Search_(2014_film)", "seq": "46,55", "label": "The Search"}], "predicate mapping": [], "id": "64e38f50da46457e8bb6a34f4d6cb76f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/National_Endowment_for_the_Arts> <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/Federal_government_of_the_United_States> }", "question": "Is the national endowment of arts under the jurisdiction of federal government of US?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Endowment_for_the_Arts", "seq": "7,32", "label": "national endowment of arts"}, {"uri": "http://dbpedia.org/resource/Federal_government_of_the_United_States", "seq": "60,83", "label": "federal government of US"}], "predicate mapping": [], "id": "ae5b96d1769c443288f79abd58151136"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Kevin_Rudd> }", "question": "Was Kevin Rudd the PM of Julia Gillard?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julia_Gillard", "seq": "25,37", "label": "Julia Gillard"}, {"uri": "http://dbpedia.org/resource/Kevin_Rudd", "seq": "4,13", "label": "Kevin Rudd"}], "predicate mapping": [], "id": "e01fcd131f144d599b2e638f003d7552"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Ramon_Magsaysay_Award> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which country were the people from who became famous for the Ramon Mangsaysay Award?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ramon_Magsaysay_Award", "seq": "61,82", "label": "Ramon Mangsaysay Award"}], "predicate mapping": [], "id": "8b01cd75cf8c483682925fdc176c2317"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "question": "Which employer of Michael M. Sears is also the producer of Delta III ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_M._Sears", "seq": "18,33", "label": "Michael M. Sears"}, {"uri": "http://dbpedia.org/resource/Delta_III", "seq": "59,67", "label": "Delta III"}], "predicate mapping": [], "id": "976416dab3a74a80855d6d582a488ff4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Bison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Name some schools with a bison as their mascot?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bison", "seq": "25,29", "label": "bison"}], "predicate mapping": [], "id": "66cb24d6ac6b49799c5f50a7afff386e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Guggenheim_family> . ?uri <http://dbpedia.org/property/owner> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guggenheim_family", "seq": "0,16", "label": "Guggenheim family"}], "predicate mapping": [], "id": "83152a2adbe949ab904fda1101384ee7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> ?uri } ", "question": "Who won the ohio house of representatives, 2010?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010", "seq": "4,46", "label": "won the ohio house of representatives, 2010"}], "predicate mapping": [], "id": "2779011abe114ab58fb5e700589ea345"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}", "question": "Where is the headquarters of the public transit system which owns the American Boulevard (Metro Transit station) located ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)", "seq": "70,87", "label": "American Boulevard"}], "predicate mapping": [], "id": "8a38e3ab78b24fbbb14d1cc919014e96"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . }", "question": "Which current Michigan Wolverines team member debuted in Chicago Bears ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bears", "seq": "57,69", "label": "Chicago Bears"}, {"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "seq": "14,32", "label": "Michigan Wolverines"}], "predicate mapping": [], "id": "1d381dc7465f4077a61b29e0787de6e6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Playhouse> <http://dbpedia.org/ontology/operatedBy> ?uri } ", "question": "Who operates Liverpool Playhouse ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liverpool_Playhouse", "seq": "13,31", "label": "Liverpool Playhouse"}], "predicate mapping": [], "id": "0bad2fab137148b9af20a97efb55fe8b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Bangladesh> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "List all the members of the organization whose one of the members is Bangladesh ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangladesh", "seq": "69,78", "label": "Bangladesh"}], "predicate mapping": [], "id": "ffe42b8531f540398540cdb1b6cb13ca"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Torrey_Pines_Gliderport> <http://dbpedia.org/property/owner> ?uri } ", "question": "Who owns Torrey Pines Gliderport?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Torrey_Pines_Gliderport", "seq": "9,31", "label": "Torrey Pines Gliderport"}], "predicate mapping": [], "id": "832149002e9c4fbb885ab3ab42730390"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri } ", "question": "where did Deion Sanders debut?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Deion_Sanders", "seq": "10,22", "label": "Deion Sanders"}], "predicate mapping": [], "id": "23972462c8c7409cb83f6a8f21f0c607"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's successor is Adrian A. Basora and child named Lori Black?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "seq": "35,50", "label": "Adrian A. Basora"}, {"uri": "http://dbpedia.org/resource/Lori_Black", "seq": "68,77", "label": "Lori Black"}], "predicate mapping": [], "id": "ce4f33c52b244261be90196bcfed8237"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}", "question": "List all the school of the rugby player whose one of the school is Michael House ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michaelhouse", "seq": "67,79", "label": "Michael House"}], "predicate mapping": [], "id": "d85c374fb7e047cda434efae8462b69b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the tv show with judges Randy Jackson and Jennifer Lopez?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Randy_Jackson", "seq": "29,41", "label": "Randy Jackson"}, {"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "seq": "47,60", "label": "Jennifer Lopez"}], "predicate mapping": [], "id": "218fb3f1f7bf4d3599daaf5a95885fbe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "What is the total number of professions in which someone who has suicided worked?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Suicide", "seq": "65,72", "label": "suicided"}], "predicate mapping": [], "id": "fda94b922adc4c96852e7800f60f797a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Waitakere_United> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "To which country do the players of Waitakere United belong?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waitakere_United", "seq": "35,50", "label": "Waitakere United"}], "predicate mapping": [], "id": "59100a9ec0e24b988611ea5a66675140"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "question": "How many relatives are there of veterans of operation Barbarossa?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Barbarossa", "seq": "44,63", "label": "operation Barbarossa"}], "predicate mapping": [], "id": "75a241fa2e024a7a95e0108a8b6b66ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri  . }", "question": "How many leagues have used the O.co Coliseum?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/O.co_Coliseum", "seq": "31,43", "label": "O.co Coliseum"}], "predicate mapping": [], "id": "5f69f094954f4553a0bd03d14da852d6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What kind of games are made by Interplay Entertainment?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Interplay_Entertainment", "seq": "31,53", "label": "Interplay Entertainment"}], "predicate mapping": [], "id": "23a0e9e271d44ba286716b46fd3eb912"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sune_Agerschou> <http://dbpedia.org/ontology/nationality> ?uri } ", "question": "What is the nationality of Sune Agerschou ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sune_Agerschou", "seq": "27,40", "label": "Sune Agerschou"}], "predicate mapping": [], "id": "571c9d7dbe1f4a07a655803197f286d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/P\u014dmare_II> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Where did the spouse of pmare ii die?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/P\u014dmare_II", "seq": "24,31", "label": "pmare ii"}], "predicate mapping": [], "id": "46880d365fbe4d54b1b965e5b5e1bb77"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Divertis> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "What acts and artists are associated with people who have worked with Divertis?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Divertis", "seq": "70,77", "label": "Divertis"}], "predicate mapping": [], "id": "741520a75f1a4ae9bd0c91c2dcde6627"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cherry_Chevapravatdumrong> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Daisi_Pollard> <http://dbpedia.org/ontology/residence> ?uri . }", "question": "Where do cherry chevapravatdumrong and daisi pollard both live?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cherry_Chevapravatdumrong", "seq": "9,33", "label": "cherry chevapravatdumrong"}, {"uri": "http://dbpedia.org/resource/Daisi_Pollard", "seq": "39,51", "label": "daisi pollard"}], "predicate mapping": [], "id": "eb285e418d9641bcb6ba0c86c444d355"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "How many companies have manufactured the rockets launched from the Cape Canaveral Air Force Station?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station", "seq": "67,98", "label": "Cape Canaveral Air Force Station"}], "predicate mapping": [], "id": "58d7140c8ca74c2d91c063e1e8108063"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WGBC> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri  . }", "question": "Name the  former broadcast network of the television station which is the sister stations of WGBC?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/WGBC", "seq": "93,96", "label": "WGBC"}], "predicate mapping": [], "id": "f8d33f0a3ea5417ca2071226875c8ff9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "Which software uses GTK+ as programming language?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/GTK+", "seq": "20,23", "label": "GTK+"}], "predicate mapping": [], "id": "fc01eb147abb4f76a27e4ee15954b519"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri } ", "question": "What is the distributing label of StandBy Records ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/StandBy_Records", "seq": "34,48", "label": "StandBy Records"}], "predicate mapping": [], "id": "9fd2de743eac4abf82d003f30ce832e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "How many bands are based in London?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "seq": "28,33", "label": "London"}], "predicate mapping": [], "id": "431e3662c6994776a8f35a3d3eb26027"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Robert_Bernstein_(comics)> . ?x <http://dbpedia.org/property/writers> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}", "question": "List all the writers of the comics which has Robert Bernstein as one of the writer ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Bernstein_(comics)", "seq": "45,60", "label": "Robert Bernstein"}], "predicate mapping": [], "id": "8f0cd88f6b6a4041bbed6b3723281f21"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri } ", "question": "To which educational institute does Cornell University Press belong to?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cornell_University_Press", "seq": "36,59", "label": "Cornell University Press"}], "predicate mapping": [], "id": "910a28df8fc54d3cbd74bc9e7923cc70"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Boyle> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Chemistry> }", "question": "Is Robert Boyle a chemist?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Boyle", "seq": "3,14", "label": "Robert Boyle"}, {"uri": "http://dbpedia.org/resource/Chemistry", "seq": "18,24", "label": "chemist"}], "predicate mapping": [], "id": "f1bd78d345634e9d9d237a044ba8599b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Ken_Holland> <http://dbpedia.org/ontology/residence> ?uri} ", "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI", "seq": "26,46", "label": "Live in detroit which"}, {"uri": "http://dbpedia.org/resource/Ken_Holland", "seq": "82,92", "label": "ken Holland"}], "predicate mapping": [], "id": "f6df767b04b1431ab3fbfb73d45d7c56"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Benjamin_Pulleyn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which famous physicist was academically advised by Benjamin Pulleyn?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benjamin_Pulleyn", "seq": "51,66", "label": "Benjamin Pulleyn"}], "predicate mapping": [], "id": "9f90dd10b77a48d1a9a361b34af9145d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Beckler_River> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "question": "What is the county seat of the district through which the Beckler River flows?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Beckler_River", "seq": "58,70", "label": "Beckler River"}], "predicate mapping": [], "id": "3e34613e0d93409d81b5a5ed8d0736e8"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sloth> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }", "question": "Is Sloth in the Chordate phylum?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sloth", "seq": "3,7", "label": "Sloth"}, {"uri": "http://dbpedia.org/resource/Chordate", "seq": "16,23", "label": "Chordate"}], "predicate mapping": [], "id": "7043f3a3431945138482107c7f71a3a7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Name some local authorities of schools which have a mixed gender education system?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mixed-sex_education", "seq": "52,73", "label": "mixed gender education"}], "predicate mapping": [], "id": "a64b3098de204f9fa741346a1da0d672"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shinya_Aoki> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Eddie_Bravo> }", "question": "Is Eddie Bravo the trainer of Shinya Aoki?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shinya_Aoki", "seq": "30,40", "label": "Shinya Aoki"}, {"uri": "http://dbpedia.org/resource/Eddie_Bravo", "seq": "3,13", "label": "Eddie Bravo"}], "predicate mapping": [], "id": "0a3456b26fd7499cb6adbde077a787ab"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV shows related to Babylon 5: The Lost Tales and is aired on Prime TIme Entertainment Networks ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales", "seq": "29,53", "label": "Babylon 5: The Lost Tales"}, {"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "seq": "71,103", "label": "Prime TIme Entertainment Networks"}], "predicate mapping": [], "id": "eee8cd2ce7864cc18d521259b6385d55"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LG_Optimus_Vu> <http://dbpedia.org/ontology/operatingSystem> ?uri. <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/property/developer> ?uri} ", "question": "What is the operating system of the LG Optimus Vu and also the developer of the Dart (programming language)", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/LG_Optimus_Vu", "seq": "36,48", "label": "LG Optimus Vu"}, {"uri": "http://dbpedia.org/resource/Dart_(programming_language)", "seq": "80,83", "label": "Dart"}], "predicate mapping": [], "id": "39f06aa4252f4be0914611ab542313a4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }", "question": "What are some products manufactured by Sony? ", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "seq": "39,42", "label": "Sony"}], "predicate mapping": [], "id": "20279be806b8412f9bc87ac6de8c50aa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/F._A._Little,_Jr.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "What is the almamater of the successor of F. A. Little, Jr.? ", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/F._A._Little,_Jr.", "seq": "42,57", "label": "F. A. Little, Jr"}], "predicate mapping": [], "id": "6b0903f50742485485384cf6feffa59b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sissela_Bok> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "List the alma mater of the person who is wedded to Sissela Bok.", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sissela_Bok", "seq": "51,61", "label": "Sissela Bok"}], "predicate mapping": [], "id": "888a87ee40884a92bb779b4a08e06f63"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }", "question": "Does Chicago own the Monroe Station?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)", "seq": "21,34", "label": "Monroe Station"}, {"uri": "http://dbpedia.org/resource/Chicago", "seq": "5,11", "label": "Chicago"}], "predicate mapping": [], "id": "7dee62b229f644b4a13aecb01ef09554"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "question": "What have some famous Christians died of?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christianity", "seq": "22,36", "label": "Christians died"}], "predicate mapping": [], "id": "97750e1c2bda4a70a98f6a3d3fde3cc5"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Gospel_music> }", "question": "Does KOMC play Gospel Music?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/KOMC_(AM)", "seq": "5,8", "label": "KOMC"}, {"uri": "http://dbpedia.org/resource/Gospel_music", "seq": "15,26", "label": "Gospel Music"}], "predicate mapping": [], "id": "efac36cec91343a9b9f1ede98613d8b2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Weathered_Underground> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/children> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the children of the person who is the star of The Weathered Underground ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Weathered_Underground", "seq": "51,75", "label": "The Weathered Underground"}], "predicate mapping": [], "id": "407e2cde683b484b86e7ee73d945f1fe"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/Emacs_Lisp> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "question": "What are some developers which use Emacs Lisp in their projects?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emacs_Lisp", "seq": "35,44", "label": "Emacs Lisp"}], "predicate mapping": [], "id": "9d830815b20d441b91c44bc90f8e9dc0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Irene_Mambilima> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which rivers start in a country whose leader is Irene Mambilima?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Irene_Mambilima", "seq": "48,62", "label": "Irene Mambilima"}], "predicate mapping": [], "id": "82e10e11c396490daac1e2ef25d844d1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nii_Okaija_Adamafio> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }", "question": "What is the nationality of the successor of Nii Okaidja Adamafio ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nii_Okaija_Adamafio", "seq": "44,63", "label": "Nii Okaidja Adamafio"}], "predicate mapping": [], "id": "f1f238c4994d4495a5aef3ce1795c489"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Gary_Chang> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Who are the producers of the movies  which has music by Gary Chang ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gary_Chang", "seq": "56,65", "label": "Gary Chang"}], "predicate mapping": [], "id": "db2ca8419aed42419b8a19d1909a9c24"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman>  . }", "question": "Which creation of Josh Friedman was portrayed in Terminator 2 ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "seq": "49,60", "label": "Terminator 2"}, {"uri": "http://dbpedia.org/resource/Josh_Friedman", "seq": "18,30", "label": "Josh Friedman"}], "predicate mapping": [], "id": "fe5a0610c6e741c2a1b2f059c072dfbf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Justin_Trudeau> . ?uri <http://dbpedia.org/ontology/majorShrine> ?x  . }", "question": "Whose shrines are in a place governed by Justin Trudeau?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Justin_Trudeau", "seq": "41,54", "label": "Justin Trudeau"}], "predicate mapping": [], "id": "f897b6b86feb462eab03a36bc0502824"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose music is given by Laurie Johnson?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Laurie_Johnson", "seq": "44,57", "label": "Laurie Johnson"}], "predicate mapping": [], "id": "523673cddacf48099c7937f7087198bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soylent_(drink)> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri . }", "question": "Where common region are soylent and bannock sold?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Soylent_(drink)", "seq": "24,30", "label": "soylent"}, {"uri": "http://dbpedia.org/resource/Bannock_(food)", "seq": "36,42", "label": "bannock"}], "predicate mapping": [], "id": "417a0238264b4e97b76c982a6999dadf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri }", "question": "Count the number of other services of the companies which provides the Microsoft Azure as service ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Azure", "seq": "71,85", "label": "Microsoft Azure"}], "predicate mapping": [], "id": "9de419a9df914ff59ef90a5191b584bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "List the uni. having affiliation with Graham Holding Company and have a campus in Iowa ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Holdings_Company", "seq": "38,59", "label": "Graham Holding Company"}, {"uri": "http://dbpedia.org/resource/Iowa", "seq": "82,85", "label": "Iowa"}], "predicate mapping": [], "id": "efb6271731a0486c9038f72e14ad2143"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AH141> <http://dbpedia.org/ontology/county> ?uri } ", "question": "AH141 highway is a part of which country?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/AH141", "seq": "0,4", "label": "AH141"}], "predicate mapping": [], "id": "c88a014e1fb347f1aa31dc40e7c66e55"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/property/hubs> ?uri. <http://dbpedia.org/resource/Brandon_Lee> <http://dbpedia.org/ontology/restingPlace> ?uri} ", "question": "Which hub of Cascade Airways is also the resting place of Brandon Lee ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cascade_Airways", "seq": "13,27", "label": "Cascade Airways"}, {"uri": "http://dbpedia.org/resource/Brandon_Lee", "seq": "58,68", "label": "Brandon Lee"}], "predicate mapping": [], "id": "a88d2ea3f531427a94ae282715f0f5f6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/American_College_of_Surgeons> . ?x <http://dbpedia.org/ontology/education> ?uri  . }", "question": "Where did the employees of American College of Surgeons study?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_College_of_Surgeons", "seq": "27,54", "label": "American College of Surgeons"}], "predicate mapping": [], "id": "4ef28f32c3dc4c17a10aaed5ef42c084"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }", "question": "In how many different places do Starwood hotels and resorts worldwide operate?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide", "seq": "32,68", "label": "Starwood hotels and resorts worldwide"}], "predicate mapping": [], "id": "e96091eb6e334719adfadbe72dea01c8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Writing> . ?x <http://dbpedia.org/ontology/field> ?uri }", "question": "Count the number of artist whose pone of the field is writing ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Writing", "seq": "54,60", "label": "writing"}], "predicate mapping": [], "id": "f5c820e865914c8589007c9008866d2a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "What are some people born in NY known for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "seq": "14,27", "label": "people born in"}], "predicate mapping": [], "id": "2bb138061a484da2b90a35b4547a639c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri. <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri} ", "question": "Who was the head coach of Middlesbrough F.C. season 2006-7 also the coach of England national under 21 footbal team ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season", "seq": "26,50", "label": "Middlesbrough F.C. season"}, {"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "seq": "77,114", "label": "England national under 21 footbal team"}], "predicate mapping": [], "id": "cedb96883e1c403a8e3e85521917b919"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/The_Prodigal_Son_(play)> <http://dbpedia.org/property/subject> ?uri} ", "question": "Who is the meaning of the name Isa which was also one of the subject of play The Prodigal Son ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Isa_(name)", "seq": "31,33", "label": "Isa"}, {"uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)", "seq": "77,92", "label": "The Prodigal Son"}], "predicate mapping": [], "id": "c0ed2a5b62a04aa796586761a7fcc4fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "How many players are in the San Francisco Giants?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Giants", "seq": "28,47", "label": "San Francisco Giants"}], "predicate mapping": [], "id": "6c08066f4c4a468eabda070b76f407e2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)> <http://dbpedia.org/property/state> ?uri . }", "question": "Which US state has Dorchester Bay and the Joseph Story?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joseph_Story", "seq": "42,53", "label": "Joseph Story"}, {"uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)", "seq": "19,32", "label": "Dorchester Bay"}], "predicate mapping": [], "id": "0e26f71c288d466a84ee93662cdaf2cf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . }", "question": "Mac OS is the operating system of how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "0,5", "label": "Mac OS"}], "predicate mapping": [], "id": "2b42a9987e584e18a5a21c9bc2476de8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Lars_Bak_(computer_programmer)> . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Language>}", "question": "Which company developed the language designed by Lars Bak?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lars_Bak_(computer_programmer)", "seq": "49,56", "label": "Lars Bak"}], "predicate mapping": [], "id": "78cb068f6e8f479a81e12427c92fd167"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aghasalim_Childagh> <http://dbpedia.org/property/deathDate> ?uri } ", "question": "Where did Aghasalim Childagh die?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aghasalim_Childagh", "seq": "10,27", "label": "Aghasalim Childagh"}], "predicate mapping": [], "id": "51d0d9be06c244229efab43ae8e9d45d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Richard_Hofstadter> <http://dbpedia.org/property/doctoralAdvisor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "What is the birth location of the advisor of Richard Hofstadter ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Hofstadter", "seq": "45,62", "label": "Richard Hofstadter"}], "predicate mapping": [], "id": "3e3623c77d664a43bad66b15cbeb1d2b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose constituency are Duboce Triangle and Haight-Ashbury ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "seq": "46,79", "label": "Duboce Triangle and Haight-Ashbury"}, {"uri": "http://dbpedia.org/resource/Haight-Ashbury", "seq": "66,79", "label": "Haight-Ashbury"}], "predicate mapping": [], "id": "8b82edef302d47feaa60aaf940fbf225"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the TV shows whose developer is J. Michael Straczynski and executive producer is Douglas Netter?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "37,58", "label": "J. Michael Straczynski"}, {"uri": "http://dbpedia.org/resource/Douglas_Netter", "seq": "86,99", "label": "Douglas Netter"}], "predicate mapping": [], "id": "fe352180bf17436ba61fb0416e17d291"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/ontology/firstDriver> ?uri } ", "question": "Name the first driver of 1999 San Marino Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix", "seq": "25,50", "label": "1999 San Marino Grand Prix"}], "predicate mapping": [], "id": "950ceddbc0c5404eabe9f4770407937b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Marvin_Bush> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/children> ?uri  . }", "question": "List the children of the parent of Marvin Bush.", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marvin_Bush", "seq": "35,45", "label": "Marvin Bush"}], "predicate mapping": [], "id": "2145991e2562420284c8984b7f845228"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . }", "question": "Which Tim Birton's movie has a screenplay by Daniel Waters ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)", "seq": "45,57", "label": "Daniel Waters"}, {"uri": "http://dbpedia.org/resource/Tim_Burton", "seq": "6,15", "label": "Tim Birton"}], "predicate mapping": [], "id": "16be3ab972a8420cb9d1ab24a7d7ee5b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Peter_Grauer> <http://dbpedia.org/property/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "question": "Who is the stock holder of the bank where  Peter Grauer works  ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Grauer", "seq": "43,54", "label": "Peter Grauer"}], "predicate mapping": [], "id": "25d2a7baa3b14844812b55facf7b52e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Sylvain_L\u00e9vi> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "question": "In which areas did the pupils of Sylvain Levi work?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "seq": "33,44", "label": "Sylvain Levi"}], "predicate mapping": [], "id": "d353e53adbc14a819a6b8cb914e9288f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Puerto_Rico> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "Which awards have Puerto Ricons won?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Puerto_Rico", "seq": "18,30", "label": "Puerto Ricons"}], "predicate mapping": [], "id": "c3d6509c0674423e8ae5a2a25f581062"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Selangor> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Name all the hubs of the airlines whose one of the hubs is Selangir ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Selangor", "seq": "59,66", "label": "Selangir"}], "predicate mapping": [], "id": "60dc7ef22ac346bc876c2956344ebbbc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Nothing_in_Common> <http://dbpedia.org/property/starring> ?uri . }", "question": "Who starred in Nothing in Common and produced From the Earth to the Moon?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)", "seq": "46,71", "label": "From the Earth to the Moon"}, {"uri": "http://dbpedia.org/resource/Nothing_in_Common", "seq": "15,31", "label": "Nothing in Common"}], "predicate mapping": [], "id": "74e6bd3b3d9f4c02948ab48ddb9851b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . }", "question": "How many parties have come in power in elections where Y. S. Rajasekhara Reddy won?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy", "seq": "55,77", "label": "Y. S. Rajasekhara Reddy"}], "predicate mapping": [], "id": "e6f50ea5f26b41a2bbee70ecae25690d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Costa_Rica_women's_national_football_team> <http://dbpedia.org/ontology/stadium> ?x . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who is the builder of the Stadium of Costa Rica women's national football team?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Costa_Rica_women's_national_football_team", "seq": "37,77", "label": "Costa Rica women's national football team"}], "predicate mapping": [], "id": "3397f948c7964e35b7883557e3869187"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rostov-Glavny> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which serving railway line of the Rostov-Glavny is also the  place of birth of  Nina Vislova?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostov-Glavny", "seq": "34,46", "label": "Rostov-Glavny"}, {"uri": "http://dbpedia.org/resource/Nina_Vislova", "seq": "80,91", "label": "Nina Vislova"}], "predicate mapping": [], "id": "65f4bc2159fa4581862b48f75badba9e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jack_Your_Body> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }", "question": "What is the home town of the musician of Jack your Body ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Your_Body", "seq": "41,54", "label": "Jack your Body"}], "predicate mapping": [], "id": "0507c04d35f64179aeb6656866465ce8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }", "question": "What do typically NGOs work for?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Non-governmental_organization", "seq": "18,30", "label": "NGOs work for"}], "predicate mapping": [], "id": "285b636ff13c48e1bcd7306d6a9b680a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Men_Will_Be_Men> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What is the residence of the person, who starred in Men Will Be Men ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Men_Will_Be_Men", "seq": "52,66", "label": "Men Will Be Men"}], "predicate mapping": [], "id": "2b459a0f48bf4a798c36e64bdef395eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/North_Korea> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "question": "List the border of the admin region which shares border with North Korea ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Korea", "seq": "61,71", "label": "North Korea"}], "predicate mapping": [], "id": "76e3a616ef7f4776b5ac7ca0a2747aa4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "How many awards have been given to the ones who died of lung cancer?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lung_cancer", "seq": "56,66", "label": "lung cancer"}], "predicate mapping": [], "id": "7fbcbc8dbf064a76a60ec0159eeb54f0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which show's network is Prime time Entertainment and has Douglas Netter as executive producer ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "seq": "24,55", "label": "Prime time Entertainment and has"}, {"uri": "http://dbpedia.org/resource/Douglas_Netter", "seq": "57,70", "label": "Douglas Netter"}], "predicate mapping": [], "id": "d12e9dcf5e3944eb88c56c3e6cdab8ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "How many countries surround the sea into which the Upper Neratva flow?", "sparql_id": 403, "entity mapping": [{"uri": "http://dbpedia.org/resource/Upper_Neretva", "seq": "51,63", "label": "Upper Neratva"}], "predicate mapping": [], "id": "7b3af4a72c904d328c38aa676e5e556d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash> . ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson> . }", "question": "Who collaborated with Johnny Cash and Kris Kristofferson ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Johnny_Cash", "seq": "22,32", "label": "Johnny Cash"}, {"uri": "http://dbpedia.org/resource/Kris_Kristofferson", "seq": "38,55", "label": "Kris Kristofferson"}], "predicate mapping": [], "id": "0ba454c0de9a4184b651f6e7a8d17307"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Brain> }", "question": "Is the Journal of Cerebral Blood Flow and Metabolism about Brains?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism", "seq": "7,51", "label": "Journal of Cerebral Blood Flow and Metabolism"}, {"uri": "http://dbpedia.org/resource/Brain", "seq": "59,64", "label": "Brains"}], "predicate mapping": [], "id": "d8c7892603d64401909742551945fd10"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elie_Wiesel> <http://dbpedia.org/property/awards> ?uri } ", "question": "Name the awards won by Elie Wiesel ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elie_Wiesel", "seq": "23,33", "label": "Elie Wiesel"}], "predicate mapping": [], "id": "1c52f65be95947dab2143ce16d756039"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_women's_national_football_team> <http://dbpedia.org/property/homeStadium> ?uri } ", "question": "What is the home stadium of Kenya's women national football team ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenya_women's_national_football_team", "seq": "28,63", "label": "Kenya's women national football team"}], "predicate mapping": [], "id": "50f4fe1ce39347729daff3f6980c6107"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Shawnee> } ", "question": "list some shawnee people?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shawnee", "seq": "10,16", "label": "shawnee"}], "predicate mapping": [], "id": "8c154ef0c2574f25bdfcee184bd120a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "Count the birthplaces of recepients of the National Museum of Racing and Hall of Fame.", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame", "seq": "43,84", "label": "National Museum of Racing and Hall of Fame"}], "predicate mapping": [], "id": "705316a27c694cf5ac53ee6bfd9bbed7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Dorothea_Sharp> <http://dbpedia.org/property/influencedBy> ?uri} ", "question": "What artist of Charing Cross Bridge influenced Dorothea Sharp in her career?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)", "seq": "15,34", "label": "Charing Cross Bridge"}, {"uri": "http://dbpedia.org/resource/Dorothea_Sharp", "seq": "47,60", "label": "Dorothea Sharp"}], "predicate mapping": [], "id": "acd23184141840d2a1677901fd42bbd9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Which military conflict took place in Israel and had commander as Jaber Al-Ahmad Al-Sabah?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Israel", "seq": "38,43", "label": "Israel"}, {"uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah", "seq": "66,88", "label": "Jaber Al-Ahmad Al-Sabah"}], "predicate mapping": [], "id": "be202d448e7d4b23ae715f0fc6b8b33e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ragaway> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Chuck_Connors> <http://dbpedia.org/ontology/restingPlace> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Which city is the resting place of the Martin Ragaway and Chuck Connors ?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Ragaway", "seq": "39,52", "label": "Martin Ragaway"}, {"uri": "http://dbpedia.org/resource/Chuck_Connors", "seq": "58,70", "label": "Chuck Connors"}], "predicate mapping": [], "id": "44c48096f6e24b17a662f2bc16b0c005"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Ashanti_Region> . ?x <http://dbpedia.org/property/denomination> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Which religion is prevalent in the schools of the Ashanti region?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ashanti_Region", "seq": "50,63", "label": "Ashanti region"}], "predicate mapping": [], "id": "3b2227b9098045048da2d706d5ff058e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . }", "question": "What are some characters of series produced by Ricky Grevais?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ricky_Gervais", "seq": "47,59", "label": "Ricky Grevais"}], "predicate mapping": [], "id": "00d182c2fc044872afb893ada8c680ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/'03_Bonnie_&_Clyde> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }", "question": "List down all the bands to which the writers of 03 Bonnie & Clyde are associated?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/'03_Bonnie_&_Clyde", "seq": "48,64", "label": "03 Bonnie & Clyde"}], "predicate mapping": [], "id": "ec5f6894f5484d34a2f951ca88436084"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose company is Playtone?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "seq": "47,54", "label": "Playtone"}], "predicate mapping": [], "id": "7f4f1679c83148c4839f6434ed4e3ac3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which mainter of Pandaruan Bridge is also the land of Malaysia junior Hockey league ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pandaruan_Bridge", "seq": "17,32", "label": "Pandaruan Bridge"}, {"uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League", "seq": "54,82", "label": "Malaysia junior Hockey league"}], "predicate mapping": [], "id": "b03b5f24df79423eaa4cf91798ceaa81"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galician_Wikipedia> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/German_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri . }", "question": "Organization holding stocks of  Galician and German wikipedias?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Galician_Wikipedia", "seq": "45,61", "label": "German wikipedias"}, {"uri": "http://dbpedia.org/resource/German_Wikipedia", "seq": "45,61", "label": "German wikipedias"}], "predicate mapping": [], "id": "5b4bb78a68b94d218437f69956f6fba9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/KFFG> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/broadcastNetwork> ?uri  . }", "question": "In which broadcast area does the sister station of KFFG air ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/KFFG", "seq": "51,54", "label": "KFFG"}], "predicate mapping": [], "id": "df9dedc7b04241719cdd1de64fab664c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }", "question": "In which companies boards do the writers of Wikitionary belong?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wiktionary", "seq": "44,54", "label": "Wikitionary"}], "predicate mapping": [], "id": "dc3368caf7294bbea8b07fd01859706d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river with mouth as Thames Estuary and passes through Reading Berkshire ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thames_Estuary", "seq": "29,42", "label": "Thames Estuary"}, {"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "63,79", "label": "Reading Berkshire"}], "predicate mapping": [], "id": "e12f7dcbeefb4be5aa7c6a75120cf399"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Samuel_Moreno_Rojas> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "What is the alma mater of the person, whose child is Samuel Moreno Rojas?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas", "seq": "53,71", "label": "Samuel Moreno Rojas"}], "predicate mapping": [], "id": "428c921bdffa437cab0215a722628dc4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_Network> . }", "question": "What provides the services of Nintendo eShop and Nintendo Network?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nintendo_eShop", "seq": "30,43", "label": "Nintendo eShop"}, {"uri": "http://dbpedia.org/resource/Nintendo_Network", "seq": "49,64", "label": "Nintendo Network"}], "predicate mapping": [], "id": "aa41549ef9984639b16d39f1e418d06e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which Monty Python's movie is distributed by Cinema International Corporation ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monty_Python", "seq": "6,17", "label": "Monty Python"}, {"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "45,76", "label": "Cinema International Corporation"}], "predicate mapping": [], "id": "f1363bc48be643bd99b68fa31d8b0d19"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri } ", "question": "Name the local authority of Trinity School, Brentwood ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood", "seq": "28,52", "label": "Trinity School, Brentwood"}], "predicate mapping": [], "id": "ef6dc0a3edb54f33bf874f7c5b9dae0a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abiye_Abebe> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Amsale_Aberra> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "What is the death place of the Abiye Abebe and is the birthplace of the Amsale Aberra?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Abiye_Abebe", "seq": "31,41", "label": "Abiye Abebe"}, {"uri": "http://dbpedia.org/resource/Amsale_Aberra", "seq": "72,84", "label": "Amsale Aberra"}], "predicate mapping": [], "id": "5275df39ab1f4fea90a5740956d40966"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Double_Diamond_(album)> <http://dbpedia.org/ontology/recordLabel> ?uri } ", "question": "What is the label of Double Diamond (album) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Double_Diamond_(album)", "seq": "21,34", "label": "Double Diamond"}], "predicate mapping": [], "id": "e4aba45bbd7247a2849bb269cb3fc809"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Count the number of cities around the American Mediterranean Sea?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "seq": "38,63", "label": "American Mediterranean Sea"}], "predicate mapping": [], "id": "82ce66b7bf8f4a0dae15269c66cc2753"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/University_of_California,_Santa_Cruz>  . }", "question": "What are some employees of Uni of California, santa cruz?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_California,_Santa_Cruz", "seq": "27,55", "label": "Uni of California, santa cruz"}], "predicate mapping": [], "id": "3412c129527f4e78a14421f84b364adf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/PrivateCore> } ", "question": "What is the parent company of PrivateCore?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/PrivateCore", "seq": "30,40", "label": "PrivateCore"}], "predicate mapping": [], "id": "68d3363523454c20b8b113b8ca87eaed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven> <http://dbpedia.org/property/city> ?uri  . }", "question": "Over how many cities did the Bellaton MMA, Season 11 take place?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven", "seq": "29,56", "label": "Bellaton MMA, Season 11 take"}], "predicate mapping": [], "id": "3e719418e0ae4a06bc1819295c66394e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Waddy_Wachtel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Waddy wachtel did the music for what movies?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waddy_Wachtel", "seq": "0,12", "label": "Waddy wachtel"}], "predicate mapping": [], "id": "59686a5c59394e02a601a3632e7c72bf"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Baker's_Dozen_Donuts> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Coffee> }", "question": "Is Baker's Dozen Donuts in the coffee industry?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baker's_Dozen_Donuts", "seq": "3,22", "label": "Baker's Dozen Donuts"}, {"uri": "http://dbpedia.org/resource/Coffee", "seq": "31,36", "label": "coffee"}], "predicate mapping": [], "id": "b6ac0f95224a4210893252cc4b6bda4d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Rhythm_and_blues> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Who are the writer of the singles whose music genre is Rhythm and blues ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rhythm_and_blues", "seq": "55,70", "label": "Rhythm and blues"}], "predicate mapping": [], "id": "b4e9d31ac22848ffb74a0fea9cda6353"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto> . ?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}", "question": "Name the hockey team which has head coach as Mike babcock and is based in Toronto ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "74,80", "label": "Toronto"}, {"uri": "http://dbpedia.org/resource/Mike_Babcock", "seq": "45,56", "label": "Mike babcock"}], "predicate mapping": [], "id": "7657e13a3b7e4ab58937e184cef0f93d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri} ", "question": "Which incumbent of Al Gore presidential campaign wass also the president of Mike McCurry ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)", "seq": "76,87", "label": "Mike McCurry"}, {"uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000", "seq": "19,52", "label": "Al Gore presidential campaign wass"}], "predicate mapping": [], "id": "b630eb72fd3f4ca194622759e3fdeb79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Graham_Yost> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What show has writing of Erik Jendresen and Graham Yost?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "25,38", "label": "Erik Jendresen"}, {"uri": "http://dbpedia.org/resource/Graham_Yost", "seq": "44,54", "label": "Graham Yost"}], "predicate mapping": [], "id": "dd8f04e29567432aa66d4872d3c8967d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Canton_of_Fribourg> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }", "question": "Which range of mountains are there in canton of Fribourg?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canton_of_Fribourg", "seq": "38,55", "label": "canton of Fribourg"}], "predicate mapping": [], "id": "6dc74832279a48c5af2affb61a00842f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri . }", "question": "Where in the us military did pierre r graham and edwin f hunter work?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pierre_R._Graham", "seq": "29,43", "label": "pierre r graham"}, {"uri": "http://dbpedia.org/resource/Edwin_F._Hunter", "seq": "49,62", "label": "edwin f hunter"}], "predicate mapping": [], "id": "e5477236f4194919a7df41836fd59a7b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Pork> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }", "question": "Count the number of ingredient of the foods which have one of the ingredient is Pork ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pork", "seq": "80,83", "label": "Pork"}], "predicate mapping": [], "id": "06a0979c7f4f45f09a242e2c9b4f9403"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Penn_State_Nittany_Lions_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "In how many different highschools have people schooled in Penn State Nittany Lions football studied?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Penn_State_Nittany_Lions_football", "seq": "58,90", "label": "Penn State Nittany Lions football"}], "predicate mapping": [], "id": "f012a543e72c4aea922b35c177311d35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries", "seq": "62,97", "label": "Sony Corp shareholders and subsidies"}], "predicate mapping": [], "id": "28d65bdcbc9a48288e72664ab13c4ddc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Dan_Mica> . ?uri <http://dbpedia.org/ontology/associate> ?x  . }", "question": "Who is associated to the predecessor of Dan Mica?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dan_Mica", "seq": "40,47", "label": "Dan Mica"}], "predicate mapping": [], "id": "6708b5842efe485a9e50e24afcbf8511"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the show which opens with Gary Portnoy and Where Everybody Knows Your Name?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gary_Portnoy", "seq": "34,45", "label": "Gary Portnoy"}, {"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "seq": "51,81", "label": "Where Everybody Knows Your Name"}], "predicate mapping": [], "id": "3c64c763bb4342f8abf5e919c69c9144"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rachel_Rasmussen> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/NetballPlayer>}", "question": "What is the birthplace of the netball player who is the relative of Rachel Rasmussen ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rachel_Rasmussen", "seq": "68,83", "label": "Rachel Rasmussen"}], "predicate mapping": [], "id": "b77c5d2495684b08978cc1e6f6efbd33"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri} ", "question": "What is the Location of the Dofinivka Estuary which is also the  birthplace of the Liliya Lobanova ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dofinivka_Estuary", "seq": "28,44", "label": "Dofinivka Estuary"}, {"uri": "http://dbpedia.org/resource/Liliya_Lobanova", "seq": "83,97", "label": "Liliya Lobanova"}], "predicate mapping": [], "id": "27b20d124d814d06aef418de8062f60e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "For how many different teams have the players debuted in Houston Astros played?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston_Astros", "seq": "57,70", "label": "Houston Astros"}], "predicate mapping": [], "id": "ae6419f5a7924093b8efc0ecde37fa37"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Mon_Capitaine> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "In which races did the horses of Mon Capitaine take part?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mon_Capitaine", "seq": "33,45", "label": "Mon Capitaine"}], "predicate mapping": [], "id": "12e72b1d62c843d09c2b6f02cab2cd04"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri } ", "question": "What is the profession of Claiborne Pell ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Claiborne_Pell", "seq": "26,39", "label": "Claiborne Pell"}], "predicate mapping": [], "id": "2ead55d30e1d4a53b7f6ef00e0fe8125"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name few TV shows aired by Prime Time Entertainment Network?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "seq": "27,58", "label": "Prime Time Entertainment Network"}], "predicate mapping": [], "id": "faf138a401bf48698aea3948d57fb21e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Theodor_Hillenhinrichs> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "question": "What is the ethnicity of the Maike Evers and state of origin of the Theodor Hillenhinrichs ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maike_Evers", "seq": "29,39", "label": "Maike Evers"}, {"uri": "http://dbpedia.org/resource/Theodor_Hillenhinrichs", "seq": "68,89", "label": "Theodor Hillenhinrichs"}], "predicate mapping": [], "id": "21891c4f2ea042b18e68729561fc981e"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Mysterious_Stranger> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/N._C._Wyeth> }", "question": "Is N. C. Wyeth the illustration by of The Mysterious Stranger?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Mysterious_Stranger", "seq": "38,60", "label": "The Mysterious Stranger"}, {"uri": "http://dbpedia.org/resource/N._C._Wyeth", "seq": "3,13", "label": "N. C. Wyeth"}], "predicate mapping": [], "id": "a9898ec7205044eeb0890978e7e8c771"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pixar> <http://dbpedia.org/property/keyPeople> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "List the awards given to the key people in Pixar ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pixar", "seq": "43,47", "label": "Pixar"}], "predicate mapping": [], "id": "1ecda4810a44415cb8a4d88b3cc10c44"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "seq": "39,64", "label": "Terminator 2: Judgment Day"}, {"uri": "http://dbpedia.org/resource/Josh_Friedman", "seq": "80,92", "label": "Josh Friedman"}], "predicate mapping": [], "id": "380331c1f63e4822be0531e79d89d530"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Francisco_Lachowski> <http://dbpedia.org/ontology/ethnicity> ?uri . }", "question": "What is the common ethnicity of the Maike Evers and Francisco Lachowski ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maike_Evers", "seq": "36,46", "label": "Maike Evers"}, {"uri": "http://dbpedia.org/resource/Francisco_Lachowski", "seq": "52,70", "label": "Francisco Lachowski"}], "predicate mapping": [], "id": "74b8aec435064e2cad30995e4949632b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Second_lieutenant> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Count the different religions followed by Second Lieutenants in military.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Second_lieutenant", "seq": "42,59", "label": "Second Lieutenants"}], "predicate mapping": [], "id": "7ebda29e423945b29162883cf737d24c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Marion_Dufresne_(1995)> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "question": "What is the base currency of the country which operates the Marion Dufresne?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marion_Dufresne_(1995)", "seq": "60,74", "label": "Marion Dufresne"}], "predicate mapping": [], "id": "e887507cbcda4bd8956a82825a4a84ac"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }", "question": "Journals of how many fields can be found in US?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "35,45", "label": "found in US"}], "predicate mapping": [], "id": "6f8cdbe8fb024dcbb7da14e008bca23c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Norton,_Massachusetts> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "What nicknames do the universities in Norton, Massachusetts have?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Norton,_Massachusetts", "seq": "38,58", "label": "Norton, Massachusetts"}], "predicate mapping": [], "id": "1dd1b3f1468b4498bf6462c9d4d7e865"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Everett_Dirksen> <http://dbpedia.org/property/deputy> ?x . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "question": "What is the official residence of the senator who is the deputy of Everett Dirksen?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Everett_Dirksen", "seq": "67,81", "label": "Everett Dirksen"}], "predicate mapping": [], "id": "0b921ef38ba74acbaa82a41ca8554f5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which  office holder's resting place is Alta Mesa Memorial Park and Henry E. Catto, Jr. as predecessor ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park", "seq": "40,62", "label": "Alta Mesa Memorial Park"}, {"uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.", "seq": "68,85", "label": "Henry E. Catto, Jr"}], "predicate mapping": [], "id": "1e06f3b6c390495883e3b1fa35f74e6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie whose producer is Michael Deeley and music is given by Vangelis ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "33,46", "label": "Michael Deeley"}, {"uri": "http://dbpedia.org/resource/Vangelis", "seq": "70,77", "label": "Vangelis"}], "predicate mapping": [], "id": "0ac9e7c038dd486a87c27b58e9c6a6e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Saint-Amand-en-Puisaye> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "question": "People born in Saint-Amand-en-Puisaye are famous for what things ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint-Amand-en-Puisaye", "seq": "15,36", "label": "Saint-Amand-en-Puisaye"}], "predicate mapping": [], "id": "88fe848accd14ee5a63e3264234651e8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Washington,_D.C.> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "Radios on what topics can be tuned in to in Washington DC?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Washington,_D.C.", "seq": "44,56", "label": "Washington DC"}], "predicate mapping": [], "id": "4dbb409284b34e848777db3a91349022"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri } ", "question": "List the goverener of Winston Bryant?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "seq": "22,35", "label": "Winston Bryant"}], "predicate mapping": [], "id": "5088b38a69ba4f1f9f7c17c493dbb67e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Anthony_Harvey> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Name the movie whose director is Stanley Kubrick and editor is Anthony Harvey?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anthony_Harvey", "seq": "63,76", "label": "Anthony Harvey"}, {"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "seq": "33,47", "label": "Stanley Kubrick"}], "predicate mapping": [], "id": "588648d7ead24862a8392d2cb6b7499f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Name the musician who was given label by Celluloid Records and has been associated with Africa'70 ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Celluloid_Records", "seq": "41,57", "label": "Celluloid Records"}, {"uri": "http://dbpedia.org/resource/Africa_'70_(band)", "seq": "88,96", "label": "Africa'70"}], "predicate mapping": [], "id": "aa54fbc2c1df4f47af6e7a074f77535f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "What is the country where Sergei Ovchinnikov the volleyball player die, and Gumus was first aired ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "seq": "76,80", "label": "Gumus"}, {"uri": "http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)", "seq": "26,43", "label": "Sergei Ovchinnikov"}], "predicate mapping": [], "id": "a74c7e7aafe049f6b82e092e907da465"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kenosha,_Wisconsin> . ?uri <http://dbpedia.org/property/director> ?x  . }", "question": "List all the movies whose directors were born in Kenosha, Wisconsin?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenosha,_Wisconsin", "seq": "49,66", "label": "Kenosha, Wisconsin"}], "predicate mapping": [], "id": "1ceed131fbfd408f8e4aa198f167a4b4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List down the TV shows whose producer is Stephen E. Ambros and writer is John Orloff ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "41,57", "label": "Stephen E. Ambros"}, {"uri": "http://dbpedia.org/resource/John_Orloff", "seq": "73,83", "label": "John Orloff"}], "predicate mapping": [], "id": "a608e83edd634349b19003da7befc70a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Brothers_Union> }", "question": "Does Walson Augustin play for the Brothers Union?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Walson_Augustin", "seq": "5,19", "label": "Walson Augustin"}, {"uri": "http://dbpedia.org/resource/Brothers_Union", "seq": "34,47", "label": "Brothers Union"}], "predicate mapping": [], "id": "f08511a93db54c32a2dcbc4a4f4d74d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What are the prizes won by the animator of The Skeleton Dance ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "43,60", "label": "The Skeleton Dance"}], "predicate mapping": [], "id": "216cc8eb3adc4058b3dae6dc542bc2cc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "List the Swedish newspaper headquarted in Stockholm ? ", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "seq": "9,25", "label": "Swedish newspaper"}, {"uri": "http://dbpedia.org/resource/Stockholm", "seq": "42,50", "label": "Stockholm"}], "predicate mapping": [], "id": "12811fd9d1ea480ca482f1b7a6f61ea8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "question": "Which educational institutes have campuses at Iowa and Indiana ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iowa", "seq": "46,49", "label": "Iowa"}, {"uri": "http://dbpedia.org/resource/Indiana", "seq": "55,61", "label": "Indiana"}], "predicate mapping": [], "id": "fdc1847b008e40cbb6cb07d1f3fefb7f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)> <http://dbpedia.org/property/teamName> ?uri. <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri} ", "question": "What mascot of the Galatasaray Handball Team is also the team name of Cristo Rey Jesuit high School ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)", "seq": "70,98", "label": "Cristo Rey Jesuit high School"}, {"uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team", "seq": "19,43", "label": "Galatasaray Handball Team"}], "predicate mapping": [], "id": "128a2ec9d8f842be81f9bbafd1edf43b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rain_Is_a_Good_Thing> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "question": "List down the associated musical artist of the writer of Rain Is a Good Thing ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rain_Is_a_Good_Thing", "seq": "57,76", "label": "Rain Is a Good Thing"}], "predicate mapping": [], "id": "62c0c7b3421044339478d24834c3b09d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which countries led by Elizabeth II?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_II", "seq": "23,34", "label": "Elizabeth II"}], "predicate mapping": [], "id": "6814335360244dacab4516293e186458"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/property/developer> ?uri } ", "question": "Who is the developer of Dart (programming language) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dart_(programming_language)", "seq": "24,27", "label": "Dart"}], "predicate mapping": [], "id": "60524d1955cf4a6eba1f5eab56431ce4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }", "question": "How many different writers have written for Jump Square?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jump_Square", "seq": "44,54", "label": "Jump Square"}], "predicate mapping": [], "id": "5d24a8016b944ebd949de53d198f4823"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Long_rifle> <http://dbpedia.org/property/origin> ?uri. <http://dbpedia.org/resource/Hugh_Scott> <http://dbpedia.org/ontology/residence> ?uri} ", "question": "Which official residence of hugh Scott is also the origin of Long Rifle ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Long_rifle", "seq": "61,70", "label": "Long Rifle"}, {"uri": "http://dbpedia.org/resource/Hugh_Scott", "seq": "28,37", "label": "hugh Scott"}], "predicate mapping": [], "id": "e5211014e64e4cc3ba735304c32b59f7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)> <http://dbpedia.org/property/currency> ?uri . }", "question": "What is the base currency of the Benelux which can be used in Republic of Montenegro?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Benelux", "seq": "33,39", "label": "Benelux"}, {"uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)", "seq": "62,83", "label": "Republic of Montenegro"}], "predicate mapping": [], "id": "9169f5e7e04a45c59601fa1c275255eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "How many politicians reside in Cape Town?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Town", "seq": "31,39", "label": "Cape Town"}], "predicate mapping": [], "id": "2067b624202249069e8e6fa28ea3b460"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Masahiko_Minami> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}", "question": "Who wrote the mangas produced by Masahike Minami?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Masahiko_Minami", "seq": "33,47", "label": "Masahike Minami"}], "predicate mapping": [], "id": "08222072602a432fb36950cb1d93428a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Colonial_troops> } ", "question": "Who is the political figure whose military branch is Colonial troops?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonial_troops", "seq": "53,67", "label": "Colonial troops"}], "predicate mapping": [], "id": "b80824e9484341ffa682161fdd38a1fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . }", "question": "How many architects are there who have made something used by Oakland athletics?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oakland_Athletics", "seq": "62,78", "label": "Oakland athletics"}], "predicate mapping": [], "id": "acbfdfd774604545abda627572f18dca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/titles> <http://dbpedia.org/resource/Doctor_of_the_Church> . ?x <http://dbpedia.org/ontology/canonizedBy> ?uri  . }", "question": "Who has canonized someone who's a doctor of the church?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_of_the_Church", "seq": "34,53", "label": "doctor of the church"}], "predicate mapping": [], "id": "9cf295983ac2497eaa90acc50a0e9839"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berkeley,_California> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Give me all magazines whose founder died in Berkeley, California?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Berkeley,_California", "seq": "44,63", "label": "Berkeley, California"}], "predicate mapping": [], "id": "406cb0444b7849598998845f33cc549f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Waylon_Jennings>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "Give me a count of musical artists collaborating with Waylon Jennings?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Waylon_Jennings", "seq": "54,68", "label": "Waylon Jennings"}], "predicate mapping": [], "id": "d008d95436354994a9c920a5c4118bd4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "Cologny and Lancy are the neighboring municipalities of which place ?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "seq": "0,6", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Lancy", "seq": "12,16", "label": "Lancy"}], "predicate mapping": [], "id": "5a3c7897625247c680bee70a5841b19a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Wrongfully_Accused> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/spouse> ?uri  . }", "question": "Who are the spouse of the actors of Wrongfully Accused?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wrongfully_Accused", "seq": "36,53", "label": "Wrongfully Accused"}], "predicate mapping": [], "id": "6c664cbf0c8344ae93064a7d00fab47a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Ch\u00eane-Bougeries>  . }", "question": "What municipalities are adjacent to Chne-Bougeries?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ch\u00eane-Bougeries", "seq": "36,49", "label": "Chne-Bougeries"}], "predicate mapping": [], "id": "3bf63415902341c8804e4053a565b1cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Philosophi\u00e6_Naturalis_Principia_Mathematica> } ", "question": "Which scientist is known for writing Philosophi Naturalis Principia Mathematica?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Philosophi\u00e6_Naturalis_Principia_Mathematica", "seq": "37,78", "label": "Philosophi Naturalis Principia Mathematica"}], "predicate mapping": [], "id": "b01faa87ad5d492582e9236745d1282d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri} ", "question": "What is the profession of the William Luther Hill and also the office of the Richard Coke ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Luther_Hill", "seq": "30,48", "label": "William Luther Hill"}, {"uri": "http://dbpedia.org/resource/Richard_Coke", "seq": "77,88", "label": "Richard Coke"}], "predicate mapping": [], "id": "d63aa2d8047143e494136822ba4d8766"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river's source mountain is Baikal Mountains and is located in Laptev Sea ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Baikal_Mountains", "seq": "33,48", "label": "Baikal Mountains"}, {"uri": "http://dbpedia.org/resource/Laptev_Sea", "seq": "68,77", "label": "Laptev Sea"}], "predicate mapping": [], "id": "6597dba043f3446ab99c8ec65686e304"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What are some musical artists associated with the ones signed up with EMI?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/EMI", "seq": "70,72", "label": "EMI"}], "predicate mapping": [], "id": "c1be660170c343e1a9cfe8079b722267"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Los_Angeles_Lakers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Los Angeles Lakers is the team of which basketball players?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Lakers", "seq": "0,17", "label": "Los Angeles Lakers"}], "predicate mapping": [], "id": "333d5b882d2a433abf4674b881d86b63"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_M._Chilcott> <http://dbpedia.org/property/state> ?uri } ", "question": "To which state eorge M. Chilcott  belong ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_M._Chilcott", "seq": "15,31", "label": "eorge M. Chilcott"}], "predicate mapping": [], "id": "02be653e65e640b390467b40c75c8113"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Ricky Gervais is the executive producer of the series having how many fictional characters?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ricky_Gervais", "seq": "0,12", "label": "Ricky Gervais"}], "predicate mapping": [], "id": "728abc0613c4486dac29a63aa6e90537"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }", "question": "Give me the list of people who scaled mountains in Sierra Nevada?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "seq": "51,63", "label": "Sierra Nevada"}], "predicate mapping": [], "id": "b9af1aab1cdb4df3b8aad53370c82fd7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }", "question": "Who studied in universities located in suburbs?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Suburb", "seq": "39,45", "label": "suburbs"}], "predicate mapping": [], "id": "de004bcd703247ab981d0d8784c0b7e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "20,36", "label": "Readin, Brekshire"}, {"uri": "http://dbpedia.org/resource/Southend-on-Sea", "seq": "69,82", "label": "Sothend-on-sea"}], "predicate mapping": [], "id": "ce0a65de462c4482be2bcc4c57c67e39"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dion_Beebe> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri} ", "question": "What award has been awarded to both Dion Beebe and Charles LeMaire?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dion_Beebe", "seq": "36,45", "label": "Dion Beebe"}, {"uri": "http://dbpedia.org/resource/Charles_LeMaire", "seq": "51,65", "label": "Charles LeMaire"}], "predicate mapping": [], "id": "9713dcb7417545e492296544a6ea728d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kang_Young-hoon> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What religion did the president follow which was served by Kang Young-hoon?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kang_Young-hoon", "seq": "59,73", "label": "Kang Young-hoon"}], "predicate mapping": [], "id": "c2b361e703db47748197f55a513a8f91"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> ?uri} ", "question": "Which is the common prospect team of Mikhail Pashnin and Robin kovacs ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mikhail_Pashnin", "seq": "37,51", "label": "Mikhail Pashnin"}, {"uri": "http://dbpedia.org/resource/Robin_Kovacs", "seq": "57,68", "label": "Robin kovacs"}], "predicate mapping": [], "id": "152b926438b04cc09ddbaf7259bc0d5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Ir\u00e8ne_Joliot-Curie>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the person whose child is Irne Joliot-Curie?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ir\u00e8ne_Joliot-Curie", "seq": "31,47", "label": "Irne Joliot-Curie"}], "predicate mapping": [], "id": "135b3e40d914466e87cc236585e5a2ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's company is PlayTone and is produced by Stephen E. Ambrose ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "seq": "27,34", "label": "PlayTone"}, {"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "55,72", "label": "Stephen E. Ambrose"}], "predicate mapping": [], "id": "ee40fd8fb95f42b7a50f05e872395ec7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Titus_Software> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "question": "Count the different genres of games published by Titus Software", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Titus_Software", "seq": "49,62", "label": "Titus Software"}], "predicate mapping": [], "id": "d7e5d2254df0467f9540e90433f7ea55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What religions are followed by members of the societies whose architectural influences can be seen on the Sanggar Agung ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanggar_Agung", "seq": "106,118", "label": "Sanggar Agung"}], "predicate mapping": [], "id": "adb40156d8b943db81c77206edceffb5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Voere> <http://dbpedia.org/ontology/predecessor> ?uri } ", "question": "Who is the predecessor of Voere ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Voere", "seq": "26,30", "label": "Voere"}], "predicate mapping": [], "id": "5aa7006cd15c46c2bb25952420fc9ab6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri. <http://dbpedia.org/resource/Yale_Repertory_Theatre> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which stockholder of yale Repertory Theatre was training center of William Anthony ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "seq": "67,81", "label": "William Anthony"}, {"uri": "http://dbpedia.org/resource/Yale_Repertory_Theatre", "seq": "21,42", "label": "yale Repertory Theatre"}], "predicate mapping": [], "id": "a6b5eb1806b843d1af6d909735bc52b6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility> . }", "question": "Who  won the Lovelace Medal and the Norbert Wiener Award for Social and Professional Responsibility?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lovelace_Medal", "seq": "13,26", "label": "Lovelace Medal"}, {"uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility", "seq": "36,98", "label": "Norbert Wiener Award for Social and Professional Responsibility"}], "predicate mapping": [], "id": "7d3aa7abddce4885924e51a17c2b5e0d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> <http://dbpedia.org/ontology/rival> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Where is the school which is the rival of Somerset Berkley Regional High?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School", "seq": "42,71", "label": "Somerset Berkley Regional High"}], "predicate mapping": [], "id": "d851da1144a243338aa3d47e27dcab4b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's setting is in Massachusetts and is the subsequent work of Fraiser ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "seq": "74,80", "label": "Fraiser"}, {"uri": "http://dbpedia.org/resource/Massachusetts", "seq": "30,42", "label": "Massachusetts"}], "predicate mapping": [], "id": "179e610843e145489491954c3a91b179"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Who were the american football players who played for Dallas Cowboys?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas_Cowboys", "seq": "54,67", "label": "Dallas Cowboys"}], "predicate mapping": [], "id": "f6301e4382644f719c3ca7d13a774aa1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dornier_Aerodyne> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri} ", "question": "What is the national origin of Dornier Aerodyne and Hirth Acrostar ?;", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dornier_Aerodyne", "seq": "31,46", "label": "Dornier Aerodyne"}, {"uri": "http://dbpedia.org/resource/Hirth_Acrostar", "seq": "52,65", "label": "Hirth Acrostar"}], "predicate mapping": [], "id": "f913c2429f424dccae257c7c4a5f5b83"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/He's_a_Pirate> <http://dbpedia.org/property/writer> ?uri } ", "question": "Who is the writer of He's a Pirate ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/He's_a_Pirate", "seq": "21,33", "label": "He's a Pirate"}], "predicate mapping": [], "id": "84e39f9dfd9b421eaede863a68c7d3dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "seq": "37,50", "label": "Raymond Conner"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "seq": "65,84", "label": "Boeing CH-47 Chinook"}], "predicate mapping": [], "id": "59b915743bb142afb10240174db2a7d0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos>  . }", "question": "How many famous people are from the Filipinos?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Filipinos", "seq": "36,44", "label": "Filipinos"}], "predicate mapping": [], "id": "1f6af3eda6964bc7a5230797aaa04e0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cirque_du_Soleil_discography> <http://dbpedia.org/property/artist> ?uri  . }", "question": "Count the number of artists in the Cirque du Soleil discography?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cirque_du_Soleil_discography", "seq": "35,62", "label": "Cirque du Soleil discography"}], "predicate mapping": [], "id": "8da1f3a107bd45b2b6826f13b3e863b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "question": "In which countries is coconut used as a food ingredient?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Coconut", "seq": "22,28", "label": "coconut"}], "predicate mapping": [], "id": "8f70005177114907b820b6cb4ca9396e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Crustacean>}", "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Balanidae", "seq": "82,90", "label": "Balanidae"}], "predicate mapping": [], "id": "4803820b51af42549d4d664118ac2d00"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anton_Ausserer> <http://dbpedia.org/property/deathPlace> ?uri } ", "question": "Where did anton ausserer die?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anton_Ausserer", "seq": "10,23", "label": "anton ausserer"}], "predicate mapping": [], "id": "249446474067450f80688ee178af8d63"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Lake_Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "What is the river whose source is Lake Ontario?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Ontario", "seq": "34,45", "label": "Lake Ontario"}], "predicate mapping": [], "id": "c46c0c8dbcbe4bf091c8b520f9fa3805"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which rivers have source origins asnorth western, Zambia ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "33,55", "label": "asnorth western, Zambia"}], "predicate mapping": [], "id": "f791ffa9789549f19d8f53aff0f9e369"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> . ?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the subsidary of Tandem Computers which was founded by Jim Harris ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tandem_Computers", "seq": "22,37", "label": "Tandem Computers"}, {"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "seq": "60,69", "label": "Jim Harris"}], "predicate mapping": [], "id": "0e868d8761e84ba0981c4780e8fd572f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Best_Mate> <http://dbpedia.org/property/race> ?uri  . }", "question": "How many races has Best Mate won?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Best_Mate", "seq": "19,27", "label": "Best Mate"}], "predicate mapping": [], "id": "1dcc7c9bfae6426bb72ab84d88afa0ed"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . }", "question": "Who is  related to Kelly Osbourne & Ozzy Osbourne?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelly_Osbourne", "seq": "19,32", "label": "Kelly Osbourne"}, {"uri": "http://dbpedia.org/resource/Ozzy_Osbourne", "seq": "36,48", "label": "Ozzy Osbourne"}], "predicate mapping": [], "id": "53694c0e5c2548419756478331137c13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Ontario>  . }", "question": "What has  location as Ontario?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "seq": "22,28", "label": "Ontario"}], "predicate mapping": [], "id": "846635db38f040eaa3478eac855e39e8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri } ", "question": "Where was  William Anthony  trained ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "seq": "11,25", "label": "William Anthony"}], "predicate mapping": [], "id": "5bcc534759a2403ca4f0e614344dc088"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are some famous companies founded in the US?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "31,44", "label": "founded in the"}], "predicate mapping": [], "id": "e9d2d1d8bc8a4519b2b504c0b054b9e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/City_of_Miami_Cemetery> <http://dbpedia.org/property/governingBody> ?uri } ", "question": "City of Miami Cemetery is the governing body of which city?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_Miami_Cemetery", "seq": "0,21", "label": "City of Miami Cemetery"}], "predicate mapping": [], "id": "a3c789f47bd247b6be843aa13563bc36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "question": "What are some things people born in Louisiana are famous for?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louisiana", "seq": "36,44", "label": "Louisiana"}], "predicate mapping": [], "id": "7b6a1325fab14f1c91fb9c24f98be16c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Buddhism> }", "question": "Is Neungin High school a buddhist school?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neungin_High_School", "seq": "3,21", "label": "Neungin High school"}, {"uri": "http://dbpedia.org/resource/Buddhism", "seq": "25,32", "label": "buddhist"}], "predicate mapping": [], "id": "c51d1f39ce0e4040be9f32af0eefad06"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What is the  name of the television show whose developer is J. Michael Straczynski and actor is Jason Carter (actor)?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "60,81", "label": "J. Michael Straczynski"}, {"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "seq": "96,107", "label": "Jason Carter"}], "predicate mapping": [], "id": "9b7068c9ee9b45a4b38e8b7da17bc32d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/Bankers_Life_Fieldhouse> . ?uri <http://dbpedia.org/property/team> ?x  . }", "question": "How many people have played for the ones who own the stadium of Bankers Life Fieldhouse?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bankers_Life_Fieldhouse", "seq": "64,86", "label": "Bankers Life Fieldhouse"}], "predicate mapping": [], "id": "c0ee1e99d29e4deb86fc700898d5bed5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "How many artists have their works in the Sao Paolo Museum of Art?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art", "seq": "41,63", "label": "Sao Paolo Museum of Art"}], "predicate mapping": [], "id": "f1a36818194047f59c627aa4e1e8b559"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Count the battles fought by Raoul Magrin-Vernerey?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey", "seq": "28,48", "label": "Raoul Magrin-Vernerey"}], "predicate mapping": [], "id": "074f740dbbf64210b7a84f51d6f9e6bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Name the university whose athletic department is called National Collegiate Athletic Association and has a chancellor named Nicholas S. Zeppos?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "56,95", "label": "National Collegiate Athletic Association"}, {"uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos", "seq": "124,141", "label": "Nicholas S. Zeppos"}], "predicate mapping": [], "id": "80b87ca88eaf4b569c9bcb66b3fca287"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Harry_Harlow>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who are the people whose phD advisor was Harry Harlow?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Harlow", "seq": "41,52", "label": "Harry Harlow"}], "predicate mapping": [], "id": "a0360818041d40528ccba0161760b180"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_French_Smith> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri} ", "question": "What is the military branch of the William French Smith which is also the branch of Pierre R. Graham ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_French_Smith", "seq": "35,54", "label": "William French Smith"}, {"uri": "http://dbpedia.org/resource/Pierre_R._Graham", "seq": "84,99", "label": "Pierre R. Graham"}], "predicate mapping": [], "id": "e080bdada1b3440e8410f575e2cff662"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Singapore> }", "question": "Is Pulau Ubin the largest city of Singapore?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pulau_Ubin", "seq": "3,12", "label": "Pulau Ubin"}, {"uri": "http://dbpedia.org/resource/Singapore", "seq": "34,42", "label": "Singapore"}], "predicate mapping": [], "id": "8993e18e5aa946e8bbf8e70e4f8c96b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which sitcoms are made by a company headquartered in NYC?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "seq": "53,55", "label": "NYC"}], "predicate mapping": [], "id": "21af0cba33be4e3a978696b579445972"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "Which mountains are contained in Inyo National Forest?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Inyo_National_Forest", "seq": "33,52", "label": "Inyo National Forest"}], "predicate mapping": [], "id": "70fbf64af7d749509853096246f02afd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many places have people canonized by John Paul II died?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_John_Paul_II", "seq": "44,55", "label": "John Paul II"}], "predicate mapping": [], "id": "6aabd01fc03b4eaa966294abc7d5be2d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/countySeat> <http://dbpedia.org/resource/Heathsville,_Virginia> . ?uri <http://dbpedia.org/property/mouthLocation> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river starts from the county seat of Heathsville, Virginia?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heathsville,_Virginia", "seq": "43,63", "label": "Heathsville, Virginia"}], "predicate mapping": [], "id": "1c466c5bdf984fa28bf9ba070374e8a8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Where were sverre krogh sundbo and havard vad petersson born?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8", "seq": "11,29", "label": "sverre krogh sundbo"}, {"uri": "http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson", "seq": "35,54", "label": "havard vad petersson"}], "predicate mapping": [], "id": "be80acb7f7b34c65b0e6ea8452711a51"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri } ", "question": "where is the thorington train station located?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thorington_railway_station", "seq": "13,36", "label": "thorington train station"}], "predicate mapping": [], "id": "a0f82706207747b0b7e49ff34a2321ab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Mikhail_Voronin> <http://dbpedia.org/property/deathPlace> ?uri} ", "question": "Which arena of WPC Dynamo Moscow is the death palce of Mikhail Voronin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow", "seq": "15,31", "label": "WPC Dynamo Moscow"}, {"uri": "http://dbpedia.org/resource/Mikhail_Voronin", "seq": "55,69", "label": "Mikhail Voronin"}], "predicate mapping": [], "id": "acd83380bc52438a913b1294a017b418"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . }", "question": "How many theme musics have been composed by Julian Gingell?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "seq": "44,57", "label": "Julian Gingell"}], "predicate mapping": [], "id": "f6bdf603e0004a3fa20c3ab3fc071309"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company founded in US and created Visual Studio ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "17,29", "label": "founded in US"}, {"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "seq": "35,55", "label": "created Visual Studio"}], "predicate mapping": [], "id": "534aa17cdbb94593be95eb3051ede21e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "What are the musicals whose musicians worked under Sony Music Entertainment?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "seq": "51,74", "label": "Sony Music Entertainment"}], "predicate mapping": [], "id": "43525bb6aaec44c582028a0f297108ec"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri} ", "question": "What is the place of the Geography Club (play) which is also the  official residence of the Scott Berkun?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Geography_Club_(play)", "seq": "25,38", "label": "Geography Club"}, {"uri": "http://dbpedia.org/resource/Scott_Berkun", "seq": "92,103", "label": "Scott Berkun"}], "predicate mapping": [], "id": "52db5fe19d374c4a99a23b55ecc4d93d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Tangerine_Dream> . ?uri <http://dbpedia.org/property/artist> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "question": "What are the albums whose artists have performed with the Tangerine Dream?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tangerine_Dream", "seq": "58,72", "label": "Tangerine Dream"}], "predicate mapping": [], "id": "5e45892fa3ce4473ba70cdeecaff4d39"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Jazz> . ?x <http://dbpedia.org/ontology/publisher> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "Which house has published books about Jazz?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jazz", "seq": "38,41", "label": "Jazz"}], "predicate mapping": [], "id": "aa8ca34e4003474990f876a54b184d6b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Nick_Park> <http://dbpedia.org/ontology/award> ?uri . }", "question": "List the award which have been won by both Charles LeMaire and Nick Park ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_LeMaire", "seq": "43,57", "label": "Charles LeMaire"}, {"uri": "http://dbpedia.org/resource/Nick_Park", "seq": "63,71", "label": "Nick Park"}], "predicate mapping": [], "id": "78722f141f874d3caafa82adf3d45089"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Austria> . ?x <http://dbpedia.org/property/membership> ?uri }", "question": "Count the number of members of the organization which have Austria as one of the member ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Austria", "seq": "59,65", "label": "Austria"}], "predicate mapping": [], "id": "5d8fba40bf9544c5a9a55982712ad859"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Manurewa_High_School> . ?x <http://dbpedia.org/ontology/relative> ?uri  . }", "question": "Name some relatives of the people studied in Manurewa High School?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manurewa_High_School", "seq": "45,64", "label": "Manurewa High School"}], "predicate mapping": [], "id": "56228aa5b26e4049b2a03f5745a23ed7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland>  . }", "question": "Gregg Toland cinematographed how many things?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregg_Toland", "seq": "0,11", "label": "Gregg Toland"}], "predicate mapping": [], "id": "d1087a6ae2e640ee9b0c1458c8447ee8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)>  . }", "question": "Whose military unit is 39th infantry regiment in 1812?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)", "seq": "23,44", "label": "39th infantry regiment"}], "predicate mapping": [], "id": "2ee9621573e44f3caa895a060b7ebda9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Darcs> <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/GNU> }", "question": "Is Darcs released with a GNU license?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Darcs", "seq": "3,7", "label": "Darcs"}, {"uri": "http://dbpedia.org/resource/GNU", "seq": "25,27", "label": "GNU"}], "predicate mapping": [], "id": "3ba1c4f421364ee0be4dde8be5ba4558"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Station_(band)> <http://dbpedia.org/property/currentMembers> ?uri } ", "question": "List the current members of Metro Station (band) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Station_(band)", "seq": "28,40", "label": "Metro Station"}], "predicate mapping": [], "id": "74c5d0464b124cb38cdf4cd48125cf81"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri} ", "question": "Which sucessor of George Madison is the sucessor of levi Lincoln, Sr. ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Madison", "seq": "18,31", "label": "George Madison"}, {"uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.", "seq": "52,67", "label": "levi Lincoln, Sr"}], "predicate mapping": [], "id": "2fb718468f46401ea78bc4721495af49"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate> <http://dbpedia.org/ontology/builder> ?uri } ", "question": "Who is the builder of Presidio Santa Cruz de Terrenate ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate", "seq": "22,53", "label": "Presidio Santa Cruz de Terrenate"}], "predicate mapping": [], "id": "951936711e75498793c0cc4258ef5eb3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nederlander> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Gary_S\u00e1nchez> <http://dbpedia.org/ontology/debutTeam> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "What team is famous for Robert Nederlander and also the debuting team of Gary Sanchez?", "sparql_id": 316, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Nederlander", "seq": "24,41", "label": "Robert Nederlander"}, {"uri": "http://dbpedia.org/resource/Gary_S\u00e1nchez", "seq": "73,84", "label": "Gary Sanchez"}], "predicate mapping": [], "id": "a0ea895157fe4bc6ac0e2ac8f852f6b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Swedish_Academy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "question": "What is the award which is presented by Swedish Academy?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_Academy", "seq": "40,54", "label": "Swedish Academy"}], "predicate mapping": [], "id": "b9e63a276a7b43c8925247e323ca92f5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/DeWitt_Clinton> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ", "question": "What is the common profession of DeWitt Clinton and Claiborne Pell ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/DeWitt_Clinton", "seq": "33,46", "label": "DeWitt Clinton"}, {"uri": "http://dbpedia.org/resource/Claiborne_Pell", "seq": "52,65", "label": "Claiborne Pell"}], "predicate mapping": [], "id": "3aa4bd1928004f1aa0fbb510009fc773"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which politicians died in cities built by the Roman emperor Charles 5?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor", "seq": "42,58", "label": "the Roman emperor"}], "predicate mapping": [], "id": "0863ef35f0474efda395d6bdafbcde40"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri } ", "question": "List the ingredients of Kaszanka?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaszanka", "seq": "24,31", "label": "Kaszanka"}], "predicate mapping": [], "id": "5a183f932ebe44a9bc2b48aa7f73e605"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/North_American_Poker_Tour> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which broad cast area od CFRX is the country of North America Poker Tour ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/CFRX", "seq": "25,28", "label": "CFRX"}, {"uri": "http://dbpedia.org/resource/North_American_Poker_Tour", "seq": "48,71", "label": "North America Poker Tour"}], "predicate mapping": [], "id": "da861f99dfe244209207a2f1ddbd8a39"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which scientist was advised by John Robert Woodyard?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Robert_Woodyard", "seq": "31,50", "label": "John Robert Woodyard"}], "predicate mapping": [], "id": "eadddca2aa7a4d2daa245624e12ba871"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gamini_Seneviratne> <http://dbpedia.org/ontology/religion> ?uri } ", "question": "What religion did Gamini Seneviratne follow?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gamini_Seneviratne", "seq": "18,35", "label": "Gamini Seneviratne"}], "predicate mapping": [], "id": "c73a4a3eacb742309e74d6f0c2e8e729"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ", "question": "How many bacterias have taxonomy as Bacillales and domain as Bacteria? ", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillales", "seq": "36,45", "label": "Bacillales"}, {"uri": "http://dbpedia.org/resource/Bacteria", "seq": "61,68", "label": "Bacteria"}], "predicate mapping": [], "id": "deee0126b45443878ab649c3acfb2756"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westroads_Mall_shooting> <http://dbpedia.org/property/bodyDiscovered> <http://dbpedia.org/resource/Nebraska> }", "question": "Were the bodies involved in the Westroads mall shootings discovered in Nebraska?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Westroads_Mall_shooting", "seq": "32,55", "label": "Westroads mall shootings"}, {"uri": "http://dbpedia.org/resource/Nebraska", "seq": "71,78", "label": "Nebraska"}], "predicate mapping": [], "id": "b2aaecfc5ca24aa0a486a847584fd884"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Marja'> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "question": "In how many places are Marjas found?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marja'", "seq": "23,28", "label": "Marjas"}], "predicate mapping": [], "id": "dd10bc648d304c6e87f26f46a808f82d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What products do US companies make?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "20,33", "label": "companies make"}], "predicate mapping": [], "id": "dcf94c6a97794f5eaa21c501a7046906"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ", "question": "Which animator of The Skeleton Dance is also the animator of the Tommy Tucker's Tooth ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "seq": "18,35", "label": "The Skeleton Dance"}, {"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "65,84", "label": "Tommy Tucker's Tooth"}], "predicate mapping": [], "id": "04e3bd6b0c8e42cc847a95d2618c62fd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ", "question": "What is the common religious affiliation of the Wickramabahu Central College (National School) and that of  Vesak?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "seq": "48,75", "label": "Wickramabahu Central College"}, {"uri": "http://dbpedia.org/resource/Vesak", "seq": "108,112", "label": "Vesak"}], "predicate mapping": [], "id": "df803beedd644f2685bc04e7975727c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Malatraix> <http://dbpedia.org/ontology/parentMountainPeak> ?x . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }", "question": "Name the mountain range in which the mountain peak of Malatraix belongs?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malatraix", "seq": "54,62", "label": "Malatraix"}], "predicate mapping": [], "id": "75fe6c8cbf564ad5b696120959659daf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Christchurch> . ?x <http://dbpedia.org/ontology/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}", "question": "List education institute of the engineers whose alma mater is ChristChurch ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christchurch", "seq": "62,73", "label": "ChristChurch"}], "predicate mapping": [], "id": "f468589935b448efb8923084dcbd1583"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bottineau_LRT> <http://dbpedia.org/property/system> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}", "question": "What is the headquarters of the public transit system which is the system of Bottineau LRT ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bottineau_LRT", "seq": "77,89", "label": "Bottineau LRT"}], "predicate mapping": [], "id": "43a276ac67384d1fb8baebc563b6eeb9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/De_La_Rose> <http://dbpedia.org/ontology/breeder> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}", "question": "What is the place of birth of the jockey who breeded De La Rose ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/De_La_Rose", "seq": "53,62", "label": "De La Rose"}], "predicate mapping": [], "id": "daeb019f166b4919bd323ccf3b8cf03a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/England_national_football_team>  . }", "question": "How many people are in the England national football team?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_football_team", "seq": "27,56", "label": "England national football team"}], "predicate mapping": [], "id": "495e4973e9eb4c7f8177e3e1c774d8c7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . }", "question": "Who is  venerated in  Judaism and Islam?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judaism", "seq": "22,28", "label": "Judaism"}, {"uri": "http://dbpedia.org/resource/Islam", "seq": "34,38", "label": "Islam"}], "predicate mapping": [], "id": "224dd25d50db49c89875b050e8c011a9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Piano> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are some shows whose voice actors play the piano?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Piano", "seq": "48,52", "label": "piano"}], "predicate mapping": [], "id": "829939d409714b7b9fb93dfd57ceccc9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Francis_Palmer_Smith> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "Where is the building located whose architect was Francis Palmer Smith?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Francis_Palmer_Smith", "seq": "50,69", "label": "Francis Palmer Smith"}], "predicate mapping": [], "id": "77bba5ef70ba44d79cf600cc5ea05d22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jack_Ferguson> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }", "question": "Which child of Jack Ferguson became a Prime Minister?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ferguson", "seq": "15,27", "label": "Jack Ferguson"}], "predicate mapping": [], "id": "97e43aacfe074efa83f9fb0ba572e632"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Mobile> <http://dbpedia.org/ontology/type> ?uri. <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "question": "Naval station mobile and naval support activity, naples are under which branch of Us military?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/Naval_Station_Mobile", "seq": "0,19", "label": "Naval station mobile"}, {"uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples", "seq": "25,54", "label": "naval support activity, naples"}], "predicate mapping": [], "id": "80e469b7945f4f16a8801256c157cab0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales>  . }", "question": "How many members are there of the order of Bacillales?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillales", "seq": "43,52", "label": "Bacillales"}], "predicate mapping": [], "id": "aac76b1792794e92a8495c8f380e7818"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ", "question": "Name the team manger of Middlebrough F.C season 2006-07 ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season", "seq": "24,46", "label": "Middlebrough F.C season"}], "predicate mapping": [], "id": "e3851817df724055bf9d59adc6155746"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }", "question": "In which fields are the graduates of Worcester College, Oxford working?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Worcester_College,_Oxford", "seq": "37,61", "label": "Worcester College, Oxford"}], "predicate mapping": [], "id": "cb3019596f1c466a8e0aa2fab2fe9b1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "What sports can be played in institutions in Bataan?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bataan", "seq": "45,50", "label": "Bataan"}], "predicate mapping": [], "id": "97488d1122824e838c6c54fae73101a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . }", "question": "Who was in missions of Gemini 8 and Apollo 11?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gemini_8", "seq": "23,30", "label": "Gemini 8"}, {"uri": "http://dbpedia.org/resource/Apollo_11", "seq": "36,44", "label": "Apollo 11"}], "predicate mapping": [], "id": "a02542cdbf71477b8b35e4db7fa67cfa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Joe_McKeehen> . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}", "question": "Who founded the league which was won by Joe McKeehen?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_McKeehen", "seq": "40,51", "label": "Joe McKeehen"}], "predicate mapping": [], "id": "a222bccc883b4487896ae0312ec2c17c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/nominee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Give me some nominees of politicians in the US?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "25,35", "label": "politicians"}], "predicate mapping": [], "id": "e905a1686f744be6b8e33f6c79a49c7b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lohan_Ratwatte> . ?x <http://dbpedia.org/property/allegiance> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "question": "To what did the parliament member swore her oath to, whose has sons is Lohan Ratwatte?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lohan_Ratwatte", "seq": "71,84", "label": "Lohan Ratwatte"}], "predicate mapping": [], "id": "c34b719cd3be44ab82c70eb8f169d6c6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tillingdale> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "question": "In which races have Tillingdale's horses participated?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tillingdale", "seq": "20,30", "label": "Tillingdale"}], "predicate mapping": [], "id": "0bd745b22ebe404a8b28d4cf5954c9e7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalMotto> <http://dbpedia.org/resource/Truth_prevails>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which country's national motto is \"Truth prevails\"?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Truth_prevails", "seq": "34,49", "label": "\"Truth prevails\""}], "predicate mapping": [], "id": "0a9d5d8da34c44869fda9580b1ed1cea"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_W._Lewis> <http://dbpedia.org/ontology/almaMater> ?uri } ", "question": "What is the alma mater of Andrew W. Lewis ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_W._Lewis", "seq": "26,40", "label": "Andrew W. Lewis"}], "predicate mapping": [], "id": "89e6c9790a3e43338859011415755939"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the tv series produced by Stephen Ambrose and Erik Bork?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "31,45", "label": "Stephen Ambrose"}, {"uri": "http://dbpedia.org/resource/Erik_Bork", "seq": "51,59", "label": "Erik Bork"}], "predicate mapping": [], "id": "605675f72f0449d6a0b72908f4546a13"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Which movies did Mark Steven edit?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)", "seq": "17,27", "label": "Mark Steven"}], "predicate mapping": [], "id": "5dd00b4f9282453d994c9bacbec085e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "Where do the railroads owned by the Chicago and Northwestern Transportation company begin?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company", "seq": "36,82", "label": "Chicago and Northwestern Transportation company"}], "predicate mapping": [], "id": "e90f562181834b19b5ca9d4787d19f19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Postman_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What is the prize received by the one who wrote the screen play of The Postman  ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Postman_(film)", "seq": "67,77", "label": "The Postman"}], "predicate mapping": [], "id": "6fc13e0a9bc646d9ba9be4634f0ccaf0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "Give me a list of all the buildings which are located in districts governed by John Tory.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tory", "seq": "79,87", "label": "John Tory"}], "predicate mapping": [], "id": "2c2a4120329e4f2a96503a5534340a63"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ", "question": "Count the total number of bacterias whose division is Firmicutes and domain is Bacteria?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Firmicutes", "seq": "54,63", "label": "Firmicutes"}, {"uri": "http://dbpedia.org/resource/Bacteria", "seq": "79,86", "label": "Bacteria"}], "predicate mapping": [], "id": "fd0bdcd9fabe430a9c347af0563b0d4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche> <http://dbpedia.org/property/location> ?uri } ", "question": "Where can one find the Dzogchen Ponolop Rinpoche?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche", "seq": "23,47", "label": "Dzogchen Ponolop Rinpoche"}], "predicate mapping": [], "id": "c43401a585454b6f9d0987e6511a91f9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Deborah_Crombie> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "question": "What is the mascot of the alma mater of Deborah Crombie?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Deborah_Crombie", "seq": "40,54", "label": "Deborah Crombie"}], "predicate mapping": [], "id": "3d2c285604e2416d8b47fe68fdf2f52c"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bob_Suci> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/New_England_Patriots> }", "question": "Did Bob Suci play for the New England Patriots?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_Suci", "seq": "4,11", "label": "Bob Suci"}, {"uri": "http://dbpedia.org/resource/New_England_Patriots", "seq": "26,45", "label": "New England Patriots"}], "predicate mapping": [], "id": "cb2281af4c674df6a881117802e8115c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri . }", "question": "What would be the most important creation which involved both Neil Cross and Russel Davies ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Cross", "seq": "62,71", "label": "Neil Cross"}, {"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "77,89", "label": "Russel Davies"}], "predicate mapping": [], "id": "2435496704084a5992c396fcba62cd33"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "question": "Where do beauty queens with brown hair reside?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brown_hair", "seq": "28,37", "label": "brown hair"}], "predicate mapping": [], "id": "0115d9653fb44b66bb96c1af7d4296f3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show produced by Paramount Television and is located in Massachusetts ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "seq": "26,45", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Massachusetts", "seq": "65,77", "label": "Massachusetts"}], "predicate mapping": [], "id": "fa41d6a62ed040f5a195ea1fa799f2d4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "Name the mountain which belongs to Sierra Nevada range and is located in Inyo National Forest?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "seq": "35,47", "label": "Sierra Nevada"}, {"uri": "http://dbpedia.org/resource/Inyo_National_Forest", "seq": "73,92", "label": "Inyo National Forest"}], "predicate mapping": [], "id": "cf34994e9bb545c3beff7e8a04d58823"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_RT> . ?uri <http://dbpedia.org/ontology/product> ?x  . }", "question": "What is the company that has products with Windows RT as its OS?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Windows_RT", "seq": "43,52", "label": "Windows RT"}], "predicate mapping": [], "id": "62f222b7e3e84a6cb4ce8193b63544d6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }", "question": "How many labels sign up progressive rock artists?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Progressive_rock", "seq": "24,39", "label": "progressive rock"}], "predicate mapping": [], "id": "17ce149639704a6da50a88f32bc5eff6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Audi> }", "question": "Does the AMC Gremlin use an Audi engine?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/AMC_Gremlin", "seq": "9,19", "label": "AMC Gremlin"}, {"uri": "http://dbpedia.org/resource/Audi", "seq": "28,31", "label": "Audi"}], "predicate mapping": [], "id": "3ebfa74639fb4cb4ba3c69a23d7f89a2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Linda_Lee_Cadwell> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "What is the resting place of the child of Linda Lee Cadwell?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Lee_Cadwell", "seq": "42,58", "label": "Linda Lee Cadwell"}], "predicate mapping": [], "id": "bcaaf472d03649a3b3fe0f04e625219d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Carmela_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the religion of the relatives of Carmela Soprano ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carmela_Soprano", "seq": "41,55", "label": "Carmela Soprano"}], "predicate mapping": [], "id": "9c14e0afc5d44598951f1f9037822b2b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Eurovision_(network)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What television shows's distributor is Eurovision?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Eurovision_(network)", "seq": "39,48", "label": "Eurovision"}], "predicate mapping": [], "id": "a3405b0ce1794c309e62e6db698ecfb1"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean_Grey> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Stan_Lee> }", "question": "Did Stan Lee create Jean Grey?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean_Grey", "seq": "20,28", "label": "Jean Grey"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "seq": "4,11", "label": "Stan Lee"}], "predicate mapping": [], "id": "c1908db186d144338bc6f399f9c6864c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri . }", "question": "Which indian party has won the arunachal pradesh elections of 2014, and has been in the 4th legislative assembly?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014", "seq": "31,65", "label": "arunachal pradesh elections of 2014"}, {"uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi", "seq": "88,111", "label": "4th legislative assembly"}], "predicate mapping": [], "id": "ee09ab7feb1344e7b513cd18e2f891e7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri } ", "question": "Name the architect of Marine Corps Air Station Kaneohe Bay ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay", "seq": "22,57", "label": "Marine Corps Air Station Kaneohe Bay"}], "predicate mapping": [], "id": "81ed6105f8064c79a73b3ad0ab2f0dcd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sanjay_Gandhi> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "What is the party of the politicians whose children is Sanjay Gandhi ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanjay_Gandhi", "seq": "55,67", "label": "Sanjay Gandhi"}], "predicate mapping": [], "id": "0cd8980e09074dc185a0889b18d53657"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "Who is the owner of the FC which owns the Cobham Training Centre?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cobham_Training_Centre", "seq": "42,63", "label": "Cobham Training Centre"}], "predicate mapping": [], "id": "d348e34b15b34282bcca4892641b5f9d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5> . ?x <http://dbpedia.org/ontology/launchSite> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}", "question": "What are the other launch site of the rockets which also have been launched from  Cape Canaveral Air Force Station Launch Complex 5 ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5", "seq": "82,130", "label": "Cape Canaveral Air Force Station Launch Complex 5"}], "predicate mapping": [], "id": "a8f0980d732d4a9fb906625e2c72ca87"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_King-Wood> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/John_Steed> <http://dbpedia.org/property/nationality> ?uri . }", "question": "What is the nationality of the David King-Wood and John Steed ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_King-Wood", "seq": "31,45", "label": "David King-Wood"}, {"uri": "http://dbpedia.org/resource/John_Steed", "seq": "51,60", "label": "John Steed"}], "predicate mapping": [], "id": "a66b13e59b5d46a58da7b17ae209894b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose source is located in Ikelenge  District and mouth in Mozambique?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ikelenge_District", "seq": "42,59", "label": "Ikelenge  District"}, {"uri": "http://dbpedia.org/resource/Mozambique", "seq": "74,83", "label": "Mozambique"}], "predicate mapping": [], "id": "b4321c4410c14121844377a286ff893f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "Which country's leader  is Giuseppe Bertello?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Giuseppe_Bertello", "seq": "27,43", "label": "Giuseppe Bertello"}], "predicate mapping": [], "id": "62defef353b544b88cb983a010e92992"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . }", "question": "Who is the founder of the trade union with whom Amalgamated Clothing Workers of America is affiliated?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America", "seq": "48,86", "label": "Amalgamated Clothing Workers of America"}], "predicate mapping": [], "id": "3691b72c47ef41ecb0642a31737f3b86"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What are some people working for the New York Post?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_Post", "seq": "37,49", "label": "New York Post"}], "predicate mapping": [], "id": "4af5c60efca84897ae3b0cf6c727f603"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }", "question": "Which gaming console's central processing unit is microprocessor and built by Sony?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cell_(microprocessor)", "seq": "50,63", "label": "microprocessor"}, {"uri": "http://dbpedia.org/resource/Sony", "seq": "78,81", "label": "Sony"}], "predicate mapping": [], "id": "001da0a604d74bae8d29e5bfc521e92e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "question": "From where did the son of Gustavo Rojas Pinilla graduate?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla", "seq": "26,46", "label": "Gustavo Rojas Pinilla"}], "predicate mapping": [], "id": "ee83374553104e4784b6847dc658c510"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ", "question": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/C++", "seq": "67,69", "label": "C++"}, {"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "95,111", "label": "Microsoft Windows"}], "predicate mapping": [], "id": "18d456becb4d4972ad3a8f8d430291d5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mouse_Morris> <http://dbpedia.org/property/race> ?uri } ", "question": "In which races did Mouse Morris take part?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mouse_Morris", "seq": "19,30", "label": "Mouse Morris"}], "predicate mapping": [], "id": "500a1a24138f4ee68a58423b2a86132d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Canadians> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "question": "How many things have made different people living in Canada famous?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canadians", "seq": "53,65", "label": "Canada famous"}], "predicate mapping": [], "id": "cb1b7e3030df44b592c6bca8cf93d76f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri } ", "question": "Which famous political figures are relatives to George Madison?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Madison", "seq": "48,61", "label": "George Madison"}], "predicate mapping": [], "id": "b9053f165ad74242808b096ce9040971"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's composer is Judy  Hart  Angelo and executive producer as Glen and Les Charles?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judy_Hart_Angelo", "seq": "28,45", "label": "Judy  Hart  Angelo"}, {"uri": "http://dbpedia.org/resource/Glen_and_Les_Charles", "seq": "73,92", "label": "Glen and Les Charles"}], "predicate mapping": [], "id": "170a69d8ac1c40e0930df1a674d5c1cf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heydar> <http://dbpedia.org/property/meaning> ?uri } ", "question": "What is the meaning of Heydar ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Heydar", "seq": "23,28", "label": "Heydar"}], "predicate mapping": [], "id": "43d5d1b277764d509013b0740a1134cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ludwig_Von_Drake>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character whose species is American Pekin duck and has relatives named Ludwig Von Drake?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Pekin_duck", "seq": "46,64", "label": "American Pekin duck"}, {"uri": "http://dbpedia.org/resource/Ludwig_Von_Drake", "seq": "90,105", "label": "Ludwig Von Drake"}], "predicate mapping": [], "id": "76f197d00d1d4cf695613aa5f7089c3f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Mark_Sandrich> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "who are starring in the movies written by Mark Sandrich ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Sandrich", "seq": "42,54", "label": "Mark Sandrich"}], "predicate mapping": [], "id": "dedf58280e9d4d9ea3379626fc434dd0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Bank_of_Thailand> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}", "question": "What is the religion of the governors whose office is the Bank of Thailand?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bank_of_Thailand", "seq": "58,73", "label": "Bank of Thailand"}], "predicate mapping": [], "id": "9ac44261ad7c40989a2beefb39bb7b13"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/U.S._Route_59> <http://dbpedia.org/property/junction> ?uri } ", "question": "Name all the junctions of U.S. Route 59?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/U.S._Route_59", "seq": "26,38", "label": "U.S. Route 59"}], "predicate mapping": [], "id": "34fe2288fd964273ad3d8a6c884539e7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Sanskrit> . ?x <http://dbpedia.org/property/fields> ?uri }", "question": "Count the number of  fields of the scientists whose one of the fields is Sanskrit?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanskrit", "seq": "73,80", "label": "Sanskrit"}], "predicate mapping": [], "id": "4f7bb480e41d4360a942060f68dd6654"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/KTXY> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/city> ?uri  . }", "question": "In which city is the sister station of KTXY located ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/KTXY", "seq": "39,42", "label": "KTXY"}], "predicate mapping": [], "id": "0ab3de4c7c454c33ae9349c745121fa6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles> <http://dbpedia.org/ontology/silverMedalist> <http://dbpedia.org/resource/Maria_Sharapova> }", "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women's singles?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles", "seq": "42,92", "label": "Tennis at the 2012 Summer Olympics  Women's singles"}, {"uri": "http://dbpedia.org/resource/Maria_Sharapova", "seq": "3,17", "label": "Maria Sharapova"}], "predicate mapping": [], "id": "3efd4b46f83649b8b2b937bbe752427f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What is the layout of the cars similar to that of the Subaru Outback?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Subaru_Outback", "seq": "54,67", "label": "Subaru Outback"}], "predicate mapping": [], "id": "f2f115531d7445d49155fe03258dffe1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Where do the rivers starting from Zambia end?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "seq": "34,39", "label": "Zambia"}], "predicate mapping": [], "id": "09a1b808c0fa4f2f8839a1ce8279556d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Subang_Interchange> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "question": "Name the hubs of the airlines whose headquarters is in the Subang Interchange?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Subang_Interchange", "seq": "59,76", "label": "Subang Interchange"}], "predicate mapping": [], "id": "b7793671687a4f84826d505cfe9e14f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . }", "question": "How many people work in the Massachusetts house of Representatives?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives", "seq": "28,65", "label": "Massachusetts house of Representatives"}], "predicate mapping": [], "id": "8ba2e0250a244acdb7b868be0b3a81eb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri } ", "question": "What is Naval Support Activity Naples a part of?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples", "seq": "8,36", "label": "Naval Support Activity Naples"}], "predicate mapping": [], "id": "81a79bece2344b4aaa91302154014fbc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "List the services provided by the company which provides Microsoft azure as one of the service ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Azure", "seq": "57,71", "label": "Microsoft azure"}], "predicate mapping": [], "id": "2fc623f7412b47e7b5f575b742471987"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }", "question": "Who was member of boards at Royal Society and Trinity House?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "seq": "28,40", "label": "Royal Society"}, {"uri": "http://dbpedia.org/resource/Trinity_House", "seq": "46,58", "label": "Trinity House"}], "predicate mapping": [], "id": "adc0e04c11b74782ba42a521d28ce3ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Williamsburg,_Kansas> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "question": "What is the debut team of the baseball player who was born in Williamsburg, Kansas ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Williamsburg,_Kansas", "seq": "62,81", "label": "Williamsburg, Kansas"}], "predicate mapping": [], "id": "53dd5747f1174fa8a6bc9eebbb9623c4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri} ", "question": "Which serving railway line of the Daund Junction railway station is the home port of INS Viraat ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/INS_Viraat_(R22)", "seq": "85,94", "label": "INS Viraat"}, {"uri": "http://dbpedia.org/resource/Daund_Junction_railway_station", "seq": "34,63", "label": "Daund Junction railway station"}], "predicate mapping": [], "id": "34ea4723aa304817a374f7a97e602678"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "How many religions are followed by organizations which are internationally known as the muslim brotherhood?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Muslim_Brotherhood", "seq": "88,105", "label": "muslim brotherhood"}], "predicate mapping": [], "id": "1bd54f6e697a4ec58721e61e66480394"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saint_Petersburg_\u2013_Moscow_Railway> <http://dbpedia.org/ontology/routeStart> ?uri } ", "question": "Name the route start of Saint Petersburg  Moscow Railway ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Petersburg_\u2013_Moscow_Railway", "seq": "24,55", "label": "Saint Petersburg  Moscow Railway"}], "predicate mapping": [], "id": "60cca930301f44db9b136d974bf6b92e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which series was written by Eric Jendresen and John Orloff?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "28,41", "label": "Eric Jendresen"}, {"uri": "http://dbpedia.org/resource/John_Orloff", "seq": "47,57", "label": "John Orloff"}], "predicate mapping": [], "id": "a9844619aaa14527a44829ee64b0658b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}", "question": "Count the number of musical work which were sold by Sony Music?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "seq": "52,61", "label": "Sony Music"}], "predicate mapping": [], "id": "a3f36caa2ac0432a9aca31a86472fe19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hylebos_Creek> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }", "question": "Which county seats are in the district where I can find the Hylebos Creek?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hylebos_Creek", "seq": "60,72", "label": "Hylebos Creek"}], "predicate mapping": [], "id": "47db1d0041e64e7da78f014fa6fd229f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Art\u00far_G\u00f6rgei>  . }", "question": "Who was succeeded by Arthur Gegei as the office ho0lder ?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Art\u00far_G\u00f6rgei", "seq": "21,32", "label": "Arthur Gegei"}], "predicate mapping": [], "id": "f59c8bc3349a4d1e8edfa572284dd9be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Goya_Awards> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What other awards have been given to Goya Award Winners?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Goya_Awards", "seq": "37,46", "label": "Goya Award"}], "predicate mapping": [], "id": "cb5a9c76131d451b8570f5c627d5ef66"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri} ", "question": "Which river inflow of the Cahora Bassa is also Batoka Gorge Hydroelectric Power Station's river ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cahora_Bassa", "seq": "26,37", "label": "Cahora Bassa"}, {"uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station", "seq": "47,86", "label": "Batoka Gorge Hydroelectric Power Station"}], "predicate mapping": [], "id": "2940479c5f6d439f9493a789b93b63f2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mississippi_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Clearwater_County,_Minnesota> }", "question": "Does the mississippi orignate in the clearwater county, minnesota?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mississippi_River", "seq": "9,28", "label": "mississippi orignate"}, {"uri": "http://dbpedia.org/resource/Clearwater_County,_Minnesota", "seq": "37,64", "label": "clearwater county, minnesota"}], "predicate mapping": [], "id": "6b16d12e156b4bb294b527c83c07f76a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}", "question": "Who owns the tunnels operated by the Massachusetts Department of Transportation?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation", "seq": "37,78", "label": "Massachusetts Department of Transportation"}], "predicate mapping": [], "id": "3328c78b14064c5abd3109faa8975548"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/borough> <http://dbpedia.org/resource/Tendring> . ?x <http://dbpedia.org/ontology/district> ?uri  . }", "question": "In how many districts is there a borough called tendring?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tendring", "seq": "48,55", "label": "tendring"}], "predicate mapping": [], "id": "4cf188cc17a649e581603a456bda0d40"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company with product lines like Visual studio and Surface ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "seq": "36,53", "label": "like Visual studio"}, {"uri": "http://dbpedia.org/resource/Microsoft_Surface", "seq": "48,65", "label": "studio and Surface"}], "predicate mapping": [], "id": "a3c5942a30ca4e078b7cac835d4eb065"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "How many awards have been given to the founder of Grameen Bank?", "sparql_id": 103, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grameen_Bank", "seq": "50,61", "label": "Grameen Bank"}], "predicate mapping": [], "id": "5e0acf4fd80d47b995488704002ac947"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Earl_B._Ruth> <http://dbpedia.org/property/appointer> ?uri } ", "question": "Who is the appointer of Earl B. Ruth ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Earl_B._Ruth", "seq": "24,35", "label": "Earl B. Ruth"}], "predicate mapping": [], "id": "dbfcf2136b7344f1830bc4405769bc6d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tim_Mathieson> <http://dbpedia.org/ontology/partner> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri} ", "question": "Which partner of the Tim Mathieson is also the primeminister of the Mike Kelly (Australian politician) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tim_Mathieson", "seq": "21,33", "label": "Tim Mathieson"}, {"uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)", "seq": "68,77", "label": "Mike Kelly"}], "predicate mapping": [], "id": "ba7f3c05cc5448ac90a3996feb0bd9f9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katima_Mulilo_Bridge> <http://dbpedia.org/property/crosses> ?uri } ", "question": "Which river does Katima Mulilo Bridge cross?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katima_Mulilo_Bridge", "seq": "17,36", "label": "Katima Mulilo Bridge"}], "predicate mapping": [], "id": "fb2bca9718884cd19844ef5476627883"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Black_Grape_Global> <http://dbpedia.org/ontology/locationCity> ?uri } ", "question": "Which city is Black Grape Global located ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Black_Grape_Global", "seq": "14,31", "label": "Black Grape Global"}], "predicate mapping": [], "id": "1a57597da91944a4ac167a67fcca0174"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "To which company is the service \"Nintendo eShop\" associated with?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nintendo_eShop", "seq": "32,47", "label": "\"Nintendo eShop\""}], "predicate mapping": [], "id": "06750153a35042ba9ea9d0bd000bbf4d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Phil-Ellena> <http://dbpedia.org/ontology/city> ?uri } ", "question": "Name the city of Phil-Ellena ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Phil-Ellena", "seq": "17,27", "label": "Phil-Ellena"}], "predicate mapping": [], "id": "6f2c1b486fea4099ad02147fd9c090c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Who preceded Lucius Crus as an office holder?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus", "seq": "13,43", "label": "Lucius Crus as an office holder"}], "predicate mapping": [], "id": "a234b1c5bf4d4ae29790e87b267333fc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Animle_Hansen> <http://dbpedia.org/property/allegiance> ?uri } ", "question": "To which nation did David Animle Hanses owe his allegiance?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Animle_Hansen", "seq": "20,38", "label": "David Animle Hanses"}], "predicate mapping": [], "id": "14230056a4a745b8b5ed6e10149011b0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri  . }", "question": "Count the tenants of MasterCard Centre?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/MasterCard_Centre", "seq": "21,37", "label": "MasterCard Centre"}], "predicate mapping": [], "id": "7106676e37f04720ba839ed381b3f9f4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Lesley-Anne_Knight> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }", "question": "Name the key people of the non-profit organisations whose one of the key person is Lesley-Anne knight ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lesley-Anne_Knight", "seq": "83,100", "label": "Lesley-Anne knight"}], "predicate mapping": [], "id": "76d138bb81fa4ba0bcdcaadcdd68dcc9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What show had NTSC format and theme music composed by  Ron Grainer?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/NTSC", "seq": "14,17", "label": "NTSC"}, {"uri": "http://dbpedia.org/resource/Ron_Grainer", "seq": "55,65", "label": "Ron Grainer"}], "predicate mapping": [], "id": "3daabcc6a5b84e3084ede2d975008388"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri. <http://dbpedia.org/resource/Rosie_Huntington-Whiteley> <http://dbpedia.org/ontology/partner> ?uri . }", "question": "Who was once married to both Kelly Brook and Rosie Huntington-Whiteley?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelly_Brook", "seq": "29,39", "label": "Kelly Brook"}, {"uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley", "seq": "45,69", "label": "Rosie Huntington-Whiteley"}], "predicate mapping": [], "id": "893cf1fe221445378778ea0be0e9a571"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Which company has developed games whose music is done by Gerard Marino?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gerard_Marino", "seq": "57,69", "label": "Gerard Marino"}], "predicate mapping": [], "id": "d094fc39be5943518c758621e7598c9f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmy_Wales> <http://dbpedia.org/ontology/board> ?uri. <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri} ", "question": "Which board memeber of jimmy Wales also owns Latvian Wikipedia ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmy_Wales", "seq": "23,33", "label": "jimmy Wales"}, {"uri": "http://dbpedia.org/resource/Latvian_Wikipedia", "seq": "45,61", "label": "Latvian Wikipedia"}], "predicate mapping": [], "id": "d557c2e7c26a46f798ceb5f1f0006f57"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shim\u014dsa_Plateau> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri . }", "question": "What would be a common border of Siberia and the shimsa plateau?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shim\u014dsa_Plateau", "seq": "49,62", "label": "shimsa plateau"}, {"uri": "http://dbpedia.org/resource/Siberia", "seq": "33,39", "label": "Siberia"}], "predicate mapping": [], "id": "27ec0051c6fa4b6c8224afcec91fc1ac"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri } ", "question": "List the institute of Robert hall ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Hall_(economist)", "seq": "22,32", "label": "Robert hall"}], "predicate mapping": [], "id": "c6c9dbbe628c4282bac952abf1b6d056"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . }", "question": "Name the ones who debuted in the San Francisco 49ers.", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_49ers", "seq": "33,51", "label": "San Francisco 49ers"}], "predicate mapping": [], "id": "c46d642e8b374c718591fa89a18d4498"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are some shows by Comedy Central?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "seq": "23,36", "label": "Comedy Central"}], "predicate mapping": [], "id": "e7fab35dd5cf469895cae4ef222fbcd7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Pahang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "question": "What is the county of the road whose route end is Pahang ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pahang", "seq": "50,55", "label": "Pahang"}], "predicate mapping": [], "id": "691fc7827d724e6e993b3a3d505254d2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "What are some magazines whose publishers are themselves Rock and Roll Hall of Fame members?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame", "seq": "56,81", "label": "Rock and Roll Hall of Fame"}], "predicate mapping": [], "id": "b9b68b1ab73f47e48473bbb74c50ba1a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Truss_bridge> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "In which states can I find Truss bridges?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Truss_bridge", "seq": "27,39", "label": "Truss bridges"}], "predicate mapping": [], "id": "25322000923943a3b7694bfcabc42a66"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Richard_Marx> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Guitar> }", "question": "Does Richard Marx play guitar?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Marx", "seq": "5,16", "label": "Richard Marx"}, {"uri": "http://dbpedia.org/resource/Guitar", "seq": "23,28", "label": "guitar"}], "predicate mapping": [], "id": "e3dd3f0c6fa442b6ad746b3be43c9d41"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Which sea is surrounded by Rostock and Kaliningrad?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostock", "seq": "27,33", "label": "Rostock"}, {"uri": "http://dbpedia.org/resource/Kaliningrad", "seq": "39,49", "label": "Kaliningrad"}], "predicate mapping": [], "id": "79a4891fa50c4add9ea19a97a185d544"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which university is led by Jay Gogue?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jay_Gogue", "seq": "27,35", "label": "Jay Gogue"}], "predicate mapping": [], "id": "4d42ac9615894cb8b1670248b35ff581"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nativeName> <http://dbpedia.org/resource/Arabic> . ?uri <http://dbpedia.org/ontology/leftTributary> ?x  . }", "question": "What is the river one of whose left tributary's native name is Arabic?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arabic", "seq": "63,68", "label": "Arabic"}], "predicate mapping": [], "id": "482e34b16844488ba0c95dae74b8a6b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose spouse is Dolley Madison and belongs to Militia branch ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "seq": "39,52", "label": "Dolley Madison"}, {"uri": "http://dbpedia.org/resource/Militia", "seq": "69,75", "label": "Militia"}], "predicate mapping": [], "id": "d604b6b4ecce418c9d201f852b152ea4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}", "question": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "33,49", "label": "Middlesbrough F.C"}, {"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "seq": "56,94", "label": "England national under-21 football team"}], "predicate mapping": [], "id": "3132cf51e26240e8b86c33b5c052e34a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee> . }", "question": "Whose commanders are John Mc Ewen and Park Chunghee?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_McEwen", "seq": "21,32", "label": "John Mc Ewen"}, {"uri": "http://dbpedia.org/resource/Park_Chung-hee", "seq": "38,50", "label": "Park Chunghee"}], "predicate mapping": [], "id": "598d49c1f1db4938ab50cc5492fbf488"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Troodos_Mountains> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "question": "What is the origin of the grape whose wine region is the Troodos Mountains ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Troodos_Mountains", "seq": "57,73", "label": "Troodos Mountains"}], "predicate mapping": [], "id": "bf20ba7973af4b2d88c57f6a9d217c8b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan> <http://dbpedia.org/property/headquarters> ?uri } ", "question": "Where is the headquarter of Regional Transit Authority of Southeast Michigan ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan", "seq": "28,75", "label": "Regional Transit Authority of Southeast Michigan"}], "predicate mapping": [], "id": "f0d17b5fa2ce4598ae52fa5bb9b644ab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Goodell> <http://dbpedia.org/ontology/appointer> ?uri } ", "question": "Who is the appointer of Charles Goodell ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Goodell", "seq": "24,38", "label": "Charles Goodell"}], "predicate mapping": [], "id": "7cecf227f82e424e953870dbd55f9a58"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri} ", "question": "Which high school of jerry Tagge is also the nearest city of Tennie laura ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Tagge", "seq": "21,31", "label": "jerry Tagge"}, {"uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)", "seq": "61,72", "label": "Tennie laura"}], "predicate mapping": [], "id": "88f545749cc4451988e2442225fa9bca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/Ujjain_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri . }", "question": "Name the common serving line of Daund Junction railway station and Ujjain Junction railway station?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daund_Junction_railway_station", "seq": "32,61", "label": "Daund Junction railway station"}, {"uri": "http://dbpedia.org/resource/Ujjain_Junction_railway_station", "seq": "67,97", "label": "Ujjain Junction railway station"}], "predicate mapping": [], "id": "ca1c1caf133340b8b5806acbabd956a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Grandmaster_(chess)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "question": "In which cities were the chess grand masters born?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grandmaster_(chess)", "seq": "31,43", "label": "grand masters"}], "predicate mapping": [], "id": "ad0d34bb16504702b756a8c82100920b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Paphos_District> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}", "question": "Who owns the airport in Paphos?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paphos_District", "seq": "24,29", "label": "Paphos"}], "predicate mapping": [], "id": "eafba6d3f21b45828b0ba24f542a6182"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_Joseph_Schwartz> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/John_Tower> <http://dbpedia.org/ontology/militaryBranch> ?uri} ", "question": "What is the common branch of military of Edward Joseph Schwartz  and John Tower ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edward_Joseph_Schwartz", "seq": "41,62", "label": "Edward Joseph Schwartz"}, {"uri": "http://dbpedia.org/resource/John_Tower", "seq": "69,78", "label": "John Tower"}], "predicate mapping": [], "id": "a9342361a49049748be5ff4a25048dd9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ricardo_Alfonso_Cerna> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Pet\u00e9n> <http://dbpedia.org/ontology/country> ?uri . }", "question": "What nation is the motherland of Ricardo Alfonso Cerna  where Apostolic Vicariate of El Petn is located?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ricardo_Alfonso_Cerna", "seq": "33,53", "label": "Ricardo Alfonso Cerna"}, {"uri": "http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Pet\u00e9n", "seq": "62,91", "label": "Apostolic Vicariate of El Petn"}], "predicate mapping": [], "id": "433a238279f1423380425f507a28d1b7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Krusty_(music_group)> <http://dbpedia.org/ontology/country> ?uri} ", "question": "Which border country of the Korean Peninsula is also the country of Krusty, a musical group ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Korean_Peninsula", "seq": "28,43", "label": "Korean Peninsula"}, {"uri": "http://dbpedia.org/resource/Krusty_(music_group)", "seq": "68,73", "label": "Krusty"}], "predicate mapping": [], "id": "dd65031f3d5840d791f6a197a08b2fa5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri } ", "question": "List the destinations of Novair International Airways ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Novair_International_Airways", "seq": "25,52", "label": "Novair International Airways"}], "predicate mapping": [], "id": "6399efe5ee3f4af7853501362f0efde3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri } ", "question": "List the guests of On Broadway ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/On_Broadway_(Smash)", "seq": "19,29", "label": "On Broadway"}], "predicate mapping": [], "id": "9fd4114ea96b48438d0091ba51b47a86"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Bjela\u0161nica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "question": "What does the river end on whose border we find in Bjelasnica?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bjela\u0161nica", "seq": "51,60", "label": "Bjelasnica"}], "predicate mapping": [], "id": "9202537eff6a4bbba5a512ca97ef35ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Slapstick_(band)> <http://dbpedia.org/property/currentMembers> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "question": "What is the home town of the musical artist who is the current members of Slapstick?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Slapstick_(band)", "seq": "74,82", "label": "Slapstick"}], "predicate mapping": [], "id": "0180e8e90b484b62bf0190b66b24c52b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/South_Island> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Christchurch> }", "question": "Is Christchurch the largest city of South Island?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Island", "seq": "36,47", "label": "South Island"}, {"uri": "http://dbpedia.org/resource/Christchurch", "seq": "3,14", "label": "Christchurch"}], "predicate mapping": [], "id": "d219d8cfedec450192789f8d5c969ce9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "Which newspapers are owned by Oslo citizens?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oslo", "seq": "30,33", "label": "Oslo"}], "predicate mapping": [], "id": "1aa73156801547f1babc504ef1f539a5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "question": "Which hockey teams have had people playing as Defenceman?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "seq": "46,55", "label": "Defenceman"}], "predicate mapping": [], "id": "7794edb4bced489bad560bde6d7f1b1d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What are the products of the company who published Robot Wars: Metal Mayhem ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem", "seq": "51,74", "label": "Robot Wars: Metal Mayhem"}], "predicate mapping": [], "id": "6eae72f3017e4cdb932b020311f66a93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> . ?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "Name books with publisher as Francisco de Robles and writer as Miguel de Cervantes ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Francisco_de_Robles", "seq": "29,47", "label": "Francisco de Robles"}, {"uri": "http://dbpedia.org/resource/Miguel_de_Cervantes", "seq": "63,81", "label": "Miguel de Cervantes"}], "predicate mapping": [], "id": "f4f1a62862e44955aac1cdc42a0b530f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purnima_Banerjee> <http://dbpedia.org/ontology/party> ?uri } ", "question": "What is the political party to which Purnima Banerjee is a member of??", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Purnima_Banerjee", "seq": "37,52", "label": "Purnima Banerjee"}], "predicate mapping": [], "id": "42a5180e4dc54977ac1383fad51c98c2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union> <http://dbpedia.org/property/title> ?uri } ", "question": "What monument was unveiled in 1984 of fine arts of the Soviet Union ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union", "seq": "30,66", "label": "1984 of fine arts of the Soviet Union"}], "predicate mapping": [], "id": "748e2f950c61435586ef72d009b2f7c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Tulane_Green_Wave>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "question": "Which universities are also known as the Tulane Green wave?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tulane_Green_Wave", "seq": "41,57", "label": "Tulane Green wave"}], "predicate mapping": [], "id": "f9d4553365b340d89df7041600ddb304"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many places are the tombs of everyone who died in England?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "57,63", "label": "England"}], "predicate mapping": [], "id": "d6166b09fb8c4c46ac27fcf5ae8dbb94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Uniontown,_Pennsylvania> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Keller's_Mill_Covered_Bridge> <http://dbpedia.org/ontology/state> ?uri . }", "question": "In all the states which have a Uniontown, where does a Keller's mill covered bridge exist too?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Uniontown,_Pennsylvania", "seq": "31,53", "label": "Uniontown, where does a"}, {"uri": "http://dbpedia.org/resource/Keller's_Mill_Covered_Bridge", "seq": "55,82", "label": "Keller's mill covered bridge"}], "predicate mapping": [], "id": "ab4b39c73ed14299a95b7291b10d4f6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "question": "Count the religions followed by people living in British Columbia.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Columbia", "seq": "49,64", "label": "British Columbia"}], "predicate mapping": [], "id": "3783ed5014f64bc59ce995cf1be1dc9c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/American_Basketball_League_(1996\u201398)> . ?x <http://dbpedia.org/ontology/stadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "The sports team which played at the American Basketball League championship (1996-1998), have which stadiums?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Basketball_League_(1996\u201398)", "seq": "36,61", "label": "American Basketball League"}], "predicate mapping": [], "id": "75af9778518645edb1bbb6a0c7ac1f36"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri} ", "question": "What is the order of the Omar D. Conger where Robert Sarvis was also the nominee ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Omar_D._Conger", "seq": "25,38", "label": "Omar D. Conger"}, {"uri": "http://dbpedia.org/resource/Robert_Sarvis", "seq": "46,58", "label": "Robert Sarvis"}], "predicate mapping": [], "id": "2b8f54ebc176446f84b5cd9a0bf7f09a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Emil_Dean_Zoghby> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "question": "Who wrote the musical whose composer is Emil Dean Zoghby?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Emil_Dean_Zoghby", "seq": "40,55", "label": "Emil Dean Zoghby"}], "predicate mapping": [], "id": "cf088542743d4f7c9471fde58a58f329"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Where did the conflict take place where Louis Briere de I'Isle was a commander?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle", "seq": "40,61", "label": "Louis Briere de I'Isle"}], "predicate mapping": [], "id": "bd8a29101ec64bdaa50f4f3c3c3de808"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}", "question": "How many publisher have been founded by american citizens?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "29,47", "label": "founded by american"}], "predicate mapping": [], "id": "1f1e8a30a2d348d09ee11446805e1382"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)> } ", "question": "what has been developed by John Fanning?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Fanning_(businessman)", "seq": "27,38", "label": "John Fanning"}], "predicate mapping": [], "id": "d018211e5cad471cb48e42286b59f8bc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/chairman> ?uri. <http://dbpedia.org/resource/Fort_Lauderdale_Strikers> <http://dbpedia.org/ontology/chairman> ?uri . }", "question": "Who was the chairman of Fort Lauderdale Strikers and also 2015 Fort Lauderdale Strikers season ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season", "seq": "58,93", "label": "2015 Fort Lauderdale Strikers season"}, {"uri": "http://dbpedia.org/resource/Fort_Lauderdale_Strikers", "seq": "63,86", "label": "Fort Lauderdale Strikers"}], "predicate mapping": [], "id": "595fdea8ad964062b2b5fb39504fb305"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pullaiahgaripalli> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}", "question": "What are the houses of the legislature where the leader is called Pullaiahgaripalli ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pullaiahgaripalli", "seq": "66,82", "label": "Pullaiahgaripalli"}], "predicate mapping": [], "id": "b3f0e60e97234014a7f3894713c38e83"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Germanic_languages> . ?uri <http://dbpedia.org/property/language> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "List some writers which speak one of the Germanic languages.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Germanic_languages", "seq": "41,58", "label": "Germanic languages"}], "predicate mapping": [], "id": "d0ee48eed66c4af68f17410f1026c1be"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Yellow_Claw_(DJs)> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Elasticsearch> <http://dbpedia.org/property/location> ?uri . }", "question": "In which city can I find both the office of Elasticsearch and the Yellow Claw DJ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yellow_Claw_(DJs)", "seq": "66,76", "label": "Yellow Claw"}, {"uri": "http://dbpedia.org/resource/Elasticsearch", "seq": "44,56", "label": "Elasticsearch"}], "predicate mapping": [], "id": "00792920d6934b74b1aac3738f061200"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Chicago> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "question": "Give me all magazines whose editors live in Chicago?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago", "seq": "44,50", "label": "Chicago"}], "predicate mapping": [], "id": "cc62ecdc3a6b49c0abb8041c806f783b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which religions are followed by people in England?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "seq": "42,48", "label": "England"}], "predicate mapping": [], "id": "e14c2eb6c1784c0b8a72befd991b28b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which televison shows have location as Massachusetts ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts", "seq": "39,51", "label": "Massachusetts"}], "predicate mapping": [], "id": "4545adc58a0241e7a7f875171495d9db"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }", "question": "Which governor of Charles Willing had a child named John Scott ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "seq": "18,36", "label": "Charles Willing had"}, {"uri": "http://dbpedia.org/resource/John_Scott_Harrison", "seq": "52,61", "label": "John Scott"}], "predicate mapping": [], "id": "f42b1c36286b47c8958cf2d6a74f511a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Give me some series whose network's owning company is Warner Bros. Television?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros._Television", "seq": "54,76", "label": "Warner Bros. Television"}], "predicate mapping": [], "id": "534303fe37fc4bf7b3ab0221994e27c4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Egypt_Nanotechnology_Center> <http://dbpedia.org/property/province> ?uri } ", "question": "What is the province of Egypt Nanotechnology Center ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Egypt_Nanotechnology_Center", "seq": "24,50", "label": "Egypt Nanotechnology Center"}], "predicate mapping": [], "id": "a1b2a89fbda54f5aa1f4d78972f6b0ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Akio_Morita> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "question": "What is manufactured by a company founded by Akio Morita?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Akio_Morita", "seq": "45,55", "label": "Akio Morita"}], "predicate mapping": [], "id": "4a0378488d7a4e55b54af1494dd0452d"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blue_Lagoon_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }", "question": "is blue lagoon island a part of the bahamas achipelago?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Blue_Lagoon_Island", "seq": "3,20", "label": "blue lagoon island"}, {"uri": "http://dbpedia.org/resource/The_Bahamas", "seq": "32,42", "label": "the bahamas"}], "predicate mapping": [], "id": "7909a81b56b34a5fb3669d704b262965"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rheinmetall_MG_60> <http://dbpedia.org/ontology/origin> ?uri } ", "question": "Where did Rheinmetall MG 60 originated ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rheinmetall_MG_60", "seq": "10,26", "label": "Rheinmetall MG 60"}], "predicate mapping": [], "id": "22555965f19f4a6e92729f88efea818c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kirk_Fordice> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri . }", "question": "What is the war in which both K Fordice and P Fitzwallace fight?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kirk_Fordice", "seq": "30,38", "label": "K Fordice"}, {"uri": "http://dbpedia.org/resource/Percy_Fitzwallace", "seq": "44,56", "label": "P Fitzwallace"}], "predicate mapping": [], "id": "113e33dbe9dc46c58978e463ef3ce85f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Orator> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)> }", "question": "Is The Orator in the National Archaeological Museum of Florence?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Orator", "seq": "3,12", "label": "The Orator"}, {"uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)", "seq": "21,50", "label": "National Archaeological Museum"}], "predicate mapping": [], "id": "1ac2e9ce84374f78b8e3bcae3c1dcf03"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/FC_Barcelona> } ", "question": "Who are currently playing for Barcelona FC?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/FC_Barcelona", "seq": "30,38", "label": "Barcelona"}], "predicate mapping": [], "id": "0a8fde7c5b8543ea9cbcbe3cd2931cd0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Frasier> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ScreenWriter>}", "question": "List all the notable work of the screen writer who produced Frasier ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "seq": "60,66", "label": "Frasier"}], "predicate mapping": [], "id": "a5f1adc3aeab47b59f5a845831b2e343"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Just_Another_Day...> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Queen_Latifah> }", "question": "Was Just Another day made by Queen Latifah?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Just_Another_Day...", "seq": "4,24", "label": "Just Another day made"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "seq": "29,41", "label": "Queen Latifah"}], "predicate mapping": [], "id": "b4dfd5c3a0424173bb8d70e4152cdbf7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Ferran_Soriano> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who are the players whose current clubs have Ferran Soriano as chairman?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferran_Soriano", "seq": "45,58", "label": "Ferran Soriano"}], "predicate mapping": [], "id": "8cb03d7f98d14093b047782ba028ffa2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moordener_Kill> <http://dbpedia.org/ontology/riverMouth> ?uri } ", "question": "Name the river mouth of Moordener Kill ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moordener_Kill", "seq": "24,37", "label": "Moordener Kill"}], "predicate mapping": [], "id": "c4229602891d40e0b35e90c5f8098d4b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Of the places where Kurt Vonnegut Memorial Library exists, where did Louis LeCocq die?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library", "seq": "20,49", "label": "Kurt Vonnegut Memorial Library"}, {"uri": "http://dbpedia.org/resource/Louis_LeCocq", "seq": "69,80", "label": "Louis LeCocq"}], "predicate mapping": [], "id": "15e2bcfdb55148b2a535b757cdfae2bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sean_Young> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "question": "In which series has Sean Young portrayed someone?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sean_Young", "seq": "20,29", "label": "Sean Young"}], "predicate mapping": [], "id": "e5230e04554e4a35be04d647faee20bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Palm_City,_Florida> . ?x <http://dbpedia.org/ontology/college> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "The people who did their high school in Palm City, Florida did their college where?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Palm_City,_Florida", "seq": "40,57", "label": "Palm City, Florida"}], "predicate mapping": [], "id": "ca66cfc326e54da8afe7236d75e259f7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri } ", "question": "What type of engines are utilised by Purvis Eureka?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Purvis_Eureka", "seq": "37,49", "label": "Purvis Eureka"}], "predicate mapping": [], "id": "75fa0d818e204f15beda5bf1e16d1d58"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Egyptian_Arabic> <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Central_Semitic_languages> }", "question": "Is Egyptian Arabic belong to the Central Semitic Languages family?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Egyptian_Arabic", "seq": "3,17", "label": "Egyptian Arabic"}, {"uri": "http://dbpedia.org/resource/Central_Semitic_languages", "seq": "33,57", "label": "Central Semitic Languages"}], "predicate mapping": [], "id": "039cf22b96294857b744cfb1fa32e334"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/Google_Custom_Search> <http://dbpedia.org/ontology/author> ?uri . }", "question": "Which company developed Google Web Toolkit and Google custom search?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "seq": "24,41", "label": "Google Web Toolkit"}, {"uri": "http://dbpedia.org/resource/Google_Custom_Search", "seq": "47,66", "label": "Google custom search"}], "predicate mapping": [], "id": "3fe61b9c19eb497db424c23986cb1dce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and belongs to Duck family ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie", "seq": "49,70", "label": "Huey, Dewey, and Louie"}, {"uri": "http://dbpedia.org/resource/Duck_family_(Disney)", "seq": "87,97", "label": "Duck family"}], "predicate mapping": [], "id": "65cb514fcc3148d6ba887e1d9e2d494f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Robin_(comics)> . ?x <http://dbpedia.org/property/characters> ?uri }", "question": "What is the total number of other characters of the plays whose characters is Robin (comics)?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robin_(comics)", "seq": "78,82", "label": "Robin"}], "predicate mapping": [], "id": "76e88d03b8924d729700e000cb86e234"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Wilson_(American_football)> <http://dbpedia.org/ontology/highschool> ?uri } ", "question": "From where did Ben Wilson (American football) do his highscool?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ben_Wilson_(American_football)", "seq": "15,24", "label": "Ben Wilson"}], "predicate mapping": [], "id": "3b97fa49140f452d85633a8d1f63764f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Which sports are played in the school which runs the Fr. Agnel Stadium?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium", "seq": "53,69", "label": "Fr. Agnel Stadium"}], "predicate mapping": [], "id": "dd871c9e9b134d939271640e81c6095d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri . }", "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor", "seq": "26,55", "label": "North-South Transport Corridor"}, {"uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway", "seq": "61,86", "label": "Mumbai Vadodara Expressway"}], "predicate mapping": [], "id": "ea3bd4ab943c4ebf82618c545d171971"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Isabelle_Caro> <http://dbpedia.org/property/deathPlace> ?uri . }", "question": "Where did isabelle caro and judson huss both die?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judson_Huss", "seq": "28,38", "label": "judson huss"}, {"uri": "http://dbpedia.org/resource/Isabelle_Caro", "seq": "10,22", "label": "isabelle caro"}], "predicate mapping": [], "id": "f86382f06edd4519acfc00e730f5471e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the television show whose subsequent work is Crusade and Composer is Stewart Copeland?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Crusade_(TV_series)", "seq": "50,56", "label": "Crusade"}, {"uri": "http://dbpedia.org/resource/Stewart_Copeland", "seq": "74,89", "label": "Stewart Copeland"}], "predicate mapping": [], "id": "38373a19e5964230aaa2329c041ad1e3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Katharevousa> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Katharevousa writers have been given which awards?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Katharevousa", "seq": "0,11", "label": "Katharevousa"}], "predicate mapping": [], "id": "0312574f280d45a89cd5147313fad0b1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Count the number of artists who trained at the San Francisco Art Institute?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute", "seq": "47,73", "label": "San Francisco Art Institute"}], "predicate mapping": [], "id": "1063c970689c469e81a711a634edf521"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What are the movies whose director is Orson Welles?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Orson_Welles", "seq": "38,49", "label": "Orson Welles"}], "predicate mapping": [], "id": "83f39c859fbc4eeaa715eb2c8e319759"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Which scientist is known for anthrax and has Karl Ewald Hasse as his academic advisor ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Anthrax", "seq": "29,35", "label": "anthrax"}, {"uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse", "seq": "45,60", "label": "Karl Ewald Hasse"}], "predicate mapping": [], "id": "559339119ad341b2b9cfb630cc1bd6a0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}", "question": "How many mountain are there in Sierra Nevada range?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "seq": "31,43", "label": "Sierra Nevada"}], "predicate mapping": [], "id": "06288af112614c6cb006b87cc6b4d88b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/species> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Species>}", "question": "To how many different species does the members of the Animal Kingdom belong?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Animal", "seq": "54,59", "label": "Animal"}], "predicate mapping": [], "id": "5c70e8faf9b847f3ac27fe491ccd6a65"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/subject> <http://dbpedia.org/resource/Paul_Broca> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "List the subjects of the books whose one of the topics is Pau Broca ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Broca", "seq": "58,66", "label": "Pau Broca"}], "predicate mapping": [], "id": "7d287a0404374984833426b01ed42751"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "What are some mammals whose phylum is Chordate?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chordate", "seq": "38,45", "label": "Chordate"}], "predicate mapping": [], "id": "62f0ecc271674594a21cccef030cd45e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . }", "question": "What is manufactured by Asus and Sony togather?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Asus", "seq": "24,27", "label": "Asus"}, {"uri": "http://dbpedia.org/resource/Sony", "seq": "33,36", "label": "Sony"}], "predicate mapping": [], "id": "2a9c6af7ea724bd49c834dd371c155c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Country_music> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Who is the Artist of the singles whose film genre is Country music ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Country_music", "seq": "53,65", "label": "Country music"}], "predicate mapping": [], "id": "397233307bda42d486c73b3f774b5d9d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Instagram> } ", "question": "Which company owns instagram?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Instagram", "seq": "19,27", "label": "instagram"}], "predicate mapping": [], "id": "233b7a9099164868a3abc029100949c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }", "question": "Who did Daniel Gibson marry?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Gibson", "seq": "8,20", "label": "Daniel Gibson"}], "predicate mapping": [], "id": "4b249c6c2fef48e889eb99914a430034"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Homestead_Grays> . ?x <http://dbpedia.org/property/birthDate> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "question": "Where were the sportsmen born, who started their careers with Homestead Grays?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Homestead_Grays", "seq": "62,76", "label": "Homestead Grays"}], "predicate mapping": [], "id": "7c1138e9bbe54bf79f56584f88d64515"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . }", "question": "Who studied at  Harvard-Westlake School and has Henry E. Catto, Jr. as   predecessor ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "16,38", "label": "Harvard-Westlake School"}, {"uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.", "seq": "48,65", "label": "Henry E. Catto, Jr"}], "predicate mapping": [], "id": "7197caeaf6804e9a9f9cb80097235c1b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "In which countries can i find some feminist writers?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Feminism", "seq": "35,42", "label": "feminist"}], "predicate mapping": [], "id": "67b58e4d4ed94311a8d0d1ab84d2154d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathDate> <http://dbpedia.org/resource/Euboea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}", "question": "Which famous philosopher died on island Euboea?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Euboea", "seq": "40,45", "label": "Euboea"}], "predicate mapping": [], "id": "794526bf2c154e83bd9954aed2e8d6ea"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Voices_(group)> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Tamera_Mowry> }", "question": "Is Tamera Mowry the former band member of Voices?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Voices_(group)", "seq": "42,47", "label": "Voices"}, {"uri": "http://dbpedia.org/resource/Tamera_Mowry", "seq": "3,14", "label": "Tamera Mowry"}], "predicate mapping": [], "id": "3a1e1c8fbb3b4c09ba53450a4fd77cd7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "How many movies are distributed by Cinema International Corporation?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "35,66", "label": "Cinema International Corporation"}], "predicate mapping": [], "id": "6aa814339d6747cd82a103df2b4c228f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_W._Weeks> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}", "question": "Who was the president under which a tennis player held office before John W. Weeks?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_W._Weeks", "seq": "69,81", "label": "John W. Weeks"}], "predicate mapping": [], "id": "fece7229f9bf482dbebf1709a0fb8112"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "question": "List the birth city of the politicians of Democratic Party.", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)", "seq": "42,57", "label": "Democratic Party"}], "predicate mapping": [], "id": "3ddc996f258946418b9ae66b9d03e234"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Which American football player is a former team player of Indianapolis Colts and current team is Michigan Wolverines?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indianapolis_Colts", "seq": "58,75", "label": "Indianapolis Colts"}, {"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "seq": "97,115", "label": "Michigan Wolverines"}], "predicate mapping": [], "id": "43549d9a19ca408daf0fb2899e106312"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Which river's source country is Zambia and mouth country is Mozambique?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "seq": "32,37", "label": "Zambia"}, {"uri": "http://dbpedia.org/resource/Mozambique", "seq": "60,69", "label": "Mozambique"}], "predicate mapping": [], "id": "c82aa7a94ec5431eb6ef397da4551908"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which person works at the American Magazine?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_American_Magazine", "seq": "22,42", "label": "the American Magazine"}], "predicate mapping": [], "id": "b7492b365add45569dcbee5b3db8650d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri } ", "question": "Name the regions served by Toll Global Express ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toll_Global_Express", "seq": "27,45", "label": "Toll Global Express"}], "predicate mapping": [], "id": "0aef05bbe0154edd9c0c705a89a3c182"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/UFC_140> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who are the tenants of the stadium where the UFC 140 is located?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/UFC_140", "seq": "45,51", "label": "UFC 140"}], "predicate mapping": [], "id": "0fa03d2ba63f4f22b7c78644d60f399d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Canton_of_Fribourg> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }", "question": "How many mountain ranges are located in the Canton of Fribourg?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canton_of_Fribourg", "seq": "44,61", "label": "Canton of Fribourg"}], "predicate mapping": [], "id": "5547e2421f8e4105b3248f3b3a2c7fbf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Which religion followers are in the Royal Thai Army?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "seq": "36,50", "label": "Royal Thai Army"}], "predicate mapping": [], "id": "cbc87af1e755447fa98c05a0e64a2eb2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }", "question": "In which teams did anyone who played as a defencemen, play previously?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "seq": "42,51", "label": "defencemen"}], "predicate mapping": [], "id": "572bc2bfc3424538bdc77b22722dfe47"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/James_Brown> }", "question": "Did James brown make the song Killing is Out, School Is In?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In", "seq": "30,57", "label": "Killing is Out, School Is In"}, {"uri": "http://dbpedia.org/resource/James_Brown", "seq": "4,14", "label": "James brown"}], "predicate mapping": [], "id": "dab9358e5ab14f72b0af6926cb98b371"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wichita_Recordings> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/PIAS_Recordings> }", "question": "Is PIAS Recordings the distributing label of Wichita Recordings?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wichita_Recordings", "seq": "45,62", "label": "Wichita Recordings"}, {"uri": "http://dbpedia.org/resource/PIAS_Recordings", "seq": "3,17", "label": "PIAS Recordings"}], "predicate mapping": [], "id": "47dcd274e3704296945ea9b12dd1ee6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siddhartha_Shankar_Ray> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Kamla_Beniwal> <http://dbpedia.org/property/party> ?uri . }", "question": "What party are Siddharta Shankar Ray and Kamla Beniwal from?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siddhartha_Shankar_Ray", "seq": "15,35", "label": "Siddharta Shankar Ray"}, {"uri": "http://dbpedia.org/resource/Kamla_Beniwal", "seq": "41,53", "label": "Kamla Beniwal"}], "predicate mapping": [], "id": "16a642c2d9054f76866946a7e2aa742a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Lucas_Oil_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Count all american football players whose former team owns Lucas Oil Stadium ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucas_Oil_Stadium", "seq": "59,75", "label": "Lucas Oil Stadium"}], "predicate mapping": [], "id": "7246b56a6a294f789c8060bdd018db4b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Atlantic_Ocean> . ?x <http://dbpedia.org/property/cities> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "How many cities are around the sea which flows into the Atlantic?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atlantic_Ocean", "seq": "56,63", "label": "Atlantic"}], "predicate mapping": [], "id": "83c320a2818b4a279f69b7838f2668f8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }", "question": "How many apes are there?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ape", "seq": "9,12", "label": "apes"}], "predicate mapping": [], "id": "09f4a767c4ef49b09ad81beafe0dcf61"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri . }", "question": "What is the occupation of the Irving Chernev and Karen Grigorian?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Irving_Chernev", "seq": "30,43", "label": "Irving Chernev"}, {"uri": "http://dbpedia.org/resource/Karen_Grigorian", "seq": "49,63", "label": "Karen Grigorian"}], "predicate mapping": [], "id": "d26cda70df824bb19cc10cc4271643c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri  . }", "question": "How many cities are close to Lake Victoria?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Victoria", "seq": "29,41", "label": "Lake Victoria"}], "predicate mapping": [], "id": "209c460e684848fe9572d27a98ecbfea"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_Fomin> <http://dbpedia.org/ontology/significantBuilding> ?uri } ", "question": "Name the ssignificant buildings of Ivan Fomin ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivan_Fomin", "seq": "35,44", "label": "Ivan Fomin"}], "predicate mapping": [], "id": "4c026c13b12440d5b522a35a7614900a"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Tupac_Shakur> }", "question": "Did Tupac write the lyrics of Holler If Ya Hear Me?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)", "seq": "30,49", "label": "Holler If Ya Hear Me"}, {"uri": "http://dbpedia.org/resource/Tupac_Shakur", "seq": "4,14", "label": "Tupac write"}], "predicate mapping": [], "id": "98cf6110489945a29a7358a6ce88c7b3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Zuo_Zongtang> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Where did the war take place where one of the commander was Zuo Zongtang?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Zuo_Zongtang", "seq": "60,71", "label": "Zuo Zongtang"}], "predicate mapping": [], "id": "e41dd0cd6d1140b8b8f3f4cf25ac51e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/India> <http://dbpedia.org/ontology/largestCity> ?uri. <http://dbpedia.org/resource/Salsette_Island> <http://dbpedia.org/ontology/largestCity> ?uri . }", "question": "Which largest city of Salsette Island is also the largest city of India ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/India", "seq": "66,70", "label": "India"}, {"uri": "http://dbpedia.org/resource/Salsette_Island", "seq": "22,36", "label": "Salsette Island"}], "predicate mapping": [], "id": "dbff72738b8a4eecaeeb1c92dd24ce41"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri} ", "question": "Which route start of Moscow-Kazan high-speed railway is the home stadium of 2011-12 FC Spartak Moscow ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway", "seq": "21,51", "label": "Moscow-Kazan high-speed railway"}, {"uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season", "seq": "76,100", "label": "2011-12 FC Spartak Moscow"}], "predicate mapping": [], "id": "6d665a3fde3242e690e58cf5a30b7331"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Panionios_G.S.S._season> <http://dbpedia.org/ontology/ground> ?uri } ", "question": "What is the name of the homeground of football team Panionios G.S.S.?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Panionios_G.S.S._season", "seq": "52,66", "label": "Panionios G.S.S"}], "predicate mapping": [], "id": "e2c1089bbf4440f798c4e4415ab5b6c1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri  . }", "question": "Who was the PM under which William Deane served?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Deane", "seq": "27,39", "label": "William Deane"}], "predicate mapping": [], "id": "a5f5c0c2445b4506b6b33166953033e2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "How many teams was Garry Unger in, previously?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Garry_Unger", "seq": "19,29", "label": "Garry Unger"}], "predicate mapping": [], "id": "0fb28604c99742c0aa2963169472cd4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Thomson_Mason_(1787\u20131850)> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . }", "question": "What killed John Thompson Mason and Martino Martini?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Thomson_Mason_(1787\u20131850)", "seq": "12,30", "label": "John Thompson Mason"}, {"uri": "http://dbpedia.org/resource/Martino_Martini", "seq": "36,50", "label": "Martino Martini"}], "predicate mapping": [], "id": "a66454f689bf4ec393eef188c8ea0fb6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "question": "How many different currencies are used in the places governed by the president of France?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/President_of_France", "seq": "69,87", "label": "president of France"}], "predicate mapping": [], "id": "36e913ffdfe04f3c836be75b16def3a4"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mona_Lisa> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Louvre> }", "question": "Is Mona Lisa in the Louvre museum?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mona_Lisa", "seq": "3,11", "label": "Mona Lisa"}, {"uri": "http://dbpedia.org/resource/Louvre", "seq": "20,25", "label": "Louvre"}], "predicate mapping": [], "id": "24df8c770302477ea971c6535bda9937"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . }", "question": "How many people play for the Dallas Cowboys?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas_Cowboys", "seq": "29,42", "label": "Dallas Cowboys"}], "predicate mapping": [], "id": "a850c2eb0a1a4e92b601ea447d0228f2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Ludacris> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the judge of the TV show whose one of the judge is Ludacris ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ludacris", "seq": "56,63", "label": "Ludacris"}], "predicate mapping": [], "id": "84ede2491cf7408fbbb66c5db851f30a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Young_Life> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Where did the people die who were known for Young Life?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Young_Life", "seq": "44,53", "label": "Young Life"}], "predicate mapping": [], "id": "2d3593472ac64342ae437da2e0f9880f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Christian_Turn'd_Turk> <http://dbpedia.org/property/subject> ?uri } ", "question": "List the primary  subjects of A Christian Turn'd Turk?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Christian_Turn'd_Turk", "seq": "30,52", "label": "A Christian Turn'd Turk"}], "predicate mapping": [], "id": "edcf0c29b7884073984ea20413f0eb1c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Persona_(1966_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "Which awards did the writer of Persona win ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Persona_(1966_film)", "seq": "31,37", "label": "Persona"}], "predicate mapping": [], "id": "a0f6a9ff04114339bf934c012ed2f0b2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Give me a count of movies whose editor is Mark Stevens?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)", "seq": "42,53", "label": "Mark Stevens"}], "predicate mapping": [], "id": "eee1bb47d0ac48a0a79142e2a0ae6f48"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Josh_Groban> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Who are the  judges of the television show whose anchor is Josh Groban?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Groban", "seq": "59,69", "label": "Josh Groban"}], "predicate mapping": [], "id": "0652b6c013d14959a266fdbb14f106ab"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> } ", "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by  Simon Fuller?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "seq": "75,88", "label": "Julian Gingell"}, {"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "106,117", "label": "Simon Fuller"}], "predicate mapping": [], "id": "dba124f2991542c596c0081858c11b79"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WBCQ-FM> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/area> ?uri  . }", "question": "List the area of radio stations whose sister station is WBCQ-FM?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/WBCQ-FM", "seq": "56,62", "label": "WBCQ-FM"}], "predicate mapping": [], "id": "e83f61a2a503458487940f058dbc056a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What ethnicity do people in British Columbia belong to?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Columbia", "seq": "28,43", "label": "British Columbia"}], "predicate mapping": [], "id": "0d93df312f8448acb89d604531f0dcc3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Latin> }", "question": "Is Latin the official language of Sovereign Military Order of Malta?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta", "seq": "34,66", "label": "Sovereign Military Order of Malta"}, {"uri": "http://dbpedia.org/resource/Latin", "seq": "3,7", "label": "Latin"}], "predicate mapping": [], "id": "561e313df8b44f6f86beb08ed0ff7314"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/ontology/outflow> ?uri } ", "question": "List the  outflow of Lake Uniamsi?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si", "seq": "21,32", "label": "Lake Uniamsi"}], "predicate mapping": [], "id": "307417ba7c684e2887f17e9a33b81e3e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>}", "question": "Which awards did the creator of A Barrel of Laughs, a Vale of Tears won ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears", "seq": "32,66", "label": "A Barrel of Laughs, a Vale of Tears"}], "predicate mapping": [], "id": "214ff25fe3d84f69a29dc354d42a6207"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Carlene_Carter>  . }", "question": "What is father's name who also served in military of Carlene Carter?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carlene_Carter", "seq": "53,66", "label": "Carlene Carter"}], "predicate mapping": [], "id": "8c3a21bdc66d4755b75c98c498773f1e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harlan_Mathews> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Richard_Merrill_Atkinson> <http://dbpedia.org/ontology/almaMater> ?uri . }", "question": "In which university did Harlan Mathews study, where Richard Meriil Atkinson went too?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harlan_Mathews", "seq": "24,37", "label": "Harlan Mathews"}, {"uri": "http://dbpedia.org/resource/Richard_Merrill_Atkinson", "seq": "52,74", "label": "Richard Meriil Atkinson"}], "predicate mapping": [], "id": "930ba27955d9475587dbbb75ffcae399"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have trained the wrestlers who were billed in Wisconsin?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wisconsin", "seq": "62,70", "label": "Wisconsin"}], "predicate mapping": [], "id": "e36c53ecf3f04cf7a35675ce5ff859ea"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jovan_Vladimir> <http://dbpedia.org/property/majorShrine> ?uri } ", "question": "List the major shrines of Jovan Vladimir?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jovan_Vladimir", "seq": "26,39", "label": "Jovan Vladimir"}], "predicate mapping": [], "id": "de4a17ef8b2f4b39b40ef30f83c56a81"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Viacom_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which shows are from a company whose subsidiary is Viacom Productions?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Viacom_Productions", "seq": "51,68", "label": "Viacom Productions"}], "predicate mapping": [], "id": "0396475ffe70439b901b07d6784e000b"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chant\u00e9_mas> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/West_Africa> }", "question": "Did Chant Mas originate in West Africa?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chant\u00e9_mas", "seq": "4,12", "label": "Chant Mas"}, {"uri": "http://dbpedia.org/resource/West_Africa", "seq": "27,37", "label": "West Africa"}], "predicate mapping": [], "id": "df518a80342e4fb984830368c9884d96"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shim\u014dsa_Plateau> <http://dbpedia.org/ontology/border> ?uri } ", "question": "What are on the borders of Shimsa Plateau?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shim\u014dsa_Plateau", "seq": "27,40", "label": "Shimsa Plateau"}], "predicate mapping": [], "id": "15c9ac66e1244177b01e0b4386cf5efb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri } ", "question": "Who edited  British Gazette ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Gazette", "seq": "12,26", "label": "British Gazette"}], "predicate mapping": [], "id": "2e7e281583534d89b40fa6de036f5439"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> } ", "question": "Which spanish novel was published by Francisco de Robles?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Francisco_de_Robles", "seq": "37,55", "label": "Francisco de Robles"}], "predicate mapping": [], "id": "baa53040546c4b7485dd8c3b4ecd311e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . }", "question": "Which current player of Chicago Bulls was drafted by Los Angeles Clippers ?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "seq": "24,36", "label": "Chicago Bulls"}, {"uri": "http://dbpedia.org/resource/Los_Angeles_Clippers", "seq": "53,72", "label": "Los Angeles Clippers"}], "predicate mapping": [], "id": "105528dc63e94de280ca2dd24c29a603"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hometown> <http://dbpedia.org/resource/Russia> . ?x <http://dbpedia.org/property/hometown> ?uri }", "question": "Count the total number  of hometown of the gymnasts whose one of the hometown in Russia ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russia", "seq": "81,86", "label": "Russia"}], "predicate mapping": [], "id": "0feb39bf1e8f453bb816ea93a2b502c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bruce_Lee> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "What is the resting place of the children of Bruce Lee ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Lee", "seq": "45,53", "label": "Bruce Lee"}], "predicate mapping": [], "id": "e7550728ad6f41acb0ad81d2f95ffb96"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What are the television shows whose company's predecessor is Desilu Productions?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Desilu_Productions", "seq": "61,78", "label": "Desilu Productions"}], "predicate mapping": [], "id": "deea1a7029184a36887d5130ae3b7420"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri } ", "question": "tell me the school to which Cyril Hume went?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cyril_Hume", "seq": "28,37", "label": "Cyril Hume"}], "predicate mapping": [], "id": "cd0e2088c4334a499439865a4b8605d1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Central_American_Games> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who has built the stadiums which were rented by the Central american games of 2013?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013_Central_American_Games", "seq": "52,73", "label": "Central american games"}], "predicate mapping": [], "id": "2518d2b2d1ac4e4fbd3d905d8ea634bd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "question": "Estimate the number of sports divisions at the universities under international association of universities.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/International_Association_of_Universities", "seq": "66,106", "label": "international association of universities"}], "predicate mapping": [], "id": "3f549a2b9eb34b59bd94ab9d9d2a60d2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri } ", "question": "List the prospect team of Robin Kovacs ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robin_Kovacs", "seq": "26,37", "label": "Robin Kovacs"}], "predicate mapping": [], "id": "0f900abe071d458c8008e93f37f6c252"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/George_Roberts_Andrews> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "question": "What is sovereignity of the successor of Mr. George Robert Andrews ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Roberts_Andrews", "seq": "45,65", "label": "George Robert Andrews"}], "predicate mapping": [], "id": "600bf1ca0e93442ba5fa63154cf524a9"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Karl_Marx> <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Labor_relations> }", "question": "Is Labor relations the main interest of Karl Marx?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Karl_Marx", "seq": "40,48", "label": "Karl Marx"}, {"uri": "http://dbpedia.org/resource/Labor_relations", "seq": "3,17", "label": "Labor relations"}], "predicate mapping": [], "id": "425f07694cbb4f12a161b89c5d635e62"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which show developed by Brain Graden has theme music composed by Primus ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "seq": "24,35", "label": "Brain Graden"}, {"uri": "http://dbpedia.org/resource/Primus_(band)", "seq": "65,70", "label": "Primus"}], "predicate mapping": [], "id": "aed72becd6f144b194afb38e15d9b5c2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "What mammals are classified into Diprotodontia ?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Diprotodontia", "seq": "33,45", "label": "Diprotodontia"}], "predicate mapping": [], "id": "55b30011d61b4084beb7e4971374cac2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "question": "Who all have succeeded the kings buried in Rome?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rome", "seq": "43,46", "label": "Rome"}], "predicate mapping": [], "id": "acf96951be6c4bdda4d3fe9e77b9da55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Edward_Douglass_White> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name a office holder whose predecessor is Edward Douglass White and has son named Charles Phelps Taft II?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edward_Douglass_White", "seq": "42,62", "label": "Edward Douglass White"}, {"uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II", "seq": "82,103", "label": "Charles Phelps Taft II"}], "predicate mapping": [], "id": "6429713d75f449e0852eaa9a52a8540a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Monument_to_Salavat_Yulaev> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "question": "Where did the  designer of Monument to Salavat Yulaev die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Monument_to_Salavat_Yulaev", "seq": "27,52", "label": "Monument to Salavat Yulaev"}], "predicate mapping": [], "id": "e0c15d9cbe7d442b90853f84915861a9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri } ", "question": "What is the club of Perianne Jones ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Perianne_Jones", "seq": "20,33", "label": "Perianne Jones"}], "predicate mapping": [], "id": "0827b6115c1e42db887f851cff070db2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Smith_Griffin> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "question": "Where is the constituency of John Smith Griffin ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Smith_Griffin", "seq": "29,46", "label": "John Smith Griffin"}], "predicate mapping": [], "id": "bea54664fe0f4bb38b817c38546b103d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "List the books by the authors buried in the Convent of the Barefoot Trinitarians?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians", "seq": "44,79", "label": "Convent of the Barefoot Trinitarians"}], "predicate mapping": [], "id": "576e5c12a2c248b8830551d0f73df4b8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "question": "Which companies have launched from the Vandenberg Air Force Air base?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base", "seq": "39,62", "label": "Vandenberg Air Force Air"}], "predicate mapping": [], "id": "55f6d1bfea1c4facbb55ebbb90805560"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> <http://dbpedia.org/resource/Stephanie_Rice> }", "question": "Is Stephanie Rice the flagbearer of Australia at the 2008 Summer Olympics?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics", "seq": "36,72", "label": "Australia at the 2008 Summer Olympics"}, {"uri": "http://dbpedia.org/resource/Stephanie_Rice", "seq": "3,16", "label": "Stephanie Rice"}], "predicate mapping": [], "id": "b6350d2207344671bafd1d5b4cde9b63"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spanish_Harlem_Incident> <http://dbpedia.org/ontology/composer> ?uri. <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri . }", "question": "Spanish harlem incident and girl from the north country were originally composed by whom?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident", "seq": "0,22", "label": "Spanish harlem incident"}, {"uri": "http://dbpedia.org/resource/Girl_from_the_North_Country", "seq": "28,54", "label": "girl from the north country"}], "predicate mapping": [], "id": "04444d2be01e42628d4b68c281b03655"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)> <http://dbpedia.org/property/founder> ?uri } ", "question": "Who is the founder of Oprah Winfrey Network (U.S. TV channel) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)", "seq": "22,42", "label": "Oprah Winfrey Network"}], "predicate mapping": [], "id": "bef4d21a7f66422c8f6b906ff1dfc6ca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Venkatraman_Ramakrishnan> . ?uri <http://dbpedia.org/property/prizes> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": " How many scientist have won an award by the society led by Venkatraman Ramakrishnan?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Venkatraman_Ramakrishnan", "seq": "60,83", "label": "Venkatraman Ramakrishnan"}], "predicate mapping": [], "id": "84f2de8922174f768151cc95ffc13a23"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seattle_Great_Wheel> <http://dbpedia.org/property/locationTown> ?uri. <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri} ", "question": "Which place of Geography Club is the location of Seattle Great Wheel ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seattle_Great_Wheel", "seq": "49,67", "label": "Seattle Great Wheel"}, {"uri": "http://dbpedia.org/resource/Geography_Club_(play)", "seq": "15,28", "label": "Geography Club"}], "predicate mapping": [], "id": "e753060cd8dc4ad3bafcc132529aa7a8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which television show is based in Massachusetts and has opening theme as \"Where Everybody Knows Your Name\" ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "seq": "73,105", "label": "\"Where Everybody Knows Your Name\""}, {"uri": "http://dbpedia.org/resource/Massachusetts", "seq": "34,46", "label": "Massachusetts"}], "predicate mapping": [], "id": "a94b8573bbf7434592b2463cc3700be8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Arceneaux,_Jr.> <http://dbpedia.org/ontology/occupation> ?uri } ", "question": "What is the career of George Arceneaux, Jr. ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr.", "seq": "22,41", "label": "George Arceneaux, Jr"}], "predicate mapping": [], "id": "3bf7d79605ca4456a79601a892b1ce3a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri } ", "question": "Name the prospect team of Mikhail Pashnin ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mikhail_Pashnin", "seq": "26,40", "label": "Mikhail Pashnin"}], "predicate mapping": [], "id": "c762b3cd8bd848748e7d136d4b2588c3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Pandaruan_River> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "question": "Who are the maintainers of the bridges which cross the pandaruan river?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pandaruan_River", "seq": "55,69", "label": "pandaruan river"}], "predicate mapping": [], "id": "618bbb187ffc48cfa98b5a910a1e61fb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Gough_Whitlam> } ", "question": "Who all held a position when Gough Whitlam was the prime minister?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gough_Whitlam", "seq": "29,41", "label": "Gough Whitlam"}], "predicate mapping": [], "id": "0c72f7f8c4d549bc9c7f59b72394a598"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/CBS>  . }", "question": "Which veterans served at CBS?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/CBS", "seq": "25,27", "label": "CBS"}], "predicate mapping": [], "id": "af5ba5ad9b42455eab9f628eba9d1e2c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Guido_Guerrini> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> ?uri . }", "question": "For which team do Guido Guerrini and Massimo Liverani currently play for?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Guido_Guerrini", "seq": "18,31", "label": "Guido Guerrini"}, {"uri": "http://dbpedia.org/resource/Massimo_Liverani", "seq": "37,52", "label": "Massimo Liverani"}], "predicate mapping": [], "id": "03a102b6e3c94e6d819336676a2e112d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . }", "question": "Which games publishers are located in California?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "seq": "38,47", "label": "California"}], "predicate mapping": [], "id": "10f14cccfbd949feb78ff964c2f44eb9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_II> . ?x <http://dbpedia.org/property/battles> ?uri }", "question": "How many other battles have the military person fought whose one of the battles is World War II ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/World_War_II", "seq": "83,94", "label": "World War II"}], "predicate mapping": [], "id": "71acf91b02794986a8ac6915c483a46f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri } ", "question": "Who is the  distributor of Rev (drink) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rev_(drink)", "seq": "27,29", "label": "Rev"}], "predicate mapping": [], "id": "32d3e61eddc2407e87f186bc486cd36e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Who is the scientist whose doctoral student is Erich Bagge?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erich_Bagge", "seq": "47,57", "label": "Erich Bagge"}], "predicate mapping": [], "id": "86ef883773c04b44a83ea4b1ec8ee7c7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Japan> . ?uri <http://dbpedia.org/property/label> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "How many bands are signed up with labels which were founded in Japan?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Japan", "seq": "63,67", "label": "Japan"}], "predicate mapping": [], "id": "2ca759d5f081472b8b48e96396caf9b4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tr\u1ea7n_Vi\u1ec7t_H\u01b0\u01a1ng> <http://dbpedia.org/property/nationalteam> ?uri } ", "question": "Name the nationalteam of Trn Vit Hng ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tr\u1ea7n_Vi\u1ec7t_H\u01b0\u01a1ng", "seq": "25,35", "label": "Trn Vit Hng"}], "predicate mapping": [], "id": "4a351ee20c4a44c3b120ab07ca56f7a7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Kwesi_Ocran> <http://dbpedia.org/property/allegiance> ?uri } ", "question": "What is the allegiance of Albert Kwesi Ocran ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran", "seq": "26,43", "label": "Albert Kwesi Ocran"}], "predicate mapping": [], "id": "7b40ce95904c467d8f1c01dccd0ce70c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Sony_Financial> . ?x <http://dbpedia.org/ontology/owningCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "What is the owning company of the bank whose parent is Sony Financial ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Financial", "seq": "55,68", "label": "Sony Financial"}], "predicate mapping": [], "id": "bdd487c7a42548298552ee353383a88e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_L._Dayton> <http://dbpedia.org/ontology/appointer> ?uri } ", "question": "Who appointed William L. Dayton ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_L._Dayton", "seq": "14,30", "label": "William L. Dayton"}], "predicate mapping": [], "id": "c0cf9476109b449782a8226a9ae2ae4f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Dick_Lundy_(animator)> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "What is the fictional character whose voice over is done by the animator of Dick Lundy ?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dick_Lundy_(animator)", "seq": "76,85", "label": "Dick Lundy"}], "predicate mapping": [], "id": "e59b93cd1e8d40d8be26c41a243212cc"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Madagascar:_Operation_Penguin> <http://dbpedia.org/property/artist> ?uri } ", "question": "Name the Artist of Madagascar: Operation Penguin ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin", "seq": "19,47", "label": "Madagascar: Operation Penguin"}], "predicate mapping": [], "id": "a2ec42a127424074b5d7bc144285dcd6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . }", "question": "Count the tenants of the stadiums owned by toronto.", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "43,49", "label": "toronto"}], "predicate mapping": [], "id": "9dc0111186b24e9c86ae66f5bd0cefcb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Name the company with product named Microsft Azure and provides OneDrive as a service ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Azure", "seq": "36,49", "label": "Microsft Azure"}, {"uri": "http://dbpedia.org/resource/OneDrive", "seq": "64,71", "label": "OneDrive"}], "predicate mapping": [], "id": "05243a944c564231bfbdcc7577bf0492"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vancouver_Whitecaps_FC> <http://dbpedia.org/property/chairman> ?uri } ", "question": "list all the chairman of Vancouver Whitecaps FC?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC", "seq": "25,46", "label": "Vancouver Whitecaps FC"}], "predicate mapping": [], "id": "047a2084681a4bc4b07d5e2e9995f2eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siege_of_Fort_Meigs> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri . }", "question": "Which famous commander led the Siege of forn meigs and was involved in the battle of fort stephenson?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Meigs", "seq": "31,49", "label": "Siege of forn meigs"}, {"uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson", "seq": "75,99", "label": "battle of fort stephenson"}], "predicate mapping": [], "id": "11258ba9f4464dabb69a719605f61b78"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri } ", "question": "Who is the label of The Producers (2005 film) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Producers_(2005_film)", "seq": "20,32", "label": "The Producers"}], "predicate mapping": [], "id": "0d3ce4f95ac74189a54701a42dda617d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "What is the movie whose producer is Michael Deeley and directed by  Ridley Scott?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "seq": "36,49", "label": "Michael Deeley"}, {"uri": "http://dbpedia.org/resource/Ridley_Scott", "seq": "68,79", "label": "Ridley Scott"}], "predicate mapping": [], "id": "8788b9a42eae46a7ae9f7ac2c79a8056"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Denver>  . }", "question": "What is the state whose largest city is Denver?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Denver", "seq": "40,45", "label": "Denver"}], "predicate mapping": [], "id": "d6b6dd1b9b1f42b2a4339f0040398eca"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/American_English> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "question": "Give me some TV stations whose network's main language is American English?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/American_English", "seq": "58,73", "label": "American English"}], "predicate mapping": [], "id": "5405afee486944e1976b7ba7911f045d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Teriitaria_II> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Where did the partner of Teriitaria II die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Teriitaria_II", "seq": "25,37", "label": "Teriitaria II"}], "predicate mapping": [], "id": "d03cf8ab9ba54ead94c0ab2b0355b918"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/WTUL> <http://dbpedia.org/property/owner> ?uri} ", "question": "Which work institue of andrew Schally belongs to WTUL ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Schally", "seq": "23,36", "label": "andrew Schally"}, {"uri": "http://dbpedia.org/resource/WTUL", "seq": "49,52", "label": "WTUL"}], "predicate mapping": [], "id": "e5fd26f8366941a1a8300ce006874f4c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EXXV-TV> <http://dbpedia.org/property/licensee> ?uri } ", "question": "Who is the licensee of EXXV-TV ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/EXXV-TV", "seq": "23,29", "label": "EXXV-TV"}], "predicate mapping": [], "id": "106ea7f1234e4ae29451ff12ce6e4684"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Republican_River> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }", "question": "Through which states do the rivers flow which join in the republican river from the left?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Republican_River", "seq": "58,73", "label": "republican river"}], "predicate mapping": [], "id": "c1514e50dd2f4538833f08a6bc8103c2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin'> <http://dbpedia.org/property/language> ?uri } ", "question": "In which language is All I need is Your Sweet lovin written ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin'", "seq": "21,50", "label": "All I need is Your Sweet lovin"}], "predicate mapping": [], "id": "61cf658e0164453f858aee18ab264e25"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri . }", "question": "Under which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood", "seq": "35,59", "label": "Trinity School, Brentwood"}, {"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "seq": "65,97", "label": "Buckhurst Hill County High School"}], "predicate mapping": [], "id": "28ad5ec354e644e4adfd4890503082b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Mid_Wales> . ?x <http://dbpedia.org/ontology/foundedBy> ?uri  . }", "question": "Who founded a company which served Mid Wales ?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mid_Wales", "seq": "35,43", "label": "Mid Wales"}], "predicate mapping": [], "id": "27b3911bc8e245c79e65ab3d86f02480"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many television shows have  Fox Broadcasting Company as their channel?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "seq": "32,55", "label": "Fox Broadcasting Company"}], "predicate mapping": [], "id": "b55cd5825f3f4a4a9dda3693609c3e4b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . }", "question": "How many things are written in C++?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/C++", "seq": "31,33", "label": "C++"}], "predicate mapping": [], "id": "79277088dda94649b2348c07d0dd17e5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "How many artists play as Rickenbacker?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rickenbacker", "seq": "25,36", "label": "Rickenbacker"}], "predicate mapping": [], "id": "4d5845bcd6044165bbcdfa12d79bd84d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }", "question": "Who were the opponents of employees of Henry Howard, the Northampton Earl?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton", "seq": "39,67", "label": "Henry Howard, the Northampton"}], "predicate mapping": [], "id": "5617f56ff171400ebf9650a950609f0c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> . ?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Diprotodontia", "seq": "35,47", "label": "Diprotodontia"}, {"uri": "http://dbpedia.org/resource/Chordate", "seq": "63,70", "label": "Chordate"}], "predicate mapping": [], "id": "14fbed5378264537bb4a579854d59789"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri. <http://dbpedia.org/resource/U.S._Route_59> <http://dbpedia.org/property/junction> ?uri . }", "question": "List the junctions which lie on U.S. Route 59 in Texas and U.S. Route 59 ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas", "seq": "32,53", "label": "U.S. Route 59 in Texas"}, {"uri": "http://dbpedia.org/resource/U.S._Route_59", "seq": "59,71", "label": "U.S. Route 59"}], "predicate mapping": [], "id": "87d393b402be4c22859bc21ab59a82c4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose source region is North-Western Province, Zambia and source location is Ikelenge  District?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "seq": "38,67", "label": "North-Western Province, Zambia"}, {"uri": "http://dbpedia.org/resource/Ikelenge_District", "seq": "92,109", "label": "Ikelenge  District"}], "predicate mapping": [], "id": "bb053b427bf8492cabece4ccf6a9a256"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Who are some basketball players who played for Phoenix Suns?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Phoenix_Suns", "seq": "47,58", "label": "Phoenix Suns"}], "predicate mapping": [], "id": "6e9633d042bc4dc3abcab2f2841c1746"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nice_&_Smooth> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri . }", "question": "Which collaborator of Nice and Smooth wrote Same Song ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nice_&_Smooth", "seq": "22,36", "label": "Nice and Smooth"}, {"uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)", "seq": "44,52", "label": "Same Song"}], "predicate mapping": [], "id": "b4b6cd2e49ad4a12b209a01e1eab720b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tyler,_Sr.> <http://dbpedia.org/ontology/child> ?uri } ", "question": "Who is the child of John Tyler, Sr.?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tyler,_Sr.", "seq": "20,33", "label": "John Tyler, Sr"}], "predicate mapping": [], "id": "922da121de7d4c2b94f5704844a63b18"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Languages_of_Ethiopia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the country with native language as Languages of Ethiopia?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Languages_of_Ethiopia", "seq": "44,64", "label": "Languages of Ethiopia"}], "predicate mapping": [], "id": "408ee042ce504f0d9e43f239bf62a596"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "question": "The successor of Ulrich II, Count of East Frisia was born in what place?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia", "seq": "17,47", "label": "Ulrich II, Count of East Frisia"}], "predicate mapping": [], "id": "bc828e38946849059989fb94ae3eb760"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri } ", "question": "What company is the distributor of Bombay Sapphire?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "seq": "35,49", "label": "Bombay Sapphire"}], "predicate mapping": [], "id": "0dd98abb1d704acbaaaf373111ec2b6f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "How many awards have been given to screenwriters?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "seq": "35,47", "label": "screenwriters"}], "predicate mapping": [], "id": "a0c73428e66a4f2bb89939cc2149d2bf"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_City_Region> <http://dbpedia.org/ontology/part> ?uri } ", "question": "Name the part of Liverpool city region >", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Liverpool_City_Region", "seq": "17,37", "label": "Liverpool city region"}], "predicate mapping": [], "id": "3fabc75aa05d4a37873532407e1f9e53"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "question": "Which artists trained in San Francisco Art Institute?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute", "seq": "25,51", "label": "San Francisco Art Institute"}], "predicate mapping": [], "id": "068232e91e1c418898c1cecab28531cd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri } ", "question": "To which county of New York city does the Tremount Avenue street belong?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tremont_Avenue", "seq": "42,56", "label": "Tremount Avenue"}], "predicate mapping": [], "id": "db2a89ff91b04227888c9c20728914c9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri. <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri} ", "question": "What is the launch site of the Juno I which was also the ground of 2016 Fort Lauderdale Strikers season ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Juno_I", "seq": "31,36", "label": "Juno I"}, {"uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season", "seq": "67,102", "label": "2016 Fort Lauderdale Strikers season"}], "predicate mapping": [], "id": "092ac4c6d6c64b58b8891809b7dd67ff"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Marder> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "What is the place of birth of the Michael Marder which is also the  place of death of the Tigran Petrosian", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Marder", "seq": "34,47", "label": "Michael Marder"}, {"uri": "http://dbpedia.org/resource/Tigran_Petrosian", "seq": "90,105", "label": "Tigran Petrosian"}], "predicate mapping": [], "id": "0753a6cc55e24b9f8ae248cb0229faf0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Bruce_Lee> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "question": "Where is the tomb of son of Bruce Lee?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Lee", "seq": "28,36", "label": "Bruce Lee"}], "predicate mapping": [], "id": "e3f73674fbdd41a38021d60204f7196f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "question": "What are the mascots of the teams participating in the Turkish Handball Super League?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League", "seq": "55,83", "label": "Turkish Handball Super League"}], "predicate mapping": [], "id": "9cb5f2b9db5b436c86a97a46a5c66290"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "question": "Give me a count of schools in Reading, Berkshire?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "seq": "30,47", "label": "Reading, Berkshire"}], "predicate mapping": [], "id": "5521a80bdcd04617a45aadea2164ffee"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Daoust> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Don_Ashby> <http://dbpedia.org/property/playedFor> ?uri . }", "question": "What team did Dan Daoust and Don Ashby play for?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dan_Daoust", "seq": "14,23", "label": "Dan Daoust"}, {"uri": "http://dbpedia.org/resource/Don_Ashby", "seq": "29,37", "label": "Don Ashby"}], "predicate mapping": [], "id": "1b3644240f434186be027e3dc2df4afe"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/USS_Tillamook_(AT-16)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }", "question": "Was the USS Tillamook built in Seattle?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/USS_Tillamook_(AT-16)", "seq": "8,20", "label": "USS Tillamook"}, {"uri": "http://dbpedia.org/resource/Seattle", "seq": "31,37", "label": "Seattle"}], "predicate mapping": [], "id": "cb46de89eece40c6a511ae4bb909b07f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ", "question": "Which university has a sports team member called Micheal Powell and also owns Syracuse University Press ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)", "seq": "49,62", "label": "Micheal Powell"}, {"uri": "http://dbpedia.org/resource/Syracuse_University_Press", "seq": "78,102", "label": "Syracuse University Press"}], "predicate mapping": [], "id": "1c527306fea14763ad07d75de14f267f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri. <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri} ", "question": "Which automobile platform provider of Chiva bus is also the parent company of the Ford Falcon Cobra ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chiva_bus", "seq": "38,46", "label": "Chiva bus"}, {"uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra", "seq": "82,98", "label": "Ford Falcon Cobra"}], "predicate mapping": [], "id": "b3189598edba497696316dbed48fd2fb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri} ", "question": "Whihc successor of McDonnell Douglas was built bu Delta 3 ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Delta_III", "seq": "50,56", "label": "Delta 3"}, {"uri": "http://dbpedia.org/resource/McDonnell_Douglas", "seq": "19,35", "label": "McDonnell Douglas"}], "predicate mapping": [], "id": "8d5634ca304b423292db69a546b53974"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barbara_Bush> <http://dbpedia.org/property/children> ?uri } ", "question": "List all the children of Barbara Bush?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barbara_Bush", "seq": "25,36", "label": "Barbara Bush"}], "predicate mapping": [], "id": "7c78f74e4f404592838f82e9d563e6e0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rosie_Huntington-Whiteley> <http://dbpedia.org/ontology/partner> ?uri } ", "question": "who is the husband of Rosie Huntington Whiteley?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley", "seq": "22,46", "label": "Rosie Huntington Whiteley"}], "predicate mapping": [], "id": "6239f50c40b045fb92f0ad0b63792e7b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri} ", "question": "What is the religious affiliation of the Neungin High School which is also the academic interest of Sylvain Lvi ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Neungin_High_School", "seq": "41,59", "label": "Neungin High School"}, {"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "seq": "100,110", "label": "Sylvain Lvi"}], "predicate mapping": [], "id": "23a3176ce04642ab9202377c16bb86d2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "Which European sea has Oulu as one of the shore city ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Europe", "seq": "6,13", "label": "European"}, {"uri": "http://dbpedia.org/resource/Oulu", "seq": "23,26", "label": "Oulu"}], "predicate mapping": [], "id": "d615e5224cae43fabb824a9522e63556"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arkansas_wine> <http://dbpedia.org/property/officialName> ?uri } ", "question": "What is the official name of Arkansas wine ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arkansas_wine", "seq": "29,41", "label": "Arkansas wine"}], "predicate mapping": [], "id": "0fca46ab984148228bc912ac09c14cea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Medininagar> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}", "question": "What are the houses of legislature in the political leader's seat of Medininagar?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Medininagar", "seq": "69,79", "label": "Medininagar"}], "predicate mapping": [], "id": "fb6380523dad469aa76de43877543065"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri } ", "question": "What is the alma mater of Julian Leow Beng Kim?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim", "seq": "26,45", "label": "Julian Leow Beng Kim"}], "predicate mapping": [], "id": "da407b1a436f4844abc78ef45daebf4f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri } ", "question": "What discipline was The Chess Monthly about ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Chess_Monthly", "seq": "20,36", "label": "The Chess Monthly"}], "predicate mapping": [], "id": "8745414c54fd44fc805e024437bff491"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dick_Redding> <http://dbpedia.org/property/birthDate> ?uri } ", "question": "In which province was Dick Redding born?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dick_Redding", "seq": "22,33", "label": "Dick Redding"}], "predicate mapping": [], "id": "d90413f58c7e4ec4926d84d822483e59"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri} ", "question": "Which prospect team of Robin Kovacs is the draft team of Bob MacMillan ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_MacMillan", "seq": "57,69", "label": "Bob MacMillan"}, {"uri": "http://dbpedia.org/resource/Robin_Kovacs", "seq": "23,34", "label": "Robin Kovacs"}], "predicate mapping": [], "id": "527f030fe08c4739ae2be978d022c372"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association>  . }", "question": "How many universities are in the National Collegiate Athletic Association?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "seq": "33,72", "label": "National Collegiate Athletic Association"}], "predicate mapping": [], "id": "eb14b1c3eb7d49fbb617c70a2c17156e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What are some cars related to the ones with a V8?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/V8_engine", "seq": "30,37", "label": "the ones"}], "predicate mapping": [], "id": "8bacd9f637114aacb4f912ee3339497c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Airman_first_class> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Where is the person from whose military rank is Airman first class?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Airman_first_class", "seq": "48,65", "label": "Airman first class"}], "predicate mapping": [], "id": "211240c6dae54cc2a76f849270ff99e9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Creative_Commons> . ?x <http://dbpedia.org/ontology/board> ?uri }", "question": "List the total number of board members who share board with Creative commons ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Creative_Commons", "seq": "60,75", "label": "Creative commons"}], "predicate mapping": [], "id": "7ef60c109b4f45cb98d7a7b6edb63e86"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fluidinfo> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/PostgreSQL> }", "question": "Is Fluidinfo written in PostgreSQL language?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fluidinfo", "seq": "3,11", "label": "Fluidinfo"}, {"uri": "http://dbpedia.org/resource/PostgreSQL", "seq": "24,33", "label": "PostgreSQL"}], "predicate mapping": [], "id": "3426ff612be940c48ddbf955846bbbfc"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "question": "Who currently operates the railway lines one of whose stockholder is Chicago, St Paul, Minneapolis and Omaha railway?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway", "seq": "69,115", "label": "Chicago, St Paul, Minneapolis and Omaha railway"}], "predicate mapping": [], "id": "7e5cf8ddee13481fb0d168850d0ba814"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }", "question": "In how many different people are alumini of the University of Oxford working?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Worcester_College,_Oxford", "seq": "48,67", "label": "University of Oxford"}], "predicate mapping": [], "id": "bbf6d77abc1d4097b5073835a08375a0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri} ", "question": "Which district of Fort Heath radar station is also the state of Joesph Story ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Heath_radar_station", "seq": "18,41", "label": "Fort Heath radar station"}, {"uri": "http://dbpedia.org/resource/Joseph_Story", "seq": "64,75", "label": "Joesph Story"}], "predicate mapping": [], "id": "22bc7e7fb2b44679a76b1872370adf4c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "question": "Who were the head of government agencies working in the German occupied Europe?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/German-occupied_Europe", "seq": "56,77", "label": "German occupied Europe"}], "predicate mapping": [], "id": "325df11498174809bd9488b134a0bf82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri  . }", "question": "How many ingedients are required to make the Ragout Fin?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ragout_fin", "seq": "45,54", "label": "Ragout Fin"}], "predicate mapping": [], "id": "edd0fb4fe2274a5fb2e3de95d13d2066"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Werner_Heisenberg> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> }", "question": "Is Serbian Titieca a doctoral student of Werner Heisenberghttp://dbpedia.org/resource/Werner_Heisenberg", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Werner_Heisenberg", "seq": "73,102", "label": "org/resource/Werner_Heisenberg"}, {"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "seq": "3,17", "label": "Serbian Titieca"}], "predicate mapping": [], "id": "cd7f39c8d3324c20a0beff615cfa9063"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "What show has  judge as Randy Jackson sculptors as Simon Fuller?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Randy_Jackson", "seq": "24,36", "label": "Randy Jackson"}, {"uri": "http://dbpedia.org/resource/Simon_Fuller", "seq": "51,62", "label": "Simon Fuller"}], "predicate mapping": [], "id": "54ca819c32f845f1830c057254adb0e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/ARM_architecture>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "question": "What are the software which uses  platforms as ARM architecture?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/ARM_architecture", "seq": "47,62", "label": "ARM architecture"}], "predicate mapping": [], "id": "1c9fa236fda340f4858626790e9ed794"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cooper_Mountain_Vineyards> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Mount_Bachelor_ski_area> <http://dbpedia.org/ontology/location> ?uri . }", "question": "Where are the cooper mountain vineyards and Mt. bachelor ski area located?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cooper_Mountain_Vineyards", "seq": "14,38", "label": "cooper mountain vineyards"}, {"uri": "http://dbpedia.org/resource/Mount_Bachelor_ski_area", "seq": "44,64", "label": "Mt. bachelor ski area"}], "predicate mapping": [], "id": "35de725b9a904932a4c7cad2d4f6d3dd"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spider-Man:_Edge_of_Time> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/PlayStation_2> <http://dbpedia.org/ontology/successor> ?uri} ", "question": "Which developer of  the Spider-Man: Edge of Time is the  successor of PlayStation 2 ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Spider-Man:_Edge_of_Time", "seq": "24,47", "label": "Spider-Man: Edge of Time"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "seq": "70,82", "label": "PlayStation 2"}], "predicate mapping": [], "id": "db40ca055fe5457da9fb1e618ce07c22"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Western_pygmy_blue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "From which countries are the people from who are an academic authority of the Western pygmy blue species?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Western_pygmy_blue", "seq": "78,95", "label": "Western pygmy blue"}], "predicate mapping": [], "id": "be8e6c435f1e4b00978abbd40786446f"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Continental_Artillery_Regiment> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Henry_Knox> }", "question": "Is Henry Knox a commander of Continental Artillery Regiment?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Artillery_Regiment", "seq": "29,58", "label": "Continental Artillery Regiment"}, {"uri": "http://dbpedia.org/resource/Henry_Knox", "seq": "3,12", "label": "Henry Knox"}], "predicate mapping": [], "id": "055b04c076074890acb3ea2db8886990"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_Genisys>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character painted by Josh Friedman and portrayed in Terminator Genisys ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Friedman", "seq": "40,52", "label": "Josh Friedman"}, {"uri": "http://dbpedia.org/resource/Terminator_Genisys", "seq": "71,88", "label": "Terminator Genisys"}], "predicate mapping": [], "id": "37ea4965d2b64433a69300a0f28f5c84"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the total number of religions that politicians have followed?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Politician", "seq": "43,53", "label": "politicians"}], "predicate mapping": [], "id": "0954f05704294cdc948715c7348303d7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "What are the video games composed by Hirokazu Tanaka?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hirokazu_Tanaka", "seq": "37,51", "label": "Hirokazu Tanaka"}], "predicate mapping": [], "id": "1b05eee4a4914768b1277460023765c7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Brian_Moriarty> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Brian Moriarty designed video games written by whom?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Moriarty", "seq": "0,13", "label": "Brian Moriarty"}], "predicate mapping": [], "id": "85bb180bf8e34202b4aa22716ce5071a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri} ", "question": "Which workplace of the Michael M. Sears is also the  governing body of the Burro Flats Painted Cave?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_M._Sears", "seq": "23,38", "label": "Michael M. Sears"}, {"uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave", "seq": "75,98", "label": "Burro Flats Painted Cave"}], "predicate mapping": [], "id": "8bd39f68e84f4329a53977496d9dcc69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }", "question": "For how many different presidents have people in the Continental Army served?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "seq": "53,68", "label": "Continental Army"}], "predicate mapping": [], "id": "4bb6b234a89a4be49aac5792626314a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mongolian_legislative_election,_2004> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the religion of the president who won the Mongolian legislative election, 2004 ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mongolian_legislative_election,_2004", "seq": "50,85", "label": "Mongolian legislative election, 2004"}], "predicate mapping": [], "id": "da38af790e6e4c63a38c8f834d67ca62"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Into_the_Dalek> <http://dbpedia.org/property/executiveProducer> ?uri } ", "question": "Who is the executive producer of Into the Dalek ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Into_the_Dalek", "seq": "33,46", "label": "Into the Dalek"}], "predicate mapping": [], "id": "d7d45064bde94687972a63ec05a2d4a6"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Citizen_Kane> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Gregg_Toland> }", "question": "Was Citizen Kane cinematographed by Gregg Toland?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Citizen_Kane", "seq": "4,15", "label": "Citizen Kane"}, {"uri": "http://dbpedia.org/resource/Gregg_Toland", "seq": "36,47", "label": "Gregg Toland"}], "predicate mapping": [], "id": "fd11cddf34d54d3c87f3d536773a9c09"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Beutler> <http://dbpedia.org/ontology/award> ?uri } ", "question": "What is the prize awarded to Bruce Beutler ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Beutler", "seq": "29,41", "label": "Bruce Beutler"}], "predicate mapping": [], "id": "7d0fb5e551594d689aef4adfbadcb48a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Trump_Entertainment_Resorts> <http://dbpedia.org/ontology/keyPerson> ?uri . }", "question": "Which leader of Trump Entertainment Resorts is a relative of Maryanne Barry?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry", "seq": "61,74", "label": "Maryanne Barry"}, {"uri": "http://dbpedia.org/resource/Trump_Entertainment_Resorts", "seq": "16,42", "label": "Trump Entertainment Resorts"}], "predicate mapping": [], "id": "ba66549d7ede4f90ad8fa7a436face6c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "From which party is the politician who was selected  in Barasat constituency?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)", "seq": "56,62", "label": "Barasat"}], "predicate mapping": [], "id": "af0335e9c71440b287a6a62d2211645c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alan_Freeman_Days> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)> <http://dbpedia.org/property/writer> ?uri} ", "question": "Which writer of Alan Freeman Days is also the writer of Come On over ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alan_Freeman_Days", "seq": "16,32", "label": "Alan Freeman Days"}, {"uri": "http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)", "seq": "56,67", "label": "Come On over"}], "predicate mapping": [], "id": "edd76a1bcc4943bd98a488f2a226464f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janice_Soprano> <http://dbpedia.org/ontology/religion> ?uri } ", "question": "What is the religion of character of Janice Soprano from The Soprano television show?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Janice_Soprano", "seq": "37,50", "label": "Janice Soprano"}], "predicate mapping": [], "id": "70c322e322db4335be2a68becb37f2fc"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }", "question": "Was John muir one of the first to ascend a mountain on Mt hoffmann?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Hoffmann", "seq": "55,65", "label": "Mt hoffmann"}, {"uri": "http://dbpedia.org/resource/John_Muir", "seq": "4,12", "label": "John muir"}], "predicate mapping": [], "id": "168ccd9fd66449a2a3587324aa89e190"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri. <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri} ", "question": "Which coach of England national under 21 footbal team is also the coach of Aston Villa F.C season ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "seq": "15,52", "label": "England national under 21 footbal team"}, {"uri": "http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season", "seq": "75,96", "label": "Aston Villa F.C season"}], "predicate mapping": [], "id": "fab10ec7feeb4e3790ee4563b268c058"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm>  . }", "question": "Name some comic characters created by Bruce Timm?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Timm", "seq": "38,47", "label": "Bruce Timm"}], "predicate mapping": [], "id": "9af1387628eb41aaaa7bfc96527b7dea"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Volkswagen> }", "question": "Does AMC Gremlin have the Volkswagen engine?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/AMC_Gremlin", "seq": "5,15", "label": "AMC Gremlin"}, {"uri": "http://dbpedia.org/resource/Volkswagen", "seq": "26,35", "label": "Volkswagen"}], "predicate mapping": [], "id": "00a4428f08104601b9070ce9d2809034"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Freescale_Semiconductor> . ?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "question": "Which appliance has cpu from Freescale Semiconductor and Marvell Technology Group?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Freescale_Semiconductor", "seq": "29,51", "label": "Freescale Semiconductor"}, {"uri": "http://dbpedia.org/resource/Marvell_Technology_Group", "seq": "57,80", "label": "Marvell Technology Group"}], "predicate mapping": [], "id": "736ca71b65cb49909c3190a1deaa4d69"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)> . ?x <http://dbpedia.org/property/appointer> ?uri  . }", "question": "Who all have appointed governess born in Magnolia Plantation gardens?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)", "seq": "41,67", "label": "Magnolia Plantation gardens"}], "predicate mapping": [], "id": "f579975baffd4d30bae921db2f6a22a3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "In how many countries are people born who play cricket?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cricket", "seq": "47,53", "label": "cricket"}], "predicate mapping": [], "id": "048f33e69989456e87cecd1566322fe2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/End_of_the_Rainbow> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Judy_Garland> }", "question": "Is Judy Garland a character of End of the Rainbow?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/End_of_the_Rainbow", "seq": "31,48", "label": "End of the Rainbow"}, {"uri": "http://dbpedia.org/resource/Judy_Garland", "seq": "3,14", "label": "Judy Garland"}], "predicate mapping": [], "id": "6e87da5cf6f7420ea41d70b56af0a73a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Perkins_School_for_the_Blind> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>}", "question": "Who has authored books published by the Perkins school for the Blind?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Perkins_School_for_the_Blind", "seq": "40,67", "label": "Perkins school for the Blind"}], "predicate mapping": [], "id": "d4566c91a3a1479e8ed3152f7892af27"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri } ", "question": "Which constructor's team won the 1967 Mexican Grand Prix ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix", "seq": "33,55", "label": "1967 Mexican Grand Prix"}], "predicate mapping": [], "id": "a705fea63f8f4de8ba925717adbd4594"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Give me the name of the organization hqed at  Chaeng Watthana Govt Complex?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex", "seq": "46,73", "label": "Chaeng Watthana Govt Complex"}], "predicate mapping": [], "id": "3aba37a171704d5ebb0b4ae966a6d176"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/West_Sacramento,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "question": "Which footballers did their high school in west Sacramento california? ", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Sacramento,_California", "seq": "43,68", "label": "west Sacramento california"}], "predicate mapping": [], "id": "91ccac916105446b8d75a09eee63c100"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Hellenic_Naval_Academy> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "question": "What is the state of origin of the president whose alma mater is Hellenic Naval Academy ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hellenic_Naval_Academy", "seq": "65,86", "label": "Hellenic Naval Academy"}], "predicate mapping": [], "id": "4e3ab34be94d4669b8e12316056ff405"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_BASIC> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri . }", "question": "Which company created BASIC and Language Integrated Query ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_BASIC", "seq": "14,26", "label": "created BASIC"}, {"uri": "http://dbpedia.org/resource/Language_Integrated_Query", "seq": "32,56", "label": "Language Integrated Query"}], "predicate mapping": [], "id": "b1b8eee4fef548d282895877658d0862"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "question": "Who has recorded their singles in London?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "seq": "34,39", "label": "London"}], "predicate mapping": [], "id": "2808134095db47bfaa55a5b9ae17a35e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/The_Palace_of_Auburn_Hills> . ?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Stan_Van_Gundy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "question": "Among which basket ball team having arena as The Palace of Auburn hills has president as Stan Van Gundy ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills", "seq": "45,70", "label": "The Palace of Auburn hills"}, {"uri": "http://dbpedia.org/resource/Stan_Van_Gundy", "seq": "89,102", "label": "Stan Van Gundy"}], "predicate mapping": [], "id": "cd9216dbcecb43639fc1acb8f8f6e299"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wallace_and_Gromit> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "What awards have been given to the writers of Wallace and Gromit?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wallace_and_Gromit", "seq": "46,63", "label": "Wallace and Gromit"}], "predicate mapping": [], "id": "249281ef2b90405aba4523fe74c3f855"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }", "question": "How many companies have built concrete bridges?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Concrete", "seq": "30,37", "label": "concrete"}], "predicate mapping": [], "id": "5fa75359b2f34008a02d32e4d86ae9f4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri} ", "question": "What is the alma mater of Alvin Bell and Charles Plosser?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alvin_Bell", "seq": "26,35", "label": "Alvin Bell"}, {"uri": "http://dbpedia.org/resource/Charles_Plosser", "seq": "41,55", "label": "Charles Plosser"}], "predicate mapping": [], "id": "a51285af64f54bbc8cc0e2548ad0b92f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . }", "question": "How many producers have casted Michael Jackson?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Jackson", "seq": "31,45", "label": "Michael Jackson"}], "predicate mapping": [], "id": "8679debda0a14d0a87042b3eb712b95b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Cookie> . ?x <http://dbpedia.org/property/creator> ?uri  . }", "question": "Who all have created new kinds of cookies?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cookie", "seq": "34,40", "label": "cookies"}], "predicate mapping": [], "id": "34cf6c9abf5c40c8a73553a1ea992f28"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "question": "What awards were given to the screenplayer of The Motorcycle Diaries?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)", "seq": "46,67", "label": "The Motorcycle Diaries"}], "predicate mapping": [], "id": "a939d5ed61ef4060a81ee31509198135"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Terminator_(franchise)> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "question": "Name the fictional character who was in Terminator and portrayer is Terminator 2: Judgment Day?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_(franchise)", "seq": "68,77", "label": "Terminator"}, {"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "seq": "68,93", "label": "Terminator 2: Judgment Day"}], "predicate mapping": [], "id": "c00fa42c4aa643d4aad94464399b60ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams> . ?uri <http://dbpedia.org/ontology/leaderName> ?x  . }", "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams", "seq": "33,63", "label": "Christen-Democratisch en Vlaams"}], "predicate mapping": [], "id": "8a1d6eb70486401e9b03768061fb6933"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri } ", "question": "Where was Juno I launched from ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Juno_I", "seq": "10,15", "label": "Juno I"}], "predicate mapping": [], "id": "98d2968030a145948b4b54314cb8aa7c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/PlayN> <http://dbpedia.org/ontology/author> ?uri . }", "question": "What company is the one which wrote the google web toolkit and PlayN?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "seq": "40,57", "label": "google web toolkit"}, {"uri": "http://dbpedia.org/resource/PlayN", "seq": "63,67", "label": "PlayN"}], "predicate mapping": [], "id": "f4f5ee1369484c24bff925aa0c0f67c5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "How many TV shows have executive producer as Steven Moffat ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Moffat", "seq": "45,57", "label": "Steven Moffat"}], "predicate mapping": [], "id": "888a270512ce4866be137aa13b94cb0a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "BBC Two is the sister channel of networks having which shows?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Two", "seq": "0,6", "label": "BBC Two"}], "predicate mapping": [], "id": "37dd8f24e04d4c9693e47be13aca643a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Tupelo,_Mississippi> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Who fought in the battle at Tupelo Mississippi?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tupelo,_Mississippi", "seq": "28,45", "label": "Tupelo Mississippi"}], "predicate mapping": [], "id": "e479ae7b3a9c4819b494827f01d6bc9a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Walt_Disney_Records> <http://dbpedia.org/ontology/foundedBy> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "question": "What were the awards won by the founder of Walt Disney Records ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Walt_Disney_Records", "seq": "43,61", "label": "Walt Disney Records"}], "predicate mapping": [], "id": "3ec897b53af44595bc48dcd851a91c4f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cohoes,_New_York> <http://dbpedia.org/ontology/river> ?uri } ", "question": "Which river goes through cohoes, NY", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cohoes,_New_York", "seq": "25,34", "label": "cohoes, NY"}], "predicate mapping": [], "id": "7306c480b5f0480e85dea19fd979e9c2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Columbia_University> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/William_Campbell_(business_executive)> }", "question": "Is the Columbia University chaired by William Campbell?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Columbia_University", "seq": "7,25", "label": "Columbia University"}, {"uri": "http://dbpedia.org/resource/William_Campbell_(business_executive)", "seq": "38,53", "label": "William Campbell"}], "predicate mapping": [], "id": "f6bfc01b9f434dde973e7e2d6f7df70e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "What is the purpose of some Maharashtran organizations?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra", "seq": "28,39", "label": "Maharashtran"}], "predicate mapping": [], "id": "dc71852033ea4aa78c0988a5a8353b08"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> } ", "question": "which movies have been published by Cinema International Corporation?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "seq": "36,67", "label": "Cinema International Corporation"}], "predicate mapping": [], "id": "e7b65b4aecc7437f80afe8be2d2a53eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ashot_Grashi> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "question": "Where the children of Ashot Grashi employed at?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ashot_Grashi", "seq": "22,33", "label": "Ashot Grashi"}], "predicate mapping": [], "id": "5737744543d348468c3951fddb9f25e1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Ae_Fond_Kiss> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Halloween_(poem)> . }", "question": "Who is renowned for Ae Fond Kiss and poem of Halloween ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ae_Fond_Kiss", "seq": "20,31", "label": "Ae Fond Kiss"}, {"uri": "http://dbpedia.org/resource/Halloween_(poem)", "seq": "45,53", "label": "Halloween"}], "predicate mapping": [], "id": "91316e105d274bdbae3927a547e2020a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Buyer> <http://dbpedia.org/ontology/battle> ?uri } ", "question": "In what wars was Steve Buyer involved?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Buyer", "seq": "17,27", "label": "Steve Buyer"}], "predicate mapping": [], "id": "e2cc5e87ec094843ad79d8b454a8eab6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which  science fiction show has Steven Moffat as executive producer ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Moffat", "seq": "32,44", "label": "Steven Moffat"}, {"uri": "http://dbpedia.org/resource/Science_fiction", "seq": "7,21", "label": "science fiction"}], "predicate mapping": [], "id": "0fc6655da5464bec8b5a6df22edcaa86"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }", "question": "Was Michael Schumacher the Pole driver of 1994 Spanish Grand Prix?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix", "seq": "42,64", "label": "1994 Spanish Grand Prix"}, {"uri": "http://dbpedia.org/resource/Michael_Schumacher", "seq": "4,21", "label": "Michael Schumacher"}], "predicate mapping": [], "id": "14efdca3006e4eb28b0abc03a9ab8fb8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaheed_Minar,_Kolkata> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ", "question": "What is the style of architecture of Shaheed Minar, Kolkata ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata", "seq": "37,58", "label": "Shaheed Minar, Kolkata"}], "predicate mapping": [], "id": "a17ff3e0133f4d449e03ef1930da70d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "What cars were built upon the cars which were assembled in Canada?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "seq": "59,64", "label": "Canada"}], "predicate mapping": [], "id": "1d60b0de9bd444dabe4c059c4f7fde5f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}", "question": "Count the number of characters in Batman Live?", "sparql_id": 402, "entity mapping": [{"uri": "http://dbpedia.org/resource/Batman_Live", "seq": "34,44", "label": "Batman Live"}], "predicate mapping": [], "id": "f705b781b41d468f94a33678d84952e3"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Salvador_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }", "question": "Is San Salvador Island a part of the Bahamas?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Salvador_Island", "seq": "3,21", "label": "San Salvador Island"}, {"uri": "http://dbpedia.org/resource/The_Bahamas", "seq": "33,43", "label": "the Bahamas"}], "predicate mapping": [], "id": "c9bf804617e04cd194d2f8fcdad0d49c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Audi_India> } ", "question": "Which company's division is Audi India? Correct Question", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Audi_India", "seq": "28,37", "label": "Audi India"}], "predicate mapping": [], "id": "1e9caa7262cd4fd1a51cf31d4ba704e9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "question": "Which  NASA astronaut was on mission Gemini 8?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/NASA", "seq": "7,10", "label": "NASA"}, {"uri": "http://dbpedia.org/resource/Gemini_8", "seq": "37,44", "label": "Gemini 8"}], "predicate mapping": [], "id": "89d93ab9db184098bea7201d4e1f85c0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri . }", "question": "South Side elevated railroad and twin cities 400 are operated by which city?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad", "seq": "0,27", "label": "South Side elevated railroad"}, {"uri": "http://dbpedia.org/resource/Twin_Cities_400", "seq": "33,47", "label": "twin cities 400"}], "predicate mapping": [], "id": "a045ba882fa04930b139d902ee4b03e2"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Air_Force_Academy> <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Michelle_D._Johnson> }", "question": "Is Michelle D. Johnson the superintendent of United States Air Force Academy?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy", "seq": "45,75", "label": "United States Air Force Academy"}, {"uri": "http://dbpedia.org/resource/Michelle_D._Johnson", "seq": "3,21", "label": "Michelle D. Johnson"}], "predicate mapping": [], "id": "4b6f22e87e69458297229de03060b7c2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri} ", "question": "Which famous political figure appointed william cushing, and also founded Pittsburgh>", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburgh", "seq": "74,84", "label": "Pittsburgh>"}, {"uri": "http://dbpedia.org/resource/William_Cushing", "seq": "40,54", "label": "william cushing"}], "predicate mapping": [], "id": "700c843d2d27481ab61b3a05fdad96e8"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }", "question": "Did Stanlee write the Tales of Suspense?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "seq": "22,38", "label": "Tales of Suspense"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "seq": "4,10", "label": "Stanlee"}], "predicate mapping": [], "id": "6ad08f71a43048129e0b566148bb3665"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . }", "question": "Who is the head coach of the teams in Middlesbrough FC?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "38,53", "label": "Middlesbrough FC"}], "predicate mapping": [], "id": "37ebf5a678ed42c3b38fc81a00ff30ff"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "question": "Which basketball players have played in the league of National Basketball Association?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "seq": "54,84", "label": "National Basketball Association"}], "predicate mapping": [], "id": "70bbdbe70a4046eeb6d90a238c8fd233"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Cubic_Hermite_spline> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "What is the award won of the scientists known for Cubic Hermite spline?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cubic_Hermite_spline", "seq": "50,69", "label": "Cubic Hermite spline"}], "predicate mapping": [], "id": "2342c11d42084f99991a36ea402e5298"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies were founded in places where Dallas is the governing body ?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas", "seq": "48,53", "label": "Dallas"}], "predicate mapping": [], "id": "61613d09dbbe40fc987b96072987dea0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomington_Viaduct> <http://dbpedia.org/property/crosses> ?uri } ", "question": "What is the bloomington viaduct built to cross?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bloomington_Viaduct", "seq": "12,30", "label": "bloomington viaduct"}], "predicate mapping": [], "id": "b2a4d8fce56a4890a9e803ec33770b7c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Paradise_Place> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "What awards were presented to the person who produced Paradise place?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paradise_Place", "seq": "54,67", "label": "Paradise place"}], "predicate mapping": [], "id": "f1a4a596441946deabb79234cff39587"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Copley_Medal>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Copley Medal has been awarded to which scientists?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Copley_Medal", "seq": "0,11", "label": "Copley Medal"}], "predicate mapping": [], "id": "2a59af2efcc74bec9b6f9b1d25486ae5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Korean_legislative_election,_1992> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "What is the religion of the leader of South Korean legislative election of 1992 ?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Korean_legislative_election,_1992", "seq": "38,78", "label": "South Korean legislative election of 1992"}], "predicate mapping": [], "id": "6f97fe98633b44dcb7ba31cf7719b380"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Gerald_Reaven> <http://dbpedia.org/ontology/institution> ?uri} ", "question": "to which university did both, the Stanford Cardinal and Gerald Reaven go?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanford_Cardinal", "seq": "34,50", "label": "Stanford Cardinal"}, {"uri": "http://dbpedia.org/resource/Gerald_Reaven", "seq": "56,68", "label": "Gerald Reaven"}], "predicate mapping": [], "id": "9f8aa6229d504392a15d7e77b795aadd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Mark_Davis_(American_football)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Davis_(American_football)", "seq": "41,50", "label": "Mark davis"}, {"uri": "http://dbpedia.org/resource/O.co_Coliseum", "seq": "70,83", "label": "O.co Colliseum"}], "predicate mapping": [], "id": "c357921ea8ff43fda72ad08c8e216ab8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which BBC's TV show is related with the Sarah Jane Adventures?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_HD", "seq": "6,10", "label": "BBC's"}, {"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "seq": "36,60", "label": "the Sarah Jane Adventures"}], "predicate mapping": [], "id": "17ca429ec4984bb7bc285f94d3de62b9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }", "question": "Who were the first drivers in the grand prix which took place at Autodromo Enzo e Dino Ferrari?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari", "seq": "65,93", "label": "Autodromo Enzo e Dino Ferrari"}], "predicate mapping": [], "id": "2c3931e9e39447a6a5313df14a8934b6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "How many cars succeed the cars assembled in Canada?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "seq": "44,49", "label": "Canada"}], "predicate mapping": [], "id": "947e3ddd016d41a9b97ecc9eed2e370a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "question": "How many books are written by the author who is famous for Novelas Ejemplares?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/Novelas_ejemplares", "seq": "59,76", "label": "Novelas Ejemplares"}], "predicate mapping": [], "id": "d813efbf28c848ec9859bbc3ad45e3ea"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/P._Sathyanarayanan> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "What is the largest city of the country where P. Sathyanarayanan was born?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/P._Sathyanarayanan", "seq": "46,63", "label": "P. Sathyanarayanan"}], "predicate mapping": [], "id": "2f9db429754045d79c15661e9175997e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northeast_Library> <http://dbpedia.org/ontology/city> ?uri } ", "question": "To which city does Northeast Library belong?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Northeast_Library", "seq": "19,35", "label": "Northeast Library"}], "predicate mapping": [], "id": "69ff2b75810646209568b0df3e994b16"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Leuven>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "question": "What beverages originate in Leuven?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Leuven", "seq": "28,33", "label": "Leuven"}], "predicate mapping": [], "id": "1cad7eba242f4238ab0cece8e171f786"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "List the people whose are in the board of an organization kickstarted in New York.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "seq": "73,80", "label": "New York"}], "predicate mapping": [], "id": "f039556b67ef4cb1baad3d5fa816ba36"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which HBO's television series was produced by Erik Bork?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "seq": "6,8", "label": "HBO"}, {"uri": "http://dbpedia.org/resource/Erik_Bork", "seq": "46,54", "label": "Erik Bork"}], "predicate mapping": [], "id": "43e17ab32b48408188702fc59b80e3d6"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ", "question": "List the common sports between Fr. Agnel Multipurpose School  and Jamiatu Muslim Mindanao", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "seq": "31,79", "label": "Fr. Agnel Multipurpose School  and Jamiatu Muslim"}, {"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "seq": "66,88", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [], "id": "1e5190197e764ad2852ced4917575e45"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}", "question": "Which comic characters were created by Paul Dini?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Dini", "seq": "39,47", "label": "Paul Dini"}], "predicate mapping": [], "id": "1ebfba20e07d4dceb706cb7d0e02f7d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Atlantic_Ocean> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "What are the cities around the sea which flows into the Atlantic?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Atlantic_Ocean", "seq": "56,63", "label": "Atlantic"}], "predicate mapping": [], "id": "2da4f5fb821747d58ff0f453f01748e0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Rolv_Erik_Ryssdal> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "question": "Which newspapers are owned by companies which are under Rolv Erik Ryssdal?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Rolv_Erik_Ryssdal", "seq": "56,72", "label": "Rolv Erik Ryssdal"}], "predicate mapping": [], "id": "8784014ab7f14b28871e97a0df2a4200"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> } ", "question": "Which football managers managed Middlesbrough F.C.?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "seq": "32,48", "label": "Middlesbrough F.C"}], "predicate mapping": [], "id": "9028456938924abe93b5277af2137115"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009\u201310_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri . }", "question": "Who coached the Marquette golden eagles men team in 09 to 10 and then again in 13 to 14 ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/2009\u201310_Marquette_Golden_Eagles_men's_basketball_team", "seq": "16,47", "label": "Marquette golden eagles men team"}, {"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "seq": "16,47", "label": "Marquette golden eagles men team"}], "predicate mapping": [], "id": "69fc05f2eb85472d8f28a6dec16cf0a8"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EMMS> <http://dbpedia.org/ontology/developer> ?uri } ", "question": "What developed EMMS?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/EMMS", "seq": "15,18", "label": "EMMS"}], "predicate mapping": [], "id": "8cc928e4d47048b1861ea9bb7b35471e"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/Ilya_Savelev> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "question": "Which city is the route start of the Moscow-Kazan high-speed railway and birth place of the Ilya Savelev ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway", "seq": "37,67", "label": "Moscow-Kazan high-speed railway"}, {"uri": "http://dbpedia.org/resource/Ilya_Savelev", "seq": "92,103", "label": "Ilya Savelev"}], "predicate mapping": [], "id": "191f35e7fb4246f78353e02e6302361a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri }", "question": "Count the number of sports played by university which also plays Taekwondo ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Taekwondo", "seq": "65,73", "label": "Taekwondo"}], "predicate mapping": [], "id": "2ad75f9b93f64498968879d9c695fb02"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Championship_Snooker> <http://dbpedia.org/property/narrated> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "question": "Where did the narrators of the Championship snooker die?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Championship_Snooker", "seq": "31,50", "label": "Championship snooker"}], "predicate mapping": [], "id": "b98192ce06ab477dbe39eb6081bfb58c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Winnipeg_River> . ?x <http://dbpedia.org/property/location> ?uri  . }", "question": "Where is the lake located into which the Winnipeg River flows?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Winnipeg_River", "seq": "41,54", "label": "Winnipeg River"}], "predicate mapping": [], "id": "259c7da5ba2e4d11814879c79da16742"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Supachai_Somcharoen> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "question": "Which government agency is run by Supachai Somcharoen?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Supachai_Somcharoen", "seq": "34,52", "label": "Supachai Somcharoen"}], "predicate mapping": [], "id": "875e9a8ee0ce4454a79b9daa496dcbb6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Bill_Peters_(ice_hockey)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}", "question": "Which hockey team is head coached by Bill Peters?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Peters_(ice_hockey)", "seq": "37,47", "label": "Bill Peters"}], "predicate mapping": [], "id": "3f12f94aa6634573be6b156f1c4db655"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Grand_Bahama> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas> }", "question": "Is Grand Bahama lie in the achipelago of the bahamas?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Grand_Bahama", "seq": "3,14", "label": "Grand Bahama"}, {"uri": "http://dbpedia.org/resource/The_Bahamas", "seq": "41,51", "label": "the bahamas"}], "predicate mapping": [], "id": "3b485c94a86c4c4e8a6f8929cc0dde2b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri } ", "question": "What is the genre of Battle Chess?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_Chess", "seq": "21,32", "label": "Battle Chess"}], "predicate mapping": [], "id": "bed9c24aa6cd405ab16165885735645b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which colonel has allegiance to Colony of Virginia ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colony_of_Virginia", "seq": "32,49", "label": "Colony of Virginia"}, {"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "seq": "6,12", "label": "colonel"}], "predicate mapping": [], "id": "08e93b8d4249442b88762e1a51910088"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "How many companies were started in the states?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "seq": "32,44", "label": "in the states"}], "predicate mapping": [], "id": "f01fe449ce054eacad63ba079a2cdd2e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Kobalt_Label_Services>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "How many bands are signed up with Kobalt Label Services?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kobalt_Label_Services", "seq": "34,54", "label": "Kobalt Label Services"}], "predicate mapping": [], "id": "944f7d6fd1da4f1592e9d9056d5986b7"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/CFRB> . ?x <http://dbpedia.org/ontology/broadcastArea> ?uri  . }", "question": "where are the sister stations of CFRB broadcasted?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/CFRB", "seq": "33,36", "label": "CFRB"}], "predicate mapping": [], "id": "1da410830ef64a70bdaf8bedfba7a0ad"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._Animation> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "List the television shows one of whose distributor's divisions is Warner Bros. Animation.", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros._Animation", "seq": "66,87", "label": "Warner Bros. Animation"}], "predicate mapping": [], "id": "c23cebef882b4a39806aaf8d5adac8ad"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri } ", "question": "Namt the fields of Paul Demiville ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "seq": "19,32", "label": "Paul Demiville"}], "predicate mapping": [], "id": "3065422e5ed048afbfe5677cff2a318b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "question": "What is the sea connected to Kaliningrad and Gdask?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaliningrad", "seq": "29,39", "label": "Kaliningrad"}, {"uri": "http://dbpedia.org/resource/Gda\u0144sk", "seq": "45,49", "label": "Gdask"}], "predicate mapping": [], "id": "8595807efc4449d68eed8d38166a812a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "question": "From how many countries did the aeroplanes designed by Alexander Lippisch originate?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Lippisch", "seq": "55,72", "label": "Alexander Lippisch"}], "predicate mapping": [], "id": "9d9692a4132c4495ae0f5931957e586b"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri. <http://dbpedia.org/resource/David_Lewis_(poet)> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "question": "Which district of Thorington railway station is the location of death of  David Lewis (poet) ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Thorington_railway_station", "seq": "18,43", "label": "Thorington railway station"}, {"uri": "http://dbpedia.org/resource/David_Lewis_(poet)", "seq": "74,84", "label": "David Lewis"}], "predicate mapping": [], "id": "efdf8aa050864451b985d0ff5e49cbd0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/NASA> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "question": "Who has manufactured vehicles designed originally by NASA?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/NASA", "seq": "53,56", "label": "NASA"}], "predicate mapping": [], "id": "b4e0d76805604866bf173ea2e1b23a30"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . }", "question": "How many people are famous for the Gibson Les Paul?", "sparql_id": 101, "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibson_Les_Paul", "seq": "35,49", "label": "Gibson Les Paul"}], "predicate mapping": [], "id": "fd5f1f21c5d84d139a078d7c277185cd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Who is the office holder for constituencies  Castro District and Haight-Ashbury?", "sparql_id": 307, "entity mapping": [{"uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco", "seq": "45,78", "label": "Castro District and Haight-Ashbury"}, {"uri": "http://dbpedia.org/resource/Haight-Ashbury", "seq": "65,78", "label": "Haight-Ashbury"}], "predicate mapping": [], "id": "a6ed413a6d5445999356286aac0836d9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "Count the number of movies whose editors were born in UK?", "sparql_id": 406, "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Kingdom", "seq": "0,15", "label": "Count the number"}], "predicate mapping": [], "id": "c19ff6e63850447cbc240443c789c4f2"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ", "question": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare", "seq": "60,79", "label": "Motorpsycho Nitemare"}, {"uri": "http://dbpedia.org/resource/Moondog_Matinee", "seq": "24,38", "label": "Moondog Matinee"}], "predicate mapping": [], "id": "e6a2aa8819844614aa86e76b7ef9cc94"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Schutzstaffel> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many places did the Schutzstaffels die?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Schutzstaffel", "seq": "27,40", "label": "Schutzstaffels"}], "predicate mapping": [], "id": "112be4e032d2473e8a45c73e9689419f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hang_Chuon_Naron> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Krom_Ngoy> <http://dbpedia.org/ontology/religion> ?uri . }", "question": "What faith do hang chuon naron and Kron Ngoy follow?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Hang_Chuon_Naron", "seq": "14,29", "label": "hang chuon naron"}, {"uri": "http://dbpedia.org/resource/Krom_Ngoy", "seq": "35,43", "label": "Kron Ngoy"}], "predicate mapping": [], "id": "93b33f2e4d4f4d07a6dbd2be5baba794"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/William_W._Brien> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "question": "Name the people living in a place governed by William W Brien?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_W._Brien", "seq": "46,60", "label": "William W Brien"}], "predicate mapping": [], "id": "6904a39015e041cdb5b9e4c8100f6f6a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/IOS> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "question": "How many game series exist for iOS?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/IOS", "seq": "31,33", "label": "iOS"}], "predicate mapping": [], "id": "4e15567ee9b34922b7ffeb5e3b835c65"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri } ", "question": "Who is the narrator of The Incredible Hulk , 1982 TV series ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "seq": "23,41", "label": "The Incredible Hulk"}], "predicate mapping": [], "id": "c43336ea3f5f4a078eae1b1cdbb23ae0"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Carl_Sanders> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "question": "Name the stock holders of soccer club whose one of the stockholder is Carl Sanders ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Sanders", "seq": "70,81", "label": "Carl Sanders"}], "predicate mapping": [], "id": "120552b5f83c4469b65f4e0a718d330b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Who was the parent of person whose child is William C P breckinridge?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge", "seq": "44,67", "label": "William C P breckinridge"}], "predicate mapping": [], "id": "ce1c25a295524cd3ad8096741360c0a5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}", "question": "What is the location of the pope whose major shrine is St. Peter's Basilica ?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Peter's_Basilica", "seq": "55,74", "label": "St. Peter's Basilica"}], "predicate mapping": [], "id": "5e448ee7e7a347909af9a05fd941d609"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's producer is Stephen E. Ambrose and company is DreamWorks Television?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "seq": "28,45", "label": "Stephen E. Ambrose"}, {"uri": "http://dbpedia.org/resource/DreamWorks_Television", "seq": "62,82", "label": "DreamWorks Television"}], "predicate mapping": [], "id": "fd8b42814a494505a95d0aad81dbb23d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lake_Washington> . ?x <http://dbpedia.org/property/sourceLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Where does the rivers ending in lake washington begin?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Washington", "seq": "32,46", "label": "lake washington"}], "predicate mapping": [], "id": "c4b41b17bd6e461f9bab1fd5d18fb1cb"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FedExField> <http://dbpedia.org/ontology/operator> ?uri } ", "question": "What is operated by FedExField ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/FedExField", "seq": "20,29", "label": "FedExField"}], "predicate mapping": [], "id": "26c83a9e8dd7414ba4b9740120278949"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Villager> . ?x <http://dbpedia.org/property/parent> ?uri  . }", "question": "Who owns the company that made the Edsel Villager?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edsel_Villager", "seq": "35,48", "label": "Edsel Villager"}], "predicate mapping": [], "id": "c3101002a14d4415b13183cee4ce5c19"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Sierra_Madre_de_Chiapas> . ?x <http://dbpedia.org/property/mouthCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Where does the river flow into, which starts at the Sierra Madre de Chiapas?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Madre_de_Chiapas", "seq": "52,74", "label": "Sierra Madre de Chiapas"}], "predicate mapping": [], "id": "22fd27d058e34064ab9f3f5f1a1a85b9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Cherokee> . ?x <http://dbpedia.org/property/ethnicity> ?uri }", "question": "How many other race are there of the adult (pornographic) actors whose ethnicity is Cherokee ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Cherokee", "seq": "84,91", "label": "Cherokee"}], "predicate mapping": [], "id": "c8a69f49e96b42b896b722fd19267e70"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/He's_a_Liar> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }", "question": "Who is the producer of the single which was the subsequent work of He's a Liar?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/He's_a_Liar", "seq": "67,77", "label": "He's a Liar"}], "predicate mapping": [], "id": "1b5bc20a93da4301bfd74cf0424d6a5d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time> <http://dbpedia.org/ontology/series> ?uri} ", "question": "What series is Mazes of Time from, and is produced by BBC multimedia?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Multimedia", "seq": "54,67", "label": "BBC multimedia"}, {"uri": "http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time", "seq": "5,27", "label": "series is Mazes of Time"}], "predicate mapping": [], "id": "a600e69fac2b46a58ff1d1fe22877e45"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doonesbury_(musical)> <http://dbpedia.org/ontology/lyrics> ?uri } ", "question": "WHo gave the lyrcis of Doonesbury ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Doonesbury_(musical)", "seq": "23,32", "label": "Doonesbury"}], "predicate mapping": [], "id": "e1a45956b7a142a8bf2eef25850435d5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Aachen_Cathedral>  . }", "question": "Whose shrine is in aachen cathedral?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Aachen_Cathedral", "seq": "19,34", "label": "aachen cathedral"}], "predicate mapping": [], "id": "de05f30a4e304ecc8294fe2c50948518"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Robert_A._Taft> . }", "question": "Who are the parents of  Charles Phelps Taft II and Robert A. Taft?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II", "seq": "24,45", "label": "Charles Phelps Taft II"}, {"uri": "http://dbpedia.org/resource/Robert_A._Taft", "seq": "51,64", "label": "Robert A. Taft"}], "predicate mapping": [], "id": "db1c3fdf8d784274b4e27db7dd62b263"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> } ", "question": "Giorgos Kaminis is the mayor of what?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Giorgos_Kaminis", "seq": "0,14", "label": "Giorgos Kaminis"}], "predicate mapping": [], "id": "543de17bf3734e12bdf36bd202942338"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Jenness> <http://dbpedia.org/ontology/incumbent> ?uri } ", "question": "Name the incumbent of Linda Jenness ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Jenness", "seq": "22,34", "label": "Linda Jenness"}], "predicate mapping": [], "id": "40ce6c3ca38043918ce00a735a2e4c98"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri} ", "question": "Which assembly of the Plymouth Savoy is the route end of the NorthSouth Transport Corridor?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_Savoy", "seq": "22,35", "label": "Plymouth Savoy"}, {"uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor", "seq": "61,89", "label": "NorthSouth Transport Corridor"}], "predicate mapping": [], "id": "5bf74194f313453a92938a6069178a82"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "Name the band atleast one of whose members is famous for playing the Fender Stratocaster?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/Fender_Stratocaster", "seq": "69,87", "label": "Fender Stratocaster"}], "predicate mapping": [], "id": "433e3e8781da456b9fc1184bb9815b88"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "question": "Give me a count of mammals which have their order as Primate?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Primate", "seq": "53,59", "label": "Primate"}], "predicate mapping": [], "id": "1db54969ed89429596435519a1e8fbf2"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> ?x  . }", "question": "What are the things whose leader was a monarch of Willem-Alexander of the Netherlands?", "sparql_id": 6, "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands", "seq": "50,84", "label": "Willem-Alexander of the Netherlands"}], "predicate mapping": [], "id": "c062bc8772114beb9ceec478ec91a279"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Chelsea_F.C.>  . }", "question": "Who owns Chelsea F.C.?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Chelsea_F.C.", "seq": "9,19", "label": "Chelsea F.C"}], "predicate mapping": [], "id": "5901e1cf900d4564b0ad6a25eb733684"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)> } ", "question": "During the reigns of which monarchs was the name to the  Israelite kingdom as United Monarch?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)", "seq": "67,83", "label": "kingdom as United"}], "predicate mapping": [], "id": "d3ccc70090cb4f15a0c1e6340f773d93"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Tell me the total number of organizations who maintain the bridges made by the malaysian PWD?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department", "seq": "79,91", "label": "malaysian PWD"}], "predicate mapping": [], "id": "396cc549a7c941308fc6490554d328b0"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri. <http://dbpedia.org/resource/Phil_Lumpkin> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "question": "Which county seat of the King County, Washington and PLACE OF DEATH of the Phil Lumpkin ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/King_County,_Washington", "seq": "25,47", "label": "King County, Washington"}, {"uri": "http://dbpedia.org/resource/Phil_Lumpkin", "seq": "75,86", "label": "Phil Lumpkin"}], "predicate mapping": [], "id": "d49b451c4f0b4b8ea1109469adecf4f1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Old_Lyme,_Connecticut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Name the river whose mouth place is Old Lyme, Connecticut?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Old_Lyme,_Connecticut", "seq": "36,56", "label": "Old Lyme, Connecticut"}], "predicate mapping": [], "id": "6e2e3195d6044ab2890e512d68f6fc15"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . }", "question": "list the  software which works on both the OS  - Microsoft Windows and Mac OS ?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "seq": "49,65", "label": "Microsoft Windows"}, {"uri": "http://dbpedia.org/resource/Mac_OS", "seq": "71,76", "label": "Mac OS"}], "predicate mapping": [], "id": "090fdd1b6e04464eb2afffb08d7868dd"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Which  person has opponent Ike Clanton?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ike_Clanton", "seq": "27,37", "label": "Ike Clanton"}], "predicate mapping": [], "id": "56f3779c92104d1396a551a1d1dbf549"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri } ", "question": "List the affiliation of Indian general election, 2004 (Andhra Pradesh) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "seq": "24,52", "label": "Indian general election, 2004"}], "predicate mapping": [], "id": "b45a5663ebe3439a9c8032edaa8750b3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri} ", "question": "Which idelogy of the Palang Dharma Party is also the  faith of Miao people ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "seq": "21,39", "label": "Palang Dharma Party"}, {"uri": "http://dbpedia.org/resource/Miao_people", "seq": "63,73", "label": "Miao people"}], "predicate mapping": [], "id": "276666cb2dd442d29983656956c65930"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brown's_Corners,_Toronto> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/Krista_Kelly> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "question": "Which municipality of the Brown's Corners, toronto also place of birth of Krista Kelly ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brown's_Corners,_Toronto", "seq": "26,49", "label": "Brown's Corners, toronto"}, {"uri": "http://dbpedia.org/resource/Krista_Kelly", "seq": "74,85", "label": "Krista Kelly"}], "predicate mapping": [], "id": "d8be9b09c9444929b370acbb8f2f1d66"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "question": "Where did the members of judge advocate general corps study?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army", "seq": "25,58", "label": "judge advocate general corps study"}], "predicate mapping": [], "id": "ca35959e3aa54d29a210ae778908d977"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_XI> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "question": "Where are the shrines of the saints who were beatified by Pope Pius XI?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Pius_XI", "seq": "58,69", "label": "Pope Pius XI"}], "predicate mapping": [], "id": "33a68bbb7cbb44749a300fcafe94dadf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "question": "In how many different places are Brown haired models living?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Brown_hair", "seq": "33,44", "label": "Brown haired"}], "predicate mapping": [], "id": "7544359cc60644078fbfd6ee91abdf55"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "question": "Solon Spencer Beman has architected in how many cities?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Solon_Spencer_Beman", "seq": "0,18", "label": "Solon Spencer Beman"}], "predicate mapping": [], "id": "901504aad5414f9b8ea3323d9f9f9e3a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/1971_United_States_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri . }", "question": "What was a common first team at the 1967 Mexican Grand Prix and 1971 US one?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix", "seq": "36,58", "label": "1967 Mexican Grand Prix"}, {"uri": "http://dbpedia.org/resource/1971_United_States_Grand_Prix", "seq": "36,58", "label": "1967 Mexican Grand Prix"}], "predicate mapping": [], "id": "6bfad60b196445aea7c5be7ba2412166"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Sen_Railway_Station> <http://dbpedia.org/property/other> ?uri } ", "question": "What is the location of Sam Sen Railway Station ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Sam_Sen_Railway_Station", "seq": "24,46", "label": "Sam Sen Railway Station"}], "predicate mapping": [], "id": "3eedc8d9fc1842a88f9158d88e77eb21"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "question": "In how many places have the companies started in Newcastle worked?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_Newcastle", "seq": "46,57", "label": "in Newcastle"}], "predicate mapping": [], "id": "d3003f279fce43c2bd590feb5ea35a89"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . }", "question": "How many things are produced by companies located in Tehran?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Tehran", "seq": "53,58", "label": "Tehran"}], "predicate mapping": [], "id": "2c4dcb51677a45c2b824fb2b6faee585"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WXME> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "question": "In which areas is the radio station broadcasted which is a sister station of WXME ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/WXME", "seq": "77,80", "label": "WXME"}], "predicate mapping": [], "id": "836e49a87e9346fa8ff7e57ab6d765c1"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ", "question": "Who was the director of photography of Mickey's Mellerdrammer and the animator of Tommy Tucker's Tooth?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer", "seq": "39,60", "label": "Mickey's Mellerdrammer"}, {"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "seq": "82,101", "label": "Tommy Tucker's Tooth"}], "predicate mapping": [], "id": "c750e7c0608b41ceb0f89a608bc35174"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Quich\u00e9_Department> . ?x <http://dbpedia.org/ontology/origin> ?uri  . }", "question": "Name the origins of the river with Quich Department as one of the origin ?", "sparql_id": 11, "entity mapping": [{"uri": "http://dbpedia.org/resource/Quich\u00e9_Department", "seq": "35,50", "label": "Quich Department"}], "predicate mapping": [], "id": "da6a53f6df164501ac3e5ca040d30802"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . }", "question": "Who was in the missions of Apollo 11 and Gemini 8?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Apollo_11", "seq": "27,35", "label": "Apollo 11"}, {"uri": "http://dbpedia.org/resource/Gemini_8", "seq": "41,48", "label": "Gemini 8"}], "predicate mapping": [], "id": "4f474c1d102d429188592e6442f0dc85"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seattle_Great_Wheel> <http://dbpedia.org/property/locationTown> ?uri } ", "question": "What is the location town of Seattle Great Wheel ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Seattle_Great_Wheel", "seq": "29,47", "label": "Seattle Great Wheel"}], "predicate mapping": [], "id": "0e96324fa1db4239b4f08a7cc5d7d4a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Name the office holder whose alma mater is Harvard-Westlake School and resting place is Alta Mesa Memorial Park?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "seq": "43,65", "label": "Harvard-Westlake School"}, {"uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park", "seq": "88,110", "label": "Alta Mesa Memorial Park"}], "predicate mapping": [], "id": "c2b314ca2fe44f229ce588a5c38f9e76"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Bleeding_Heart_Band> . ?uri <http://dbpedia.org/ontology/formerBandMember> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "question": "Which band had members who are now in The Bleeding Heart Band?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Bleeding_Heart_Band", "seq": "38,60", "label": "The Bleeding Heart Band"}], "predicate mapping": [], "id": "e06bff7bae994f78aab16d712b680296"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/Russian_Railways> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }", "question": "In which cities do some railways operated by Russian railways start?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Russian_Railways", "seq": "45,60", "label": "Russian railways"}], "predicate mapping": [], "id": "f2000de1be65469e8d691b9d6e3732e5"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ", "question": "Which producer of Wizards and the aliens is also the notable work of russell T Davies ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Wizards_vs_Aliens", "seq": "18,28", "label": "Wizards and"}, {"uri": "http://dbpedia.org/resource/Russell_T_Davies", "seq": "69,84", "label": "russell T Davies"}], "predicate mapping": [], "id": "3b829598cada4093999a79cba952861b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "question": "Rivers which end in Arkansas go through which cities?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Arkansas", "seq": "20,27", "label": "Arkansas"}], "predicate mapping": [], "id": "1f3d2c8c9b824f60ab080077dcff3dc9"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ceratosoma_tenue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }", "question": "What is the religion of the academic authority on Ceratosoma tenue?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ceratosoma_tenue", "seq": "50,65", "label": "Ceratosoma tenue"}], "predicate mapping": [], "id": "aaded2628d52480a81d952c6157fbd13"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "question": "Which ethinicity of  Riley Reid is the state of origin of Holmes Colbert?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Riley_Reid", "seq": "21,30", "label": "Riley Reid"}, {"uri": "http://dbpedia.org/resource/Holmes_Colbert", "seq": "58,71", "label": "Holmes Colbert"}], "predicate mapping": [], "id": "6b2c6038daa7480ea340b9f0afc64454"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girls_(The_Prodigy_song)> <http://dbpedia.org/property/recorded> ?uri } ", "question": "Where was Girls (The Prodigy song)  recorded ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Girls_(The_Prodigy_song)", "seq": "10,14", "label": "Girls"}], "predicate mapping": [], "id": "47f4b2253dac4f8f978ff5b8c2166041"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri } ", "question": "Name the party of Indira Gandhi ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Indira_Gandhi", "seq": "18,30", "label": "Indira Gandhi"}], "predicate mapping": [], "id": "01dc45d5615b43ea9c0888c88020fb68"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "question": "Who are the scientists known for the Manhattan Project?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Manhattan_Project", "seq": "37,53", "label": "Manhattan Project"}], "predicate mapping": [], "id": "cea7ee307d2845a187dc51d08d6f2047"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)> <http://dbpedia.org/ontology/distributor> ?x . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . }", "question": "What are the regions in which the distributor of Secrets and Lies serves ? ", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)", "seq": "49,64", "label": "Secrets and Lies"}], "predicate mapping": [], "id": "175941bf0105430bb779fd7038f266bf"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Who all have been a commander during the battles of Ohio?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ohio", "seq": "52,55", "label": "Ohio"}], "predicate mapping": [], "id": "fbb1dc5dc78144d4b151528772891c5a"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)> <http://dbpedia.org/ontology/almaMater> ?uri } ", "question": "Where did john o conner study?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)", "seq": "10,22", "label": "john o conner"}], "predicate mapping": [], "id": "44b54ea88b4c437bbca297ca3c04a6d3"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charlie_Justice_(American_football_player)> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri . }", "question": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe ?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charlie_Justice_(American_football_player)", "seq": "37,51", "label": "Charlie Justice"}, {"uri": "http://dbpedia.org/resource/Bobby_Hoppe", "seq": "84,94", "label": "Bobby Hoppe"}], "predicate mapping": [], "id": "adbab66762494d168acfc5e78c49f7e6"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }", "question": "Who owns the websites for which Jimmy wales writes?", "sparql_id": 5, "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmy_Wales", "seq": "32,42", "label": "Jimmy wales"}], "predicate mapping": [], "id": "0d41f404ff594266aac5f28f38fdb49f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Williams_Tunnel> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge> <http://dbpedia.org/property/owner> ?uri . }", "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Williams_Tunnel", "seq": "28,46", "label": "Ted Williams tunnel"}, {"uri": "http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge", "seq": "52,73", "label": "Leonard Memorial ridge"}], "predicate mapping": [], "id": "92f7bcc8b88145149f59ce244d965e37"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri }", "question": "How many other school are there of the rugby players whose school is Michaelhouse ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Michaelhouse", "seq": "69,80", "label": "Michaelhouse"}], "predicate mapping": [], "id": "c65bca36d5634c848c7619d8c6a1f36c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "How many people have been the first one to scale a peak in the Yosemite Park?", "sparql_id": 405, "entity mapping": [{"uri": "http://dbpedia.org/resource/Yosemite_National_Park", "seq": "63,75", "label": "Yosemite Park"}], "predicate mapping": [], "id": "8ccd8b60f2ef4e8bb9158dd030afb484"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "question": "Name the battle fought by the people which also fought in Levant ?", "sparql_id": 311, "entity mapping": [{"uri": "http://dbpedia.org/resource/Levant", "seq": "58,63", "label": "Levant"}], "predicate mapping": [], "id": "aad9f9ceb4364ee9b570d43ca42ce29c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Awakening_(1980_film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/55_Days_at_Peking> <http://dbpedia.org/ontology/starring> ?uri . }", "question": "Who starred in Awakening and fifety five days at peknig ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Awakening_(1980_film)", "seq": "15,23", "label": "Awakening"}, {"uri": "http://dbpedia.org/resource/55_Days_at_Peking", "seq": "41,54", "label": "days at peknig"}], "predicate mapping": [], "id": "c1e28310cb5443f18804bfc7fb1af725"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . }", "question": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Clan_McDuck", "seq": "20,30", "label": "Clan McDuck"}, {"uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie", "seq": "36,57", "label": "Huey, Dewey, and Louie"}], "predicate mapping": [], "id": "8adc86df67ad4f3694781a4fe7f98495"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boga_(soft_drink)> <http://dbpedia.org/property/origin> ?uri. <http://dbpedia.org/resource/Ennejma_Ezzahra> <http://dbpedia.org/property/locationCountry> ?uri} ", "question": "Which location country of Ennejma Ezzahra is also the origin of Boga ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Boga_(soft_drink)", "seq": "64,67", "label": "Boga"}, {"uri": "http://dbpedia.org/resource/Ennejma_Ezzahra", "seq": "26,40", "label": "Ennejma Ezzahra"}], "predicate mapping": [], "id": "bc2f6bbbd8bb4055b65d42a97608f366"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Gordon_(artist)> <http://dbpedia.org/property/placeOfDeath> ?uri } ", "question": "What is the PLACE OF DEATH of Charles Gordon (artist) ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Gordon_(artist)", "seq": "30,43", "label": "Charles Gordon"}], "predicate mapping": [], "id": "f22fef56a0c84c86886dc2dc2243a721"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri} ", "question": "What actor of Le Cirque is a relative of Maryanne Trump barry?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven", "seq": "14,36", "label": "Le Cirque is a relative"}, {"uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry", "seq": "41,60", "label": "Maryanne Trump barry"}], "predicate mapping": [], "id": "649d452e63834157a29c6a1db0e777fa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "How many buildings are located in Toronto ?", "sparql_id": 401, "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "seq": "34,40", "label": "Toronto"}], "predicate mapping": [], "id": "6a6a9694fbb44140ada81d7a8c89aa0f"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List the Stanley Kubrick's movies which has music by Laurie Johnson  ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "seq": "9,23", "label": "Stanley Kubrick"}, {"uri": "http://dbpedia.org/resource/Laurie_Johnson", "seq": "53,66", "label": "Laurie Johnson"}], "predicate mapping": [], "id": "d5f39362abb34bc4a563caa4d12fa4ce"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "question": "Which office holder's constituency is Haight-Ashbury and has military unit as USS Kittiwake ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Haight-Ashbury", "seq": "38,51", "label": "Haight-Ashbury"}, {"uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)", "seq": "78,90", "label": "USS Kittiwake"}], "predicate mapping": [], "id": "b35488681e4c4dbb94efcbc1eb49a31d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri } ", "question": "Name the composer of motorpsycho Nitemare ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare", "seq": "21,40", "label": "motorpsycho Nitemare"}], "predicate mapping": [], "id": "9b3d41fd10154e0099da01bfaf7daf4a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Which TV show's writer is Erik Jendresen and distributor is HBO?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "seq": "26,39", "label": "Erik Jendresen"}, {"uri": "http://dbpedia.org/resource/HBO", "seq": "60,62", "label": "HBO"}], "predicate mapping": [], "id": "812a3d6cf42c439cb59c16744da1932d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "question": "What are some relatives of Battle of the Bulge veterans?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_the_Bulge", "seq": "27,45", "label": "Battle of the Bulge"}], "predicate mapping": [], "id": "219e980d18d243f3a491b427da37633b"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell> . ?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "question": "Name the military conflict whose commander was Colin Powell and took place in israel ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Colin_Powell", "seq": "47,58", "label": "Colin Powell"}, {"uri": "http://dbpedia.org/resource/Israel", "seq": "78,83", "label": "israel"}], "predicate mapping": [], "id": "8246341ae9094f0e9ddd0b1becf8a139"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri } ", "question": "In which city did The Ultimate Fighter: Team Rousey vs. Team Tate take place ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate", "seq": "18,64", "label": "The Ultimate Fighter: Team Rousey vs. Team Tate"}], "predicate mapping": [], "id": "bc638eba36ac42a4ad637b88465f433e"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alexa_Scimeca> <http://dbpedia.org/ontology/currentPartner> ?x . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }", "question": "Who are all the people who used to figure skate with the current partner of Alexa Scimeca?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexa_Scimeca", "seq": "76,88", "label": "Alexa Scimeca"}], "predicate mapping": [], "id": "a6b97c0cc3ad4ba4964258498472eafa"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_African_Class_11E> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "question": "Which company was the designer of South African class 11e and RENFE class 333 ?", "sparql_id": 315, "entity mapping": [{"uri": "http://dbpedia.org/resource/South_African_Class_11E", "seq": "34,56", "label": "South African class 11e"}, {"uri": "http://dbpedia.org/resource/RENFE_Class_333", "seq": "62,76", "label": "RENFE class 333"}], "predicate mapping": [], "id": "066bf38e50c649399528f93568815cf5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . }", "question": "What is the scientist whose doctoral students are Erich Bagge and erban ieica?", "sparql_id": 7, "entity mapping": [{"uri": "http://dbpedia.org/resource/Erich_Bagge", "seq": "50,60", "label": "Erich Bagge"}, {"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "seq": "66,76", "label": "erban ieica"}], "predicate mapping": [], "id": "10c135a7b31546cc91c3dacf6c470b5c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "question": " Who astronaut from NASA was on the mission of Apollo 11?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/Apollo_11", "seq": "47,55", "label": "Apollo 11"}, {"uri": "http://dbpedia.org/resource/NASA", "seq": "20,23", "label": "NASA"}], "predicate mapping": [], "id": "3b7d789c05074466884d8e0d189d97c4"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> } ", "question": "How many have family as Ape and order (taxonomy) is Primate ?", "sparql_id": 108, "entity mapping": [{"uri": "http://dbpedia.org/resource/Ape", "seq": "24,26", "label": "Ape"}, {"uri": "http://dbpedia.org/resource/Primate", "seq": "52,58", "label": "Primate"}], "predicate mapping": [], "id": "f14140c456b043708cbc1405ee4fbde7"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Goethe_Prize> . ?x <http://dbpedia.org/property/awards> ?uri }", "question": "Count the total awards won by the writer who has won Goethe Prize ?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Goethe_Prize", "seq": "53,64", "label": "Goethe Prize"}], "predicate mapping": [], "id": "2549956a9313466db645ee46bb1f01b8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "question": "Games on amiga are typically of what kind?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amiga", "seq": "9,13", "label": "amiga"}], "predicate mapping": [], "id": "c26fb222e05a44ed915b27a0b62b1f35"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }", "question": "Whose resting place is William Henry Harrison Tomb State Memorial and has kids named John Scott Harrison?", "sparql_id": 8, "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial", "seq": "23,64", "label": "William Henry Harrison Tomb State Memorial"}, {"uri": "http://dbpedia.org/resource/John_Scott_Harrison", "seq": "85,103", "label": "John Scott Harrison"}], "predicate mapping": [], "id": "79debf2d75fe4c2c9651c15e18116af1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri  . }", "question": "Muhammad Yunus has won how many awards?", "sparql_id": 102, "entity mapping": [{"uri": "http://dbpedia.org/resource/Muhammad_Yunus", "seq": "0,13", "label": "Muhammad Yunus"}], "predicate mapping": [], "id": "29513d9bf3fb453da72170be9f27bc0d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Saunders_County,_Nebraska> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}", "question": "Through which states does the stream ending at Saunders county go?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Saunders_County,_Nebraska", "seq": "47,64", "label": "Saunders county go"}], "predicate mapping": [], "id": "ac2cdf6aeebd49aba3049d487a9ce8a1"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Miao_Rebellion_(1795\u20131806)> <http://dbpedia.org/property/combatant> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "question": "Which religions' people fought in the Miao rebellion?", "sparql_id": 3, "entity mapping": [{"uri": "http://dbpedia.org/resource/Miao_Rebellion_(1795\u20131806)", "seq": "38,51", "label": "Miao rebellion"}], "predicate mapping": [], "id": "5bba92da3db5463eb604709023bbdce3"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Italic_languages> } ", "question": "What are some languages in the italic family of languages?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Italic_languages", "seq": "38,56", "label": "family of languages"}], "predicate mapping": [], "id": "639d2cebd1c947d086337507434c201d"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Visions_(convention)> <http://dbpedia.org/property/genre> ?uri} ", "question": "What is the product of the BBC Multimedia and is the theme of Visions, the convention?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Multimedia", "seq": "27,40", "label": "BBC Multimedia"}, {"uri": "http://dbpedia.org/resource/Visions_(convention)", "seq": "62,68", "label": "Visions"}], "predicate mapping": [], "id": "bef5d2d4a45a4e84bdc7a586d4247c3c"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }", "question": "How many people hold important positions alongwith Donna Shalala?", "sparql_id": 105, "entity mapping": [{"uri": "http://dbpedia.org/resource/Donna_Shalala", "seq": "51,63", "label": "Donna Shalala"}], "predicate mapping": [], "id": "aa9357296bd640539d42bcd5e05bca8a"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri . }", "question": "Which currency can I use both in Kerguelen islands and French southern and antarctic lands?", "sparql_id": 15, "entity mapping": [{"uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands", "seq": "55,89", "label": "French southern and antarctic lands"}, {"uri": "http://dbpedia.org/resource/Kerguelen_Islands", "seq": "33,49", "label": "Kerguelen islands"}], "predicate mapping": [], "id": "7fb2e2a29f6247bf9a36f9dae36fa67d"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Weber_Thompson> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "question": "Where do I find buildings rented by Weber Thompson?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Weber_Thompson", "seq": "36,49", "label": "Weber Thompson"}], "predicate mapping": [], "id": "c002ce3102a6429a849b2bc1c63213c8"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "question": "Who is the father of Edith Vonnegut and is also a writer?", "sparql_id": 301, "entity mapping": [{"uri": "http://dbpedia.org/resource/Edith_Vonnegut", "seq": "21,34", "label": "Edith Vonnegut"}], "predicate mapping": [], "id": "ab3856e5604443d1967a40d89f070cc9"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iyoas_I> <http://dbpedia.org/property/placeOfBurial> ?uri } ", "question": "What is the burial place of Iyoas I ?", "sparql_id": 2, "entity mapping": [{"uri": "http://dbpedia.org/resource/Iyoas_I", "seq": "28,34", "label": "Iyoas I"}], "predicate mapping": [], "id": "88fe11d131e142dfa0952fca359787eb"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "question": "Who are the tenants of the stadium which is a venue of WCW Mayhem ?", "sparql_id": 303, "entity mapping": [{"uri": "http://dbpedia.org/resource/WCW_Mayhem", "seq": "55,64", "label": "WCW Mayhem"}], "predicate mapping": [], "id": "a05e1d00e47e4843ac91a9fc0905efba"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/RCA_Records> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "question": "List all the movies whose music has been made up with someone under RCA records?", "sparql_id": 306, "entity mapping": [{"uri": "http://dbpedia.org/resource/RCA_Records", "seq": "68,78", "label": "RCA records"}], "predicate mapping": [], "id": "61779d70e408400886f2c2932d7b5e69"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Brazilian_jiu-jitsu> }", "question": "Is Brazilian jiu-jitsu the trainer of Nick Diaz?", "sparql_id": 151, "entity mapping": [{"uri": "http://dbpedia.org/resource/Nick_Diaz", "seq": "38,46", "label": "Nick Diaz"}, {"uri": "http://dbpedia.org/resource/Brazilian_jiu-jitsu", "seq": "3,21", "label": "Brazilian jiu-jitsu"}], "predicate mapping": [], "id": "b7433a3ea1cf4a279f781878b61b08b5"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "question": "Who are the members of organizations headquartered at Amstelveen?", "sparql_id": 305, "entity mapping": [{"uri": "http://dbpedia.org/resource/Amstelveen", "seq": "54,63", "label": "Amstelveen"}], "predicate mapping": [], "id": "824317de97054fe7b674e6cf7d41721f"}, {"checked": "false", "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/combatant> <http://dbpedia.org/resource/Choctaw> . ?x <http://dbpedia.org/property/combatant> ?uri }", "question": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw?", "sparql_id": 111, "entity mapping": [{"uri": "http://dbpedia.org/resource/Choctaw", "seq": "89,95", "label": "Choctaw"}], "predicate mapping": [], "id": "56b56d6d68fc4235bafbf28b726a4dff"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Larry_J._Franco> } ", "question": "What movies have been produced by the production house owned by Larry J. Franco?", "sparql_id": 1, "entity mapping": [{"uri": "http://dbpedia.org/resource/Larry_J._Franco", "seq": "64,78", "label": "Larry J. Franco"}], "predicate mapping": [], "id": "f81e51fa36714841b71d71f2c518a477"}, {"checked": "false", "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "question": "Name the show formed by J. Michael Stroczynski and had network as TNT ?", "sparql_id": 308, "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "seq": "24,45", "label": "J. Michael Stroczynski"}, {"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "seq": "66,68", "label": "TNT"}], "predicate mapping": [], "id": "03dc94e9c928474f91e0414b14f9e1e4"}, {"checked": "false", "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Varsity_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . }", "question": "Count all those who previously played for a team which ownes Varsity Stadium ?", "sparql_id": 106, "entity mapping": [{"uri": "http://dbpedia.org/resource/Varsity_Stadium", "seq": "61,75", "label": "Varsity Stadium"}], "predicate mapping": [], "id": "2ca6c46d4387400999f62cc8354d3f73"}, {"checked": "false", "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/New_York_Rangers> }", "question": "Is NY Rangers a prospective team for Robin Kovacs?", "sparql_id": 152, "entity mapping": [{"uri": "http://dbpedia.org/resource/Robin_Kovacs", "seq": "37,48", "label": "Robin Kovacs"}, {"uri": "http://dbpedia.org/resource/New_York_Rangers", "seq": "3,12", "label": "NY Rangers"}], "predicate mapping": [], "id": "2b9759c6010b4d4181dbad7e72db419c"}, {"checked": "false", "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri} ", "question": "Which headcoach of Marquette Golden Eagles men's basketball team, 2008-09 was also the coach of Marquette Golden Eagles team ?", "sparql_id": 16, "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "seq": "19,63", "label": "Marquette Golden Eagles men's basketball team"}, {"uri": "http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team", "seq": "19,63", "label": "Marquette Golden Eagles men's basketball team"}], "predicate mapping": [], "id": "1740f374977d429492e5c58dce8e4273"}]